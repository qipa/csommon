// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BaseAttrV1Data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BaseAttrV1Data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class BaseAttrUserDataV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrUserDataV1>
     _instance;
} _BaseAttrUserDataV1_default_instance_;
class BaseAttrSkillCdInfoV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrSkillCdInfoV1>
     _instance;
} _BaseAttrSkillCdInfoV1_default_instance_;
class BaseAttrBuffCdInfoV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrBuffCdInfoV1>
     _instance;
} _BaseAttrBuffCdInfoV1_default_instance_;
class BaseAttrSceneInfoV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrSceneInfoV1>
     _instance;
} _BaseAttrSceneInfoV1_default_instance_;
class BaseAttrIconOpenInfoV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrIconOpenInfoV1>
     _instance;
} _BaseAttrIconOpenInfoV1_default_instance_;
class BaseAttrEnergyInfoV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrEnergyInfoV1>
     _instance;
} _BaseAttrEnergyInfoV1_default_instance_;
class BaseAttrScienceInfoV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrScienceInfoV1>
     _instance;
} _BaseAttrScienceInfoV1_default_instance_;

namespace protobuf_BaseAttrV1Data_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, headid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, lastlogintime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, last2logindate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, lastlogouttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, diamond_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, strength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, feats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, gotrankrewardtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, maxmilitary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, masterattrs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, curmilitary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, platname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, fightpower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, sec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, military_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, prof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, dungeonremaincount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, mapid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, posx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, posy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, posz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, ry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, skillcdarr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, buffcdarr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, currentscene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, exitguildtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, applyguildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, curguildcontribution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, maxguildcontribution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, bindmoney_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, gem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, servertime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, newbieguide_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, thiefrewardnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, subduemonsterrewardnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, worldbossremaintimes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, worldbosshurt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, functionopenlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, totalenergyvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, energyarray_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, pkstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, pkprotect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, guildscienarray_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrUserDataV1, sciencetotalmoney_),
  15,
  16,
  17,
  18,
  19,
  20,
  3,
  4,
  21,
  22,
  23,
  24,
  ~0u,
  26,
  0,
  25,
  1,
  28,
  27,
  29,
  30,
  31,
  32,
  33,
  34,
  35,
  36,
  37,
  38,
  39,
  40,
  ~0u,
  ~0u,
  2,
  41,
  42,
  ~0u,
  5,
  6,
  7,
  8,
  43,
  ~0u,
  9,
  10,
  11,
  12,
  ~0u,
  13,
  ~0u,
  44,
  ~0u,
  ~0u,
  14,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrSkillCdInfoV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrSkillCdInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrSkillCdInfoV1, skillid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrSkillCdInfoV1, endtime_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrBuffCdInfoV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrBuffCdInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrBuffCdInfoV1, buffid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrBuffCdInfoV1, endtime_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrSceneInfoV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrSceneInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrSceneInfoV1, relateuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrSceneInfoV1, reviveneedmoney_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrSceneInfoV1, reviveneedmoneytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrSceneInfoV1, dungeonkey_),
  3,
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrIconOpenInfoV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrIconOpenInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrIconOpenInfoV1, iconid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrIconOpenInfoV1, isopen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrIconOpenInfoV1, isshow_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrIconOpenInfoV1, isnew_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrEnergyInfoV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrEnergyInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrEnergyInfoV1, energyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrEnergyInfoV1, energyvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrEnergyInfoV1, receivedenergy_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrScienceInfoV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrScienceInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrScienceInfoV1, scienceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrScienceInfoV1, sciencecurexp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrScienceInfoV1, sciencelv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrScienceInfoV1, sciencecurmoney_),
  2,
  0,
  3,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 59, sizeof(BaseAttrUserDataV1)},
  { 113, 120, sizeof(BaseAttrSkillCdInfoV1)},
  { 122, 129, sizeof(BaseAttrBuffCdInfoV1)},
  { 131, 140, sizeof(BaseAttrSceneInfoV1)},
  { 144, 153, sizeof(BaseAttrIconOpenInfoV1)},
  { 157, 165, sizeof(BaseAttrEnergyInfoV1)},
  { 168, 177, sizeof(BaseAttrScienceInfoV1)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrUserDataV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrSkillCdInfoV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrBuffCdInfoV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrSceneInfoV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrIconOpenInfoV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrEnergyInfoV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrScienceInfoV1_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "BaseAttrV1Data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _BaseAttrUserDataV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrUserDataV1_default_instance_);_BaseAttrSkillCdInfoV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrSkillCdInfoV1_default_instance_);_BaseAttrBuffCdInfoV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrBuffCdInfoV1_default_instance_);_BaseAttrSceneInfoV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrSceneInfoV1_default_instance_);_BaseAttrIconOpenInfoV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrIconOpenInfoV1_default_instance_);_BaseAttrEnergyInfoV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrEnergyInfoV1_default_instance_);_BaseAttrScienceInfoV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrScienceInfoV1_default_instance_);_BaseAttrUserDataV1_default_instance_._instance.get_mutable()->currentscene_ = const_cast< ::BaseAttrSceneInfoV1*>(
      ::BaseAttrSceneInfoV1::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024BaseAttrV1Data.proto\032\022PublicStruct.pro"
      "to\"\231\013\n\022BaseAttrUserDataV1\022\022\n\006HeadID\030\001 \001("
      "\021:\002-1\022\017\n\003Exp\030\002 \001(\021:\002-1\022\026\n\nCreateTime\030\003 \001"
      "(\021:\002-1\022\031\n\rLastLoginTime\030\004 \001(\021:\002-1\022\032\n\016Las"
      "t2LoginDate\030\005 \001(\021:\002-1\022\032\n\016LastLogoutTime\030"
      "\006 \001(\021:\002-1\022\020\n\005Money\030\007 \001(\021:\0010\022\022\n\007Diamond\030\010"
      " \001(\021:\0010\022\024\n\010Strength\030\n \001(\021:\002-1\022\021\n\005Feats\030\013"
      " \001(\021:\002-1\022\035\n\021GotRankRewardTime\030\014 \001(\021:\002-1\022"
      "\027\n\013MaxMilitary\030\016 \001(\021:\002-1\022\023\n\013MasterAttrs\030"
      "\017 \003(\021\022\027\n\013CurMilitary\030\022 \001(\021:\002-1\022\020\n\010UserNa"
      "me\030\023 \001(\t\022\022\n\006UserId\030\024 \001(\022:\002-1\022\020\n\010PlatName"
      "\030\025 \001(\t\022\025\n\tAccountId\030\026 \001(\022:\002-1\022\021\n\005Level\030\027"
      " \001(\021:\002-1\022\020\n\004Rank\030\030 \001(\021:\002-1\022\026\n\nFightPower"
      "\030\031 \001(\021:\002-1\022\017\n\003Sec\030\032 \001(\021:\002-1\022\024\n\010Military\030"
      "\033 \001(\021:\002-1\022\022\n\006TeamId\030\034 \001(\021:\002-1\022\020\n\004Prof\030\035 "
      "\001(\021:\002-1\022\036\n\022DungeonRemainCount\030\036 \001(\021:\002-1\022"
      "\021\n\005MapId\030\037 \001(\021:\002-1\022\020\n\004PosX\030  \001(\002:\002-1\022\020\n\004"
      "PosY\030! \001(\002:\002-1\022\020\n\004PosZ\030\" \001(\002:\002-1\022\016\n\002Ry\030#"
      " \001(\021:\002-1\022*\n\nSkillCdArr\030$ \003(\0132\026.BaseAttrS"
      "killCdInfoV1\022(\n\tBuffCdArr\030% \003(\0132\025.BaseAt"
      "trBuffCdInfoV1\022*\n\014CurrentScene\030& \001(\0132\024.B"
      "aseAttrSceneInfoV1\022\023\n\007GuildId\030\' \001(\021:\002-1\022"
      "\031\n\rExitGuildTime\030( \001(\021:\002-1\022\024\n\014ApplyGuild"
      "Id\030) \003(\021\022\037\n\024CurGuildContribution\030* \001(\021:\001"
      "0\022\037\n\024MaxGuildContribution\030+ \001(\021:\0010\022\024\n\tBi"
      "ndMoney\030, \001(\021:\0010\022\016\n\003Gem\030- \001(\021:\0010\022\026\n\nServ"
      "erTime\030/ \001(\021:\002-1\022%\n\013NewbieGuide\0300 \003(\0132\020."
      "KeyValue2IntInt\022\031\n\016ThiefRewardNum\0301 \001(\021:"
      "\0010\022!\n\026SubdueMonsterRewardNum\0302 \001(\021:\0010\022\037\n"
      "\024WorldBossRemainTimes\0303 \001(\021:\0010\022\030\n\rWorldB"
      "ossHurt\0304 \001(\021:\0010\0221\n\020FunctionOpenList\0306 \003"
      "(\0132\027.BaseAttrIconOpenInfoV1\022\033\n\020TotalEner"
      "gyValue\0307 \001(\021:\0010\022*\n\013EnergyArray\0309 \003(\0132\025."
      "BaseAttrEnergyInfoV1\022\023\n\007PKState\030: \001(\021:\002-"
      "1\022$\n\tPKProtect\030; \003(\0132\021.KeyValue2IntBool\022"
      "/\n\017GuildScienArray\030< \003(\0132\026.BaseAttrScien"
      "ceInfoV1\022\034\n\021ScienceTotalMoney\030= \001(\021:\0010\"A"
      "\n\025BaseAttrSkillCdInfoV1\022\023\n\007SkillId\030\001 \001(\021"
      ":\002-1\022\023\n\007EndTime\030\002 \001(\021:\002-1\"\?\n\024BaseAttrBuf"
      "fCdInfoV1\022\022\n\006BuffId\030\001 \001(\021:\002-1\022\023\n\007EndTime"
      "\030\002 \001(\021:\002-1\"\200\001\n\023BaseAttrSceneInfoV1\022\030\n\014Re"
      "lateUserId\030\t \001(\022:\002-1\022\033\n\017ReviveNeedMoney\030"
      "\n \001(\021:\002-1\022\036\n\023ReviveNeedMoneyType\030\014 \001(\021:\001"
      "0\022\022\n\nDungeonKey\030\017 \001(\t\"p\n\026BaseAttrIconOpe"
      "nInfoV1\022\022\n\006IconId\030\001 \001(\021:\002-1\022\025\n\006IsOpen\030\006 "
      "\001(\010:\005false\022\025\n\006IsShow\030\007 \001(\010:\005false\022\024\n\005IsN"
      "ew\030\010 \001(\010:\005false\"_\n\024BaseAttrEnergyInfoV1\022"
      "\024\n\010EnergyId\030\001 \001(\021:\002-1\022\026\n\013EnergyValue\030\002 \001"
      "(\021:\0010\022\031\n\016ReceivedEnergy\030\003 \001(\021:\0010\"{\n\025Base"
      "AttrScienceInfoV1\022\025\n\tScienceId\030\001 \001(\021:\002-1"
      "\022\030\n\rScienceCurExp\030\002 \001(\021:\0010\022\025\n\tScienceLv\030"
      "\003 \001(\021:\002-1\022\032\n\017ScienceCurMoney\030\004 \001(\021:\0010"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2077);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BaseAttrV1Data.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_BaseAttrV1Data_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrUserDataV1::kHeadIDFieldNumber;
const int BaseAttrUserDataV1::kExpFieldNumber;
const int BaseAttrUserDataV1::kCreateTimeFieldNumber;
const int BaseAttrUserDataV1::kLastLoginTimeFieldNumber;
const int BaseAttrUserDataV1::kLast2LoginDateFieldNumber;
const int BaseAttrUserDataV1::kLastLogoutTimeFieldNumber;
const int BaseAttrUserDataV1::kMoneyFieldNumber;
const int BaseAttrUserDataV1::kDiamondFieldNumber;
const int BaseAttrUserDataV1::kStrengthFieldNumber;
const int BaseAttrUserDataV1::kFeatsFieldNumber;
const int BaseAttrUserDataV1::kGotRankRewardTimeFieldNumber;
const int BaseAttrUserDataV1::kMaxMilitaryFieldNumber;
const int BaseAttrUserDataV1::kMasterAttrsFieldNumber;
const int BaseAttrUserDataV1::kCurMilitaryFieldNumber;
const int BaseAttrUserDataV1::kUserNameFieldNumber;
const int BaseAttrUserDataV1::kUserIdFieldNumber;
const int BaseAttrUserDataV1::kPlatNameFieldNumber;
const int BaseAttrUserDataV1::kAccountIdFieldNumber;
const int BaseAttrUserDataV1::kLevelFieldNumber;
const int BaseAttrUserDataV1::kRankFieldNumber;
const int BaseAttrUserDataV1::kFightPowerFieldNumber;
const int BaseAttrUserDataV1::kSecFieldNumber;
const int BaseAttrUserDataV1::kMilitaryFieldNumber;
const int BaseAttrUserDataV1::kTeamIdFieldNumber;
const int BaseAttrUserDataV1::kProfFieldNumber;
const int BaseAttrUserDataV1::kDungeonRemainCountFieldNumber;
const int BaseAttrUserDataV1::kMapIdFieldNumber;
const int BaseAttrUserDataV1::kPosXFieldNumber;
const int BaseAttrUserDataV1::kPosYFieldNumber;
const int BaseAttrUserDataV1::kPosZFieldNumber;
const int BaseAttrUserDataV1::kRyFieldNumber;
const int BaseAttrUserDataV1::kSkillCdArrFieldNumber;
const int BaseAttrUserDataV1::kBuffCdArrFieldNumber;
const int BaseAttrUserDataV1::kCurrentSceneFieldNumber;
const int BaseAttrUserDataV1::kGuildIdFieldNumber;
const int BaseAttrUserDataV1::kExitGuildTimeFieldNumber;
const int BaseAttrUserDataV1::kApplyGuildIdFieldNumber;
const int BaseAttrUserDataV1::kCurGuildContributionFieldNumber;
const int BaseAttrUserDataV1::kMaxGuildContributionFieldNumber;
const int BaseAttrUserDataV1::kBindMoneyFieldNumber;
const int BaseAttrUserDataV1::kGemFieldNumber;
const int BaseAttrUserDataV1::kServerTimeFieldNumber;
const int BaseAttrUserDataV1::kNewbieGuideFieldNumber;
const int BaseAttrUserDataV1::kThiefRewardNumFieldNumber;
const int BaseAttrUserDataV1::kSubdueMonsterRewardNumFieldNumber;
const int BaseAttrUserDataV1::kWorldBossRemainTimesFieldNumber;
const int BaseAttrUserDataV1::kWorldBossHurtFieldNumber;
const int BaseAttrUserDataV1::kFunctionOpenListFieldNumber;
const int BaseAttrUserDataV1::kTotalEnergyValueFieldNumber;
const int BaseAttrUserDataV1::kEnergyArrayFieldNumber;
const int BaseAttrUserDataV1::kPKStateFieldNumber;
const int BaseAttrUserDataV1::kPKProtectFieldNumber;
const int BaseAttrUserDataV1::kGuildScienArrayFieldNumber;
const int BaseAttrUserDataV1::kScienceTotalMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrUserDataV1::BaseAttrUserDataV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrUserDataV1)
}
BaseAttrUserDataV1::BaseAttrUserDataV1(const BaseAttrUserDataV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      masterattrs_(from.masterattrs_),
      skillcdarr_(from.skillcdarr_),
      buffcdarr_(from.buffcdarr_),
      applyguildid_(from.applyguildid_),
      newbieguide_(from.newbieguide_),
      functionopenlist_(from.functionopenlist_),
      energyarray_(from.energyarray_),
      pkprotect_(from.pkprotect_),
      guildscienarray_(from.guildscienarray_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  platname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_platname()) {
    platname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platname_);
  }
  if (from.has_currentscene()) {
    currentscene_ = new ::BaseAttrSceneInfoV1(*from.currentscene_);
  } else {
    currentscene_ = NULL;
  }
  ::memcpy(&money_, &from.money_,
    static_cast<size_t>(reinterpret_cast<char*>(&pkstate_) -
    reinterpret_cast<char*>(&money_)) + sizeof(pkstate_));
  // @@protoc_insertion_point(copy_constructor:BaseAttrUserDataV1)
}

void BaseAttrUserDataV1::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&currentscene_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sciencetotalmoney_) -
      reinterpret_cast<char*>(&currentscene_)) + sizeof(sciencetotalmoney_));
  headid_ = -1;
  exp_ = -1;
  createtime_ = -1;
  lastlogintime_ = -1;
  last2logindate_ = -1;
  lastlogouttime_ = -1;
  strength_ = -1;
  feats_ = -1;
  gotrankrewardtime_ = -1;
  maxmilitary_ = -1;
  userid_ = GOOGLE_LONGLONG(-1);
  curmilitary_ = -1;
  level_ = -1;
  accountid_ = GOOGLE_LONGLONG(-1);
  rank_ = -1;
  fightpower_ = -1;
  sec_ = -1;
  military_ = -1;
  teamid_ = -1;
  prof_ = -1;
  dungeonremaincount_ = -1;
  mapid_ = -1;
  posx_ = -1;
  posy_ = -1;
  posz_ = -1;
  ry_ = -1;
  guildid_ = -1;
  exitguildtime_ = -1;
  servertime_ = -1;
  pkstate_ = -1;
  _cached_size_ = 0;
}

BaseAttrUserDataV1::~BaseAttrUserDataV1() {
  // @@protoc_insertion_point(destructor:BaseAttrUserDataV1)
  SharedDtor();
}

void BaseAttrUserDataV1::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete currentscene_;
}

void BaseAttrUserDataV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrUserDataV1::descriptor() {
  protobuf_BaseAttrV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrUserDataV1& BaseAttrUserDataV1::default_instance() {
  protobuf_BaseAttrV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrUserDataV1* BaseAttrUserDataV1::New(::google::protobuf::Arena* arena) const {
  BaseAttrUserDataV1* n = new BaseAttrUserDataV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrUserDataV1::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrUserDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  masterattrs_.Clear();
  skillcdarr_.Clear();
  buffcdarr_.Clear();
  applyguildid_.Clear();
  newbieguide_.Clear();
  functionopenlist_.Clear();
  energyarray_.Clear();
  pkprotect_.Clear();
  guildscienarray_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!platname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*platname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(currentscene_ != NULL);
      currentscene_->::BaseAttrSceneInfoV1::Clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&money_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bindmoney_) -
        reinterpret_cast<char*>(&money_)) + sizeof(bindmoney_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&gem_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sciencetotalmoney_) -
        reinterpret_cast<char*>(&gem_)) + sizeof(sciencetotalmoney_));
    headid_ = -1;
  }
  if (cached_has_bits & 16711680u) {
    exp_ = -1;
    createtime_ = -1;
    lastlogintime_ = -1;
    last2logindate_ = -1;
    lastlogouttime_ = -1;
    strength_ = -1;
    feats_ = -1;
    gotrankrewardtime_ = -1;
  }
  if (cached_has_bits & 4278190080u) {
    maxmilitary_ = -1;
    userid_ = GOOGLE_LONGLONG(-1);
    curmilitary_ = -1;
    level_ = -1;
    accountid_ = GOOGLE_LONGLONG(-1);
    rank_ = -1;
    fightpower_ = -1;
    sec_ = -1;
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 255u) {
    military_ = -1;
    teamid_ = -1;
    prof_ = -1;
    dungeonremaincount_ = -1;
    mapid_ = -1;
    posx_ = -1;
    posy_ = -1;
    posz_ = -1;
  }
  if (cached_has_bits & 7936u) {
    ry_ = -1;
    guildid_ = -1;
    exitguildtime_ = -1;
    servertime_ = -1;
    pkstate_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrUserDataV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrUserDataV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 HeadID = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_headid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &headid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Exp = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_exp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 CreateTime = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_createtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 LastLoginTime = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_lastlogintime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &lastlogintime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Last2LoginDate = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_last2logindate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &last2logindate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 LastLogoutTime = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_lastlogouttime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &lastlogouttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Money = 7 [default = 0];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Diamond = 8 [default = 0];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_diamond();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &diamond_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Strength = 10 [default = -1];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_strength();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &strength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Feats = 11 [default = -1];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_feats();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &feats_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 GotRankRewardTime = 12 [default = -1];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_gotrankrewardtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &gotrankrewardtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 MaxMilitary = 14 [default = -1];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_maxmilitary();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &maxmilitary_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 MasterAttrs = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 120u, input, this->mutable_masterattrs())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_masterattrs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 CurMilitary = 18 [default = -1];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_curmilitary();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &curmilitary_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string UserName = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BaseAttrUserDataV1.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 UserId = 20 [default = -1];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string PlatName = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->platname().data(), static_cast<int>(this->platname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BaseAttrUserDataV1.PlatName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 AccountId = 22 [default = -1];
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_accountid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Level = 23 [default = -1];
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Rank = 24 [default = -1];
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          set_has_rank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 FightPower = 25 [default = -1];
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          set_has_fightpower();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &fightpower_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Sec = 26 [default = -1];
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {
          set_has_sec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Military = 27 [default = -1];
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          set_has_military();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &military_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TeamId = 28 [default = -1];
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {
          set_has_teamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Prof = 29 [default = -1];
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {
          set_has_prof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &prof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 DungeonRemainCount = 30 [default = -1];
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_dungeonremaincount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &dungeonremaincount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 MapId = 31 [default = -1];
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          set_has_mapid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &mapid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float PosX = 32 [default = -1];
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(5u /* 261 & 0xFF */)) {
          set_has_posx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &posx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float PosY = 33 [default = -1];
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 269 & 0xFF */)) {
          set_has_posy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &posy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float PosZ = 34 [default = -1];
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 277 & 0xFF */)) {
          set_has_posz();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &posz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Ry = 35 [default = -1];
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {
          set_has_ry();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &ry_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BaseAttrSkillCdInfoV1 SkillCdArr = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skillcdarr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BaseAttrBuffCdInfoV1 BuffCdArr = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_buffcdarr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .BaseAttrSceneInfoV1 CurrentScene = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_currentscene()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 GuildId = 39 [default = -1];
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 312 & 0xFF */)) {
          set_has_guildid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ExitGuildTime = 40 [default = -1];
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          set_has_exitguildtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &exitguildtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 ApplyGuildId = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 328 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 328u, input, this->mutable_applyguildid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_applyguildid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 CurGuildContribution = 42 [default = 0];
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 336 & 0xFF */)) {
          set_has_curguildcontribution();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &curguildcontribution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 MaxGuildContribution = 43 [default = 0];
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 344 & 0xFF */)) {
          set_has_maxguildcontribution();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &maxguildcontribution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BindMoney = 44 [default = 0];
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 352 & 0xFF */)) {
          set_has_bindmoney();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bindmoney_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Gem = 45 [default = 0];
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 360 & 0xFF */)) {
          set_has_gem();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &gem_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ServerTime = 47 [default = -1];
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 376 & 0xFF */)) {
          set_has_servertime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &servertime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KeyValue2IntInt NewbieGuide = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 386 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_newbieguide()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ThiefRewardNum = 49 [default = 0];
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 392 & 0xFF */)) {
          set_has_thiefrewardnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &thiefrewardnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 SubdueMonsterRewardNum = 50 [default = 0];
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {
          set_has_subduemonsterrewardnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &subduemonsterrewardnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 WorldBossRemainTimes = 51 [default = 0];
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 408 & 0xFF */)) {
          set_has_worldbossremaintimes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &worldbossremaintimes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 WorldBossHurt = 52 [default = 0];
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 416 & 0xFF */)) {
          set_has_worldbosshurt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &worldbosshurt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BaseAttrIconOpenInfoV1 FunctionOpenList = 54;
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 434 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_functionopenlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TotalEnergyValue = 55 [default = 0];
      case 55: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 440 & 0xFF */)) {
          set_has_totalenergyvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &totalenergyvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BaseAttrEnergyInfoV1 EnergyArray = 57;
      case 57: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 458 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_energyarray()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 PKState = 58 [default = -1];
      case 58: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 464 & 0xFF */)) {
          set_has_pkstate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pkstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KeyValue2IntBool PKProtect = 59;
      case 59: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 474 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pkprotect()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BaseAttrScienceInfoV1 GuildScienArray = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_guildscienarray()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ScienceTotalMoney = 61 [default = 0];
      case 61: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 488 & 0xFF */)) {
          set_has_sciencetotalmoney();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &sciencetotalmoney_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrUserDataV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrUserDataV1)
  return false;
#undef DO_
}

void BaseAttrUserDataV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrUserDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 HeadID = 1 [default = -1];
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->headid(), output);
  }

  // optional sint32 Exp = 2 [default = -1];
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->exp(), output);
  }

  // optional sint32 CreateTime = 3 [default = -1];
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->createtime(), output);
  }

  // optional sint32 LastLoginTime = 4 [default = -1];
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->lastlogintime(), output);
  }

  // optional sint32 Last2LoginDate = 5 [default = -1];
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->last2logindate(), output);
  }

  // optional sint32 LastLogoutTime = 6 [default = -1];
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->lastlogouttime(), output);
  }

  // optional sint32 Money = 7 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->money(), output);
  }

  // optional sint32 Diamond = 8 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->diamond(), output);
  }

  // optional sint32 Strength = 10 [default = -1];
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(10, this->strength(), output);
  }

  // optional sint32 Feats = 11 [default = -1];
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(11, this->feats(), output);
  }

  // optional sint32 GotRankRewardTime = 12 [default = -1];
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(12, this->gotrankrewardtime(), output);
  }

  // optional sint32 MaxMilitary = 14 [default = -1];
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(14, this->maxmilitary(), output);
  }

  // repeated sint32 MasterAttrs = 15;
  for (int i = 0, n = this->masterattrs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      15, this->masterattrs(i), output);
  }

  // optional sint32 CurMilitary = 18 [default = -1];
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(18, this->curmilitary(), output);
  }

  // optional string UserName = 19;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseAttrUserDataV1.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->username(), output);
  }

  // optional sint64 UserId = 20 [default = -1];
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(20, this->userid(), output);
  }

  // optional string PlatName = 21;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platname().data(), static_cast<int>(this->platname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseAttrUserDataV1.PlatName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->platname(), output);
  }

  // optional sint64 AccountId = 22 [default = -1];
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(22, this->accountid(), output);
  }

  // optional sint32 Level = 23 [default = -1];
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(23, this->level(), output);
  }

  // optional sint32 Rank = 24 [default = -1];
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(24, this->rank(), output);
  }

  // optional sint32 FightPower = 25 [default = -1];
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(25, this->fightpower(), output);
  }

  // optional sint32 Sec = 26 [default = -1];
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(26, this->sec(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional sint32 Military = 27 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(27, this->military(), output);
  }

  // optional sint32 TeamId = 28 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(28, this->teamid(), output);
  }

  // optional sint32 Prof = 29 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(29, this->prof(), output);
  }

  // optional sint32 DungeonRemainCount = 30 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(30, this->dungeonremaincount(), output);
  }

  // optional sint32 MapId = 31 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(31, this->mapid(), output);
  }

  // optional float PosX = 32 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(32, this->posx(), output);
  }

  // optional float PosY = 33 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(33, this->posy(), output);
  }

  // optional float PosZ = 34 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(34, this->posz(), output);
  }

  // optional sint32 Ry = 35 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(35, this->ry(), output);
  }

  // repeated .BaseAttrSkillCdInfoV1 SkillCdArr = 36;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->skillcdarr_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36, this->skillcdarr(static_cast<int>(i)), output);
  }

  // repeated .BaseAttrBuffCdInfoV1 BuffCdArr = 37;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buffcdarr_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, this->buffcdarr(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .BaseAttrSceneInfoV1 CurrentScene = 38;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38, *this->currentscene_, output);
  }

  cached_has_bits = _has_bits_[1];
  // optional sint32 GuildId = 39 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(39, this->guildid(), output);
  }

  // optional sint32 ExitGuildTime = 40 [default = -1];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(40, this->exitguildtime(), output);
  }

  // repeated sint32 ApplyGuildId = 41;
  for (int i = 0, n = this->applyguildid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      41, this->applyguildid(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional sint32 CurGuildContribution = 42 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(42, this->curguildcontribution(), output);
  }

  // optional sint32 MaxGuildContribution = 43 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(43, this->maxguildcontribution(), output);
  }

  // optional sint32 BindMoney = 44 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(44, this->bindmoney(), output);
  }

  // optional sint32 Gem = 45 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(45, this->gem(), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional sint32 ServerTime = 47 [default = -1];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(47, this->servertime(), output);
  }

  // repeated .KeyValue2IntInt NewbieGuide = 48;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->newbieguide_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      48, this->newbieguide(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional sint32 ThiefRewardNum = 49 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(49, this->thiefrewardnum(), output);
  }

  // optional sint32 SubdueMonsterRewardNum = 50 [default = 0];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(50, this->subduemonsterrewardnum(), output);
  }

  // optional sint32 WorldBossRemainTimes = 51 [default = 0];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(51, this->worldbossremaintimes(), output);
  }

  // optional sint32 WorldBossHurt = 52 [default = 0];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(52, this->worldbosshurt(), output);
  }

  // repeated .BaseAttrIconOpenInfoV1 FunctionOpenList = 54;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->functionopenlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      54, this->functionopenlist(static_cast<int>(i)), output);
  }

  // optional sint32 TotalEnergyValue = 55 [default = 0];
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(55, this->totalenergyvalue(), output);
  }

  // repeated .BaseAttrEnergyInfoV1 EnergyArray = 57;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->energyarray_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      57, this->energyarray(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[1];
  // optional sint32 PKState = 58 [default = -1];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(58, this->pkstate(), output);
  }

  // repeated .KeyValue2IntBool PKProtect = 59;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pkprotect_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      59, this->pkprotect(static_cast<int>(i)), output);
  }

  // repeated .BaseAttrScienceInfoV1 GuildScienArray = 60;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->guildscienarray_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60, this->guildscienarray(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional sint32 ScienceTotalMoney = 61 [default = 0];
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(61, this->sciencetotalmoney(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrUserDataV1)
}

::google::protobuf::uint8* BaseAttrUserDataV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrUserDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 HeadID = 1 [default = -1];
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->headid(), target);
  }

  // optional sint32 Exp = 2 [default = -1];
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->exp(), target);
  }

  // optional sint32 CreateTime = 3 [default = -1];
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->createtime(), target);
  }

  // optional sint32 LastLoginTime = 4 [default = -1];
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->lastlogintime(), target);
  }

  // optional sint32 Last2LoginDate = 5 [default = -1];
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->last2logindate(), target);
  }

  // optional sint32 LastLogoutTime = 6 [default = -1];
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->lastlogouttime(), target);
  }

  // optional sint32 Money = 7 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->money(), target);
  }

  // optional sint32 Diamond = 8 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->diamond(), target);
  }

  // optional sint32 Strength = 10 [default = -1];
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(10, this->strength(), target);
  }

  // optional sint32 Feats = 11 [default = -1];
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(11, this->feats(), target);
  }

  // optional sint32 GotRankRewardTime = 12 [default = -1];
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(12, this->gotrankrewardtime(), target);
  }

  // optional sint32 MaxMilitary = 14 [default = -1];
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(14, this->maxmilitary(), target);
  }

  // repeated sint32 MasterAttrs = 15;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSInt32ToArray(15, this->masterattrs_, target);

  // optional sint32 CurMilitary = 18 [default = -1];
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(18, this->curmilitary(), target);
  }

  // optional string UserName = 19;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseAttrUserDataV1.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->username(), target);
  }

  // optional sint64 UserId = 20 [default = -1];
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(20, this->userid(), target);
  }

  // optional string PlatName = 21;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platname().data(), static_cast<int>(this->platname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseAttrUserDataV1.PlatName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->platname(), target);
  }

  // optional sint64 AccountId = 22 [default = -1];
  if (cached_has_bits & 0x10000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(22, this->accountid(), target);
  }

  // optional sint32 Level = 23 [default = -1];
  if (cached_has_bits & 0x08000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(23, this->level(), target);
  }

  // optional sint32 Rank = 24 [default = -1];
  if (cached_has_bits & 0x20000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(24, this->rank(), target);
  }

  // optional sint32 FightPower = 25 [default = -1];
  if (cached_has_bits & 0x40000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(25, this->fightpower(), target);
  }

  // optional sint32 Sec = 26 [default = -1];
  if (cached_has_bits & 0x80000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(26, this->sec(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional sint32 Military = 27 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(27, this->military(), target);
  }

  // optional sint32 TeamId = 28 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(28, this->teamid(), target);
  }

  // optional sint32 Prof = 29 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(29, this->prof(), target);
  }

  // optional sint32 DungeonRemainCount = 30 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(30, this->dungeonremaincount(), target);
  }

  // optional sint32 MapId = 31 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(31, this->mapid(), target);
  }

  // optional float PosX = 32 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(32, this->posx(), target);
  }

  // optional float PosY = 33 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(33, this->posy(), target);
  }

  // optional float PosZ = 34 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(34, this->posz(), target);
  }

  // optional sint32 Ry = 35 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(35, this->ry(), target);
  }

  // repeated .BaseAttrSkillCdInfoV1 SkillCdArr = 36;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->skillcdarr_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        36, this->skillcdarr(static_cast<int>(i)), deterministic, target);
  }

  // repeated .BaseAttrBuffCdInfoV1 BuffCdArr = 37;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buffcdarr_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        37, this->buffcdarr(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .BaseAttrSceneInfoV1 CurrentScene = 38;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        38, *this->currentscene_, deterministic, target);
  }

  cached_has_bits = _has_bits_[1];
  // optional sint32 GuildId = 39 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(39, this->guildid(), target);
  }

  // optional sint32 ExitGuildTime = 40 [default = -1];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(40, this->exitguildtime(), target);
  }

  // repeated sint32 ApplyGuildId = 41;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSInt32ToArray(41, this->applyguildid_, target);

  cached_has_bits = _has_bits_[0];
  // optional sint32 CurGuildContribution = 42 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(42, this->curguildcontribution(), target);
  }

  // optional sint32 MaxGuildContribution = 43 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(43, this->maxguildcontribution(), target);
  }

  // optional sint32 BindMoney = 44 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(44, this->bindmoney(), target);
  }

  // optional sint32 Gem = 45 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(45, this->gem(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional sint32 ServerTime = 47 [default = -1];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(47, this->servertime(), target);
  }

  // repeated .KeyValue2IntInt NewbieGuide = 48;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->newbieguide_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        48, this->newbieguide(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional sint32 ThiefRewardNum = 49 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(49, this->thiefrewardnum(), target);
  }

  // optional sint32 SubdueMonsterRewardNum = 50 [default = 0];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(50, this->subduemonsterrewardnum(), target);
  }

  // optional sint32 WorldBossRemainTimes = 51 [default = 0];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(51, this->worldbossremaintimes(), target);
  }

  // optional sint32 WorldBossHurt = 52 [default = 0];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(52, this->worldbosshurt(), target);
  }

  // repeated .BaseAttrIconOpenInfoV1 FunctionOpenList = 54;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->functionopenlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        54, this->functionopenlist(static_cast<int>(i)), deterministic, target);
  }

  // optional sint32 TotalEnergyValue = 55 [default = 0];
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(55, this->totalenergyvalue(), target);
  }

  // repeated .BaseAttrEnergyInfoV1 EnergyArray = 57;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->energyarray_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        57, this->energyarray(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[1];
  // optional sint32 PKState = 58 [default = -1];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(58, this->pkstate(), target);
  }

  // repeated .KeyValue2IntBool PKProtect = 59;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pkprotect_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        59, this->pkprotect(static_cast<int>(i)), deterministic, target);
  }

  // repeated .BaseAttrScienceInfoV1 GuildScienArray = 60;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->guildscienarray_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        60, this->guildscienarray(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional sint32 ScienceTotalMoney = 61 [default = 0];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(61, this->sciencetotalmoney(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrUserDataV1)
  return target;
}

size_t BaseAttrUserDataV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrUserDataV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated sint32 MasterAttrs = 15;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->masterattrs_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->masterattrs_size());
    total_size += data_size;
  }

  // repeated .BaseAttrSkillCdInfoV1 SkillCdArr = 36;
  {
    unsigned int count = static_cast<unsigned int>(this->skillcdarr_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skillcdarr(static_cast<int>(i)));
    }
  }

  // repeated .BaseAttrBuffCdInfoV1 BuffCdArr = 37;
  {
    unsigned int count = static_cast<unsigned int>(this->buffcdarr_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->buffcdarr(static_cast<int>(i)));
    }
  }

  // repeated sint32 ApplyGuildId = 41;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->applyguildid_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->applyguildid_size());
    total_size += data_size;
  }

  // repeated .KeyValue2IntInt NewbieGuide = 48;
  {
    unsigned int count = static_cast<unsigned int>(this->newbieguide_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->newbieguide(static_cast<int>(i)));
    }
  }

  // repeated .BaseAttrIconOpenInfoV1 FunctionOpenList = 54;
  {
    unsigned int count = static_cast<unsigned int>(this->functionopenlist_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->functionopenlist(static_cast<int>(i)));
    }
  }

  // repeated .BaseAttrEnergyInfoV1 EnergyArray = 57;
  {
    unsigned int count = static_cast<unsigned int>(this->energyarray_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->energyarray(static_cast<int>(i)));
    }
  }

  // repeated .KeyValue2IntBool PKProtect = 59;
  {
    unsigned int count = static_cast<unsigned int>(this->pkprotect_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pkprotect(static_cast<int>(i)));
    }
  }

  // repeated .BaseAttrScienceInfoV1 GuildScienArray = 60;
  {
    unsigned int count = static_cast<unsigned int>(this->guildscienarray_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->guildscienarray(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string UserName = 19;
    if (has_username()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string PlatName = 21;
    if (has_platname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platname());
    }

    // optional .BaseAttrSceneInfoV1 CurrentScene = 38;
    if (has_currentscene()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->currentscene_);
    }

    // optional sint32 Money = 7 [default = 0];
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->money());
    }

    // optional sint32 Diamond = 8 [default = 0];
    if (has_diamond()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->diamond());
    }

    // optional sint32 CurGuildContribution = 42 [default = 0];
    if (has_curguildcontribution()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->curguildcontribution());
    }

    // optional sint32 MaxGuildContribution = 43 [default = 0];
    if (has_maxguildcontribution()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->maxguildcontribution());
    }

    // optional sint32 BindMoney = 44 [default = 0];
    if (has_bindmoney()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bindmoney());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional sint32 Gem = 45 [default = 0];
    if (has_gem()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->gem());
    }

    // optional sint32 ThiefRewardNum = 49 [default = 0];
    if (has_thiefrewardnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->thiefrewardnum());
    }

    // optional sint32 SubdueMonsterRewardNum = 50 [default = 0];
    if (has_subduemonsterrewardnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->subduemonsterrewardnum());
    }

    // optional sint32 WorldBossRemainTimes = 51 [default = 0];
    if (has_worldbossremaintimes()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->worldbossremaintimes());
    }

    // optional sint32 WorldBossHurt = 52 [default = 0];
    if (has_worldbosshurt()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->worldbosshurt());
    }

    // optional sint32 TotalEnergyValue = 55 [default = 0];
    if (has_totalenergyvalue()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->totalenergyvalue());
    }

    // optional sint32 ScienceTotalMoney = 61 [default = 0];
    if (has_sciencetotalmoney()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->sciencetotalmoney());
    }

    // optional sint32 HeadID = 1 [default = -1];
    if (has_headid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->headid());
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional sint32 Exp = 2 [default = -1];
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->exp());
    }

    // optional sint32 CreateTime = 3 [default = -1];
    if (has_createtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->createtime());
    }

    // optional sint32 LastLoginTime = 4 [default = -1];
    if (has_lastlogintime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->lastlogintime());
    }

    // optional sint32 Last2LoginDate = 5 [default = -1];
    if (has_last2logindate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->last2logindate());
    }

    // optional sint32 LastLogoutTime = 6 [default = -1];
    if (has_lastlogouttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->lastlogouttime());
    }

    // optional sint32 Strength = 10 [default = -1];
    if (has_strength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->strength());
    }

    // optional sint32 Feats = 11 [default = -1];
    if (has_feats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->feats());
    }

    // optional sint32 GotRankRewardTime = 12 [default = -1];
    if (has_gotrankrewardtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->gotrankrewardtime());
    }

  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    // optional sint32 MaxMilitary = 14 [default = -1];
    if (has_maxmilitary()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->maxmilitary());
    }

    // optional sint64 UserId = 20 [default = -1];
    if (has_userid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->userid());
    }

    // optional sint32 CurMilitary = 18 [default = -1];
    if (has_curmilitary()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->curmilitary());
    }

    // optional sint32 Level = 23 [default = -1];
    if (has_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->level());
    }

    // optional sint64 AccountId = 22 [default = -1];
    if (has_accountid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->accountid());
    }

    // optional sint32 Rank = 24 [default = -1];
    if (has_rank()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->rank());
    }

    // optional sint32 FightPower = 25 [default = -1];
    if (has_fightpower()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->fightpower());
    }

    // optional sint32 Sec = 26 [default = -1];
    if (has_sec()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->sec());
    }

  }
  if (_has_bits_[32 / 32] & 255u) {
    // optional sint32 Military = 27 [default = -1];
    if (has_military()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->military());
    }

    // optional sint32 TeamId = 28 [default = -1];
    if (has_teamid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->teamid());
    }

    // optional sint32 Prof = 29 [default = -1];
    if (has_prof()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->prof());
    }

    // optional sint32 DungeonRemainCount = 30 [default = -1];
    if (has_dungeonremaincount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->dungeonremaincount());
    }

    // optional sint32 MapId = 31 [default = -1];
    if (has_mapid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->mapid());
    }

    // optional float PosX = 32 [default = -1];
    if (has_posx()) {
      total_size += 2 + 4;
    }

    // optional float PosY = 33 [default = -1];
    if (has_posy()) {
      total_size += 2 + 4;
    }

    // optional float PosZ = 34 [default = -1];
    if (has_posz()) {
      total_size += 2 + 4;
    }

  }
  if (_has_bits_[40 / 32] & 7936u) {
    // optional sint32 Ry = 35 [default = -1];
    if (has_ry()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->ry());
    }

    // optional sint32 GuildId = 39 [default = -1];
    if (has_guildid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->guildid());
    }

    // optional sint32 ExitGuildTime = 40 [default = -1];
    if (has_exitguildtime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->exitguildtime());
    }

    // optional sint32 ServerTime = 47 [default = -1];
    if (has_servertime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->servertime());
    }

    // optional sint32 PKState = 58 [default = -1];
    if (has_pkstate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pkstate());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrUserDataV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrUserDataV1)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrUserDataV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrUserDataV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrUserDataV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrUserDataV1)
    MergeFrom(*source);
  }
}

void BaseAttrUserDataV1::MergeFrom(const BaseAttrUserDataV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrUserDataV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  masterattrs_.MergeFrom(from.masterattrs_);
  skillcdarr_.MergeFrom(from.skillcdarr_);
  buffcdarr_.MergeFrom(from.buffcdarr_);
  applyguildid_.MergeFrom(from.applyguildid_);
  newbieguide_.MergeFrom(from.newbieguide_);
  functionopenlist_.MergeFrom(from.functionopenlist_);
  energyarray_.MergeFrom(from.energyarray_);
  pkprotect_.MergeFrom(from.pkprotect_);
  guildscienarray_.MergeFrom(from.guildscienarray_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_platname();
      platname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platname_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_currentscene()->::BaseAttrSceneInfoV1::MergeFrom(from.currentscene());
    }
    if (cached_has_bits & 0x00000008u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000010u) {
      diamond_ = from.diamond_;
    }
    if (cached_has_bits & 0x00000020u) {
      curguildcontribution_ = from.curguildcontribution_;
    }
    if (cached_has_bits & 0x00000040u) {
      maxguildcontribution_ = from.maxguildcontribution_;
    }
    if (cached_has_bits & 0x00000080u) {
      bindmoney_ = from.bindmoney_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      gem_ = from.gem_;
    }
    if (cached_has_bits & 0x00000200u) {
      thiefrewardnum_ = from.thiefrewardnum_;
    }
    if (cached_has_bits & 0x00000400u) {
      subduemonsterrewardnum_ = from.subduemonsterrewardnum_;
    }
    if (cached_has_bits & 0x00000800u) {
      worldbossremaintimes_ = from.worldbossremaintimes_;
    }
    if (cached_has_bits & 0x00001000u) {
      worldbosshurt_ = from.worldbosshurt_;
    }
    if (cached_has_bits & 0x00002000u) {
      totalenergyvalue_ = from.totalenergyvalue_;
    }
    if (cached_has_bits & 0x00004000u) {
      sciencetotalmoney_ = from.sciencetotalmoney_;
    }
    if (cached_has_bits & 0x00008000u) {
      headid_ = from.headid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      exp_ = from.exp_;
    }
    if (cached_has_bits & 0x00020000u) {
      createtime_ = from.createtime_;
    }
    if (cached_has_bits & 0x00040000u) {
      lastlogintime_ = from.lastlogintime_;
    }
    if (cached_has_bits & 0x00080000u) {
      last2logindate_ = from.last2logindate_;
    }
    if (cached_has_bits & 0x00100000u) {
      lastlogouttime_ = from.lastlogouttime_;
    }
    if (cached_has_bits & 0x00200000u) {
      strength_ = from.strength_;
    }
    if (cached_has_bits & 0x00400000u) {
      feats_ = from.feats_;
    }
    if (cached_has_bits & 0x00800000u) {
      gotrankrewardtime_ = from.gotrankrewardtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      maxmilitary_ = from.maxmilitary_;
    }
    if (cached_has_bits & 0x02000000u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x04000000u) {
      curmilitary_ = from.curmilitary_;
    }
    if (cached_has_bits & 0x08000000u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x10000000u) {
      accountid_ = from.accountid_;
    }
    if (cached_has_bits & 0x20000000u) {
      rank_ = from.rank_;
    }
    if (cached_has_bits & 0x40000000u) {
      fightpower_ = from.fightpower_;
    }
    if (cached_has_bits & 0x80000000u) {
      sec_ = from.sec_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      military_ = from.military_;
    }
    if (cached_has_bits & 0x00000002u) {
      teamid_ = from.teamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      prof_ = from.prof_;
    }
    if (cached_has_bits & 0x00000008u) {
      dungeonremaincount_ = from.dungeonremaincount_;
    }
    if (cached_has_bits & 0x00000010u) {
      mapid_ = from.mapid_;
    }
    if (cached_has_bits & 0x00000020u) {
      posx_ = from.posx_;
    }
    if (cached_has_bits & 0x00000040u) {
      posy_ = from.posy_;
    }
    if (cached_has_bits & 0x00000080u) {
      posz_ = from.posz_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      ry_ = from.ry_;
    }
    if (cached_has_bits & 0x00000200u) {
      guildid_ = from.guildid_;
    }
    if (cached_has_bits & 0x00000400u) {
      exitguildtime_ = from.exitguildtime_;
    }
    if (cached_has_bits & 0x00000800u) {
      servertime_ = from.servertime_;
    }
    if (cached_has_bits & 0x00001000u) {
      pkstate_ = from.pkstate_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
}

void BaseAttrUserDataV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrUserDataV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrUserDataV1::CopyFrom(const BaseAttrUserDataV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrUserDataV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrUserDataV1::IsInitialized() const {
  return true;
}

void BaseAttrUserDataV1::Swap(BaseAttrUserDataV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrUserDataV1::InternalSwap(BaseAttrUserDataV1* other) {
  using std::swap;
  masterattrs_.InternalSwap(&other->masterattrs_);
  skillcdarr_.InternalSwap(&other->skillcdarr_);
  buffcdarr_.InternalSwap(&other->buffcdarr_);
  applyguildid_.InternalSwap(&other->applyguildid_);
  newbieguide_.InternalSwap(&other->newbieguide_);
  functionopenlist_.InternalSwap(&other->functionopenlist_);
  energyarray_.InternalSwap(&other->energyarray_);
  pkprotect_.InternalSwap(&other->pkprotect_);
  guildscienarray_.InternalSwap(&other->guildscienarray_);
  username_.Swap(&other->username_);
  platname_.Swap(&other->platname_);
  swap(currentscene_, other->currentscene_);
  swap(money_, other->money_);
  swap(diamond_, other->diamond_);
  swap(curguildcontribution_, other->curguildcontribution_);
  swap(maxguildcontribution_, other->maxguildcontribution_);
  swap(bindmoney_, other->bindmoney_);
  swap(gem_, other->gem_);
  swap(thiefrewardnum_, other->thiefrewardnum_);
  swap(subduemonsterrewardnum_, other->subduemonsterrewardnum_);
  swap(worldbossremaintimes_, other->worldbossremaintimes_);
  swap(worldbosshurt_, other->worldbosshurt_);
  swap(totalenergyvalue_, other->totalenergyvalue_);
  swap(sciencetotalmoney_, other->sciencetotalmoney_);
  swap(headid_, other->headid_);
  swap(exp_, other->exp_);
  swap(createtime_, other->createtime_);
  swap(lastlogintime_, other->lastlogintime_);
  swap(last2logindate_, other->last2logindate_);
  swap(lastlogouttime_, other->lastlogouttime_);
  swap(strength_, other->strength_);
  swap(feats_, other->feats_);
  swap(gotrankrewardtime_, other->gotrankrewardtime_);
  swap(maxmilitary_, other->maxmilitary_);
  swap(userid_, other->userid_);
  swap(curmilitary_, other->curmilitary_);
  swap(level_, other->level_);
  swap(accountid_, other->accountid_);
  swap(rank_, other->rank_);
  swap(fightpower_, other->fightpower_);
  swap(sec_, other->sec_);
  swap(military_, other->military_);
  swap(teamid_, other->teamid_);
  swap(prof_, other->prof_);
  swap(dungeonremaincount_, other->dungeonremaincount_);
  swap(mapid_, other->mapid_);
  swap(posx_, other->posx_);
  swap(posy_, other->posy_);
  swap(posz_, other->posz_);
  swap(ry_, other->ry_);
  swap(guildid_, other->guildid_);
  swap(exitguildtime_, other->exitguildtime_);
  swap(servertime_, other->servertime_);
  swap(pkstate_, other->pkstate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrUserDataV1::GetMetadata() const {
  protobuf_BaseAttrV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrUserDataV1

// optional sint32 HeadID = 1 [default = -1];
bool BaseAttrUserDataV1::has_headid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void BaseAttrUserDataV1::set_has_headid() {
  _has_bits_[0] |= 0x00008000u;
}
void BaseAttrUserDataV1::clear_has_headid() {
  _has_bits_[0] &= ~0x00008000u;
}
void BaseAttrUserDataV1::clear_headid() {
  headid_ = -1;
  clear_has_headid();
}
::google::protobuf::int32 BaseAttrUserDataV1::headid() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.HeadID)
  return headid_;
}
void BaseAttrUserDataV1::set_headid(::google::protobuf::int32 value) {
  set_has_headid();
  headid_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.HeadID)
}

// optional sint32 Exp = 2 [default = -1];
bool BaseAttrUserDataV1::has_exp() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void BaseAttrUserDataV1::set_has_exp() {
  _has_bits_[0] |= 0x00010000u;
}
void BaseAttrUserDataV1::clear_has_exp() {
  _has_bits_[0] &= ~0x00010000u;
}
void BaseAttrUserDataV1::clear_exp() {
  exp_ = -1;
  clear_has_exp();
}
::google::protobuf::int32 BaseAttrUserDataV1::exp() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.Exp)
  return exp_;
}
void BaseAttrUserDataV1::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.Exp)
}

// optional sint32 CreateTime = 3 [default = -1];
bool BaseAttrUserDataV1::has_createtime() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void BaseAttrUserDataV1::set_has_createtime() {
  _has_bits_[0] |= 0x00020000u;
}
void BaseAttrUserDataV1::clear_has_createtime() {
  _has_bits_[0] &= ~0x00020000u;
}
void BaseAttrUserDataV1::clear_createtime() {
  createtime_ = -1;
  clear_has_createtime();
}
::google::protobuf::int32 BaseAttrUserDataV1::createtime() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.CreateTime)
  return createtime_;
}
void BaseAttrUserDataV1::set_createtime(::google::protobuf::int32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.CreateTime)
}

// optional sint32 LastLoginTime = 4 [default = -1];
bool BaseAttrUserDataV1::has_lastlogintime() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void BaseAttrUserDataV1::set_has_lastlogintime() {
  _has_bits_[0] |= 0x00040000u;
}
void BaseAttrUserDataV1::clear_has_lastlogintime() {
  _has_bits_[0] &= ~0x00040000u;
}
void BaseAttrUserDataV1::clear_lastlogintime() {
  lastlogintime_ = -1;
  clear_has_lastlogintime();
}
::google::protobuf::int32 BaseAttrUserDataV1::lastlogintime() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.LastLoginTime)
  return lastlogintime_;
}
void BaseAttrUserDataV1::set_lastlogintime(::google::protobuf::int32 value) {
  set_has_lastlogintime();
  lastlogintime_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.LastLoginTime)
}

// optional sint32 Last2LoginDate = 5 [default = -1];
bool BaseAttrUserDataV1::has_last2logindate() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void BaseAttrUserDataV1::set_has_last2logindate() {
  _has_bits_[0] |= 0x00080000u;
}
void BaseAttrUserDataV1::clear_has_last2logindate() {
  _has_bits_[0] &= ~0x00080000u;
}
void BaseAttrUserDataV1::clear_last2logindate() {
  last2logindate_ = -1;
  clear_has_last2logindate();
}
::google::protobuf::int32 BaseAttrUserDataV1::last2logindate() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.Last2LoginDate)
  return last2logindate_;
}
void BaseAttrUserDataV1::set_last2logindate(::google::protobuf::int32 value) {
  set_has_last2logindate();
  last2logindate_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.Last2LoginDate)
}

// optional sint32 LastLogoutTime = 6 [default = -1];
bool BaseAttrUserDataV1::has_lastlogouttime() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void BaseAttrUserDataV1::set_has_lastlogouttime() {
  _has_bits_[0] |= 0x00100000u;
}
void BaseAttrUserDataV1::clear_has_lastlogouttime() {
  _has_bits_[0] &= ~0x00100000u;
}
void BaseAttrUserDataV1::clear_lastlogouttime() {
  lastlogouttime_ = -1;
  clear_has_lastlogouttime();
}
::google::protobuf::int32 BaseAttrUserDataV1::lastlogouttime() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.LastLogoutTime)
  return lastlogouttime_;
}
void BaseAttrUserDataV1::set_lastlogouttime(::google::protobuf::int32 value) {
  set_has_lastlogouttime();
  lastlogouttime_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.LastLogoutTime)
}

// optional sint32 Money = 7 [default = 0];
bool BaseAttrUserDataV1::has_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BaseAttrUserDataV1::set_has_money() {
  _has_bits_[0] |= 0x00000008u;
}
void BaseAttrUserDataV1::clear_has_money() {
  _has_bits_[0] &= ~0x00000008u;
}
void BaseAttrUserDataV1::clear_money() {
  money_ = 0;
  clear_has_money();
}
::google::protobuf::int32 BaseAttrUserDataV1::money() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.Money)
  return money_;
}
void BaseAttrUserDataV1::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.Money)
}

// optional sint32 Diamond = 8 [default = 0];
bool BaseAttrUserDataV1::has_diamond() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BaseAttrUserDataV1::set_has_diamond() {
  _has_bits_[0] |= 0x00000010u;
}
void BaseAttrUserDataV1::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000010u;
}
void BaseAttrUserDataV1::clear_diamond() {
  diamond_ = 0;
  clear_has_diamond();
}
::google::protobuf::int32 BaseAttrUserDataV1::diamond() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.Diamond)
  return diamond_;
}
void BaseAttrUserDataV1::set_diamond(::google::protobuf::int32 value) {
  set_has_diamond();
  diamond_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.Diamond)
}

// optional sint32 Strength = 10 [default = -1];
bool BaseAttrUserDataV1::has_strength() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void BaseAttrUserDataV1::set_has_strength() {
  _has_bits_[0] |= 0x00200000u;
}
void BaseAttrUserDataV1::clear_has_strength() {
  _has_bits_[0] &= ~0x00200000u;
}
void BaseAttrUserDataV1::clear_strength() {
  strength_ = -1;
  clear_has_strength();
}
::google::protobuf::int32 BaseAttrUserDataV1::strength() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.Strength)
  return strength_;
}
void BaseAttrUserDataV1::set_strength(::google::protobuf::int32 value) {
  set_has_strength();
  strength_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.Strength)
}

// optional sint32 Feats = 11 [default = -1];
bool BaseAttrUserDataV1::has_feats() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void BaseAttrUserDataV1::set_has_feats() {
  _has_bits_[0] |= 0x00400000u;
}
void BaseAttrUserDataV1::clear_has_feats() {
  _has_bits_[0] &= ~0x00400000u;
}
void BaseAttrUserDataV1::clear_feats() {
  feats_ = -1;
  clear_has_feats();
}
::google::protobuf::int32 BaseAttrUserDataV1::feats() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.Feats)
  return feats_;
}
void BaseAttrUserDataV1::set_feats(::google::protobuf::int32 value) {
  set_has_feats();
  feats_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.Feats)
}

// optional sint32 GotRankRewardTime = 12 [default = -1];
bool BaseAttrUserDataV1::has_gotrankrewardtime() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void BaseAttrUserDataV1::set_has_gotrankrewardtime() {
  _has_bits_[0] |= 0x00800000u;
}
void BaseAttrUserDataV1::clear_has_gotrankrewardtime() {
  _has_bits_[0] &= ~0x00800000u;
}
void BaseAttrUserDataV1::clear_gotrankrewardtime() {
  gotrankrewardtime_ = -1;
  clear_has_gotrankrewardtime();
}
::google::protobuf::int32 BaseAttrUserDataV1::gotrankrewardtime() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.GotRankRewardTime)
  return gotrankrewardtime_;
}
void BaseAttrUserDataV1::set_gotrankrewardtime(::google::protobuf::int32 value) {
  set_has_gotrankrewardtime();
  gotrankrewardtime_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.GotRankRewardTime)
}

// optional sint32 MaxMilitary = 14 [default = -1];
bool BaseAttrUserDataV1::has_maxmilitary() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void BaseAttrUserDataV1::set_has_maxmilitary() {
  _has_bits_[0] |= 0x01000000u;
}
void BaseAttrUserDataV1::clear_has_maxmilitary() {
  _has_bits_[0] &= ~0x01000000u;
}
void BaseAttrUserDataV1::clear_maxmilitary() {
  maxmilitary_ = -1;
  clear_has_maxmilitary();
}
::google::protobuf::int32 BaseAttrUserDataV1::maxmilitary() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.MaxMilitary)
  return maxmilitary_;
}
void BaseAttrUserDataV1::set_maxmilitary(::google::protobuf::int32 value) {
  set_has_maxmilitary();
  maxmilitary_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.MaxMilitary)
}

// repeated sint32 MasterAttrs = 15;
int BaseAttrUserDataV1::masterattrs_size() const {
  return masterattrs_.size();
}
void BaseAttrUserDataV1::clear_masterattrs() {
  masterattrs_.Clear();
}
::google::protobuf::int32 BaseAttrUserDataV1::masterattrs(int index) const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.MasterAttrs)
  return masterattrs_.Get(index);
}
void BaseAttrUserDataV1::set_masterattrs(int index, ::google::protobuf::int32 value) {
  masterattrs_.Set(index, value);
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.MasterAttrs)
}
void BaseAttrUserDataV1::add_masterattrs(::google::protobuf::int32 value) {
  masterattrs_.Add(value);
  // @@protoc_insertion_point(field_add:BaseAttrUserDataV1.MasterAttrs)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BaseAttrUserDataV1::masterattrs() const {
  // @@protoc_insertion_point(field_list:BaseAttrUserDataV1.MasterAttrs)
  return masterattrs_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BaseAttrUserDataV1::mutable_masterattrs() {
  // @@protoc_insertion_point(field_mutable_list:BaseAttrUserDataV1.MasterAttrs)
  return &masterattrs_;
}

// optional sint32 CurMilitary = 18 [default = -1];
bool BaseAttrUserDataV1::has_curmilitary() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
void BaseAttrUserDataV1::set_has_curmilitary() {
  _has_bits_[0] |= 0x04000000u;
}
void BaseAttrUserDataV1::clear_has_curmilitary() {
  _has_bits_[0] &= ~0x04000000u;
}
void BaseAttrUserDataV1::clear_curmilitary() {
  curmilitary_ = -1;
  clear_has_curmilitary();
}
::google::protobuf::int32 BaseAttrUserDataV1::curmilitary() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.CurMilitary)
  return curmilitary_;
}
void BaseAttrUserDataV1::set_curmilitary(::google::protobuf::int32 value) {
  set_has_curmilitary();
  curmilitary_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.CurMilitary)
}

// optional string UserName = 19;
bool BaseAttrUserDataV1::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrUserDataV1::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrUserDataV1::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrUserDataV1::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& BaseAttrUserDataV1::username() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.UserName)
  return username_.GetNoArena();
}
void BaseAttrUserDataV1::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.UserName)
}
#if LANG_CXX11
void BaseAttrUserDataV1::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BaseAttrUserDataV1.UserName)
}
#endif
void BaseAttrUserDataV1::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BaseAttrUserDataV1.UserName)
}
void BaseAttrUserDataV1::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BaseAttrUserDataV1.UserName)
}
::std::string* BaseAttrUserDataV1::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:BaseAttrUserDataV1.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BaseAttrUserDataV1::release_username() {
  // @@protoc_insertion_point(field_release:BaseAttrUserDataV1.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BaseAttrUserDataV1::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:BaseAttrUserDataV1.UserName)
}

// optional sint64 UserId = 20 [default = -1];
bool BaseAttrUserDataV1::has_userid() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
void BaseAttrUserDataV1::set_has_userid() {
  _has_bits_[0] |= 0x02000000u;
}
void BaseAttrUserDataV1::clear_has_userid() {
  _has_bits_[0] &= ~0x02000000u;
}
void BaseAttrUserDataV1::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 BaseAttrUserDataV1::userid() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.UserId)
  return userid_;
}
void BaseAttrUserDataV1::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.UserId)
}

// optional string PlatName = 21;
bool BaseAttrUserDataV1::has_platname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BaseAttrUserDataV1::set_has_platname() {
  _has_bits_[0] |= 0x00000002u;
}
void BaseAttrUserDataV1::clear_has_platname() {
  _has_bits_[0] &= ~0x00000002u;
}
void BaseAttrUserDataV1::clear_platname() {
  platname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platname();
}
const ::std::string& BaseAttrUserDataV1::platname() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.PlatName)
  return platname_.GetNoArena();
}
void BaseAttrUserDataV1::set_platname(const ::std::string& value) {
  set_has_platname();
  platname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.PlatName)
}
#if LANG_CXX11
void BaseAttrUserDataV1::set_platname(::std::string&& value) {
  set_has_platname();
  platname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BaseAttrUserDataV1.PlatName)
}
#endif
void BaseAttrUserDataV1::set_platname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_platname();
  platname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BaseAttrUserDataV1.PlatName)
}
void BaseAttrUserDataV1::set_platname(const char* value, size_t size) {
  set_has_platname();
  platname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BaseAttrUserDataV1.PlatName)
}
::std::string* BaseAttrUserDataV1::mutable_platname() {
  set_has_platname();
  // @@protoc_insertion_point(field_mutable:BaseAttrUserDataV1.PlatName)
  return platname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BaseAttrUserDataV1::release_platname() {
  // @@protoc_insertion_point(field_release:BaseAttrUserDataV1.PlatName)
  clear_has_platname();
  return platname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BaseAttrUserDataV1::set_allocated_platname(::std::string* platname) {
  if (platname != NULL) {
    set_has_platname();
  } else {
    clear_has_platname();
  }
  platname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platname);
  // @@protoc_insertion_point(field_set_allocated:BaseAttrUserDataV1.PlatName)
}

// optional sint64 AccountId = 22 [default = -1];
bool BaseAttrUserDataV1::has_accountid() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
void BaseAttrUserDataV1::set_has_accountid() {
  _has_bits_[0] |= 0x10000000u;
}
void BaseAttrUserDataV1::clear_has_accountid() {
  _has_bits_[0] &= ~0x10000000u;
}
void BaseAttrUserDataV1::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(-1);
  clear_has_accountid();
}
::google::protobuf::int64 BaseAttrUserDataV1::accountid() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.AccountId)
  return accountid_;
}
void BaseAttrUserDataV1::set_accountid(::google::protobuf::int64 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.AccountId)
}

// optional sint32 Level = 23 [default = -1];
bool BaseAttrUserDataV1::has_level() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
void BaseAttrUserDataV1::set_has_level() {
  _has_bits_[0] |= 0x08000000u;
}
void BaseAttrUserDataV1::clear_has_level() {
  _has_bits_[0] &= ~0x08000000u;
}
void BaseAttrUserDataV1::clear_level() {
  level_ = -1;
  clear_has_level();
}
::google::protobuf::int32 BaseAttrUserDataV1::level() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.Level)
  return level_;
}
void BaseAttrUserDataV1::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.Level)
}

// optional sint32 Rank = 24 [default = -1];
bool BaseAttrUserDataV1::has_rank() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
void BaseAttrUserDataV1::set_has_rank() {
  _has_bits_[0] |= 0x20000000u;
}
void BaseAttrUserDataV1::clear_has_rank() {
  _has_bits_[0] &= ~0x20000000u;
}
void BaseAttrUserDataV1::clear_rank() {
  rank_ = -1;
  clear_has_rank();
}
::google::protobuf::int32 BaseAttrUserDataV1::rank() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.Rank)
  return rank_;
}
void BaseAttrUserDataV1::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.Rank)
}

// optional sint32 FightPower = 25 [default = -1];
bool BaseAttrUserDataV1::has_fightpower() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
void BaseAttrUserDataV1::set_has_fightpower() {
  _has_bits_[0] |= 0x40000000u;
}
void BaseAttrUserDataV1::clear_has_fightpower() {
  _has_bits_[0] &= ~0x40000000u;
}
void BaseAttrUserDataV1::clear_fightpower() {
  fightpower_ = -1;
  clear_has_fightpower();
}
::google::protobuf::int32 BaseAttrUserDataV1::fightpower() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.FightPower)
  return fightpower_;
}
void BaseAttrUserDataV1::set_fightpower(::google::protobuf::int32 value) {
  set_has_fightpower();
  fightpower_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.FightPower)
}

// optional sint32 Sec = 26 [default = -1];
bool BaseAttrUserDataV1::has_sec() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
void BaseAttrUserDataV1::set_has_sec() {
  _has_bits_[0] |= 0x80000000u;
}
void BaseAttrUserDataV1::clear_has_sec() {
  _has_bits_[0] &= ~0x80000000u;
}
void BaseAttrUserDataV1::clear_sec() {
  sec_ = -1;
  clear_has_sec();
}
::google::protobuf::int32 BaseAttrUserDataV1::sec() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.Sec)
  return sec_;
}
void BaseAttrUserDataV1::set_sec(::google::protobuf::int32 value) {
  set_has_sec();
  sec_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.Sec)
}

// optional sint32 Military = 27 [default = -1];
bool BaseAttrUserDataV1::has_military() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
void BaseAttrUserDataV1::set_has_military() {
  _has_bits_[1] |= 0x00000001u;
}
void BaseAttrUserDataV1::clear_has_military() {
  _has_bits_[1] &= ~0x00000001u;
}
void BaseAttrUserDataV1::clear_military() {
  military_ = -1;
  clear_has_military();
}
::google::protobuf::int32 BaseAttrUserDataV1::military() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.Military)
  return military_;
}
void BaseAttrUserDataV1::set_military(::google::protobuf::int32 value) {
  set_has_military();
  military_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.Military)
}

// optional sint32 TeamId = 28 [default = -1];
bool BaseAttrUserDataV1::has_teamid() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
void BaseAttrUserDataV1::set_has_teamid() {
  _has_bits_[1] |= 0x00000002u;
}
void BaseAttrUserDataV1::clear_has_teamid() {
  _has_bits_[1] &= ~0x00000002u;
}
void BaseAttrUserDataV1::clear_teamid() {
  teamid_ = -1;
  clear_has_teamid();
}
::google::protobuf::int32 BaseAttrUserDataV1::teamid() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.TeamId)
  return teamid_;
}
void BaseAttrUserDataV1::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.TeamId)
}

// optional sint32 Prof = 29 [default = -1];
bool BaseAttrUserDataV1::has_prof() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
void BaseAttrUserDataV1::set_has_prof() {
  _has_bits_[1] |= 0x00000004u;
}
void BaseAttrUserDataV1::clear_has_prof() {
  _has_bits_[1] &= ~0x00000004u;
}
void BaseAttrUserDataV1::clear_prof() {
  prof_ = -1;
  clear_has_prof();
}
::google::protobuf::int32 BaseAttrUserDataV1::prof() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.Prof)
  return prof_;
}
void BaseAttrUserDataV1::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.Prof)
}

// optional sint32 DungeonRemainCount = 30 [default = -1];
bool BaseAttrUserDataV1::has_dungeonremaincount() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
void BaseAttrUserDataV1::set_has_dungeonremaincount() {
  _has_bits_[1] |= 0x00000008u;
}
void BaseAttrUserDataV1::clear_has_dungeonremaincount() {
  _has_bits_[1] &= ~0x00000008u;
}
void BaseAttrUserDataV1::clear_dungeonremaincount() {
  dungeonremaincount_ = -1;
  clear_has_dungeonremaincount();
}
::google::protobuf::int32 BaseAttrUserDataV1::dungeonremaincount() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.DungeonRemainCount)
  return dungeonremaincount_;
}
void BaseAttrUserDataV1::set_dungeonremaincount(::google::protobuf::int32 value) {
  set_has_dungeonremaincount();
  dungeonremaincount_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.DungeonRemainCount)
}

// optional sint32 MapId = 31 [default = -1];
bool BaseAttrUserDataV1::has_mapid() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
void BaseAttrUserDataV1::set_has_mapid() {
  _has_bits_[1] |= 0x00000010u;
}
void BaseAttrUserDataV1::clear_has_mapid() {
  _has_bits_[1] &= ~0x00000010u;
}
void BaseAttrUserDataV1::clear_mapid() {
  mapid_ = -1;
  clear_has_mapid();
}
::google::protobuf::int32 BaseAttrUserDataV1::mapid() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.MapId)
  return mapid_;
}
void BaseAttrUserDataV1::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.MapId)
}

// optional float PosX = 32 [default = -1];
bool BaseAttrUserDataV1::has_posx() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
void BaseAttrUserDataV1::set_has_posx() {
  _has_bits_[1] |= 0x00000020u;
}
void BaseAttrUserDataV1::clear_has_posx() {
  _has_bits_[1] &= ~0x00000020u;
}
void BaseAttrUserDataV1::clear_posx() {
  posx_ = -1;
  clear_has_posx();
}
float BaseAttrUserDataV1::posx() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.PosX)
  return posx_;
}
void BaseAttrUserDataV1::set_posx(float value) {
  set_has_posx();
  posx_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.PosX)
}

// optional float PosY = 33 [default = -1];
bool BaseAttrUserDataV1::has_posy() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
void BaseAttrUserDataV1::set_has_posy() {
  _has_bits_[1] |= 0x00000040u;
}
void BaseAttrUserDataV1::clear_has_posy() {
  _has_bits_[1] &= ~0x00000040u;
}
void BaseAttrUserDataV1::clear_posy() {
  posy_ = -1;
  clear_has_posy();
}
float BaseAttrUserDataV1::posy() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.PosY)
  return posy_;
}
void BaseAttrUserDataV1::set_posy(float value) {
  set_has_posy();
  posy_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.PosY)
}

// optional float PosZ = 34 [default = -1];
bool BaseAttrUserDataV1::has_posz() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
void BaseAttrUserDataV1::set_has_posz() {
  _has_bits_[1] |= 0x00000080u;
}
void BaseAttrUserDataV1::clear_has_posz() {
  _has_bits_[1] &= ~0x00000080u;
}
void BaseAttrUserDataV1::clear_posz() {
  posz_ = -1;
  clear_has_posz();
}
float BaseAttrUserDataV1::posz() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.PosZ)
  return posz_;
}
void BaseAttrUserDataV1::set_posz(float value) {
  set_has_posz();
  posz_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.PosZ)
}

// optional sint32 Ry = 35 [default = -1];
bool BaseAttrUserDataV1::has_ry() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
void BaseAttrUserDataV1::set_has_ry() {
  _has_bits_[1] |= 0x00000100u;
}
void BaseAttrUserDataV1::clear_has_ry() {
  _has_bits_[1] &= ~0x00000100u;
}
void BaseAttrUserDataV1::clear_ry() {
  ry_ = -1;
  clear_has_ry();
}
::google::protobuf::int32 BaseAttrUserDataV1::ry() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.Ry)
  return ry_;
}
void BaseAttrUserDataV1::set_ry(::google::protobuf::int32 value) {
  set_has_ry();
  ry_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.Ry)
}

// repeated .BaseAttrSkillCdInfoV1 SkillCdArr = 36;
int BaseAttrUserDataV1::skillcdarr_size() const {
  return skillcdarr_.size();
}
void BaseAttrUserDataV1::clear_skillcdarr() {
  skillcdarr_.Clear();
}
const ::BaseAttrSkillCdInfoV1& BaseAttrUserDataV1::skillcdarr(int index) const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.SkillCdArr)
  return skillcdarr_.Get(index);
}
::BaseAttrSkillCdInfoV1* BaseAttrUserDataV1::mutable_skillcdarr(int index) {
  // @@protoc_insertion_point(field_mutable:BaseAttrUserDataV1.SkillCdArr)
  return skillcdarr_.Mutable(index);
}
::BaseAttrSkillCdInfoV1* BaseAttrUserDataV1::add_skillcdarr() {
  // @@protoc_insertion_point(field_add:BaseAttrUserDataV1.SkillCdArr)
  return skillcdarr_.Add();
}
::google::protobuf::RepeatedPtrField< ::BaseAttrSkillCdInfoV1 >*
BaseAttrUserDataV1::mutable_skillcdarr() {
  // @@protoc_insertion_point(field_mutable_list:BaseAttrUserDataV1.SkillCdArr)
  return &skillcdarr_;
}
const ::google::protobuf::RepeatedPtrField< ::BaseAttrSkillCdInfoV1 >&
BaseAttrUserDataV1::skillcdarr() const {
  // @@protoc_insertion_point(field_list:BaseAttrUserDataV1.SkillCdArr)
  return skillcdarr_;
}

// repeated .BaseAttrBuffCdInfoV1 BuffCdArr = 37;
int BaseAttrUserDataV1::buffcdarr_size() const {
  return buffcdarr_.size();
}
void BaseAttrUserDataV1::clear_buffcdarr() {
  buffcdarr_.Clear();
}
const ::BaseAttrBuffCdInfoV1& BaseAttrUserDataV1::buffcdarr(int index) const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.BuffCdArr)
  return buffcdarr_.Get(index);
}
::BaseAttrBuffCdInfoV1* BaseAttrUserDataV1::mutable_buffcdarr(int index) {
  // @@protoc_insertion_point(field_mutable:BaseAttrUserDataV1.BuffCdArr)
  return buffcdarr_.Mutable(index);
}
::BaseAttrBuffCdInfoV1* BaseAttrUserDataV1::add_buffcdarr() {
  // @@protoc_insertion_point(field_add:BaseAttrUserDataV1.BuffCdArr)
  return buffcdarr_.Add();
}
::google::protobuf::RepeatedPtrField< ::BaseAttrBuffCdInfoV1 >*
BaseAttrUserDataV1::mutable_buffcdarr() {
  // @@protoc_insertion_point(field_mutable_list:BaseAttrUserDataV1.BuffCdArr)
  return &buffcdarr_;
}
const ::google::protobuf::RepeatedPtrField< ::BaseAttrBuffCdInfoV1 >&
BaseAttrUserDataV1::buffcdarr() const {
  // @@protoc_insertion_point(field_list:BaseAttrUserDataV1.BuffCdArr)
  return buffcdarr_;
}

// optional .BaseAttrSceneInfoV1 CurrentScene = 38;
bool BaseAttrUserDataV1::has_currentscene() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BaseAttrUserDataV1::set_has_currentscene() {
  _has_bits_[0] |= 0x00000004u;
}
void BaseAttrUserDataV1::clear_has_currentscene() {
  _has_bits_[0] &= ~0x00000004u;
}
void BaseAttrUserDataV1::clear_currentscene() {
  if (currentscene_ != NULL) currentscene_->::BaseAttrSceneInfoV1::Clear();
  clear_has_currentscene();
}
const ::BaseAttrSceneInfoV1& BaseAttrUserDataV1::currentscene() const {
  const ::BaseAttrSceneInfoV1* p = currentscene_;
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.CurrentScene)
  return p != NULL ? *p : *reinterpret_cast<const ::BaseAttrSceneInfoV1*>(
      &::_BaseAttrSceneInfoV1_default_instance_);
}
::BaseAttrSceneInfoV1* BaseAttrUserDataV1::mutable_currentscene() {
  set_has_currentscene();
  if (currentscene_ == NULL) {
    currentscene_ = new ::BaseAttrSceneInfoV1;
  }
  // @@protoc_insertion_point(field_mutable:BaseAttrUserDataV1.CurrentScene)
  return currentscene_;
}
::BaseAttrSceneInfoV1* BaseAttrUserDataV1::release_currentscene() {
  // @@protoc_insertion_point(field_release:BaseAttrUserDataV1.CurrentScene)
  clear_has_currentscene();
  ::BaseAttrSceneInfoV1* temp = currentscene_;
  currentscene_ = NULL;
  return temp;
}
void BaseAttrUserDataV1::set_allocated_currentscene(::BaseAttrSceneInfoV1* currentscene) {
  delete currentscene_;
  currentscene_ = currentscene;
  if (currentscene) {
    set_has_currentscene();
  } else {
    clear_has_currentscene();
  }
  // @@protoc_insertion_point(field_set_allocated:BaseAttrUserDataV1.CurrentScene)
}

// optional sint32 GuildId = 39 [default = -1];
bool BaseAttrUserDataV1::has_guildid() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
void BaseAttrUserDataV1::set_has_guildid() {
  _has_bits_[1] |= 0x00000200u;
}
void BaseAttrUserDataV1::clear_has_guildid() {
  _has_bits_[1] &= ~0x00000200u;
}
void BaseAttrUserDataV1::clear_guildid() {
  guildid_ = -1;
  clear_has_guildid();
}
::google::protobuf::int32 BaseAttrUserDataV1::guildid() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.GuildId)
  return guildid_;
}
void BaseAttrUserDataV1::set_guildid(::google::protobuf::int32 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.GuildId)
}

// optional sint32 ExitGuildTime = 40 [default = -1];
bool BaseAttrUserDataV1::has_exitguildtime() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
void BaseAttrUserDataV1::set_has_exitguildtime() {
  _has_bits_[1] |= 0x00000400u;
}
void BaseAttrUserDataV1::clear_has_exitguildtime() {
  _has_bits_[1] &= ~0x00000400u;
}
void BaseAttrUserDataV1::clear_exitguildtime() {
  exitguildtime_ = -1;
  clear_has_exitguildtime();
}
::google::protobuf::int32 BaseAttrUserDataV1::exitguildtime() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.ExitGuildTime)
  return exitguildtime_;
}
void BaseAttrUserDataV1::set_exitguildtime(::google::protobuf::int32 value) {
  set_has_exitguildtime();
  exitguildtime_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.ExitGuildTime)
}

// repeated sint32 ApplyGuildId = 41;
int BaseAttrUserDataV1::applyguildid_size() const {
  return applyguildid_.size();
}
void BaseAttrUserDataV1::clear_applyguildid() {
  applyguildid_.Clear();
}
::google::protobuf::int32 BaseAttrUserDataV1::applyguildid(int index) const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.ApplyGuildId)
  return applyguildid_.Get(index);
}
void BaseAttrUserDataV1::set_applyguildid(int index, ::google::protobuf::int32 value) {
  applyguildid_.Set(index, value);
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.ApplyGuildId)
}
void BaseAttrUserDataV1::add_applyguildid(::google::protobuf::int32 value) {
  applyguildid_.Add(value);
  // @@protoc_insertion_point(field_add:BaseAttrUserDataV1.ApplyGuildId)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BaseAttrUserDataV1::applyguildid() const {
  // @@protoc_insertion_point(field_list:BaseAttrUserDataV1.ApplyGuildId)
  return applyguildid_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BaseAttrUserDataV1::mutable_applyguildid() {
  // @@protoc_insertion_point(field_mutable_list:BaseAttrUserDataV1.ApplyGuildId)
  return &applyguildid_;
}

// optional sint32 CurGuildContribution = 42 [default = 0];
bool BaseAttrUserDataV1::has_curguildcontribution() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BaseAttrUserDataV1::set_has_curguildcontribution() {
  _has_bits_[0] |= 0x00000020u;
}
void BaseAttrUserDataV1::clear_has_curguildcontribution() {
  _has_bits_[0] &= ~0x00000020u;
}
void BaseAttrUserDataV1::clear_curguildcontribution() {
  curguildcontribution_ = 0;
  clear_has_curguildcontribution();
}
::google::protobuf::int32 BaseAttrUserDataV1::curguildcontribution() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.CurGuildContribution)
  return curguildcontribution_;
}
void BaseAttrUserDataV1::set_curguildcontribution(::google::protobuf::int32 value) {
  set_has_curguildcontribution();
  curguildcontribution_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.CurGuildContribution)
}

// optional sint32 MaxGuildContribution = 43 [default = 0];
bool BaseAttrUserDataV1::has_maxguildcontribution() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BaseAttrUserDataV1::set_has_maxguildcontribution() {
  _has_bits_[0] |= 0x00000040u;
}
void BaseAttrUserDataV1::clear_has_maxguildcontribution() {
  _has_bits_[0] &= ~0x00000040u;
}
void BaseAttrUserDataV1::clear_maxguildcontribution() {
  maxguildcontribution_ = 0;
  clear_has_maxguildcontribution();
}
::google::protobuf::int32 BaseAttrUserDataV1::maxguildcontribution() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.MaxGuildContribution)
  return maxguildcontribution_;
}
void BaseAttrUserDataV1::set_maxguildcontribution(::google::protobuf::int32 value) {
  set_has_maxguildcontribution();
  maxguildcontribution_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.MaxGuildContribution)
}

// optional sint32 BindMoney = 44 [default = 0];
bool BaseAttrUserDataV1::has_bindmoney() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void BaseAttrUserDataV1::set_has_bindmoney() {
  _has_bits_[0] |= 0x00000080u;
}
void BaseAttrUserDataV1::clear_has_bindmoney() {
  _has_bits_[0] &= ~0x00000080u;
}
void BaseAttrUserDataV1::clear_bindmoney() {
  bindmoney_ = 0;
  clear_has_bindmoney();
}
::google::protobuf::int32 BaseAttrUserDataV1::bindmoney() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.BindMoney)
  return bindmoney_;
}
void BaseAttrUserDataV1::set_bindmoney(::google::protobuf::int32 value) {
  set_has_bindmoney();
  bindmoney_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.BindMoney)
}

// optional sint32 Gem = 45 [default = 0];
bool BaseAttrUserDataV1::has_gem() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void BaseAttrUserDataV1::set_has_gem() {
  _has_bits_[0] |= 0x00000100u;
}
void BaseAttrUserDataV1::clear_has_gem() {
  _has_bits_[0] &= ~0x00000100u;
}
void BaseAttrUserDataV1::clear_gem() {
  gem_ = 0;
  clear_has_gem();
}
::google::protobuf::int32 BaseAttrUserDataV1::gem() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.Gem)
  return gem_;
}
void BaseAttrUserDataV1::set_gem(::google::protobuf::int32 value) {
  set_has_gem();
  gem_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.Gem)
}

// optional sint32 ServerTime = 47 [default = -1];
bool BaseAttrUserDataV1::has_servertime() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
void BaseAttrUserDataV1::set_has_servertime() {
  _has_bits_[1] |= 0x00000800u;
}
void BaseAttrUserDataV1::clear_has_servertime() {
  _has_bits_[1] &= ~0x00000800u;
}
void BaseAttrUserDataV1::clear_servertime() {
  servertime_ = -1;
  clear_has_servertime();
}
::google::protobuf::int32 BaseAttrUserDataV1::servertime() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.ServerTime)
  return servertime_;
}
void BaseAttrUserDataV1::set_servertime(::google::protobuf::int32 value) {
  set_has_servertime();
  servertime_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.ServerTime)
}

// repeated .KeyValue2IntInt NewbieGuide = 48;
int BaseAttrUserDataV1::newbieguide_size() const {
  return newbieguide_.size();
}
void BaseAttrUserDataV1::clear_newbieguide() {
  newbieguide_.Clear();
}
const ::KeyValue2IntInt& BaseAttrUserDataV1::newbieguide(int index) const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.NewbieGuide)
  return newbieguide_.Get(index);
}
::KeyValue2IntInt* BaseAttrUserDataV1::mutable_newbieguide(int index) {
  // @@protoc_insertion_point(field_mutable:BaseAttrUserDataV1.NewbieGuide)
  return newbieguide_.Mutable(index);
}
::KeyValue2IntInt* BaseAttrUserDataV1::add_newbieguide() {
  // @@protoc_insertion_point(field_add:BaseAttrUserDataV1.NewbieGuide)
  return newbieguide_.Add();
}
::google::protobuf::RepeatedPtrField< ::KeyValue2IntInt >*
BaseAttrUserDataV1::mutable_newbieguide() {
  // @@protoc_insertion_point(field_mutable_list:BaseAttrUserDataV1.NewbieGuide)
  return &newbieguide_;
}
const ::google::protobuf::RepeatedPtrField< ::KeyValue2IntInt >&
BaseAttrUserDataV1::newbieguide() const {
  // @@protoc_insertion_point(field_list:BaseAttrUserDataV1.NewbieGuide)
  return newbieguide_;
}

// optional sint32 ThiefRewardNum = 49 [default = 0];
bool BaseAttrUserDataV1::has_thiefrewardnum() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void BaseAttrUserDataV1::set_has_thiefrewardnum() {
  _has_bits_[0] |= 0x00000200u;
}
void BaseAttrUserDataV1::clear_has_thiefrewardnum() {
  _has_bits_[0] &= ~0x00000200u;
}
void BaseAttrUserDataV1::clear_thiefrewardnum() {
  thiefrewardnum_ = 0;
  clear_has_thiefrewardnum();
}
::google::protobuf::int32 BaseAttrUserDataV1::thiefrewardnum() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.ThiefRewardNum)
  return thiefrewardnum_;
}
void BaseAttrUserDataV1::set_thiefrewardnum(::google::protobuf::int32 value) {
  set_has_thiefrewardnum();
  thiefrewardnum_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.ThiefRewardNum)
}

// optional sint32 SubdueMonsterRewardNum = 50 [default = 0];
bool BaseAttrUserDataV1::has_subduemonsterrewardnum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void BaseAttrUserDataV1::set_has_subduemonsterrewardnum() {
  _has_bits_[0] |= 0x00000400u;
}
void BaseAttrUserDataV1::clear_has_subduemonsterrewardnum() {
  _has_bits_[0] &= ~0x00000400u;
}
void BaseAttrUserDataV1::clear_subduemonsterrewardnum() {
  subduemonsterrewardnum_ = 0;
  clear_has_subduemonsterrewardnum();
}
::google::protobuf::int32 BaseAttrUserDataV1::subduemonsterrewardnum() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.SubdueMonsterRewardNum)
  return subduemonsterrewardnum_;
}
void BaseAttrUserDataV1::set_subduemonsterrewardnum(::google::protobuf::int32 value) {
  set_has_subduemonsterrewardnum();
  subduemonsterrewardnum_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.SubdueMonsterRewardNum)
}

// optional sint32 WorldBossRemainTimes = 51 [default = 0];
bool BaseAttrUserDataV1::has_worldbossremaintimes() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void BaseAttrUserDataV1::set_has_worldbossremaintimes() {
  _has_bits_[0] |= 0x00000800u;
}
void BaseAttrUserDataV1::clear_has_worldbossremaintimes() {
  _has_bits_[0] &= ~0x00000800u;
}
void BaseAttrUserDataV1::clear_worldbossremaintimes() {
  worldbossremaintimes_ = 0;
  clear_has_worldbossremaintimes();
}
::google::protobuf::int32 BaseAttrUserDataV1::worldbossremaintimes() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.WorldBossRemainTimes)
  return worldbossremaintimes_;
}
void BaseAttrUserDataV1::set_worldbossremaintimes(::google::protobuf::int32 value) {
  set_has_worldbossremaintimes();
  worldbossremaintimes_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.WorldBossRemainTimes)
}

// optional sint32 WorldBossHurt = 52 [default = 0];
bool BaseAttrUserDataV1::has_worldbosshurt() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void BaseAttrUserDataV1::set_has_worldbosshurt() {
  _has_bits_[0] |= 0x00001000u;
}
void BaseAttrUserDataV1::clear_has_worldbosshurt() {
  _has_bits_[0] &= ~0x00001000u;
}
void BaseAttrUserDataV1::clear_worldbosshurt() {
  worldbosshurt_ = 0;
  clear_has_worldbosshurt();
}
::google::protobuf::int32 BaseAttrUserDataV1::worldbosshurt() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.WorldBossHurt)
  return worldbosshurt_;
}
void BaseAttrUserDataV1::set_worldbosshurt(::google::protobuf::int32 value) {
  set_has_worldbosshurt();
  worldbosshurt_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.WorldBossHurt)
}

// repeated .BaseAttrIconOpenInfoV1 FunctionOpenList = 54;
int BaseAttrUserDataV1::functionopenlist_size() const {
  return functionopenlist_.size();
}
void BaseAttrUserDataV1::clear_functionopenlist() {
  functionopenlist_.Clear();
}
const ::BaseAttrIconOpenInfoV1& BaseAttrUserDataV1::functionopenlist(int index) const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.FunctionOpenList)
  return functionopenlist_.Get(index);
}
::BaseAttrIconOpenInfoV1* BaseAttrUserDataV1::mutable_functionopenlist(int index) {
  // @@protoc_insertion_point(field_mutable:BaseAttrUserDataV1.FunctionOpenList)
  return functionopenlist_.Mutable(index);
}
::BaseAttrIconOpenInfoV1* BaseAttrUserDataV1::add_functionopenlist() {
  // @@protoc_insertion_point(field_add:BaseAttrUserDataV1.FunctionOpenList)
  return functionopenlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::BaseAttrIconOpenInfoV1 >*
BaseAttrUserDataV1::mutable_functionopenlist() {
  // @@protoc_insertion_point(field_mutable_list:BaseAttrUserDataV1.FunctionOpenList)
  return &functionopenlist_;
}
const ::google::protobuf::RepeatedPtrField< ::BaseAttrIconOpenInfoV1 >&
BaseAttrUserDataV1::functionopenlist() const {
  // @@protoc_insertion_point(field_list:BaseAttrUserDataV1.FunctionOpenList)
  return functionopenlist_;
}

// optional sint32 TotalEnergyValue = 55 [default = 0];
bool BaseAttrUserDataV1::has_totalenergyvalue() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void BaseAttrUserDataV1::set_has_totalenergyvalue() {
  _has_bits_[0] |= 0x00002000u;
}
void BaseAttrUserDataV1::clear_has_totalenergyvalue() {
  _has_bits_[0] &= ~0x00002000u;
}
void BaseAttrUserDataV1::clear_totalenergyvalue() {
  totalenergyvalue_ = 0;
  clear_has_totalenergyvalue();
}
::google::protobuf::int32 BaseAttrUserDataV1::totalenergyvalue() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.TotalEnergyValue)
  return totalenergyvalue_;
}
void BaseAttrUserDataV1::set_totalenergyvalue(::google::protobuf::int32 value) {
  set_has_totalenergyvalue();
  totalenergyvalue_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.TotalEnergyValue)
}

// repeated .BaseAttrEnergyInfoV1 EnergyArray = 57;
int BaseAttrUserDataV1::energyarray_size() const {
  return energyarray_.size();
}
void BaseAttrUserDataV1::clear_energyarray() {
  energyarray_.Clear();
}
const ::BaseAttrEnergyInfoV1& BaseAttrUserDataV1::energyarray(int index) const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.EnergyArray)
  return energyarray_.Get(index);
}
::BaseAttrEnergyInfoV1* BaseAttrUserDataV1::mutable_energyarray(int index) {
  // @@protoc_insertion_point(field_mutable:BaseAttrUserDataV1.EnergyArray)
  return energyarray_.Mutable(index);
}
::BaseAttrEnergyInfoV1* BaseAttrUserDataV1::add_energyarray() {
  // @@protoc_insertion_point(field_add:BaseAttrUserDataV1.EnergyArray)
  return energyarray_.Add();
}
::google::protobuf::RepeatedPtrField< ::BaseAttrEnergyInfoV1 >*
BaseAttrUserDataV1::mutable_energyarray() {
  // @@protoc_insertion_point(field_mutable_list:BaseAttrUserDataV1.EnergyArray)
  return &energyarray_;
}
const ::google::protobuf::RepeatedPtrField< ::BaseAttrEnergyInfoV1 >&
BaseAttrUserDataV1::energyarray() const {
  // @@protoc_insertion_point(field_list:BaseAttrUserDataV1.EnergyArray)
  return energyarray_;
}

// optional sint32 PKState = 58 [default = -1];
bool BaseAttrUserDataV1::has_pkstate() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
void BaseAttrUserDataV1::set_has_pkstate() {
  _has_bits_[1] |= 0x00001000u;
}
void BaseAttrUserDataV1::clear_has_pkstate() {
  _has_bits_[1] &= ~0x00001000u;
}
void BaseAttrUserDataV1::clear_pkstate() {
  pkstate_ = -1;
  clear_has_pkstate();
}
::google::protobuf::int32 BaseAttrUserDataV1::pkstate() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.PKState)
  return pkstate_;
}
void BaseAttrUserDataV1::set_pkstate(::google::protobuf::int32 value) {
  set_has_pkstate();
  pkstate_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.PKState)
}

// repeated .KeyValue2IntBool PKProtect = 59;
int BaseAttrUserDataV1::pkprotect_size() const {
  return pkprotect_.size();
}
void BaseAttrUserDataV1::clear_pkprotect() {
  pkprotect_.Clear();
}
const ::KeyValue2IntBool& BaseAttrUserDataV1::pkprotect(int index) const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.PKProtect)
  return pkprotect_.Get(index);
}
::KeyValue2IntBool* BaseAttrUserDataV1::mutable_pkprotect(int index) {
  // @@protoc_insertion_point(field_mutable:BaseAttrUserDataV1.PKProtect)
  return pkprotect_.Mutable(index);
}
::KeyValue2IntBool* BaseAttrUserDataV1::add_pkprotect() {
  // @@protoc_insertion_point(field_add:BaseAttrUserDataV1.PKProtect)
  return pkprotect_.Add();
}
::google::protobuf::RepeatedPtrField< ::KeyValue2IntBool >*
BaseAttrUserDataV1::mutable_pkprotect() {
  // @@protoc_insertion_point(field_mutable_list:BaseAttrUserDataV1.PKProtect)
  return &pkprotect_;
}
const ::google::protobuf::RepeatedPtrField< ::KeyValue2IntBool >&
BaseAttrUserDataV1::pkprotect() const {
  // @@protoc_insertion_point(field_list:BaseAttrUserDataV1.PKProtect)
  return pkprotect_;
}

// repeated .BaseAttrScienceInfoV1 GuildScienArray = 60;
int BaseAttrUserDataV1::guildscienarray_size() const {
  return guildscienarray_.size();
}
void BaseAttrUserDataV1::clear_guildscienarray() {
  guildscienarray_.Clear();
}
const ::BaseAttrScienceInfoV1& BaseAttrUserDataV1::guildscienarray(int index) const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.GuildScienArray)
  return guildscienarray_.Get(index);
}
::BaseAttrScienceInfoV1* BaseAttrUserDataV1::mutable_guildscienarray(int index) {
  // @@protoc_insertion_point(field_mutable:BaseAttrUserDataV1.GuildScienArray)
  return guildscienarray_.Mutable(index);
}
::BaseAttrScienceInfoV1* BaseAttrUserDataV1::add_guildscienarray() {
  // @@protoc_insertion_point(field_add:BaseAttrUserDataV1.GuildScienArray)
  return guildscienarray_.Add();
}
::google::protobuf::RepeatedPtrField< ::BaseAttrScienceInfoV1 >*
BaseAttrUserDataV1::mutable_guildscienarray() {
  // @@protoc_insertion_point(field_mutable_list:BaseAttrUserDataV1.GuildScienArray)
  return &guildscienarray_;
}
const ::google::protobuf::RepeatedPtrField< ::BaseAttrScienceInfoV1 >&
BaseAttrUserDataV1::guildscienarray() const {
  // @@protoc_insertion_point(field_list:BaseAttrUserDataV1.GuildScienArray)
  return guildscienarray_;
}

// optional sint32 ScienceTotalMoney = 61 [default = 0];
bool BaseAttrUserDataV1::has_sciencetotalmoney() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void BaseAttrUserDataV1::set_has_sciencetotalmoney() {
  _has_bits_[0] |= 0x00004000u;
}
void BaseAttrUserDataV1::clear_has_sciencetotalmoney() {
  _has_bits_[0] &= ~0x00004000u;
}
void BaseAttrUserDataV1::clear_sciencetotalmoney() {
  sciencetotalmoney_ = 0;
  clear_has_sciencetotalmoney();
}
::google::protobuf::int32 BaseAttrUserDataV1::sciencetotalmoney() const {
  // @@protoc_insertion_point(field_get:BaseAttrUserDataV1.ScienceTotalMoney)
  return sciencetotalmoney_;
}
void BaseAttrUserDataV1::set_sciencetotalmoney(::google::protobuf::int32 value) {
  set_has_sciencetotalmoney();
  sciencetotalmoney_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrUserDataV1.ScienceTotalMoney)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrSkillCdInfoV1::kSkillIdFieldNumber;
const int BaseAttrSkillCdInfoV1::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrSkillCdInfoV1::BaseAttrSkillCdInfoV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrSkillCdInfoV1)
}
BaseAttrSkillCdInfoV1::BaseAttrSkillCdInfoV1(const BaseAttrSkillCdInfoV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&skillid_, &from.skillid_,
    static_cast<size_t>(reinterpret_cast<char*>(&endtime_) -
    reinterpret_cast<char*>(&skillid_)) + sizeof(endtime_));
  // @@protoc_insertion_point(copy_constructor:BaseAttrSkillCdInfoV1)
}

void BaseAttrSkillCdInfoV1::SharedCtor() {
  _cached_size_ = 0;
  skillid_ = -1;
  endtime_ = -1;
}

BaseAttrSkillCdInfoV1::~BaseAttrSkillCdInfoV1() {
  // @@protoc_insertion_point(destructor:BaseAttrSkillCdInfoV1)
  SharedDtor();
}

void BaseAttrSkillCdInfoV1::SharedDtor() {
}

void BaseAttrSkillCdInfoV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrSkillCdInfoV1::descriptor() {
  protobuf_BaseAttrV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrSkillCdInfoV1& BaseAttrSkillCdInfoV1::default_instance() {
  protobuf_BaseAttrV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrSkillCdInfoV1* BaseAttrSkillCdInfoV1::New(::google::protobuf::Arena* arena) const {
  BaseAttrSkillCdInfoV1* n = new BaseAttrSkillCdInfoV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrSkillCdInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrSkillCdInfoV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    skillid_ = -1;
    endtime_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrSkillCdInfoV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrSkillCdInfoV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 SkillId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_skillid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 EndTime = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_endtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &endtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrSkillCdInfoV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrSkillCdInfoV1)
  return false;
#undef DO_
}

void BaseAttrSkillCdInfoV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrSkillCdInfoV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 SkillId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->skillid(), output);
  }

  // optional sint32 EndTime = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->endtime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrSkillCdInfoV1)
}

::google::protobuf::uint8* BaseAttrSkillCdInfoV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrSkillCdInfoV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 SkillId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->skillid(), target);
  }

  // optional sint32 EndTime = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->endtime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrSkillCdInfoV1)
  return target;
}

size_t BaseAttrSkillCdInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrSkillCdInfoV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 SkillId = 1 [default = -1];
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->skillid());
    }

    // optional sint32 EndTime = 2 [default = -1];
    if (has_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->endtime());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrSkillCdInfoV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrSkillCdInfoV1)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrSkillCdInfoV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrSkillCdInfoV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrSkillCdInfoV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrSkillCdInfoV1)
    MergeFrom(*source);
  }
}

void BaseAttrSkillCdInfoV1::MergeFrom(const BaseAttrSkillCdInfoV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrSkillCdInfoV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      skillid_ = from.skillid_;
    }
    if (cached_has_bits & 0x00000002u) {
      endtime_ = from.endtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BaseAttrSkillCdInfoV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrSkillCdInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrSkillCdInfoV1::CopyFrom(const BaseAttrSkillCdInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrSkillCdInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrSkillCdInfoV1::IsInitialized() const {
  return true;
}

void BaseAttrSkillCdInfoV1::Swap(BaseAttrSkillCdInfoV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrSkillCdInfoV1::InternalSwap(BaseAttrSkillCdInfoV1* other) {
  using std::swap;
  swap(skillid_, other->skillid_);
  swap(endtime_, other->endtime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrSkillCdInfoV1::GetMetadata() const {
  protobuf_BaseAttrV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrSkillCdInfoV1

// optional sint32 SkillId = 1 [default = -1];
bool BaseAttrSkillCdInfoV1::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrSkillCdInfoV1::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrSkillCdInfoV1::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrSkillCdInfoV1::clear_skillid() {
  skillid_ = -1;
  clear_has_skillid();
}
::google::protobuf::int32 BaseAttrSkillCdInfoV1::skillid() const {
  // @@protoc_insertion_point(field_get:BaseAttrSkillCdInfoV1.SkillId)
  return skillid_;
}
void BaseAttrSkillCdInfoV1::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrSkillCdInfoV1.SkillId)
}

// optional sint32 EndTime = 2 [default = -1];
bool BaseAttrSkillCdInfoV1::has_endtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BaseAttrSkillCdInfoV1::set_has_endtime() {
  _has_bits_[0] |= 0x00000002u;
}
void BaseAttrSkillCdInfoV1::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000002u;
}
void BaseAttrSkillCdInfoV1::clear_endtime() {
  endtime_ = -1;
  clear_has_endtime();
}
::google::protobuf::int32 BaseAttrSkillCdInfoV1::endtime() const {
  // @@protoc_insertion_point(field_get:BaseAttrSkillCdInfoV1.EndTime)
  return endtime_;
}
void BaseAttrSkillCdInfoV1::set_endtime(::google::protobuf::int32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrSkillCdInfoV1.EndTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrBuffCdInfoV1::kBuffIdFieldNumber;
const int BaseAttrBuffCdInfoV1::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrBuffCdInfoV1::BaseAttrBuffCdInfoV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrBuffCdInfoV1)
}
BaseAttrBuffCdInfoV1::BaseAttrBuffCdInfoV1(const BaseAttrBuffCdInfoV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&buffid_, &from.buffid_,
    static_cast<size_t>(reinterpret_cast<char*>(&endtime_) -
    reinterpret_cast<char*>(&buffid_)) + sizeof(endtime_));
  // @@protoc_insertion_point(copy_constructor:BaseAttrBuffCdInfoV1)
}

void BaseAttrBuffCdInfoV1::SharedCtor() {
  _cached_size_ = 0;
  buffid_ = -1;
  endtime_ = -1;
}

BaseAttrBuffCdInfoV1::~BaseAttrBuffCdInfoV1() {
  // @@protoc_insertion_point(destructor:BaseAttrBuffCdInfoV1)
  SharedDtor();
}

void BaseAttrBuffCdInfoV1::SharedDtor() {
}

void BaseAttrBuffCdInfoV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrBuffCdInfoV1::descriptor() {
  protobuf_BaseAttrV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrBuffCdInfoV1& BaseAttrBuffCdInfoV1::default_instance() {
  protobuf_BaseAttrV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrBuffCdInfoV1* BaseAttrBuffCdInfoV1::New(::google::protobuf::Arena* arena) const {
  BaseAttrBuffCdInfoV1* n = new BaseAttrBuffCdInfoV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrBuffCdInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrBuffCdInfoV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    buffid_ = -1;
    endtime_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrBuffCdInfoV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrBuffCdInfoV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 BuffId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_buffid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &buffid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 EndTime = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_endtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &endtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrBuffCdInfoV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrBuffCdInfoV1)
  return false;
#undef DO_
}

void BaseAttrBuffCdInfoV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrBuffCdInfoV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 BuffId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->buffid(), output);
  }

  // optional sint32 EndTime = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->endtime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrBuffCdInfoV1)
}

::google::protobuf::uint8* BaseAttrBuffCdInfoV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrBuffCdInfoV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 BuffId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->buffid(), target);
  }

  // optional sint32 EndTime = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->endtime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrBuffCdInfoV1)
  return target;
}

size_t BaseAttrBuffCdInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrBuffCdInfoV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 BuffId = 1 [default = -1];
    if (has_buffid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->buffid());
    }

    // optional sint32 EndTime = 2 [default = -1];
    if (has_endtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->endtime());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrBuffCdInfoV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrBuffCdInfoV1)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrBuffCdInfoV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrBuffCdInfoV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrBuffCdInfoV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrBuffCdInfoV1)
    MergeFrom(*source);
  }
}

void BaseAttrBuffCdInfoV1::MergeFrom(const BaseAttrBuffCdInfoV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrBuffCdInfoV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      buffid_ = from.buffid_;
    }
    if (cached_has_bits & 0x00000002u) {
      endtime_ = from.endtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BaseAttrBuffCdInfoV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrBuffCdInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrBuffCdInfoV1::CopyFrom(const BaseAttrBuffCdInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrBuffCdInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrBuffCdInfoV1::IsInitialized() const {
  return true;
}

void BaseAttrBuffCdInfoV1::Swap(BaseAttrBuffCdInfoV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrBuffCdInfoV1::InternalSwap(BaseAttrBuffCdInfoV1* other) {
  using std::swap;
  swap(buffid_, other->buffid_);
  swap(endtime_, other->endtime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrBuffCdInfoV1::GetMetadata() const {
  protobuf_BaseAttrV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrBuffCdInfoV1

// optional sint32 BuffId = 1 [default = -1];
bool BaseAttrBuffCdInfoV1::has_buffid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrBuffCdInfoV1::set_has_buffid() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrBuffCdInfoV1::clear_has_buffid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrBuffCdInfoV1::clear_buffid() {
  buffid_ = -1;
  clear_has_buffid();
}
::google::protobuf::int32 BaseAttrBuffCdInfoV1::buffid() const {
  // @@protoc_insertion_point(field_get:BaseAttrBuffCdInfoV1.BuffId)
  return buffid_;
}
void BaseAttrBuffCdInfoV1::set_buffid(::google::protobuf::int32 value) {
  set_has_buffid();
  buffid_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrBuffCdInfoV1.BuffId)
}

// optional sint32 EndTime = 2 [default = -1];
bool BaseAttrBuffCdInfoV1::has_endtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BaseAttrBuffCdInfoV1::set_has_endtime() {
  _has_bits_[0] |= 0x00000002u;
}
void BaseAttrBuffCdInfoV1::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000002u;
}
void BaseAttrBuffCdInfoV1::clear_endtime() {
  endtime_ = -1;
  clear_has_endtime();
}
::google::protobuf::int32 BaseAttrBuffCdInfoV1::endtime() const {
  // @@protoc_insertion_point(field_get:BaseAttrBuffCdInfoV1.EndTime)
  return endtime_;
}
void BaseAttrBuffCdInfoV1::set_endtime(::google::protobuf::int32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrBuffCdInfoV1.EndTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrSceneInfoV1::kRelateUserIdFieldNumber;
const int BaseAttrSceneInfoV1::kReviveNeedMoneyFieldNumber;
const int BaseAttrSceneInfoV1::kReviveNeedMoneyTypeFieldNumber;
const int BaseAttrSceneInfoV1::kDungeonKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrSceneInfoV1::BaseAttrSceneInfoV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrSceneInfoV1)
}
BaseAttrSceneInfoV1::BaseAttrSceneInfoV1(const BaseAttrSceneInfoV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dungeonkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dungeonkey()) {
    dungeonkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dungeonkey_);
  }
  ::memcpy(&reviveneedmoneytype_, &from.reviveneedmoneytype_,
    static_cast<size_t>(reinterpret_cast<char*>(&relateuserid_) -
    reinterpret_cast<char*>(&reviveneedmoneytype_)) + sizeof(relateuserid_));
  // @@protoc_insertion_point(copy_constructor:BaseAttrSceneInfoV1)
}

void BaseAttrSceneInfoV1::SharedCtor() {
  _cached_size_ = 0;
  dungeonkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reviveneedmoneytype_ = 0;
  reviveneedmoney_ = -1;
  relateuserid_ = GOOGLE_LONGLONG(-1);
}

BaseAttrSceneInfoV1::~BaseAttrSceneInfoV1() {
  // @@protoc_insertion_point(destructor:BaseAttrSceneInfoV1)
  SharedDtor();
}

void BaseAttrSceneInfoV1::SharedDtor() {
  dungeonkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BaseAttrSceneInfoV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrSceneInfoV1::descriptor() {
  protobuf_BaseAttrV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrSceneInfoV1& BaseAttrSceneInfoV1::default_instance() {
  protobuf_BaseAttrV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrSceneInfoV1* BaseAttrSceneInfoV1::New(::google::protobuf::Arena* arena) const {
  BaseAttrSceneInfoV1* n = new BaseAttrSceneInfoV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrSceneInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrSceneInfoV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_dungeonkey()) {
    GOOGLE_DCHECK(!dungeonkey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*dungeonkey_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 14u) {
    reviveneedmoneytype_ = 0;
    reviveneedmoney_ = -1;
    relateuserid_ = GOOGLE_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrSceneInfoV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrSceneInfoV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 RelateUserId = 9 [default = -1];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_relateuserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &relateuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ReviveNeedMoney = 10 [default = -1];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_reviveneedmoney();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &reviveneedmoney_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ReviveNeedMoneyType = 12 [default = 0];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_reviveneedmoneytype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &reviveneedmoneytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string DungeonKey = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dungeonkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dungeonkey().data(), static_cast<int>(this->dungeonkey().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BaseAttrSceneInfoV1.DungeonKey");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrSceneInfoV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrSceneInfoV1)
  return false;
#undef DO_
}

void BaseAttrSceneInfoV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrSceneInfoV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 RelateUserId = 9 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(9, this->relateuserid(), output);
  }

  // optional sint32 ReviveNeedMoney = 10 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(10, this->reviveneedmoney(), output);
  }

  // optional sint32 ReviveNeedMoneyType = 12 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(12, this->reviveneedmoneytype(), output);
  }

  // optional string DungeonKey = 15;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dungeonkey().data(), static_cast<int>(this->dungeonkey().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseAttrSceneInfoV1.DungeonKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->dungeonkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrSceneInfoV1)
}

::google::protobuf::uint8* BaseAttrSceneInfoV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrSceneInfoV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 RelateUserId = 9 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(9, this->relateuserid(), target);
  }

  // optional sint32 ReviveNeedMoney = 10 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(10, this->reviveneedmoney(), target);
  }

  // optional sint32 ReviveNeedMoneyType = 12 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(12, this->reviveneedmoneytype(), target);
  }

  // optional string DungeonKey = 15;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dungeonkey().data(), static_cast<int>(this->dungeonkey().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BaseAttrSceneInfoV1.DungeonKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->dungeonkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrSceneInfoV1)
  return target;
}

size_t BaseAttrSceneInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrSceneInfoV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string DungeonKey = 15;
    if (has_dungeonkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dungeonkey());
    }

    // optional sint32 ReviveNeedMoneyType = 12 [default = 0];
    if (has_reviveneedmoneytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->reviveneedmoneytype());
    }

    // optional sint32 ReviveNeedMoney = 10 [default = -1];
    if (has_reviveneedmoney()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->reviveneedmoney());
    }

    // optional sint64 RelateUserId = 9 [default = -1];
    if (has_relateuserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->relateuserid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrSceneInfoV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrSceneInfoV1)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrSceneInfoV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrSceneInfoV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrSceneInfoV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrSceneInfoV1)
    MergeFrom(*source);
  }
}

void BaseAttrSceneInfoV1::MergeFrom(const BaseAttrSceneInfoV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrSceneInfoV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_dungeonkey();
      dungeonkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dungeonkey_);
    }
    if (cached_has_bits & 0x00000002u) {
      reviveneedmoneytype_ = from.reviveneedmoneytype_;
    }
    if (cached_has_bits & 0x00000004u) {
      reviveneedmoney_ = from.reviveneedmoney_;
    }
    if (cached_has_bits & 0x00000008u) {
      relateuserid_ = from.relateuserid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BaseAttrSceneInfoV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrSceneInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrSceneInfoV1::CopyFrom(const BaseAttrSceneInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrSceneInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrSceneInfoV1::IsInitialized() const {
  return true;
}

void BaseAttrSceneInfoV1::Swap(BaseAttrSceneInfoV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrSceneInfoV1::InternalSwap(BaseAttrSceneInfoV1* other) {
  using std::swap;
  dungeonkey_.Swap(&other->dungeonkey_);
  swap(reviveneedmoneytype_, other->reviveneedmoneytype_);
  swap(reviveneedmoney_, other->reviveneedmoney_);
  swap(relateuserid_, other->relateuserid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrSceneInfoV1::GetMetadata() const {
  protobuf_BaseAttrV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrSceneInfoV1

// optional sint64 RelateUserId = 9 [default = -1];
bool BaseAttrSceneInfoV1::has_relateuserid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BaseAttrSceneInfoV1::set_has_relateuserid() {
  _has_bits_[0] |= 0x00000008u;
}
void BaseAttrSceneInfoV1::clear_has_relateuserid() {
  _has_bits_[0] &= ~0x00000008u;
}
void BaseAttrSceneInfoV1::clear_relateuserid() {
  relateuserid_ = GOOGLE_LONGLONG(-1);
  clear_has_relateuserid();
}
::google::protobuf::int64 BaseAttrSceneInfoV1::relateuserid() const {
  // @@protoc_insertion_point(field_get:BaseAttrSceneInfoV1.RelateUserId)
  return relateuserid_;
}
void BaseAttrSceneInfoV1::set_relateuserid(::google::protobuf::int64 value) {
  set_has_relateuserid();
  relateuserid_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrSceneInfoV1.RelateUserId)
}

// optional sint32 ReviveNeedMoney = 10 [default = -1];
bool BaseAttrSceneInfoV1::has_reviveneedmoney() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BaseAttrSceneInfoV1::set_has_reviveneedmoney() {
  _has_bits_[0] |= 0x00000004u;
}
void BaseAttrSceneInfoV1::clear_has_reviveneedmoney() {
  _has_bits_[0] &= ~0x00000004u;
}
void BaseAttrSceneInfoV1::clear_reviveneedmoney() {
  reviveneedmoney_ = -1;
  clear_has_reviveneedmoney();
}
::google::protobuf::int32 BaseAttrSceneInfoV1::reviveneedmoney() const {
  // @@protoc_insertion_point(field_get:BaseAttrSceneInfoV1.ReviveNeedMoney)
  return reviveneedmoney_;
}
void BaseAttrSceneInfoV1::set_reviveneedmoney(::google::protobuf::int32 value) {
  set_has_reviveneedmoney();
  reviveneedmoney_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrSceneInfoV1.ReviveNeedMoney)
}

// optional sint32 ReviveNeedMoneyType = 12 [default = 0];
bool BaseAttrSceneInfoV1::has_reviveneedmoneytype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BaseAttrSceneInfoV1::set_has_reviveneedmoneytype() {
  _has_bits_[0] |= 0x00000002u;
}
void BaseAttrSceneInfoV1::clear_has_reviveneedmoneytype() {
  _has_bits_[0] &= ~0x00000002u;
}
void BaseAttrSceneInfoV1::clear_reviveneedmoneytype() {
  reviveneedmoneytype_ = 0;
  clear_has_reviveneedmoneytype();
}
::google::protobuf::int32 BaseAttrSceneInfoV1::reviveneedmoneytype() const {
  // @@protoc_insertion_point(field_get:BaseAttrSceneInfoV1.ReviveNeedMoneyType)
  return reviveneedmoneytype_;
}
void BaseAttrSceneInfoV1::set_reviveneedmoneytype(::google::protobuf::int32 value) {
  set_has_reviveneedmoneytype();
  reviveneedmoneytype_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrSceneInfoV1.ReviveNeedMoneyType)
}

// optional string DungeonKey = 15;
bool BaseAttrSceneInfoV1::has_dungeonkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrSceneInfoV1::set_has_dungeonkey() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrSceneInfoV1::clear_has_dungeonkey() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrSceneInfoV1::clear_dungeonkey() {
  dungeonkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dungeonkey();
}
const ::std::string& BaseAttrSceneInfoV1::dungeonkey() const {
  // @@protoc_insertion_point(field_get:BaseAttrSceneInfoV1.DungeonKey)
  return dungeonkey_.GetNoArena();
}
void BaseAttrSceneInfoV1::set_dungeonkey(const ::std::string& value) {
  set_has_dungeonkey();
  dungeonkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BaseAttrSceneInfoV1.DungeonKey)
}
#if LANG_CXX11
void BaseAttrSceneInfoV1::set_dungeonkey(::std::string&& value) {
  set_has_dungeonkey();
  dungeonkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BaseAttrSceneInfoV1.DungeonKey)
}
#endif
void BaseAttrSceneInfoV1::set_dungeonkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_dungeonkey();
  dungeonkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BaseAttrSceneInfoV1.DungeonKey)
}
void BaseAttrSceneInfoV1::set_dungeonkey(const char* value, size_t size) {
  set_has_dungeonkey();
  dungeonkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BaseAttrSceneInfoV1.DungeonKey)
}
::std::string* BaseAttrSceneInfoV1::mutable_dungeonkey() {
  set_has_dungeonkey();
  // @@protoc_insertion_point(field_mutable:BaseAttrSceneInfoV1.DungeonKey)
  return dungeonkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BaseAttrSceneInfoV1::release_dungeonkey() {
  // @@protoc_insertion_point(field_release:BaseAttrSceneInfoV1.DungeonKey)
  clear_has_dungeonkey();
  return dungeonkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BaseAttrSceneInfoV1::set_allocated_dungeonkey(::std::string* dungeonkey) {
  if (dungeonkey != NULL) {
    set_has_dungeonkey();
  } else {
    clear_has_dungeonkey();
  }
  dungeonkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dungeonkey);
  // @@protoc_insertion_point(field_set_allocated:BaseAttrSceneInfoV1.DungeonKey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrIconOpenInfoV1::kIconIdFieldNumber;
const int BaseAttrIconOpenInfoV1::kIsOpenFieldNumber;
const int BaseAttrIconOpenInfoV1::kIsShowFieldNumber;
const int BaseAttrIconOpenInfoV1::kIsNewFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrIconOpenInfoV1::BaseAttrIconOpenInfoV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrIconOpenInfoV1)
}
BaseAttrIconOpenInfoV1::BaseAttrIconOpenInfoV1(const BaseAttrIconOpenInfoV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isopen_, &from.isopen_,
    static_cast<size_t>(reinterpret_cast<char*>(&iconid_) -
    reinterpret_cast<char*>(&isopen_)) + sizeof(iconid_));
  // @@protoc_insertion_point(copy_constructor:BaseAttrIconOpenInfoV1)
}

void BaseAttrIconOpenInfoV1::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&isopen_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isnew_) -
      reinterpret_cast<char*>(&isopen_)) + sizeof(isnew_));
  iconid_ = -1;
}

BaseAttrIconOpenInfoV1::~BaseAttrIconOpenInfoV1() {
  // @@protoc_insertion_point(destructor:BaseAttrIconOpenInfoV1)
  SharedDtor();
}

void BaseAttrIconOpenInfoV1::SharedDtor() {
}

void BaseAttrIconOpenInfoV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrIconOpenInfoV1::descriptor() {
  protobuf_BaseAttrV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrIconOpenInfoV1& BaseAttrIconOpenInfoV1::default_instance() {
  protobuf_BaseAttrV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrIconOpenInfoV1* BaseAttrIconOpenInfoV1::New(::google::protobuf::Arena* arena) const {
  BaseAttrIconOpenInfoV1* n = new BaseAttrIconOpenInfoV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrIconOpenInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrIconOpenInfoV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&isopen_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isnew_) -
        reinterpret_cast<char*>(&isopen_)) + sizeof(isnew_));
    iconid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrIconOpenInfoV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrIconOpenInfoV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 IconId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_iconid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &iconid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsOpen = 6 [default = false];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_isopen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isopen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsShow = 7 [default = false];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_isshow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isshow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsNew = 8 [default = false];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_isnew();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isnew_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrIconOpenInfoV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrIconOpenInfoV1)
  return false;
#undef DO_
}

void BaseAttrIconOpenInfoV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrIconOpenInfoV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 IconId = 1 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->iconid(), output);
  }

  // optional bool IsOpen = 6 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->isopen(), output);
  }

  // optional bool IsShow = 7 [default = false];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isshow(), output);
  }

  // optional bool IsNew = 8 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->isnew(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrIconOpenInfoV1)
}

::google::protobuf::uint8* BaseAttrIconOpenInfoV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrIconOpenInfoV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 IconId = 1 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->iconid(), target);
  }

  // optional bool IsOpen = 6 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->isopen(), target);
  }

  // optional bool IsShow = 7 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isshow(), target);
  }

  // optional bool IsNew = 8 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->isnew(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrIconOpenInfoV1)
  return target;
}

size_t BaseAttrIconOpenInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrIconOpenInfoV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bool IsOpen = 6 [default = false];
    if (has_isopen()) {
      total_size += 1 + 1;
    }

    // optional bool IsShow = 7 [default = false];
    if (has_isshow()) {
      total_size += 1 + 1;
    }

    // optional bool IsNew = 8 [default = false];
    if (has_isnew()) {
      total_size += 1 + 1;
    }

    // optional sint32 IconId = 1 [default = -1];
    if (has_iconid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->iconid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrIconOpenInfoV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrIconOpenInfoV1)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrIconOpenInfoV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrIconOpenInfoV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrIconOpenInfoV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrIconOpenInfoV1)
    MergeFrom(*source);
  }
}

void BaseAttrIconOpenInfoV1::MergeFrom(const BaseAttrIconOpenInfoV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrIconOpenInfoV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      isopen_ = from.isopen_;
    }
    if (cached_has_bits & 0x00000002u) {
      isshow_ = from.isshow_;
    }
    if (cached_has_bits & 0x00000004u) {
      isnew_ = from.isnew_;
    }
    if (cached_has_bits & 0x00000008u) {
      iconid_ = from.iconid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BaseAttrIconOpenInfoV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrIconOpenInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrIconOpenInfoV1::CopyFrom(const BaseAttrIconOpenInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrIconOpenInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrIconOpenInfoV1::IsInitialized() const {
  return true;
}

void BaseAttrIconOpenInfoV1::Swap(BaseAttrIconOpenInfoV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrIconOpenInfoV1::InternalSwap(BaseAttrIconOpenInfoV1* other) {
  using std::swap;
  swap(isopen_, other->isopen_);
  swap(isshow_, other->isshow_);
  swap(isnew_, other->isnew_);
  swap(iconid_, other->iconid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrIconOpenInfoV1::GetMetadata() const {
  protobuf_BaseAttrV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrIconOpenInfoV1

// optional sint32 IconId = 1 [default = -1];
bool BaseAttrIconOpenInfoV1::has_iconid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BaseAttrIconOpenInfoV1::set_has_iconid() {
  _has_bits_[0] |= 0x00000008u;
}
void BaseAttrIconOpenInfoV1::clear_has_iconid() {
  _has_bits_[0] &= ~0x00000008u;
}
void BaseAttrIconOpenInfoV1::clear_iconid() {
  iconid_ = -1;
  clear_has_iconid();
}
::google::protobuf::int32 BaseAttrIconOpenInfoV1::iconid() const {
  // @@protoc_insertion_point(field_get:BaseAttrIconOpenInfoV1.IconId)
  return iconid_;
}
void BaseAttrIconOpenInfoV1::set_iconid(::google::protobuf::int32 value) {
  set_has_iconid();
  iconid_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrIconOpenInfoV1.IconId)
}

// optional bool IsOpen = 6 [default = false];
bool BaseAttrIconOpenInfoV1::has_isopen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrIconOpenInfoV1::set_has_isopen() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrIconOpenInfoV1::clear_has_isopen() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrIconOpenInfoV1::clear_isopen() {
  isopen_ = false;
  clear_has_isopen();
}
bool BaseAttrIconOpenInfoV1::isopen() const {
  // @@protoc_insertion_point(field_get:BaseAttrIconOpenInfoV1.IsOpen)
  return isopen_;
}
void BaseAttrIconOpenInfoV1::set_isopen(bool value) {
  set_has_isopen();
  isopen_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrIconOpenInfoV1.IsOpen)
}

// optional bool IsShow = 7 [default = false];
bool BaseAttrIconOpenInfoV1::has_isshow() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BaseAttrIconOpenInfoV1::set_has_isshow() {
  _has_bits_[0] |= 0x00000002u;
}
void BaseAttrIconOpenInfoV1::clear_has_isshow() {
  _has_bits_[0] &= ~0x00000002u;
}
void BaseAttrIconOpenInfoV1::clear_isshow() {
  isshow_ = false;
  clear_has_isshow();
}
bool BaseAttrIconOpenInfoV1::isshow() const {
  // @@protoc_insertion_point(field_get:BaseAttrIconOpenInfoV1.IsShow)
  return isshow_;
}
void BaseAttrIconOpenInfoV1::set_isshow(bool value) {
  set_has_isshow();
  isshow_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrIconOpenInfoV1.IsShow)
}

// optional bool IsNew = 8 [default = false];
bool BaseAttrIconOpenInfoV1::has_isnew() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BaseAttrIconOpenInfoV1::set_has_isnew() {
  _has_bits_[0] |= 0x00000004u;
}
void BaseAttrIconOpenInfoV1::clear_has_isnew() {
  _has_bits_[0] &= ~0x00000004u;
}
void BaseAttrIconOpenInfoV1::clear_isnew() {
  isnew_ = false;
  clear_has_isnew();
}
bool BaseAttrIconOpenInfoV1::isnew() const {
  // @@protoc_insertion_point(field_get:BaseAttrIconOpenInfoV1.IsNew)
  return isnew_;
}
void BaseAttrIconOpenInfoV1::set_isnew(bool value) {
  set_has_isnew();
  isnew_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrIconOpenInfoV1.IsNew)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrEnergyInfoV1::kEnergyIdFieldNumber;
const int BaseAttrEnergyInfoV1::kEnergyValueFieldNumber;
const int BaseAttrEnergyInfoV1::kReceivedEnergyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrEnergyInfoV1::BaseAttrEnergyInfoV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrEnergyInfoV1)
}
BaseAttrEnergyInfoV1::BaseAttrEnergyInfoV1(const BaseAttrEnergyInfoV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&energyvalue_, &from.energyvalue_,
    static_cast<size_t>(reinterpret_cast<char*>(&energyid_) -
    reinterpret_cast<char*>(&energyvalue_)) + sizeof(energyid_));
  // @@protoc_insertion_point(copy_constructor:BaseAttrEnergyInfoV1)
}

void BaseAttrEnergyInfoV1::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&energyvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&receivedenergy_) -
      reinterpret_cast<char*>(&energyvalue_)) + sizeof(receivedenergy_));
  energyid_ = -1;
}

BaseAttrEnergyInfoV1::~BaseAttrEnergyInfoV1() {
  // @@protoc_insertion_point(destructor:BaseAttrEnergyInfoV1)
  SharedDtor();
}

void BaseAttrEnergyInfoV1::SharedDtor() {
}

void BaseAttrEnergyInfoV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrEnergyInfoV1::descriptor() {
  protobuf_BaseAttrV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrEnergyInfoV1& BaseAttrEnergyInfoV1::default_instance() {
  protobuf_BaseAttrV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrEnergyInfoV1* BaseAttrEnergyInfoV1::New(::google::protobuf::Arena* arena) const {
  BaseAttrEnergyInfoV1* n = new BaseAttrEnergyInfoV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrEnergyInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrEnergyInfoV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&energyvalue_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&receivedenergy_) -
        reinterpret_cast<char*>(&energyvalue_)) + sizeof(receivedenergy_));
    energyid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrEnergyInfoV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrEnergyInfoV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 EnergyId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_energyid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &energyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 EnergyValue = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_energyvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &energyvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ReceivedEnergy = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_receivedenergy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &receivedenergy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrEnergyInfoV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrEnergyInfoV1)
  return false;
#undef DO_
}

void BaseAttrEnergyInfoV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrEnergyInfoV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 EnergyId = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->energyid(), output);
  }

  // optional sint32 EnergyValue = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->energyvalue(), output);
  }

  // optional sint32 ReceivedEnergy = 3 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->receivedenergy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrEnergyInfoV1)
}

::google::protobuf::uint8* BaseAttrEnergyInfoV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrEnergyInfoV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 EnergyId = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->energyid(), target);
  }

  // optional sint32 EnergyValue = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->energyvalue(), target);
  }

  // optional sint32 ReceivedEnergy = 3 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->receivedenergy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrEnergyInfoV1)
  return target;
}

size_t BaseAttrEnergyInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrEnergyInfoV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 EnergyValue = 2 [default = 0];
    if (has_energyvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->energyvalue());
    }

    // optional sint32 ReceivedEnergy = 3 [default = 0];
    if (has_receivedenergy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->receivedenergy());
    }

    // optional sint32 EnergyId = 1 [default = -1];
    if (has_energyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->energyid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrEnergyInfoV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrEnergyInfoV1)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrEnergyInfoV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrEnergyInfoV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrEnergyInfoV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrEnergyInfoV1)
    MergeFrom(*source);
  }
}

void BaseAttrEnergyInfoV1::MergeFrom(const BaseAttrEnergyInfoV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrEnergyInfoV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      energyvalue_ = from.energyvalue_;
    }
    if (cached_has_bits & 0x00000002u) {
      receivedenergy_ = from.receivedenergy_;
    }
    if (cached_has_bits & 0x00000004u) {
      energyid_ = from.energyid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BaseAttrEnergyInfoV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrEnergyInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrEnergyInfoV1::CopyFrom(const BaseAttrEnergyInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrEnergyInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrEnergyInfoV1::IsInitialized() const {
  return true;
}

void BaseAttrEnergyInfoV1::Swap(BaseAttrEnergyInfoV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrEnergyInfoV1::InternalSwap(BaseAttrEnergyInfoV1* other) {
  using std::swap;
  swap(energyvalue_, other->energyvalue_);
  swap(receivedenergy_, other->receivedenergy_);
  swap(energyid_, other->energyid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrEnergyInfoV1::GetMetadata() const {
  protobuf_BaseAttrV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrEnergyInfoV1

// optional sint32 EnergyId = 1 [default = -1];
bool BaseAttrEnergyInfoV1::has_energyid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BaseAttrEnergyInfoV1::set_has_energyid() {
  _has_bits_[0] |= 0x00000004u;
}
void BaseAttrEnergyInfoV1::clear_has_energyid() {
  _has_bits_[0] &= ~0x00000004u;
}
void BaseAttrEnergyInfoV1::clear_energyid() {
  energyid_ = -1;
  clear_has_energyid();
}
::google::protobuf::int32 BaseAttrEnergyInfoV1::energyid() const {
  // @@protoc_insertion_point(field_get:BaseAttrEnergyInfoV1.EnergyId)
  return energyid_;
}
void BaseAttrEnergyInfoV1::set_energyid(::google::protobuf::int32 value) {
  set_has_energyid();
  energyid_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrEnergyInfoV1.EnergyId)
}

// optional sint32 EnergyValue = 2 [default = 0];
bool BaseAttrEnergyInfoV1::has_energyvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrEnergyInfoV1::set_has_energyvalue() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrEnergyInfoV1::clear_has_energyvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrEnergyInfoV1::clear_energyvalue() {
  energyvalue_ = 0;
  clear_has_energyvalue();
}
::google::protobuf::int32 BaseAttrEnergyInfoV1::energyvalue() const {
  // @@protoc_insertion_point(field_get:BaseAttrEnergyInfoV1.EnergyValue)
  return energyvalue_;
}
void BaseAttrEnergyInfoV1::set_energyvalue(::google::protobuf::int32 value) {
  set_has_energyvalue();
  energyvalue_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrEnergyInfoV1.EnergyValue)
}

// optional sint32 ReceivedEnergy = 3 [default = 0];
bool BaseAttrEnergyInfoV1::has_receivedenergy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BaseAttrEnergyInfoV1::set_has_receivedenergy() {
  _has_bits_[0] |= 0x00000002u;
}
void BaseAttrEnergyInfoV1::clear_has_receivedenergy() {
  _has_bits_[0] &= ~0x00000002u;
}
void BaseAttrEnergyInfoV1::clear_receivedenergy() {
  receivedenergy_ = 0;
  clear_has_receivedenergy();
}
::google::protobuf::int32 BaseAttrEnergyInfoV1::receivedenergy() const {
  // @@protoc_insertion_point(field_get:BaseAttrEnergyInfoV1.ReceivedEnergy)
  return receivedenergy_;
}
void BaseAttrEnergyInfoV1::set_receivedenergy(::google::protobuf::int32 value) {
  set_has_receivedenergy();
  receivedenergy_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrEnergyInfoV1.ReceivedEnergy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrScienceInfoV1::kScienceIdFieldNumber;
const int BaseAttrScienceInfoV1::kScienceCurExpFieldNumber;
const int BaseAttrScienceInfoV1::kScienceLvFieldNumber;
const int BaseAttrScienceInfoV1::kScienceCurMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrScienceInfoV1::BaseAttrScienceInfoV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrScienceInfoV1)
}
BaseAttrScienceInfoV1::BaseAttrScienceInfoV1(const BaseAttrScienceInfoV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sciencecurexp_, &from.sciencecurexp_,
    static_cast<size_t>(reinterpret_cast<char*>(&sciencelv_) -
    reinterpret_cast<char*>(&sciencecurexp_)) + sizeof(sciencelv_));
  // @@protoc_insertion_point(copy_constructor:BaseAttrScienceInfoV1)
}

void BaseAttrScienceInfoV1::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&sciencecurexp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sciencecurmoney_) -
      reinterpret_cast<char*>(&sciencecurexp_)) + sizeof(sciencecurmoney_));
  scienceid_ = -1;
  sciencelv_ = -1;
}

BaseAttrScienceInfoV1::~BaseAttrScienceInfoV1() {
  // @@protoc_insertion_point(destructor:BaseAttrScienceInfoV1)
  SharedDtor();
}

void BaseAttrScienceInfoV1::SharedDtor() {
}

void BaseAttrScienceInfoV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrScienceInfoV1::descriptor() {
  protobuf_BaseAttrV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrScienceInfoV1& BaseAttrScienceInfoV1::default_instance() {
  protobuf_BaseAttrV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrScienceInfoV1* BaseAttrScienceInfoV1::New(::google::protobuf::Arena* arena) const {
  BaseAttrScienceInfoV1* n = new BaseAttrScienceInfoV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrScienceInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrScienceInfoV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&sciencecurexp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sciencecurmoney_) -
        reinterpret_cast<char*>(&sciencecurexp_)) + sizeof(sciencecurmoney_));
    scienceid_ = -1;
    sciencelv_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrScienceInfoV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrScienceInfoV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 ScienceId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_scienceid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &scienceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ScienceCurExp = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_sciencecurexp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &sciencecurexp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ScienceLv = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_sciencelv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &sciencelv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ScienceCurMoney = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_sciencecurmoney();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &sciencecurmoney_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrScienceInfoV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrScienceInfoV1)
  return false;
#undef DO_
}

void BaseAttrScienceInfoV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrScienceInfoV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ScienceId = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->scienceid(), output);
  }

  // optional sint32 ScienceCurExp = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->sciencecurexp(), output);
  }

  // optional sint32 ScienceLv = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->sciencelv(), output);
  }

  // optional sint32 ScienceCurMoney = 4 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->sciencecurmoney(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrScienceInfoV1)
}

::google::protobuf::uint8* BaseAttrScienceInfoV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrScienceInfoV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ScienceId = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->scienceid(), target);
  }

  // optional sint32 ScienceCurExp = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->sciencecurexp(), target);
  }

  // optional sint32 ScienceLv = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->sciencelv(), target);
  }

  // optional sint32 ScienceCurMoney = 4 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->sciencecurmoney(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrScienceInfoV1)
  return target;
}

size_t BaseAttrScienceInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrScienceInfoV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional sint32 ScienceCurExp = 2 [default = 0];
    if (has_sciencecurexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->sciencecurexp());
    }

    // optional sint32 ScienceCurMoney = 4 [default = 0];
    if (has_sciencecurmoney()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->sciencecurmoney());
    }

    // optional sint32 ScienceId = 1 [default = -1];
    if (has_scienceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->scienceid());
    }

    // optional sint32 ScienceLv = 3 [default = -1];
    if (has_sciencelv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->sciencelv());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrScienceInfoV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrScienceInfoV1)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrScienceInfoV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrScienceInfoV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrScienceInfoV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrScienceInfoV1)
    MergeFrom(*source);
  }
}

void BaseAttrScienceInfoV1::MergeFrom(const BaseAttrScienceInfoV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrScienceInfoV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      sciencecurexp_ = from.sciencecurexp_;
    }
    if (cached_has_bits & 0x00000002u) {
      sciencecurmoney_ = from.sciencecurmoney_;
    }
    if (cached_has_bits & 0x00000004u) {
      scienceid_ = from.scienceid_;
    }
    if (cached_has_bits & 0x00000008u) {
      sciencelv_ = from.sciencelv_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BaseAttrScienceInfoV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrScienceInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrScienceInfoV1::CopyFrom(const BaseAttrScienceInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrScienceInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrScienceInfoV1::IsInitialized() const {
  return true;
}

void BaseAttrScienceInfoV1::Swap(BaseAttrScienceInfoV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrScienceInfoV1::InternalSwap(BaseAttrScienceInfoV1* other) {
  using std::swap;
  swap(sciencecurexp_, other->sciencecurexp_);
  swap(sciencecurmoney_, other->sciencecurmoney_);
  swap(scienceid_, other->scienceid_);
  swap(sciencelv_, other->sciencelv_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrScienceInfoV1::GetMetadata() const {
  protobuf_BaseAttrV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrScienceInfoV1

// optional sint32 ScienceId = 1 [default = -1];
bool BaseAttrScienceInfoV1::has_scienceid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BaseAttrScienceInfoV1::set_has_scienceid() {
  _has_bits_[0] |= 0x00000004u;
}
void BaseAttrScienceInfoV1::clear_has_scienceid() {
  _has_bits_[0] &= ~0x00000004u;
}
void BaseAttrScienceInfoV1::clear_scienceid() {
  scienceid_ = -1;
  clear_has_scienceid();
}
::google::protobuf::int32 BaseAttrScienceInfoV1::scienceid() const {
  // @@protoc_insertion_point(field_get:BaseAttrScienceInfoV1.ScienceId)
  return scienceid_;
}
void BaseAttrScienceInfoV1::set_scienceid(::google::protobuf::int32 value) {
  set_has_scienceid();
  scienceid_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrScienceInfoV1.ScienceId)
}

// optional sint32 ScienceCurExp = 2 [default = 0];
bool BaseAttrScienceInfoV1::has_sciencecurexp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrScienceInfoV1::set_has_sciencecurexp() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrScienceInfoV1::clear_has_sciencecurexp() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrScienceInfoV1::clear_sciencecurexp() {
  sciencecurexp_ = 0;
  clear_has_sciencecurexp();
}
::google::protobuf::int32 BaseAttrScienceInfoV1::sciencecurexp() const {
  // @@protoc_insertion_point(field_get:BaseAttrScienceInfoV1.ScienceCurExp)
  return sciencecurexp_;
}
void BaseAttrScienceInfoV1::set_sciencecurexp(::google::protobuf::int32 value) {
  set_has_sciencecurexp();
  sciencecurexp_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrScienceInfoV1.ScienceCurExp)
}

// optional sint32 ScienceLv = 3 [default = -1];
bool BaseAttrScienceInfoV1::has_sciencelv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BaseAttrScienceInfoV1::set_has_sciencelv() {
  _has_bits_[0] |= 0x00000008u;
}
void BaseAttrScienceInfoV1::clear_has_sciencelv() {
  _has_bits_[0] &= ~0x00000008u;
}
void BaseAttrScienceInfoV1::clear_sciencelv() {
  sciencelv_ = -1;
  clear_has_sciencelv();
}
::google::protobuf::int32 BaseAttrScienceInfoV1::sciencelv() const {
  // @@protoc_insertion_point(field_get:BaseAttrScienceInfoV1.ScienceLv)
  return sciencelv_;
}
void BaseAttrScienceInfoV1::set_sciencelv(::google::protobuf::int32 value) {
  set_has_sciencelv();
  sciencelv_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrScienceInfoV1.ScienceLv)
}

// optional sint32 ScienceCurMoney = 4 [default = 0];
bool BaseAttrScienceInfoV1::has_sciencecurmoney() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BaseAttrScienceInfoV1::set_has_sciencecurmoney() {
  _has_bits_[0] |= 0x00000002u;
}
void BaseAttrScienceInfoV1::clear_has_sciencecurmoney() {
  _has_bits_[0] &= ~0x00000002u;
}
void BaseAttrScienceInfoV1::clear_sciencecurmoney() {
  sciencecurmoney_ = 0;
  clear_has_sciencecurmoney();
}
::google::protobuf::int32 BaseAttrScienceInfoV1::sciencecurmoney() const {
  // @@protoc_insertion_point(field_get:BaseAttrScienceInfoV1.ScienceCurMoney)
  return sciencecurmoney_;
}
void BaseAttrScienceInfoV1::set_sciencecurmoney(::google::protobuf::int32 value) {
  set_has_sciencecurmoney();
  sciencecurmoney_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrScienceInfoV1.ScienceCurMoney)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
