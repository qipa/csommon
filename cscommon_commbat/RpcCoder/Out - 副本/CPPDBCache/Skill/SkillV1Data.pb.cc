// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SkillV1Data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SkillV1Data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class SkillSkillObjV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillSkillObjV1>
     _instance;
} _SkillSkillObjV1_default_instance_;
class SkillSkillDataV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillSkillDataV1>
     _instance;
} _SkillSkillDataV1_default_instance_;
class SkillShortcutObjV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillShortcutObjV1>
     _instance;
} _SkillShortcutObjV1_default_instance_;
class SkillTalentSlotV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillTalentSlotV1>
     _instance;
} _SkillTalentSlotV1_default_instance_;

namespace protobuf_SkillV1Data_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillSkillObjV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillSkillObjV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillSkillObjV1, skillid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillSkillObjV1, lv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillSkillObjV1, islearn_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillSkillDataV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillSkillDataV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillSkillDataV1, skillarray_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillSkillDataV1, shortcutarray_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillSkillDataV1, shortcutid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillSkillDataV1, talentskill_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillSkillDataV1, totalcostexp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillSkillDataV1, talentlevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillSkillDataV1, talentpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillSkillDataV1, lifeskillarray_),
  ~0u,
  ~0u,
  3,
  ~0u,
  0,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillShortcutObjV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillShortcutObjV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillShortcutObjV1, skillid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillShortcutObjV1, type_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillTalentSlotV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillTalentSlotV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillTalentSlotV1, skillid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillTalentSlotV1, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillTalentSlotV1, islock_),
  1,
  0,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(SkillSkillObjV1)},
  { 11, 24, sizeof(SkillSkillDataV1)},
  { 32, 39, sizeof(SkillShortcutObjV1)},
  { 41, 49, sizeof(SkillTalentSlotV1)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillSkillObjV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillSkillDataV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillShortcutObjV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillTalentSlotV1_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "SkillV1Data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _SkillSkillObjV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillSkillObjV1_default_instance_);_SkillSkillDataV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillSkillDataV1_default_instance_);_SkillShortcutObjV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillShortcutObjV1_default_instance_);_SkillTalentSlotV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillTalentSlotV1_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021SkillV1Data.proto\032\022PublicStruct.proto\""
      "M\n\017SkillSkillObjV1\022\023\n\007SkillId\030\001 \001(\021:\002-1\022"
      "\r\n\002Lv\030\002 \001(\021:\0011\022\026\n\007IsLearn\030\004 \001(\010:\005false\"\230"
      "\002\n\020SkillSkillDataV1\022$\n\nSkillArray\030\001 \003(\0132"
      "\020.SkillSkillObjV1\022*\n\rShortcutArray\030\002 \003(\013"
      "2\023.SkillShortcutObjV1\022\026\n\nShortcutId\030\003 \001("
      "\021:\002-1\022\'\n\013TalentSkill\030\004 \003(\0132\022.SkillTalent"
      "SlotV1\022\027\n\014TotalCostExp\030\005 \001(\021:\0010\022\026\n\013Talen"
      "tLevel\030\006 \001(\021:\0010\022\026\n\013TalentPoint\030\007 \001(\021:\0010\022"
      "(\n\016LifeSkillArray\030\010 \003(\0132\020.SkillSkillObjV"
      "1\"7\n\022SkillShortcutObjV1\022\017\n\007SkillId\030\001 \003(\021"
      "\022\020\n\004Type\030\002 \001(\021:\002-1\"P\n\021SkillTalentSlotV1\022"
      "\023\n\007SkillId\030\002 \001(\021:\002-1\022\020\n\005Level\030\003 \001(\021:\0010\022\024"
      "\n\006IsLock\030\004 \001(\010:\004true"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 540);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SkillV1Data.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_SkillV1Data_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillSkillObjV1::kSkillIdFieldNumber;
const int SkillSkillObjV1::kLvFieldNumber;
const int SkillSkillObjV1::kIsLearnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillSkillObjV1::SkillSkillObjV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillSkillObjV1)
}
SkillSkillObjV1::SkillSkillObjV1(const SkillSkillObjV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&islearn_, &from.islearn_,
    static_cast<size_t>(reinterpret_cast<char*>(&lv_) -
    reinterpret_cast<char*>(&islearn_)) + sizeof(lv_));
  // @@protoc_insertion_point(copy_constructor:SkillSkillObjV1)
}

void SkillSkillObjV1::SharedCtor() {
  _cached_size_ = 0;
  islearn_ = false;
  skillid_ = -1;
  lv_ = 1;
}

SkillSkillObjV1::~SkillSkillObjV1() {
  // @@protoc_insertion_point(destructor:SkillSkillObjV1)
  SharedDtor();
}

void SkillSkillObjV1::SharedDtor() {
}

void SkillSkillObjV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillSkillObjV1::descriptor() {
  protobuf_SkillV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillSkillObjV1& SkillSkillObjV1::default_instance() {
  protobuf_SkillV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillSkillObjV1* SkillSkillObjV1::New(::google::protobuf::Arena* arena) const {
  SkillSkillObjV1* n = new SkillSkillObjV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillSkillObjV1::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillSkillObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    islearn_ = false;
    skillid_ = -1;
    lv_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillSkillObjV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillSkillObjV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 SkillId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_skillid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Lv = 2 [default = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_lv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &lv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsLearn = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_islearn();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islearn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillSkillObjV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillSkillObjV1)
  return false;
#undef DO_
}

void SkillSkillObjV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillSkillObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 SkillId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->skillid(), output);
  }

  // optional sint32 Lv = 2 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->lv(), output);
  }

  // optional bool IsLearn = 4 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->islearn(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillSkillObjV1)
}

::google::protobuf::uint8* SkillSkillObjV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillSkillObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 SkillId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->skillid(), target);
  }

  // optional sint32 Lv = 2 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->lv(), target);
  }

  // optional bool IsLearn = 4 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->islearn(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillSkillObjV1)
  return target;
}

size_t SkillSkillObjV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillSkillObjV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bool IsLearn = 4 [default = false];
    if (has_islearn()) {
      total_size += 1 + 1;
    }

    // optional sint32 SkillId = 1 [default = -1];
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->skillid());
    }

    // optional sint32 Lv = 2 [default = 1];
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->lv());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillSkillObjV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillSkillObjV1)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillSkillObjV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillSkillObjV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillSkillObjV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillSkillObjV1)
    MergeFrom(*source);
  }
}

void SkillSkillObjV1::MergeFrom(const SkillSkillObjV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillSkillObjV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      islearn_ = from.islearn_;
    }
    if (cached_has_bits & 0x00000002u) {
      skillid_ = from.skillid_;
    }
    if (cached_has_bits & 0x00000004u) {
      lv_ = from.lv_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SkillSkillObjV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillSkillObjV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillSkillObjV1::CopyFrom(const SkillSkillObjV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillSkillObjV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillSkillObjV1::IsInitialized() const {
  return true;
}

void SkillSkillObjV1::Swap(SkillSkillObjV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillSkillObjV1::InternalSwap(SkillSkillObjV1* other) {
  using std::swap;
  swap(islearn_, other->islearn_);
  swap(skillid_, other->skillid_);
  swap(lv_, other->lv_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillSkillObjV1::GetMetadata() const {
  protobuf_SkillV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillSkillObjV1

// optional sint32 SkillId = 1 [default = -1];
bool SkillSkillObjV1::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SkillSkillObjV1::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
void SkillSkillObjV1::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
void SkillSkillObjV1::clear_skillid() {
  skillid_ = -1;
  clear_has_skillid();
}
::google::protobuf::int32 SkillSkillObjV1::skillid() const {
  // @@protoc_insertion_point(field_get:SkillSkillObjV1.SkillId)
  return skillid_;
}
void SkillSkillObjV1::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:SkillSkillObjV1.SkillId)
}

// optional sint32 Lv = 2 [default = 1];
bool SkillSkillObjV1::has_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SkillSkillObjV1::set_has_lv() {
  _has_bits_[0] |= 0x00000004u;
}
void SkillSkillObjV1::clear_has_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
void SkillSkillObjV1::clear_lv() {
  lv_ = 1;
  clear_has_lv();
}
::google::protobuf::int32 SkillSkillObjV1::lv() const {
  // @@protoc_insertion_point(field_get:SkillSkillObjV1.Lv)
  return lv_;
}
void SkillSkillObjV1::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:SkillSkillObjV1.Lv)
}

// optional bool IsLearn = 4 [default = false];
bool SkillSkillObjV1::has_islearn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillSkillObjV1::set_has_islearn() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillSkillObjV1::clear_has_islearn() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillSkillObjV1::clear_islearn() {
  islearn_ = false;
  clear_has_islearn();
}
bool SkillSkillObjV1::islearn() const {
  // @@protoc_insertion_point(field_get:SkillSkillObjV1.IsLearn)
  return islearn_;
}
void SkillSkillObjV1::set_islearn(bool value) {
  set_has_islearn();
  islearn_ = value;
  // @@protoc_insertion_point(field_set:SkillSkillObjV1.IsLearn)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillSkillDataV1::kSkillArrayFieldNumber;
const int SkillSkillDataV1::kShortcutArrayFieldNumber;
const int SkillSkillDataV1::kShortcutIdFieldNumber;
const int SkillSkillDataV1::kTalentSkillFieldNumber;
const int SkillSkillDataV1::kTotalCostExpFieldNumber;
const int SkillSkillDataV1::kTalentLevelFieldNumber;
const int SkillSkillDataV1::kTalentPointFieldNumber;
const int SkillSkillDataV1::kLifeSkillArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillSkillDataV1::SkillSkillDataV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillSkillDataV1)
}
SkillSkillDataV1::SkillSkillDataV1(const SkillSkillDataV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      skillarray_(from.skillarray_),
      shortcutarray_(from.shortcutarray_),
      talentskill_(from.talentskill_),
      lifeskillarray_(from.lifeskillarray_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&totalcostexp_, &from.totalcostexp_,
    static_cast<size_t>(reinterpret_cast<char*>(&shortcutid_) -
    reinterpret_cast<char*>(&totalcostexp_)) + sizeof(shortcutid_));
  // @@protoc_insertion_point(copy_constructor:SkillSkillDataV1)
}

void SkillSkillDataV1::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&totalcostexp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&talentpoint_) -
      reinterpret_cast<char*>(&totalcostexp_)) + sizeof(talentpoint_));
  shortcutid_ = -1;
}

SkillSkillDataV1::~SkillSkillDataV1() {
  // @@protoc_insertion_point(destructor:SkillSkillDataV1)
  SharedDtor();
}

void SkillSkillDataV1::SharedDtor() {
}

void SkillSkillDataV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillSkillDataV1::descriptor() {
  protobuf_SkillV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillSkillDataV1& SkillSkillDataV1::default_instance() {
  protobuf_SkillV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillSkillDataV1* SkillSkillDataV1::New(::google::protobuf::Arena* arena) const {
  SkillSkillDataV1* n = new SkillSkillDataV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillSkillDataV1::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillSkillDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skillarray_.Clear();
  shortcutarray_.Clear();
  talentskill_.Clear();
  lifeskillarray_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&totalcostexp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&talentpoint_) -
        reinterpret_cast<char*>(&totalcostexp_)) + sizeof(talentpoint_));
    shortcutid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillSkillDataV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillSkillDataV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SkillSkillObjV1 SkillArray = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skillarray()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .SkillShortcutObjV1 ShortcutArray = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_shortcutarray()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ShortcutId = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_shortcutid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &shortcutid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .SkillTalentSlotV1 TalentSkill = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_talentskill()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TotalCostExp = 5 [default = 0];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_totalcostexp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &totalcostexp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TalentLevel = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_talentlevel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &talentlevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TalentPoint = 7 [default = 0];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_talentpoint();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &talentpoint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .SkillSkillObjV1 LifeSkillArray = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lifeskillarray()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillSkillDataV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillSkillDataV1)
  return false;
#undef DO_
}

void SkillSkillDataV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillSkillDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SkillSkillObjV1 SkillArray = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->skillarray_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->skillarray(static_cast<int>(i)), output);
  }

  // repeated .SkillShortcutObjV1 ShortcutArray = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shortcutarray_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->shortcutarray(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional sint32 ShortcutId = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->shortcutid(), output);
  }

  // repeated .SkillTalentSlotV1 TalentSkill = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->talentskill_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->talentskill(static_cast<int>(i)), output);
  }

  // optional sint32 TotalCostExp = 5 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->totalcostexp(), output);
  }

  // optional sint32 TalentLevel = 6 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->talentlevel(), output);
  }

  // optional sint32 TalentPoint = 7 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->talentpoint(), output);
  }

  // repeated .SkillSkillObjV1 LifeSkillArray = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lifeskillarray_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->lifeskillarray(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillSkillDataV1)
}

::google::protobuf::uint8* SkillSkillDataV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillSkillDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SkillSkillObjV1 SkillArray = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->skillarray_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->skillarray(static_cast<int>(i)), deterministic, target);
  }

  // repeated .SkillShortcutObjV1 ShortcutArray = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shortcutarray_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->shortcutarray(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional sint32 ShortcutId = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->shortcutid(), target);
  }

  // repeated .SkillTalentSlotV1 TalentSkill = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->talentskill_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->talentskill(static_cast<int>(i)), deterministic, target);
  }

  // optional sint32 TotalCostExp = 5 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->totalcostexp(), target);
  }

  // optional sint32 TalentLevel = 6 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->talentlevel(), target);
  }

  // optional sint32 TalentPoint = 7 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->talentpoint(), target);
  }

  // repeated .SkillSkillObjV1 LifeSkillArray = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lifeskillarray_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->lifeskillarray(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillSkillDataV1)
  return target;
}

size_t SkillSkillDataV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillSkillDataV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .SkillSkillObjV1 SkillArray = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->skillarray_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skillarray(static_cast<int>(i)));
    }
  }

  // repeated .SkillShortcutObjV1 ShortcutArray = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->shortcutarray_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shortcutarray(static_cast<int>(i)));
    }
  }

  // repeated .SkillTalentSlotV1 TalentSkill = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->talentskill_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->talentskill(static_cast<int>(i)));
    }
  }

  // repeated .SkillSkillObjV1 LifeSkillArray = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->lifeskillarray_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lifeskillarray(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional sint32 TotalCostExp = 5 [default = 0];
    if (has_totalcostexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->totalcostexp());
    }

    // optional sint32 TalentLevel = 6 [default = 0];
    if (has_talentlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->talentlevel());
    }

    // optional sint32 TalentPoint = 7 [default = 0];
    if (has_talentpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->talentpoint());
    }

    // optional sint32 ShortcutId = 3 [default = -1];
    if (has_shortcutid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->shortcutid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillSkillDataV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillSkillDataV1)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillSkillDataV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillSkillDataV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillSkillDataV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillSkillDataV1)
    MergeFrom(*source);
  }
}

void SkillSkillDataV1::MergeFrom(const SkillSkillDataV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillSkillDataV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  skillarray_.MergeFrom(from.skillarray_);
  shortcutarray_.MergeFrom(from.shortcutarray_);
  talentskill_.MergeFrom(from.talentskill_);
  lifeskillarray_.MergeFrom(from.lifeskillarray_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      totalcostexp_ = from.totalcostexp_;
    }
    if (cached_has_bits & 0x00000002u) {
      talentlevel_ = from.talentlevel_;
    }
    if (cached_has_bits & 0x00000004u) {
      talentpoint_ = from.talentpoint_;
    }
    if (cached_has_bits & 0x00000008u) {
      shortcutid_ = from.shortcutid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SkillSkillDataV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillSkillDataV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillSkillDataV1::CopyFrom(const SkillSkillDataV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillSkillDataV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillSkillDataV1::IsInitialized() const {
  return true;
}

void SkillSkillDataV1::Swap(SkillSkillDataV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillSkillDataV1::InternalSwap(SkillSkillDataV1* other) {
  using std::swap;
  skillarray_.InternalSwap(&other->skillarray_);
  shortcutarray_.InternalSwap(&other->shortcutarray_);
  talentskill_.InternalSwap(&other->talentskill_);
  lifeskillarray_.InternalSwap(&other->lifeskillarray_);
  swap(totalcostexp_, other->totalcostexp_);
  swap(talentlevel_, other->talentlevel_);
  swap(talentpoint_, other->talentpoint_);
  swap(shortcutid_, other->shortcutid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillSkillDataV1::GetMetadata() const {
  protobuf_SkillV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillSkillDataV1

// repeated .SkillSkillObjV1 SkillArray = 1;
int SkillSkillDataV1::skillarray_size() const {
  return skillarray_.size();
}
void SkillSkillDataV1::clear_skillarray() {
  skillarray_.Clear();
}
const ::SkillSkillObjV1& SkillSkillDataV1::skillarray(int index) const {
  // @@protoc_insertion_point(field_get:SkillSkillDataV1.SkillArray)
  return skillarray_.Get(index);
}
::SkillSkillObjV1* SkillSkillDataV1::mutable_skillarray(int index) {
  // @@protoc_insertion_point(field_mutable:SkillSkillDataV1.SkillArray)
  return skillarray_.Mutable(index);
}
::SkillSkillObjV1* SkillSkillDataV1::add_skillarray() {
  // @@protoc_insertion_point(field_add:SkillSkillDataV1.SkillArray)
  return skillarray_.Add();
}
::google::protobuf::RepeatedPtrField< ::SkillSkillObjV1 >*
SkillSkillDataV1::mutable_skillarray() {
  // @@protoc_insertion_point(field_mutable_list:SkillSkillDataV1.SkillArray)
  return &skillarray_;
}
const ::google::protobuf::RepeatedPtrField< ::SkillSkillObjV1 >&
SkillSkillDataV1::skillarray() const {
  // @@protoc_insertion_point(field_list:SkillSkillDataV1.SkillArray)
  return skillarray_;
}

// repeated .SkillShortcutObjV1 ShortcutArray = 2;
int SkillSkillDataV1::shortcutarray_size() const {
  return shortcutarray_.size();
}
void SkillSkillDataV1::clear_shortcutarray() {
  shortcutarray_.Clear();
}
const ::SkillShortcutObjV1& SkillSkillDataV1::shortcutarray(int index) const {
  // @@protoc_insertion_point(field_get:SkillSkillDataV1.ShortcutArray)
  return shortcutarray_.Get(index);
}
::SkillShortcutObjV1* SkillSkillDataV1::mutable_shortcutarray(int index) {
  // @@protoc_insertion_point(field_mutable:SkillSkillDataV1.ShortcutArray)
  return shortcutarray_.Mutable(index);
}
::SkillShortcutObjV1* SkillSkillDataV1::add_shortcutarray() {
  // @@protoc_insertion_point(field_add:SkillSkillDataV1.ShortcutArray)
  return shortcutarray_.Add();
}
::google::protobuf::RepeatedPtrField< ::SkillShortcutObjV1 >*
SkillSkillDataV1::mutable_shortcutarray() {
  // @@protoc_insertion_point(field_mutable_list:SkillSkillDataV1.ShortcutArray)
  return &shortcutarray_;
}
const ::google::protobuf::RepeatedPtrField< ::SkillShortcutObjV1 >&
SkillSkillDataV1::shortcutarray() const {
  // @@protoc_insertion_point(field_list:SkillSkillDataV1.ShortcutArray)
  return shortcutarray_;
}

// optional sint32 ShortcutId = 3 [default = -1];
bool SkillSkillDataV1::has_shortcutid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SkillSkillDataV1::set_has_shortcutid() {
  _has_bits_[0] |= 0x00000008u;
}
void SkillSkillDataV1::clear_has_shortcutid() {
  _has_bits_[0] &= ~0x00000008u;
}
void SkillSkillDataV1::clear_shortcutid() {
  shortcutid_ = -1;
  clear_has_shortcutid();
}
::google::protobuf::int32 SkillSkillDataV1::shortcutid() const {
  // @@protoc_insertion_point(field_get:SkillSkillDataV1.ShortcutId)
  return shortcutid_;
}
void SkillSkillDataV1::set_shortcutid(::google::protobuf::int32 value) {
  set_has_shortcutid();
  shortcutid_ = value;
  // @@protoc_insertion_point(field_set:SkillSkillDataV1.ShortcutId)
}

// repeated .SkillTalentSlotV1 TalentSkill = 4;
int SkillSkillDataV1::talentskill_size() const {
  return talentskill_.size();
}
void SkillSkillDataV1::clear_talentskill() {
  talentskill_.Clear();
}
const ::SkillTalentSlotV1& SkillSkillDataV1::talentskill(int index) const {
  // @@protoc_insertion_point(field_get:SkillSkillDataV1.TalentSkill)
  return talentskill_.Get(index);
}
::SkillTalentSlotV1* SkillSkillDataV1::mutable_talentskill(int index) {
  // @@protoc_insertion_point(field_mutable:SkillSkillDataV1.TalentSkill)
  return talentskill_.Mutable(index);
}
::SkillTalentSlotV1* SkillSkillDataV1::add_talentskill() {
  // @@protoc_insertion_point(field_add:SkillSkillDataV1.TalentSkill)
  return talentskill_.Add();
}
::google::protobuf::RepeatedPtrField< ::SkillTalentSlotV1 >*
SkillSkillDataV1::mutable_talentskill() {
  // @@protoc_insertion_point(field_mutable_list:SkillSkillDataV1.TalentSkill)
  return &talentskill_;
}
const ::google::protobuf::RepeatedPtrField< ::SkillTalentSlotV1 >&
SkillSkillDataV1::talentskill() const {
  // @@protoc_insertion_point(field_list:SkillSkillDataV1.TalentSkill)
  return talentskill_;
}

// optional sint32 TotalCostExp = 5 [default = 0];
bool SkillSkillDataV1::has_totalcostexp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillSkillDataV1::set_has_totalcostexp() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillSkillDataV1::clear_has_totalcostexp() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillSkillDataV1::clear_totalcostexp() {
  totalcostexp_ = 0;
  clear_has_totalcostexp();
}
::google::protobuf::int32 SkillSkillDataV1::totalcostexp() const {
  // @@protoc_insertion_point(field_get:SkillSkillDataV1.TotalCostExp)
  return totalcostexp_;
}
void SkillSkillDataV1::set_totalcostexp(::google::protobuf::int32 value) {
  set_has_totalcostexp();
  totalcostexp_ = value;
  // @@protoc_insertion_point(field_set:SkillSkillDataV1.TotalCostExp)
}

// optional sint32 TalentLevel = 6 [default = 0];
bool SkillSkillDataV1::has_talentlevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SkillSkillDataV1::set_has_talentlevel() {
  _has_bits_[0] |= 0x00000002u;
}
void SkillSkillDataV1::clear_has_talentlevel() {
  _has_bits_[0] &= ~0x00000002u;
}
void SkillSkillDataV1::clear_talentlevel() {
  talentlevel_ = 0;
  clear_has_talentlevel();
}
::google::protobuf::int32 SkillSkillDataV1::talentlevel() const {
  // @@protoc_insertion_point(field_get:SkillSkillDataV1.TalentLevel)
  return talentlevel_;
}
void SkillSkillDataV1::set_talentlevel(::google::protobuf::int32 value) {
  set_has_talentlevel();
  talentlevel_ = value;
  // @@protoc_insertion_point(field_set:SkillSkillDataV1.TalentLevel)
}

// optional sint32 TalentPoint = 7 [default = 0];
bool SkillSkillDataV1::has_talentpoint() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SkillSkillDataV1::set_has_talentpoint() {
  _has_bits_[0] |= 0x00000004u;
}
void SkillSkillDataV1::clear_has_talentpoint() {
  _has_bits_[0] &= ~0x00000004u;
}
void SkillSkillDataV1::clear_talentpoint() {
  talentpoint_ = 0;
  clear_has_talentpoint();
}
::google::protobuf::int32 SkillSkillDataV1::talentpoint() const {
  // @@protoc_insertion_point(field_get:SkillSkillDataV1.TalentPoint)
  return talentpoint_;
}
void SkillSkillDataV1::set_talentpoint(::google::protobuf::int32 value) {
  set_has_talentpoint();
  talentpoint_ = value;
  // @@protoc_insertion_point(field_set:SkillSkillDataV1.TalentPoint)
}

// repeated .SkillSkillObjV1 LifeSkillArray = 8;
int SkillSkillDataV1::lifeskillarray_size() const {
  return lifeskillarray_.size();
}
void SkillSkillDataV1::clear_lifeskillarray() {
  lifeskillarray_.Clear();
}
const ::SkillSkillObjV1& SkillSkillDataV1::lifeskillarray(int index) const {
  // @@protoc_insertion_point(field_get:SkillSkillDataV1.LifeSkillArray)
  return lifeskillarray_.Get(index);
}
::SkillSkillObjV1* SkillSkillDataV1::mutable_lifeskillarray(int index) {
  // @@protoc_insertion_point(field_mutable:SkillSkillDataV1.LifeSkillArray)
  return lifeskillarray_.Mutable(index);
}
::SkillSkillObjV1* SkillSkillDataV1::add_lifeskillarray() {
  // @@protoc_insertion_point(field_add:SkillSkillDataV1.LifeSkillArray)
  return lifeskillarray_.Add();
}
::google::protobuf::RepeatedPtrField< ::SkillSkillObjV1 >*
SkillSkillDataV1::mutable_lifeskillarray() {
  // @@protoc_insertion_point(field_mutable_list:SkillSkillDataV1.LifeSkillArray)
  return &lifeskillarray_;
}
const ::google::protobuf::RepeatedPtrField< ::SkillSkillObjV1 >&
SkillSkillDataV1::lifeskillarray() const {
  // @@protoc_insertion_point(field_list:SkillSkillDataV1.LifeSkillArray)
  return lifeskillarray_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillShortcutObjV1::kSkillIdFieldNumber;
const int SkillShortcutObjV1::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillShortcutObjV1::SkillShortcutObjV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillShortcutObjV1)
}
SkillShortcutObjV1::SkillShortcutObjV1(const SkillShortcutObjV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      skillid_(from.skillid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:SkillShortcutObjV1)
}

void SkillShortcutObjV1::SharedCtor() {
  _cached_size_ = 0;
  type_ = -1;
}

SkillShortcutObjV1::~SkillShortcutObjV1() {
  // @@protoc_insertion_point(destructor:SkillShortcutObjV1)
  SharedDtor();
}

void SkillShortcutObjV1::SharedDtor() {
}

void SkillShortcutObjV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillShortcutObjV1::descriptor() {
  protobuf_SkillV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillShortcutObjV1& SkillShortcutObjV1::default_instance() {
  protobuf_SkillV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillShortcutObjV1* SkillShortcutObjV1::New(::google::protobuf::Arena* arena) const {
  SkillShortcutObjV1* n = new SkillShortcutObjV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillShortcutObjV1::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillShortcutObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skillid_.Clear();
  type_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillShortcutObjV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillShortcutObjV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 SkillId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 8u, input, this->mutable_skillid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_skillid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Type = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillShortcutObjV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillShortcutObjV1)
  return false;
#undef DO_
}

void SkillShortcutObjV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillShortcutObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 SkillId = 1;
  for (int i = 0, n = this->skillid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      1, this->skillid(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional sint32 Type = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillShortcutObjV1)
}

::google::protobuf::uint8* SkillShortcutObjV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillShortcutObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 SkillId = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSInt32ToArray(1, this->skillid_, target);

  cached_has_bits = _has_bits_[0];
  // optional sint32 Type = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillShortcutObjV1)
  return target;
}

size_t SkillShortcutObjV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillShortcutObjV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated sint32 SkillId = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->skillid_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->skillid_size());
    total_size += data_size;
  }

  // optional sint32 Type = 2 [default = -1];
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillShortcutObjV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillShortcutObjV1)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillShortcutObjV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillShortcutObjV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillShortcutObjV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillShortcutObjV1)
    MergeFrom(*source);
  }
}

void SkillShortcutObjV1::MergeFrom(const SkillShortcutObjV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillShortcutObjV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  skillid_.MergeFrom(from.skillid_);
  if (from.has_type()) {
    set_type(from.type());
  }
}

void SkillShortcutObjV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillShortcutObjV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillShortcutObjV1::CopyFrom(const SkillShortcutObjV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillShortcutObjV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillShortcutObjV1::IsInitialized() const {
  return true;
}

void SkillShortcutObjV1::Swap(SkillShortcutObjV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillShortcutObjV1::InternalSwap(SkillShortcutObjV1* other) {
  using std::swap;
  skillid_.InternalSwap(&other->skillid_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillShortcutObjV1::GetMetadata() const {
  protobuf_SkillV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillShortcutObjV1

// repeated sint32 SkillId = 1;
int SkillShortcutObjV1::skillid_size() const {
  return skillid_.size();
}
void SkillShortcutObjV1::clear_skillid() {
  skillid_.Clear();
}
::google::protobuf::int32 SkillShortcutObjV1::skillid(int index) const {
  // @@protoc_insertion_point(field_get:SkillShortcutObjV1.SkillId)
  return skillid_.Get(index);
}
void SkillShortcutObjV1::set_skillid(int index, ::google::protobuf::int32 value) {
  skillid_.Set(index, value);
  // @@protoc_insertion_point(field_set:SkillShortcutObjV1.SkillId)
}
void SkillShortcutObjV1::add_skillid(::google::protobuf::int32 value) {
  skillid_.Add(value);
  // @@protoc_insertion_point(field_add:SkillShortcutObjV1.SkillId)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SkillShortcutObjV1::skillid() const {
  // @@protoc_insertion_point(field_list:SkillShortcutObjV1.SkillId)
  return skillid_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SkillShortcutObjV1::mutable_skillid() {
  // @@protoc_insertion_point(field_mutable_list:SkillShortcutObjV1.SkillId)
  return &skillid_;
}

// optional sint32 Type = 2 [default = -1];
bool SkillShortcutObjV1::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillShortcutObjV1::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillShortcutObjV1::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillShortcutObjV1::clear_type() {
  type_ = -1;
  clear_has_type();
}
::google::protobuf::int32 SkillShortcutObjV1::type() const {
  // @@protoc_insertion_point(field_get:SkillShortcutObjV1.Type)
  return type_;
}
void SkillShortcutObjV1::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:SkillShortcutObjV1.Type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillTalentSlotV1::kSkillIdFieldNumber;
const int SkillTalentSlotV1::kLevelFieldNumber;
const int SkillTalentSlotV1::kIsLockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillTalentSlotV1::SkillTalentSlotV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillTalentSlotV1)
}
SkillTalentSlotV1::SkillTalentSlotV1(const SkillTalentSlotV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&islock_) -
    reinterpret_cast<char*>(&level_)) + sizeof(islock_));
  // @@protoc_insertion_point(copy_constructor:SkillTalentSlotV1)
}

void SkillTalentSlotV1::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  skillid_ = -1;
  islock_ = true;
}

SkillTalentSlotV1::~SkillTalentSlotV1() {
  // @@protoc_insertion_point(destructor:SkillTalentSlotV1)
  SharedDtor();
}

void SkillTalentSlotV1::SharedDtor() {
}

void SkillTalentSlotV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillTalentSlotV1::descriptor() {
  protobuf_SkillV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillTalentSlotV1& SkillTalentSlotV1::default_instance() {
  protobuf_SkillV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillTalentSlotV1* SkillTalentSlotV1::New(::google::protobuf::Arena* arena) const {
  SkillTalentSlotV1* n = new SkillTalentSlotV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillTalentSlotV1::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillTalentSlotV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    level_ = 0;
    skillid_ = -1;
    islock_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillTalentSlotV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillTalentSlotV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 SkillId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_skillid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Level = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsLock = 4 [default = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_islock();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islock_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillTalentSlotV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillTalentSlotV1)
  return false;
#undef DO_
}

void SkillTalentSlotV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillTalentSlotV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 SkillId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->skillid(), output);
  }

  // optional sint32 Level = 3 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->level(), output);
  }

  // optional bool IsLock = 4 [default = true];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->islock(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillTalentSlotV1)
}

::google::protobuf::uint8* SkillTalentSlotV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillTalentSlotV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 SkillId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->skillid(), target);
  }

  // optional sint32 Level = 3 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->level(), target);
  }

  // optional bool IsLock = 4 [default = true];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->islock(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillTalentSlotV1)
  return target;
}

size_t SkillTalentSlotV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillTalentSlotV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 Level = 3 [default = 0];
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->level());
    }

    // optional sint32 SkillId = 2 [default = -1];
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->skillid());
    }

    // optional bool IsLock = 4 [default = true];
    if (has_islock()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillTalentSlotV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillTalentSlotV1)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillTalentSlotV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillTalentSlotV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillTalentSlotV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillTalentSlotV1)
    MergeFrom(*source);
  }
}

void SkillTalentSlotV1::MergeFrom(const SkillTalentSlotV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillTalentSlotV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000002u) {
      skillid_ = from.skillid_;
    }
    if (cached_has_bits & 0x00000004u) {
      islock_ = from.islock_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SkillTalentSlotV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillTalentSlotV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillTalentSlotV1::CopyFrom(const SkillTalentSlotV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillTalentSlotV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillTalentSlotV1::IsInitialized() const {
  return true;
}

void SkillTalentSlotV1::Swap(SkillTalentSlotV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillTalentSlotV1::InternalSwap(SkillTalentSlotV1* other) {
  using std::swap;
  swap(level_, other->level_);
  swap(skillid_, other->skillid_);
  swap(islock_, other->islock_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillTalentSlotV1::GetMetadata() const {
  protobuf_SkillV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillTalentSlotV1

// optional sint32 SkillId = 2 [default = -1];
bool SkillTalentSlotV1::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SkillTalentSlotV1::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
void SkillTalentSlotV1::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
void SkillTalentSlotV1::clear_skillid() {
  skillid_ = -1;
  clear_has_skillid();
}
::google::protobuf::int32 SkillTalentSlotV1::skillid() const {
  // @@protoc_insertion_point(field_get:SkillTalentSlotV1.SkillId)
  return skillid_;
}
void SkillTalentSlotV1::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:SkillTalentSlotV1.SkillId)
}

// optional sint32 Level = 3 [default = 0];
bool SkillTalentSlotV1::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillTalentSlotV1::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillTalentSlotV1::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillTalentSlotV1::clear_level() {
  level_ = 0;
  clear_has_level();
}
::google::protobuf::int32 SkillTalentSlotV1::level() const {
  // @@protoc_insertion_point(field_get:SkillTalentSlotV1.Level)
  return level_;
}
void SkillTalentSlotV1::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:SkillTalentSlotV1.Level)
}

// optional bool IsLock = 4 [default = true];
bool SkillTalentSlotV1::has_islock() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SkillTalentSlotV1::set_has_islock() {
  _has_bits_[0] |= 0x00000004u;
}
void SkillTalentSlotV1::clear_has_islock() {
  _has_bits_[0] &= ~0x00000004u;
}
void SkillTalentSlotV1::clear_islock() {
  islock_ = true;
  clear_has_islock();
}
bool SkillTalentSlotV1::islock() const {
  // @@protoc_insertion_point(field_get:SkillTalentSlotV1.IsLock)
  return islock_;
}
void SkillTalentSlotV1::set_islock(bool value) {
  set_has_islock();
  islock_ = value;
  // @@protoc_insertion_point(field_set:SkillTalentSlotV1.IsLock)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
