// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AchievementV1Data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AchievementV1Data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class AchievementAchiObjV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AchievementAchiObjV1>
     _instance;
} _AchievementAchiObjV1_default_instance_;
class AchievementAchiDataV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AchievementAchiDataV1>
     _instance;
} _AchievementAchiDataV1_default_instance_;

namespace protobuf_AchievementV1Data_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementAchiObjV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementAchiObjV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementAchiObjV1, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementAchiObjV1, star_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementAchiObjV1, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementAchiObjV1, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementAchiObjV1, type_),
  1,
  2,
  3,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementAchiDataV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementAchiDataV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementAchiDataV1, achidata_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(AchievementAchiObjV1)},
  { 15, 21, sizeof(AchievementAchiDataV1)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AchievementAchiObjV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AchievementAchiDataV1_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "AchievementV1Data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _AchievementAchiObjV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AchievementAchiObjV1_default_instance_);_AchievementAchiDataV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AchievementAchiDataV1_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027AchievementV1Data.proto\032\022PublicStruct."
      "proto\"s\n\024AchievementAchiObjV1\022\023\n\007GroupId"
      "\030\001 \001(\021:\002-1\022\020\n\004Star\030\003 \001(\021:\002-1\022\022\n\006Status\030\004"
      " \001(\021:\002-1\022\016\n\002Id\030\005 \001(\021:\002-1\022\020\n\004Type\030\006 \001(\021:\002"
      "-1\"@\n\025AchievementAchiDataV1\022\'\n\010AchiData\030"
      "\001 \003(\0132\025.AchievementAchiObjV1"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 228);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AchievementV1Data.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_AchievementV1Data_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AchievementAchiObjV1::kGroupIdFieldNumber;
const int AchievementAchiObjV1::kStarFieldNumber;
const int AchievementAchiObjV1::kStatusFieldNumber;
const int AchievementAchiObjV1::kIdFieldNumber;
const int AchievementAchiObjV1::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AchievementAchiObjV1::AchievementAchiObjV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_AchievementV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AchievementAchiObjV1)
}
AchievementAchiObjV1::AchievementAchiObjV1(const AchievementAchiObjV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&type_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:AchievementAchiObjV1)
}

void AchievementAchiObjV1::SharedCtor() {
  _cached_size_ = 0;
  type_ = -1;
  groupid_ = -1;
  star_ = -1;
  status_ = -1;
  id_ = -1;
}

AchievementAchiObjV1::~AchievementAchiObjV1() {
  // @@protoc_insertion_point(destructor:AchievementAchiObjV1)
  SharedDtor();
}

void AchievementAchiObjV1::SharedDtor() {
}

void AchievementAchiObjV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AchievementAchiObjV1::descriptor() {
  protobuf_AchievementV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AchievementV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AchievementAchiObjV1& AchievementAchiObjV1::default_instance() {
  protobuf_AchievementV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

AchievementAchiObjV1* AchievementAchiObjV1::New(::google::protobuf::Arena* arena) const {
  AchievementAchiObjV1* n = new AchievementAchiObjV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AchievementAchiObjV1::Clear() {
// @@protoc_insertion_point(message_clear_start:AchievementAchiObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    type_ = -1;
    groupid_ = -1;
    star_ = -1;
    status_ = -1;
    id_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AchievementAchiObjV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AchievementAchiObjV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 GroupId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_groupid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Star = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_star();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &star_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Status = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Id = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Type = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AchievementAchiObjV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AchievementAchiObjV1)
  return false;
#undef DO_
}

void AchievementAchiObjV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AchievementAchiObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 GroupId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->groupid(), output);
  }

  // optional sint32 Star = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->star(), output);
  }

  // optional sint32 Status = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->status(), output);
  }

  // optional sint32 Id = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->id(), output);
  }

  // optional sint32 Type = 6 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AchievementAchiObjV1)
}

::google::protobuf::uint8* AchievementAchiObjV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AchievementAchiObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 GroupId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->groupid(), target);
  }

  // optional sint32 Star = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->star(), target);
  }

  // optional sint32 Status = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->status(), target);
  }

  // optional sint32 Id = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->id(), target);
  }

  // optional sint32 Type = 6 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AchievementAchiObjV1)
  return target;
}

size_t AchievementAchiObjV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AchievementAchiObjV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional sint32 Type = 6 [default = -1];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->type());
    }

    // optional sint32 GroupId = 1 [default = -1];
    if (has_groupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->groupid());
    }

    // optional sint32 Star = 3 [default = -1];
    if (has_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->star());
    }

    // optional sint32 Status = 4 [default = -1];
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->status());
    }

    // optional sint32 Id = 5 [default = -1];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AchievementAchiObjV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AchievementAchiObjV1)
  GOOGLE_DCHECK_NE(&from, this);
  const AchievementAchiObjV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AchievementAchiObjV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AchievementAchiObjV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AchievementAchiObjV1)
    MergeFrom(*source);
  }
}

void AchievementAchiObjV1::MergeFrom(const AchievementAchiObjV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AchievementAchiObjV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000002u) {
      groupid_ = from.groupid_;
    }
    if (cached_has_bits & 0x00000004u) {
      star_ = from.star_;
    }
    if (cached_has_bits & 0x00000008u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00000010u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AchievementAchiObjV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AchievementAchiObjV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AchievementAchiObjV1::CopyFrom(const AchievementAchiObjV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AchievementAchiObjV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AchievementAchiObjV1::IsInitialized() const {
  return true;
}

void AchievementAchiObjV1::Swap(AchievementAchiObjV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AchievementAchiObjV1::InternalSwap(AchievementAchiObjV1* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(groupid_, other->groupid_);
  swap(star_, other->star_);
  swap(status_, other->status_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AchievementAchiObjV1::GetMetadata() const {
  protobuf_AchievementV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AchievementV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AchievementAchiObjV1

// optional sint32 GroupId = 1 [default = -1];
bool AchievementAchiObjV1::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AchievementAchiObjV1::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void AchievementAchiObjV1::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void AchievementAchiObjV1::clear_groupid() {
  groupid_ = -1;
  clear_has_groupid();
}
::google::protobuf::int32 AchievementAchiObjV1::groupid() const {
  // @@protoc_insertion_point(field_get:AchievementAchiObjV1.GroupId)
  return groupid_;
}
void AchievementAchiObjV1::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:AchievementAchiObjV1.GroupId)
}

// optional sint32 Star = 3 [default = -1];
bool AchievementAchiObjV1::has_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AchievementAchiObjV1::set_has_star() {
  _has_bits_[0] |= 0x00000004u;
}
void AchievementAchiObjV1::clear_has_star() {
  _has_bits_[0] &= ~0x00000004u;
}
void AchievementAchiObjV1::clear_star() {
  star_ = -1;
  clear_has_star();
}
::google::protobuf::int32 AchievementAchiObjV1::star() const {
  // @@protoc_insertion_point(field_get:AchievementAchiObjV1.Star)
  return star_;
}
void AchievementAchiObjV1::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:AchievementAchiObjV1.Star)
}

// optional sint32 Status = 4 [default = -1];
bool AchievementAchiObjV1::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AchievementAchiObjV1::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
void AchievementAchiObjV1::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
void AchievementAchiObjV1::clear_status() {
  status_ = -1;
  clear_has_status();
}
::google::protobuf::int32 AchievementAchiObjV1::status() const {
  // @@protoc_insertion_point(field_get:AchievementAchiObjV1.Status)
  return status_;
}
void AchievementAchiObjV1::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:AchievementAchiObjV1.Status)
}

// optional sint32 Id = 5 [default = -1];
bool AchievementAchiObjV1::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AchievementAchiObjV1::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
void AchievementAchiObjV1::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void AchievementAchiObjV1::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 AchievementAchiObjV1::id() const {
  // @@protoc_insertion_point(field_get:AchievementAchiObjV1.Id)
  return id_;
}
void AchievementAchiObjV1::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:AchievementAchiObjV1.Id)
}

// optional sint32 Type = 6 [default = -1];
bool AchievementAchiObjV1::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AchievementAchiObjV1::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void AchievementAchiObjV1::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void AchievementAchiObjV1::clear_type() {
  type_ = -1;
  clear_has_type();
}
::google::protobuf::int32 AchievementAchiObjV1::type() const {
  // @@protoc_insertion_point(field_get:AchievementAchiObjV1.Type)
  return type_;
}
void AchievementAchiObjV1::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:AchievementAchiObjV1.Type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AchievementAchiDataV1::kAchiDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AchievementAchiDataV1::AchievementAchiDataV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_AchievementV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AchievementAchiDataV1)
}
AchievementAchiDataV1::AchievementAchiDataV1(const AchievementAchiDataV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      achidata_(from.achidata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AchievementAchiDataV1)
}

void AchievementAchiDataV1::SharedCtor() {
  _cached_size_ = 0;
}

AchievementAchiDataV1::~AchievementAchiDataV1() {
  // @@protoc_insertion_point(destructor:AchievementAchiDataV1)
  SharedDtor();
}

void AchievementAchiDataV1::SharedDtor() {
}

void AchievementAchiDataV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AchievementAchiDataV1::descriptor() {
  protobuf_AchievementV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AchievementV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AchievementAchiDataV1& AchievementAchiDataV1::default_instance() {
  protobuf_AchievementV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

AchievementAchiDataV1* AchievementAchiDataV1::New(::google::protobuf::Arena* arena) const {
  AchievementAchiDataV1* n = new AchievementAchiDataV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AchievementAchiDataV1::Clear() {
// @@protoc_insertion_point(message_clear_start:AchievementAchiDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  achidata_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AchievementAchiDataV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AchievementAchiDataV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AchievementAchiObjV1 AchiData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_achidata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AchievementAchiDataV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AchievementAchiDataV1)
  return false;
#undef DO_
}

void AchievementAchiDataV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AchievementAchiDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AchievementAchiObjV1 AchiData = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->achidata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->achidata(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AchievementAchiDataV1)
}

::google::protobuf::uint8* AchievementAchiDataV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AchievementAchiDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AchievementAchiObjV1 AchiData = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->achidata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->achidata(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AchievementAchiDataV1)
  return target;
}

size_t AchievementAchiDataV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AchievementAchiDataV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .AchievementAchiObjV1 AchiData = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->achidata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->achidata(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AchievementAchiDataV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AchievementAchiDataV1)
  GOOGLE_DCHECK_NE(&from, this);
  const AchievementAchiDataV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AchievementAchiDataV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AchievementAchiDataV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AchievementAchiDataV1)
    MergeFrom(*source);
  }
}

void AchievementAchiDataV1::MergeFrom(const AchievementAchiDataV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AchievementAchiDataV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  achidata_.MergeFrom(from.achidata_);
}

void AchievementAchiDataV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AchievementAchiDataV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AchievementAchiDataV1::CopyFrom(const AchievementAchiDataV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AchievementAchiDataV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AchievementAchiDataV1::IsInitialized() const {
  return true;
}

void AchievementAchiDataV1::Swap(AchievementAchiDataV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AchievementAchiDataV1::InternalSwap(AchievementAchiDataV1* other) {
  using std::swap;
  achidata_.InternalSwap(&other->achidata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AchievementAchiDataV1::GetMetadata() const {
  protobuf_AchievementV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AchievementV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AchievementAchiDataV1

// repeated .AchievementAchiObjV1 AchiData = 1;
int AchievementAchiDataV1::achidata_size() const {
  return achidata_.size();
}
void AchievementAchiDataV1::clear_achidata() {
  achidata_.Clear();
}
const ::AchievementAchiObjV1& AchievementAchiDataV1::achidata(int index) const {
  // @@protoc_insertion_point(field_get:AchievementAchiDataV1.AchiData)
  return achidata_.Get(index);
}
::AchievementAchiObjV1* AchievementAchiDataV1::mutable_achidata(int index) {
  // @@protoc_insertion_point(field_mutable:AchievementAchiDataV1.AchiData)
  return achidata_.Mutable(index);
}
::AchievementAchiObjV1* AchievementAchiDataV1::add_achidata() {
  // @@protoc_insertion_point(field_add:AchievementAchiDataV1.AchiData)
  return achidata_.Add();
}
::google::protobuf::RepeatedPtrField< ::AchievementAchiObjV1 >*
AchievementAchiDataV1::mutable_achidata() {
  // @@protoc_insertion_point(field_mutable_list:AchievementAchiDataV1.AchiData)
  return &achidata_;
}
const ::google::protobuf::RepeatedPtrField< ::AchievementAchiObjV1 >&
AchievementAchiDataV1::achidata() const {
  // @@protoc_insertion_point(field_list:AchievementAchiDataV1.AchiData)
  return achidata_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
