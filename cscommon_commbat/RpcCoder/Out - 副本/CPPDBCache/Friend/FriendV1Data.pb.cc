// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FriendV1Data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "FriendV1Data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class FriendFriendObjV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FriendFriendObjV1>
     _instance;
} _FriendFriendObjV1_default_instance_;
class FriendFriendDataV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FriendFriendDataV1>
     _instance;
} _FriendFriendDataV1_default_instance_;

namespace protobuf_FriendV1Data_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendFriendObjV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendFriendObjV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendFriendObjV1, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendFriendObjV1, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendFriendObjV1, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendFriendObjV1, prof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendFriendObjV1, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendFriendObjV1, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendFriendObjV1, teammembernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendFriendObjV1, online_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendFriendObjV1, goodfeeling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendFriendObjV1, guildid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendFriendObjV1, guildname_),
  6,
  0,
  7,
  8,
  1,
  9,
  3,
  4,
  5,
  10,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendFriendDataV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendFriendDataV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendFriendDataV1, friendlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendFriendDataV1, blacklist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendFriendDataV1, contactslist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendFriendDataV1, strangerfriendlist_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 16, sizeof(FriendFriendObjV1)},
  { 27, 36, sizeof(FriendFriendDataV1)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_FriendFriendObjV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FriendFriendDataV1_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "FriendV1Data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _FriendFriendObjV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FriendFriendObjV1_default_instance_);_FriendFriendDataV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FriendFriendDataV1_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022FriendV1Data.proto\032\022PublicStruct.proto"
      "\"\366\001\n\021FriendFriendObjV1\022\022\n\006UserId\030\001 \001(\022:\002"
      "-1\022\020\n\010UserName\030\002 \001(\t\022\021\n\005Level\030\003 \001(\021:\002-1\022"
      "\020\n\004Prof\030\004 \001(\021:\002-1\022\021\n\tSignature\030\005 \001(\t\022\022\n\006"
      "TeamId\030\006 \001(\021:\002-1\022\030\n\rTeamMemberNum\030\010 \001(\021:"
      "\0010\022\025\n\006Online\030\t \001(\010:\005false\022\026\n\013GoodFeeling"
      "\030\n \001(\021:\0010\022\023\n\007GuildId\030\013 \001(\021:\002-1\022\021\n\tGuildN"
      "ame\030\014 \001(\t\"\251\001\n\022FriendFriendDataV1\022&\n\nFrie"
      "ndList\030\001 \003(\0132\022.FriendFriendObjV1\022%\n\tBlac"
      "kList\030\002 \003(\0132\022.FriendFriendObjV1\022(\n\014Conta"
      "ctsList\030\003 \003(\0132\022.FriendFriendObjV1\022\032\n\022Str"
      "angerFriendList\030\004 \003(\022"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 461);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FriendV1Data.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_FriendV1Data_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendFriendObjV1::kUserIdFieldNumber;
const int FriendFriendObjV1::kUserNameFieldNumber;
const int FriendFriendObjV1::kLevelFieldNumber;
const int FriendFriendObjV1::kProfFieldNumber;
const int FriendFriendObjV1::kSignatureFieldNumber;
const int FriendFriendObjV1::kTeamIdFieldNumber;
const int FriendFriendObjV1::kTeamMemberNumFieldNumber;
const int FriendFriendObjV1::kOnlineFieldNumber;
const int FriendFriendObjV1::kGoodFeelingFieldNumber;
const int FriendFriendObjV1::kGuildIdFieldNumber;
const int FriendFriendObjV1::kGuildNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendFriendObjV1::FriendFriendObjV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_FriendV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FriendFriendObjV1)
}
FriendFriendObjV1::FriendFriendObjV1(const FriendFriendObjV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signature()) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  guildname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guildname()) {
    guildname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guildname_);
  }
  ::memcpy(&teammembernum_, &from.teammembernum_,
    static_cast<size_t>(reinterpret_cast<char*>(&guildid_) -
    reinterpret_cast<char*>(&teammembernum_)) + sizeof(guildid_));
  // @@protoc_insertion_point(copy_constructor:FriendFriendObjV1)
}

void FriendFriendObjV1::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guildname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&teammembernum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&goodfeeling_) -
      reinterpret_cast<char*>(&teammembernum_)) + sizeof(goodfeeling_));
  userid_ = GOOGLE_LONGLONG(-1);
  level_ = -1;
  prof_ = -1;
  teamid_ = -1;
  guildid_ = -1;
}

FriendFriendObjV1::~FriendFriendObjV1() {
  // @@protoc_insertion_point(destructor:FriendFriendObjV1)
  SharedDtor();
}

void FriendFriendObjV1::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guildname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FriendFriendObjV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendFriendObjV1::descriptor() {
  protobuf_FriendV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_FriendV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendFriendObjV1& FriendFriendObjV1::default_instance() {
  protobuf_FriendV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

FriendFriendObjV1* FriendFriendObjV1::New(::google::protobuf::Arena* arena) const {
  FriendFriendObjV1* n = new FriendFriendObjV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FriendFriendObjV1::Clear() {
// @@protoc_insertion_point(message_clear_start:FriendFriendObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!signature_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*signature_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!guildname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*guildname_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&teammembernum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&goodfeeling_) -
        reinterpret_cast<char*>(&teammembernum_)) + sizeof(goodfeeling_));
    userid_ = GOOGLE_LONGLONG(-1);
    level_ = -1;
  }
  if (cached_has_bits & 1792u) {
    prof_ = -1;
    teamid_ = -1;
    guildid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FriendFriendObjV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FriendFriendObjV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 UserId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string UserName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "FriendFriendObjV1.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Level = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Prof = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_prof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &prof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Signature = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->signature().data(), static_cast<int>(this->signature().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "FriendFriendObjV1.Signature");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TeamId = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_teamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TeamMemberNum = 8 [default = 0];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_teammembernum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &teammembernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool Online = 9 [default = false];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_online();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &online_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 GoodFeeling = 10 [default = 0];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_goodfeeling();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &goodfeeling_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 GuildId = 11 [default = -1];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_guildid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string GuildName = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guildname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guildname().data(), static_cast<int>(this->guildname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "FriendFriendObjV1.GuildName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FriendFriendObjV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FriendFriendObjV1)
  return false;
#undef DO_
}

void FriendFriendObjV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FriendFriendObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->userid(), output);
  }

  // optional string UserName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FriendFriendObjV1.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional sint32 Level = 3 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->level(), output);
  }

  // optional sint32 Prof = 4 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->prof(), output);
  }

  // optional string Signature = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FriendFriendObjV1.Signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->signature(), output);
  }

  // optional sint32 TeamId = 6 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->teamid(), output);
  }

  // optional sint32 TeamMemberNum = 8 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->teammembernum(), output);
  }

  // optional bool Online = 9 [default = false];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->online(), output);
  }

  // optional sint32 GoodFeeling = 10 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(10, this->goodfeeling(), output);
  }

  // optional sint32 GuildId = 11 [default = -1];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(11, this->guildid(), output);
  }

  // optional string GuildName = 12;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guildname().data(), static_cast<int>(this->guildname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FriendFriendObjV1.GuildName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->guildname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FriendFriendObjV1)
}

::google::protobuf::uint8* FriendFriendObjV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FriendFriendObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->userid(), target);
  }

  // optional string UserName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FriendFriendObjV1.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional sint32 Level = 3 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->level(), target);
  }

  // optional sint32 Prof = 4 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->prof(), target);
  }

  // optional string Signature = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FriendFriendObjV1.Signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->signature(), target);
  }

  // optional sint32 TeamId = 6 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->teamid(), target);
  }

  // optional sint32 TeamMemberNum = 8 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->teammembernum(), target);
  }

  // optional bool Online = 9 [default = false];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->online(), target);
  }

  // optional sint32 GoodFeeling = 10 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(10, this->goodfeeling(), target);
  }

  // optional sint32 GuildId = 11 [default = -1];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(11, this->guildid(), target);
  }

  // optional string GuildName = 12;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guildname().data(), static_cast<int>(this->guildname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FriendFriendObjV1.GuildName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->guildname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FriendFriendObjV1)
  return target;
}

size_t FriendFriendObjV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FriendFriendObjV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string UserName = 2;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string Signature = 5;
    if (has_signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->signature());
    }

    // optional string GuildName = 12;
    if (has_guildname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guildname());
    }

    // optional sint32 TeamMemberNum = 8 [default = 0];
    if (has_teammembernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->teammembernum());
    }

    // optional bool Online = 9 [default = false];
    if (has_online()) {
      total_size += 1 + 1;
    }

    // optional sint32 GoodFeeling = 10 [default = 0];
    if (has_goodfeeling()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->goodfeeling());
    }

    // optional sint64 UserId = 1 [default = -1];
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->userid());
    }

    // optional sint32 Level = 3 [default = -1];
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->level());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional sint32 Prof = 4 [default = -1];
    if (has_prof()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->prof());
    }

    // optional sint32 TeamId = 6 [default = -1];
    if (has_teamid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->teamid());
    }

    // optional sint32 GuildId = 11 [default = -1];
    if (has_guildid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->guildid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendFriendObjV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FriendFriendObjV1)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendFriendObjV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendFriendObjV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FriendFriendObjV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FriendFriendObjV1)
    MergeFrom(*source);
  }
}

void FriendFriendObjV1::MergeFrom(const FriendFriendObjV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FriendFriendObjV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_signature();
      signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_guildname();
      guildname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guildname_);
    }
    if (cached_has_bits & 0x00000008u) {
      teammembernum_ = from.teammembernum_;
    }
    if (cached_has_bits & 0x00000010u) {
      online_ = from.online_;
    }
    if (cached_has_bits & 0x00000020u) {
      goodfeeling_ = from.goodfeeling_;
    }
    if (cached_has_bits & 0x00000040u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000080u) {
      level_ = from.level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      prof_ = from.prof_;
    }
    if (cached_has_bits & 0x00000200u) {
      teamid_ = from.teamid_;
    }
    if (cached_has_bits & 0x00000400u) {
      guildid_ = from.guildid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FriendFriendObjV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FriendFriendObjV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendFriendObjV1::CopyFrom(const FriendFriendObjV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FriendFriendObjV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendFriendObjV1::IsInitialized() const {
  return true;
}

void FriendFriendObjV1::Swap(FriendFriendObjV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendFriendObjV1::InternalSwap(FriendFriendObjV1* other) {
  using std::swap;
  username_.Swap(&other->username_);
  signature_.Swap(&other->signature_);
  guildname_.Swap(&other->guildname_);
  swap(teammembernum_, other->teammembernum_);
  swap(online_, other->online_);
  swap(goodfeeling_, other->goodfeeling_);
  swap(userid_, other->userid_);
  swap(level_, other->level_);
  swap(prof_, other->prof_);
  swap(teamid_, other->teamid_);
  swap(guildid_, other->guildid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendFriendObjV1::GetMetadata() const {
  protobuf_FriendV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_FriendV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FriendFriendObjV1

// optional sint64 UserId = 1 [default = -1];
bool FriendFriendObjV1::has_userid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void FriendFriendObjV1::set_has_userid() {
  _has_bits_[0] |= 0x00000040u;
}
void FriendFriendObjV1::clear_has_userid() {
  _has_bits_[0] &= ~0x00000040u;
}
void FriendFriendObjV1::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 FriendFriendObjV1::userid() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.UserId)
  return userid_;
}
void FriendFriendObjV1::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.UserId)
}

// optional string UserName = 2;
bool FriendFriendObjV1::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FriendFriendObjV1::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void FriendFriendObjV1::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void FriendFriendObjV1::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& FriendFriendObjV1::username() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.UserName)
  return username_.GetNoArena();
}
void FriendFriendObjV1::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.UserName)
}
#if LANG_CXX11
void FriendFriendObjV1::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FriendFriendObjV1.UserName)
}
#endif
void FriendFriendObjV1::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FriendFriendObjV1.UserName)
}
void FriendFriendObjV1::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FriendFriendObjV1.UserName)
}
::std::string* FriendFriendObjV1::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:FriendFriendObjV1.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FriendFriendObjV1::release_username() {
  // @@protoc_insertion_point(field_release:FriendFriendObjV1.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendFriendObjV1::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:FriendFriendObjV1.UserName)
}

// optional sint32 Level = 3 [default = -1];
bool FriendFriendObjV1::has_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void FriendFriendObjV1::set_has_level() {
  _has_bits_[0] |= 0x00000080u;
}
void FriendFriendObjV1::clear_has_level() {
  _has_bits_[0] &= ~0x00000080u;
}
void FriendFriendObjV1::clear_level() {
  level_ = -1;
  clear_has_level();
}
::google::protobuf::int32 FriendFriendObjV1::level() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.Level)
  return level_;
}
void FriendFriendObjV1::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.Level)
}

// optional sint32 Prof = 4 [default = -1];
bool FriendFriendObjV1::has_prof() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void FriendFriendObjV1::set_has_prof() {
  _has_bits_[0] |= 0x00000100u;
}
void FriendFriendObjV1::clear_has_prof() {
  _has_bits_[0] &= ~0x00000100u;
}
void FriendFriendObjV1::clear_prof() {
  prof_ = -1;
  clear_has_prof();
}
::google::protobuf::int32 FriendFriendObjV1::prof() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.Prof)
  return prof_;
}
void FriendFriendObjV1::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.Prof)
}

// optional string Signature = 5;
bool FriendFriendObjV1::has_signature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FriendFriendObjV1::set_has_signature() {
  _has_bits_[0] |= 0x00000002u;
}
void FriendFriendObjV1::clear_has_signature() {
  _has_bits_[0] &= ~0x00000002u;
}
void FriendFriendObjV1::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature();
}
const ::std::string& FriendFriendObjV1::signature() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.Signature)
  return signature_.GetNoArena();
}
void FriendFriendObjV1::set_signature(const ::std::string& value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.Signature)
}
#if LANG_CXX11
void FriendFriendObjV1::set_signature(::std::string&& value) {
  set_has_signature();
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FriendFriendObjV1.Signature)
}
#endif
void FriendFriendObjV1::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FriendFriendObjV1.Signature)
}
void FriendFriendObjV1::set_signature(const char* value, size_t size) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FriendFriendObjV1.Signature)
}
::std::string* FriendFriendObjV1::mutable_signature() {
  set_has_signature();
  // @@protoc_insertion_point(field_mutable:FriendFriendObjV1.Signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FriendFriendObjV1::release_signature() {
  // @@protoc_insertion_point(field_release:FriendFriendObjV1.Signature)
  clear_has_signature();
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendFriendObjV1::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:FriendFriendObjV1.Signature)
}

// optional sint32 TeamId = 6 [default = -1];
bool FriendFriendObjV1::has_teamid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void FriendFriendObjV1::set_has_teamid() {
  _has_bits_[0] |= 0x00000200u;
}
void FriendFriendObjV1::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000200u;
}
void FriendFriendObjV1::clear_teamid() {
  teamid_ = -1;
  clear_has_teamid();
}
::google::protobuf::int32 FriendFriendObjV1::teamid() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.TeamId)
  return teamid_;
}
void FriendFriendObjV1::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.TeamId)
}

// optional sint32 TeamMemberNum = 8 [default = 0];
bool FriendFriendObjV1::has_teammembernum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FriendFriendObjV1::set_has_teammembernum() {
  _has_bits_[0] |= 0x00000008u;
}
void FriendFriendObjV1::clear_has_teammembernum() {
  _has_bits_[0] &= ~0x00000008u;
}
void FriendFriendObjV1::clear_teammembernum() {
  teammembernum_ = 0;
  clear_has_teammembernum();
}
::google::protobuf::int32 FriendFriendObjV1::teammembernum() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.TeamMemberNum)
  return teammembernum_;
}
void FriendFriendObjV1::set_teammembernum(::google::protobuf::int32 value) {
  set_has_teammembernum();
  teammembernum_ = value;
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.TeamMemberNum)
}

// optional bool Online = 9 [default = false];
bool FriendFriendObjV1::has_online() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void FriendFriendObjV1::set_has_online() {
  _has_bits_[0] |= 0x00000010u;
}
void FriendFriendObjV1::clear_has_online() {
  _has_bits_[0] &= ~0x00000010u;
}
void FriendFriendObjV1::clear_online() {
  online_ = false;
  clear_has_online();
}
bool FriendFriendObjV1::online() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.Online)
  return online_;
}
void FriendFriendObjV1::set_online(bool value) {
  set_has_online();
  online_ = value;
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.Online)
}

// optional sint32 GoodFeeling = 10 [default = 0];
bool FriendFriendObjV1::has_goodfeeling() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void FriendFriendObjV1::set_has_goodfeeling() {
  _has_bits_[0] |= 0x00000020u;
}
void FriendFriendObjV1::clear_has_goodfeeling() {
  _has_bits_[0] &= ~0x00000020u;
}
void FriendFriendObjV1::clear_goodfeeling() {
  goodfeeling_ = 0;
  clear_has_goodfeeling();
}
::google::protobuf::int32 FriendFriendObjV1::goodfeeling() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.GoodFeeling)
  return goodfeeling_;
}
void FriendFriendObjV1::set_goodfeeling(::google::protobuf::int32 value) {
  set_has_goodfeeling();
  goodfeeling_ = value;
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.GoodFeeling)
}

// optional sint32 GuildId = 11 [default = -1];
bool FriendFriendObjV1::has_guildid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void FriendFriendObjV1::set_has_guildid() {
  _has_bits_[0] |= 0x00000400u;
}
void FriendFriendObjV1::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000400u;
}
void FriendFriendObjV1::clear_guildid() {
  guildid_ = -1;
  clear_has_guildid();
}
::google::protobuf::int32 FriendFriendObjV1::guildid() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.GuildId)
  return guildid_;
}
void FriendFriendObjV1::set_guildid(::google::protobuf::int32 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.GuildId)
}

// optional string GuildName = 12;
bool FriendFriendObjV1::has_guildname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FriendFriendObjV1::set_has_guildname() {
  _has_bits_[0] |= 0x00000004u;
}
void FriendFriendObjV1::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000004u;
}
void FriendFriendObjV1::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guildname();
}
const ::std::string& FriendFriendObjV1::guildname() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.GuildName)
  return guildname_.GetNoArena();
}
void FriendFriendObjV1::set_guildname(const ::std::string& value) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.GuildName)
}
#if LANG_CXX11
void FriendFriendObjV1::set_guildname(::std::string&& value) {
  set_has_guildname();
  guildname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FriendFriendObjV1.GuildName)
}
#endif
void FriendFriendObjV1::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FriendFriendObjV1.GuildName)
}
void FriendFriendObjV1::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FriendFriendObjV1.GuildName)
}
::std::string* FriendFriendObjV1::mutable_guildname() {
  set_has_guildname();
  // @@protoc_insertion_point(field_mutable:FriendFriendObjV1.GuildName)
  return guildname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FriendFriendObjV1::release_guildname() {
  // @@protoc_insertion_point(field_release:FriendFriendObjV1.GuildName)
  clear_has_guildname();
  return guildname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendFriendObjV1::set_allocated_guildname(::std::string* guildname) {
  if (guildname != NULL) {
    set_has_guildname();
  } else {
    clear_has_guildname();
  }
  guildname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:FriendFriendObjV1.GuildName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendFriendDataV1::kFriendListFieldNumber;
const int FriendFriendDataV1::kBlackListFieldNumber;
const int FriendFriendDataV1::kContactsListFieldNumber;
const int FriendFriendDataV1::kStrangerFriendListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendFriendDataV1::FriendFriendDataV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_FriendV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FriendFriendDataV1)
}
FriendFriendDataV1::FriendFriendDataV1(const FriendFriendDataV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      friendlist_(from.friendlist_),
      blacklist_(from.blacklist_),
      contactslist_(from.contactslist_),
      strangerfriendlist_(from.strangerfriendlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:FriendFriendDataV1)
}

void FriendFriendDataV1::SharedCtor() {
  _cached_size_ = 0;
}

FriendFriendDataV1::~FriendFriendDataV1() {
  // @@protoc_insertion_point(destructor:FriendFriendDataV1)
  SharedDtor();
}

void FriendFriendDataV1::SharedDtor() {
}

void FriendFriendDataV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendFriendDataV1::descriptor() {
  protobuf_FriendV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_FriendV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendFriendDataV1& FriendFriendDataV1::default_instance() {
  protobuf_FriendV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

FriendFriendDataV1* FriendFriendDataV1::New(::google::protobuf::Arena* arena) const {
  FriendFriendDataV1* n = new FriendFriendDataV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FriendFriendDataV1::Clear() {
// @@protoc_insertion_point(message_clear_start:FriendFriendDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friendlist_.Clear();
  blacklist_.Clear();
  contactslist_.Clear();
  strangerfriendlist_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FriendFriendDataV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FriendFriendDataV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .FriendFriendObjV1 FriendList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friendlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .FriendFriendObjV1 BlackList = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_blacklist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .FriendFriendObjV1 ContactsList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_contactslist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 StrangerFriendList = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 32u, input, this->mutable_strangerfriendlist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_strangerfriendlist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FriendFriendDataV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FriendFriendDataV1)
  return false;
#undef DO_
}

void FriendFriendDataV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FriendFriendDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .FriendFriendObjV1 FriendList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friendlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->friendlist(static_cast<int>(i)), output);
  }

  // repeated .FriendFriendObjV1 BlackList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blacklist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->blacklist(static_cast<int>(i)), output);
  }

  // repeated .FriendFriendObjV1 ContactsList = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contactslist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->contactslist(static_cast<int>(i)), output);
  }

  // repeated sint64 StrangerFriendList = 4;
  for (int i = 0, n = this->strangerfriendlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(
      4, this->strangerfriendlist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FriendFriendDataV1)
}

::google::protobuf::uint8* FriendFriendDataV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FriendFriendDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .FriendFriendObjV1 FriendList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friendlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->friendlist(static_cast<int>(i)), deterministic, target);
  }

  // repeated .FriendFriendObjV1 BlackList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blacklist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->blacklist(static_cast<int>(i)), deterministic, target);
  }

  // repeated .FriendFriendObjV1 ContactsList = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contactslist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->contactslist(static_cast<int>(i)), deterministic, target);
  }

  // repeated sint64 StrangerFriendList = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSInt64ToArray(4, this->strangerfriendlist_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FriendFriendDataV1)
  return target;
}

size_t FriendFriendDataV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FriendFriendDataV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .FriendFriendObjV1 FriendList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->friendlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friendlist(static_cast<int>(i)));
    }
  }

  // repeated .FriendFriendObjV1 BlackList = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->blacklist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->blacklist(static_cast<int>(i)));
    }
  }

  // repeated .FriendFriendObjV1 ContactsList = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->contactslist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->contactslist(static_cast<int>(i)));
    }
  }

  // repeated sint64 StrangerFriendList = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->strangerfriendlist_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->strangerfriendlist_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendFriendDataV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FriendFriendDataV1)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendFriendDataV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendFriendDataV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FriendFriendDataV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FriendFriendDataV1)
    MergeFrom(*source);
  }
}

void FriendFriendDataV1::MergeFrom(const FriendFriendDataV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FriendFriendDataV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friendlist_.MergeFrom(from.friendlist_);
  blacklist_.MergeFrom(from.blacklist_);
  contactslist_.MergeFrom(from.contactslist_);
  strangerfriendlist_.MergeFrom(from.strangerfriendlist_);
}

void FriendFriendDataV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FriendFriendDataV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendFriendDataV1::CopyFrom(const FriendFriendDataV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FriendFriendDataV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendFriendDataV1::IsInitialized() const {
  return true;
}

void FriendFriendDataV1::Swap(FriendFriendDataV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendFriendDataV1::InternalSwap(FriendFriendDataV1* other) {
  using std::swap;
  friendlist_.InternalSwap(&other->friendlist_);
  blacklist_.InternalSwap(&other->blacklist_);
  contactslist_.InternalSwap(&other->contactslist_);
  strangerfriendlist_.InternalSwap(&other->strangerfriendlist_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendFriendDataV1::GetMetadata() const {
  protobuf_FriendV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_FriendV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FriendFriendDataV1

// repeated .FriendFriendObjV1 FriendList = 1;
int FriendFriendDataV1::friendlist_size() const {
  return friendlist_.size();
}
void FriendFriendDataV1::clear_friendlist() {
  friendlist_.Clear();
}
const ::FriendFriendObjV1& FriendFriendDataV1::friendlist(int index) const {
  // @@protoc_insertion_point(field_get:FriendFriendDataV1.FriendList)
  return friendlist_.Get(index);
}
::FriendFriendObjV1* FriendFriendDataV1::mutable_friendlist(int index) {
  // @@protoc_insertion_point(field_mutable:FriendFriendDataV1.FriendList)
  return friendlist_.Mutable(index);
}
::FriendFriendObjV1* FriendFriendDataV1::add_friendlist() {
  // @@protoc_insertion_point(field_add:FriendFriendDataV1.FriendList)
  return friendlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 >*
FriendFriendDataV1::mutable_friendlist() {
  // @@protoc_insertion_point(field_mutable_list:FriendFriendDataV1.FriendList)
  return &friendlist_;
}
const ::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 >&
FriendFriendDataV1::friendlist() const {
  // @@protoc_insertion_point(field_list:FriendFriendDataV1.FriendList)
  return friendlist_;
}

// repeated .FriendFriendObjV1 BlackList = 2;
int FriendFriendDataV1::blacklist_size() const {
  return blacklist_.size();
}
void FriendFriendDataV1::clear_blacklist() {
  blacklist_.Clear();
}
const ::FriendFriendObjV1& FriendFriendDataV1::blacklist(int index) const {
  // @@protoc_insertion_point(field_get:FriendFriendDataV1.BlackList)
  return blacklist_.Get(index);
}
::FriendFriendObjV1* FriendFriendDataV1::mutable_blacklist(int index) {
  // @@protoc_insertion_point(field_mutable:FriendFriendDataV1.BlackList)
  return blacklist_.Mutable(index);
}
::FriendFriendObjV1* FriendFriendDataV1::add_blacklist() {
  // @@protoc_insertion_point(field_add:FriendFriendDataV1.BlackList)
  return blacklist_.Add();
}
::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 >*
FriendFriendDataV1::mutable_blacklist() {
  // @@protoc_insertion_point(field_mutable_list:FriendFriendDataV1.BlackList)
  return &blacklist_;
}
const ::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 >&
FriendFriendDataV1::blacklist() const {
  // @@protoc_insertion_point(field_list:FriendFriendDataV1.BlackList)
  return blacklist_;
}

// repeated .FriendFriendObjV1 ContactsList = 3;
int FriendFriendDataV1::contactslist_size() const {
  return contactslist_.size();
}
void FriendFriendDataV1::clear_contactslist() {
  contactslist_.Clear();
}
const ::FriendFriendObjV1& FriendFriendDataV1::contactslist(int index) const {
  // @@protoc_insertion_point(field_get:FriendFriendDataV1.ContactsList)
  return contactslist_.Get(index);
}
::FriendFriendObjV1* FriendFriendDataV1::mutable_contactslist(int index) {
  // @@protoc_insertion_point(field_mutable:FriendFriendDataV1.ContactsList)
  return contactslist_.Mutable(index);
}
::FriendFriendObjV1* FriendFriendDataV1::add_contactslist() {
  // @@protoc_insertion_point(field_add:FriendFriendDataV1.ContactsList)
  return contactslist_.Add();
}
::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 >*
FriendFriendDataV1::mutable_contactslist() {
  // @@protoc_insertion_point(field_mutable_list:FriendFriendDataV1.ContactsList)
  return &contactslist_;
}
const ::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 >&
FriendFriendDataV1::contactslist() const {
  // @@protoc_insertion_point(field_list:FriendFriendDataV1.ContactsList)
  return contactslist_;
}

// repeated sint64 StrangerFriendList = 4;
int FriendFriendDataV1::strangerfriendlist_size() const {
  return strangerfriendlist_.size();
}
void FriendFriendDataV1::clear_strangerfriendlist() {
  strangerfriendlist_.Clear();
}
::google::protobuf::int64 FriendFriendDataV1::strangerfriendlist(int index) const {
  // @@protoc_insertion_point(field_get:FriendFriendDataV1.StrangerFriendList)
  return strangerfriendlist_.Get(index);
}
void FriendFriendDataV1::set_strangerfriendlist(int index, ::google::protobuf::int64 value) {
  strangerfriendlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:FriendFriendDataV1.StrangerFriendList)
}
void FriendFriendDataV1::add_strangerfriendlist(::google::protobuf::int64 value) {
  strangerfriendlist_.Add(value);
  // @@protoc_insertion_point(field_add:FriendFriendDataV1.StrangerFriendList)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
FriendFriendDataV1::strangerfriendlist() const {
  // @@protoc_insertion_point(field_list:FriendFriendDataV1.StrangerFriendList)
  return strangerfriendlist_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
FriendFriendDataV1::mutable_strangerfriendlist() {
  // @@protoc_insertion_point(field_mutable_list:FriendFriendDataV1.StrangerFriendList)
  return &strangerfriendlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
