// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GuildV1Data.proto

#ifndef PROTOBUF_GuildV1Data_2eproto__INCLUDED
#define PROTOBUF_GuildV1Data_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)
class GuildGuildListV1;
class GuildGuildListV1DefaultTypeInternal;
extern GuildGuildListV1DefaultTypeInternal _GuildGuildListV1_default_instance_;

namespace protobuf_GuildV1Data_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_GuildV1Data_2eproto

// ===================================================================

class GuildGuildListV1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildGuildListV1) */ {
 public:
  GuildGuildListV1();
  virtual ~GuildGuildListV1();

  GuildGuildListV1(const GuildGuildListV1& from);

  inline GuildGuildListV1& operator=(const GuildGuildListV1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildGuildListV1(GuildGuildListV1&& from) noexcept
    : GuildGuildListV1() {
    *this = ::std::move(from);
  }

  inline GuildGuildListV1& operator=(GuildGuildListV1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildGuildListV1& default_instance();

  static inline const GuildGuildListV1* internal_default_instance() {
    return reinterpret_cast<const GuildGuildListV1*>(
               &_GuildGuildListV1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GuildGuildListV1* other);
  friend void swap(GuildGuildListV1& a, GuildGuildListV1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildGuildListV1* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildGuildListV1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildGuildListV1& from);
  void MergeFrom(const GuildGuildListV1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildGuildListV1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GuildInfoObj GuildData = 1;
  bool has_guilddata() const;
  void clear_guilddata();
  static const int kGuildDataFieldNumber = 1;
  const ::GuildInfoObj& guilddata() const;
  ::GuildInfoObj* mutable_guilddata();
  ::GuildInfoObj* release_guilddata();
  void set_allocated_guilddata(::GuildInfoObj* guilddata);

  // @@protoc_insertion_point(class_scope:GuildGuildListV1)
 private:
  void set_has_guilddata();
  void clear_has_guilddata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::GuildInfoObj* guilddata_;
  friend struct protobuf_GuildV1Data_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GuildGuildListV1

// optional .GuildInfoObj GuildData = 1;
inline bool GuildGuildListV1::has_guilddata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildGuildListV1::set_has_guilddata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildGuildListV1::clear_has_guilddata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildGuildListV1::clear_guilddata() {
  if (guilddata_ != NULL) guilddata_->::GuildInfoObj::Clear();
  clear_has_guilddata();
}
inline const ::GuildInfoObj& GuildGuildListV1::guilddata() const {
  const ::GuildInfoObj* p = guilddata_;
  // @@protoc_insertion_point(field_get:GuildGuildListV1.GuildData)
  return p != NULL ? *p : *reinterpret_cast<const ::GuildInfoObj*>(
      &::_GuildInfoObj_default_instance_);
}
inline ::GuildInfoObj* GuildGuildListV1::mutable_guilddata() {
  set_has_guilddata();
  if (guilddata_ == NULL) {
    guilddata_ = new ::GuildInfoObj;
  }
  // @@protoc_insertion_point(field_mutable:GuildGuildListV1.GuildData)
  return guilddata_;
}
inline ::GuildInfoObj* GuildGuildListV1::release_guilddata() {
  // @@protoc_insertion_point(field_release:GuildGuildListV1.GuildData)
  clear_has_guilddata();
  ::GuildInfoObj* temp = guilddata_;
  guilddata_ = NULL;
  return temp;
}
inline void GuildGuildListV1::set_allocated_guilddata(::GuildInfoObj* guilddata) {
  delete guilddata_;
  guilddata_ = guilddata;
  if (guilddata) {
    set_has_guilddata();
  } else {
    clear_has_guilddata();
  }
  // @@protoc_insertion_point(field_set_allocated:GuildGuildListV1.GuildData)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GuildV1Data_2eproto__INCLUDED
