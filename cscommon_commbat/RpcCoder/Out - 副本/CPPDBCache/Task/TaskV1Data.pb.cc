// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TaskV1Data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "TaskV1Data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class TaskTaskObjV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TaskTaskObjV1>
     _instance;
} _TaskTaskObjV1_default_instance_;
class TaskTaskDataV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TaskTaskDataV1>
     _instance;
} _TaskTaskDataV1_default_instance_;
class TaskTaskTargetObjV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TaskTaskTargetObjV1>
     _instance;
} _TaskTaskTargetObjV1_default_instance_;
class TaskUnacceptedTaskObjV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TaskUnacceptedTaskObjV1>
     _instance;
} _TaskUnacceptedTaskObjV1_default_instance_;

namespace protobuf_TaskV1Data_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskObjV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskObjV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskObjV1, taskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskObjV1, taskstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskObjV1, tasktarget_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskObjV1, tasktype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskObjV1, isorder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskObjV1, isautosubmit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskObjV1, collectionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskObjV1, dungeonid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskObjV1, guild_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskObjV1, objid_),
  1,
  2,
  ~0u,
  3,
  4,
  0,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskDataV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskDataV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskDataV1, alltaskarray_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskDataV1, unacceptedtaskarray_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskDataV1, proftaskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskDataV1, proftaskcompcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskDataV1, onedragontaskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskDataV1, onedragonringnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskDataV1, onedragoncomplatecount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskDataV1, onedragondungeonid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskDataV1, guildspycomplatecount_),
  ~0u,
  ~0u,
  0,
  1,
  ~0u,
  2,
  3,
  5,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskTargetObjV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskTargetObjV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskTargetObjV1, targettype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskTargetObjV1, targetid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskTargetObjV1, curnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskTargetObjV1, totalnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskTaskTargetObjV1, id_),
  1,
  2,
  3,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskUnacceptedTaskObjV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskUnacceptedTaskObjV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskUnacceptedTaskObjV1, taskid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskUnacceptedTaskObjV1, tasktype_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, sizeof(TaskTaskObjV1)},
  { 25, 39, sizeof(TaskTaskDataV1)},
  { 48, 58, sizeof(TaskTaskTargetObjV1)},
  { 63, 70, sizeof(TaskUnacceptedTaskObjV1)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TaskTaskObjV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TaskTaskDataV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TaskTaskTargetObjV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TaskUnacceptedTaskObjV1_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "TaskV1Data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _TaskTaskObjV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TaskTaskObjV1_default_instance_);_TaskTaskDataV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TaskTaskDataV1_default_instance_);_TaskTaskTargetObjV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TaskTaskTargetObjV1_default_instance_);_TaskUnacceptedTaskObjV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TaskUnacceptedTaskObjV1_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020TaskV1Data.proto\032\022PublicStruct.proto\"\205"
      "\002\n\rTaskTaskObjV1\022\022\n\006TaskId\030\001 \001(\021:\002-1\022\025\n\t"
      "TaskState\030\002 \001(\021:\002-1\022(\n\nTaskTarget\030\003 \003(\0132"
      "\024.TaskTaskTargetObjV1\022\024\n\010TaskType\030\004 \001(\021:"
      "\002-1\022\025\n\007IsOrder\030\005 \001(\010:\004true\022\033\n\014IsAutoSubm"
      "it\030\006 \001(\010:\005false\022\030\n\014CollectionId\030\007 \001(\021:\002-"
      "1\022\025\n\tDungeonId\030\t \001(\021:\002-1\022\021\n\005Guild\030\n \001(\021:"
      "\002-1\022\021\n\005ObjId\030\013 \001(\021:\002-1\"\275\002\n\016TaskTaskDataV"
      "1\022$\n\014AllTaskArray\030\002 \003(\0132\016.TaskTaskObjV1\022"
      "5\n\023UnacceptedTaskArray\030\003 \003(\0132\030.TaskUnacc"
      "eptedTaskObjV1\022\025\n\nProfTaskId\030\004 \001(\021:\0010\022\034\n"
      "\021ProfTaskCompCount\030\005 \001(\021:\0010\022\027\n\017OneDragon"
      "TaskId\030\006 \003(\021\022\033\n\020OneDragonRingNum\030\007 \001(\021:\001"
      "0\022!\n\026OneDragonComplateCount\030\010 \001(\021:\0010\022\036\n\022"
      "OneDragonDungeonId\030\t \001(\021:\002-1\022 \n\025GuildSpy"
      "ComplateCount\030\n \001(\021:\0010\"}\n\023TaskTaskTarget"
      "ObjV1\022\026\n\nTargetType\030\001 \001(\021:\002-1\022\024\n\010TargetI"
      "d\030\002 \001(\021:\002-1\022\022\n\006CurNum\030\003 \001(\021:\002-1\022\024\n\010Total"
      "Num\030\004 \001(\021:\002-1\022\016\n\002Id\030\006 \001(\021:\002-1\"C\n\027TaskUna"
      "cceptedTaskObjV1\022\022\n\006TaskId\030\001 \001(\021:\002-1\022\024\n\010"
      "TaskType\030\002 \001(\021:\002-1"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 818);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TaskV1Data.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_TaskV1Data_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskTaskObjV1::kTaskIdFieldNumber;
const int TaskTaskObjV1::kTaskStateFieldNumber;
const int TaskTaskObjV1::kTaskTargetFieldNumber;
const int TaskTaskObjV1::kTaskTypeFieldNumber;
const int TaskTaskObjV1::kIsOrderFieldNumber;
const int TaskTaskObjV1::kIsAutoSubmitFieldNumber;
const int TaskTaskObjV1::kCollectionIdFieldNumber;
const int TaskTaskObjV1::kDungeonIdFieldNumber;
const int TaskTaskObjV1::kGuildFieldNumber;
const int TaskTaskObjV1::kObjIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskTaskObjV1::TaskTaskObjV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TaskV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TaskTaskObjV1)
}
TaskTaskObjV1::TaskTaskObjV1(const TaskTaskObjV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      tasktarget_(from.tasktarget_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isautosubmit_, &from.isautosubmit_,
    static_cast<size_t>(reinterpret_cast<char*>(&objid_) -
    reinterpret_cast<char*>(&isautosubmit_)) + sizeof(objid_));
  // @@protoc_insertion_point(copy_constructor:TaskTaskObjV1)
}

void TaskTaskObjV1::SharedCtor() {
  _cached_size_ = 0;
  isautosubmit_ = false;
  taskid_ = -1;
  taskstate_ = -1;
  tasktype_ = -1;
  isorder_ = true;
  collectionid_ = -1;
  dungeonid_ = -1;
  guild_ = -1;
  objid_ = -1;
}

TaskTaskObjV1::~TaskTaskObjV1() {
  // @@protoc_insertion_point(destructor:TaskTaskObjV1)
  SharedDtor();
}

void TaskTaskObjV1::SharedDtor() {
}

void TaskTaskObjV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskTaskObjV1::descriptor() {
  protobuf_TaskV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TaskV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskTaskObjV1& TaskTaskObjV1::default_instance() {
  protobuf_TaskV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

TaskTaskObjV1* TaskTaskObjV1::New(::google::protobuf::Arena* arena) const {
  TaskTaskObjV1* n = new TaskTaskObjV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskTaskObjV1::Clear() {
// @@protoc_insertion_point(message_clear_start:TaskTaskObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tasktarget_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    isautosubmit_ = false;
    taskid_ = -1;
    taskstate_ = -1;
    tasktype_ = -1;
    isorder_ = true;
    collectionid_ = -1;
    dungeonid_ = -1;
    guild_ = -1;
  }
  objid_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TaskTaskObjV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TaskTaskObjV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 TaskId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_taskid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &taskid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TaskState = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_taskstate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &taskstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TaskTaskTargetObjV1 TaskTarget = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tasktarget()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TaskType = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_tasktype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &tasktype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsOrder = 5 [default = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_isorder();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isorder_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsAutoSubmit = 6 [default = false];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_isautosubmit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isautosubmit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 CollectionId = 7 [default = -1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_collectionid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &collectionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 DungeonId = 9 [default = -1];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_dungeonid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &dungeonid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Guild = 10 [default = -1];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_guild();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &guild_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ObjId = 11 [default = -1];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_objid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &objid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TaskTaskObjV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TaskTaskObjV1)
  return false;
#undef DO_
}

void TaskTaskObjV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TaskTaskObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TaskId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->taskid(), output);
  }

  // optional sint32 TaskState = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->taskstate(), output);
  }

  // repeated .TaskTaskTargetObjV1 TaskTarget = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasktarget_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->tasktarget(static_cast<int>(i)), output);
  }

  // optional sint32 TaskType = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->tasktype(), output);
  }

  // optional bool IsOrder = 5 [default = true];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->isorder(), output);
  }

  // optional bool IsAutoSubmit = 6 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->isautosubmit(), output);
  }

  // optional sint32 CollectionId = 7 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->collectionid(), output);
  }

  // optional sint32 DungeonId = 9 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(9, this->dungeonid(), output);
  }

  // optional sint32 Guild = 10 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(10, this->guild(), output);
  }

  // optional sint32 ObjId = 11 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(11, this->objid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TaskTaskObjV1)
}

::google::protobuf::uint8* TaskTaskObjV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TaskTaskObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TaskId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->taskid(), target);
  }

  // optional sint32 TaskState = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->taskstate(), target);
  }

  // repeated .TaskTaskTargetObjV1 TaskTarget = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasktarget_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->tasktarget(static_cast<int>(i)), deterministic, target);
  }

  // optional sint32 TaskType = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->tasktype(), target);
  }

  // optional bool IsOrder = 5 [default = true];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->isorder(), target);
  }

  // optional bool IsAutoSubmit = 6 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->isautosubmit(), target);
  }

  // optional sint32 CollectionId = 7 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->collectionid(), target);
  }

  // optional sint32 DungeonId = 9 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(9, this->dungeonid(), target);
  }

  // optional sint32 Guild = 10 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(10, this->guild(), target);
  }

  // optional sint32 ObjId = 11 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(11, this->objid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TaskTaskObjV1)
  return target;
}

size_t TaskTaskObjV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TaskTaskObjV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .TaskTaskTargetObjV1 TaskTarget = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->tasktarget_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tasktarget(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional bool IsAutoSubmit = 6 [default = false];
    if (has_isautosubmit()) {
      total_size += 1 + 1;
    }

    // optional sint32 TaskId = 1 [default = -1];
    if (has_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->taskid());
    }

    // optional sint32 TaskState = 2 [default = -1];
    if (has_taskstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->taskstate());
    }

    // optional sint32 TaskType = 4 [default = -1];
    if (has_tasktype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->tasktype());
    }

    // optional bool IsOrder = 5 [default = true];
    if (has_isorder()) {
      total_size += 1 + 1;
    }

    // optional sint32 CollectionId = 7 [default = -1];
    if (has_collectionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->collectionid());
    }

    // optional sint32 DungeonId = 9 [default = -1];
    if (has_dungeonid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->dungeonid());
    }

    // optional sint32 Guild = 10 [default = -1];
    if (has_guild()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->guild());
    }

  }
  // optional sint32 ObjId = 11 [default = -1];
  if (has_objid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->objid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskTaskObjV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TaskTaskObjV1)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskTaskObjV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskTaskObjV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TaskTaskObjV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TaskTaskObjV1)
    MergeFrom(*source);
  }
}

void TaskTaskObjV1::MergeFrom(const TaskTaskObjV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TaskTaskObjV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tasktarget_.MergeFrom(from.tasktarget_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      isautosubmit_ = from.isautosubmit_;
    }
    if (cached_has_bits & 0x00000002u) {
      taskid_ = from.taskid_;
    }
    if (cached_has_bits & 0x00000004u) {
      taskstate_ = from.taskstate_;
    }
    if (cached_has_bits & 0x00000008u) {
      tasktype_ = from.tasktype_;
    }
    if (cached_has_bits & 0x00000010u) {
      isorder_ = from.isorder_;
    }
    if (cached_has_bits & 0x00000020u) {
      collectionid_ = from.collectionid_;
    }
    if (cached_has_bits & 0x00000040u) {
      dungeonid_ = from.dungeonid_;
    }
    if (cached_has_bits & 0x00000080u) {
      guild_ = from.guild_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_objid(from.objid());
  }
}

void TaskTaskObjV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TaskTaskObjV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskTaskObjV1::CopyFrom(const TaskTaskObjV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TaskTaskObjV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskTaskObjV1::IsInitialized() const {
  return true;
}

void TaskTaskObjV1::Swap(TaskTaskObjV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskTaskObjV1::InternalSwap(TaskTaskObjV1* other) {
  using std::swap;
  tasktarget_.InternalSwap(&other->tasktarget_);
  swap(isautosubmit_, other->isautosubmit_);
  swap(taskid_, other->taskid_);
  swap(taskstate_, other->taskstate_);
  swap(tasktype_, other->tasktype_);
  swap(isorder_, other->isorder_);
  swap(collectionid_, other->collectionid_);
  swap(dungeonid_, other->dungeonid_);
  swap(guild_, other->guild_);
  swap(objid_, other->objid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskTaskObjV1::GetMetadata() const {
  protobuf_TaskV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TaskV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskTaskObjV1

// optional sint32 TaskId = 1 [default = -1];
bool TaskTaskObjV1::has_taskid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TaskTaskObjV1::set_has_taskid() {
  _has_bits_[0] |= 0x00000002u;
}
void TaskTaskObjV1::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000002u;
}
void TaskTaskObjV1::clear_taskid() {
  taskid_ = -1;
  clear_has_taskid();
}
::google::protobuf::int32 TaskTaskObjV1::taskid() const {
  // @@protoc_insertion_point(field_get:TaskTaskObjV1.TaskId)
  return taskid_;
}
void TaskTaskObjV1::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:TaskTaskObjV1.TaskId)
}

// optional sint32 TaskState = 2 [default = -1];
bool TaskTaskObjV1::has_taskstate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TaskTaskObjV1::set_has_taskstate() {
  _has_bits_[0] |= 0x00000004u;
}
void TaskTaskObjV1::clear_has_taskstate() {
  _has_bits_[0] &= ~0x00000004u;
}
void TaskTaskObjV1::clear_taskstate() {
  taskstate_ = -1;
  clear_has_taskstate();
}
::google::protobuf::int32 TaskTaskObjV1::taskstate() const {
  // @@protoc_insertion_point(field_get:TaskTaskObjV1.TaskState)
  return taskstate_;
}
void TaskTaskObjV1::set_taskstate(::google::protobuf::int32 value) {
  set_has_taskstate();
  taskstate_ = value;
  // @@protoc_insertion_point(field_set:TaskTaskObjV1.TaskState)
}

// repeated .TaskTaskTargetObjV1 TaskTarget = 3;
int TaskTaskObjV1::tasktarget_size() const {
  return tasktarget_.size();
}
void TaskTaskObjV1::clear_tasktarget() {
  tasktarget_.Clear();
}
const ::TaskTaskTargetObjV1& TaskTaskObjV1::tasktarget(int index) const {
  // @@protoc_insertion_point(field_get:TaskTaskObjV1.TaskTarget)
  return tasktarget_.Get(index);
}
::TaskTaskTargetObjV1* TaskTaskObjV1::mutable_tasktarget(int index) {
  // @@protoc_insertion_point(field_mutable:TaskTaskObjV1.TaskTarget)
  return tasktarget_.Mutable(index);
}
::TaskTaskTargetObjV1* TaskTaskObjV1::add_tasktarget() {
  // @@protoc_insertion_point(field_add:TaskTaskObjV1.TaskTarget)
  return tasktarget_.Add();
}
::google::protobuf::RepeatedPtrField< ::TaskTaskTargetObjV1 >*
TaskTaskObjV1::mutable_tasktarget() {
  // @@protoc_insertion_point(field_mutable_list:TaskTaskObjV1.TaskTarget)
  return &tasktarget_;
}
const ::google::protobuf::RepeatedPtrField< ::TaskTaskTargetObjV1 >&
TaskTaskObjV1::tasktarget() const {
  // @@protoc_insertion_point(field_list:TaskTaskObjV1.TaskTarget)
  return tasktarget_;
}

// optional sint32 TaskType = 4 [default = -1];
bool TaskTaskObjV1::has_tasktype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TaskTaskObjV1::set_has_tasktype() {
  _has_bits_[0] |= 0x00000008u;
}
void TaskTaskObjV1::clear_has_tasktype() {
  _has_bits_[0] &= ~0x00000008u;
}
void TaskTaskObjV1::clear_tasktype() {
  tasktype_ = -1;
  clear_has_tasktype();
}
::google::protobuf::int32 TaskTaskObjV1::tasktype() const {
  // @@protoc_insertion_point(field_get:TaskTaskObjV1.TaskType)
  return tasktype_;
}
void TaskTaskObjV1::set_tasktype(::google::protobuf::int32 value) {
  set_has_tasktype();
  tasktype_ = value;
  // @@protoc_insertion_point(field_set:TaskTaskObjV1.TaskType)
}

// optional bool IsOrder = 5 [default = true];
bool TaskTaskObjV1::has_isorder() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TaskTaskObjV1::set_has_isorder() {
  _has_bits_[0] |= 0x00000010u;
}
void TaskTaskObjV1::clear_has_isorder() {
  _has_bits_[0] &= ~0x00000010u;
}
void TaskTaskObjV1::clear_isorder() {
  isorder_ = true;
  clear_has_isorder();
}
bool TaskTaskObjV1::isorder() const {
  // @@protoc_insertion_point(field_get:TaskTaskObjV1.IsOrder)
  return isorder_;
}
void TaskTaskObjV1::set_isorder(bool value) {
  set_has_isorder();
  isorder_ = value;
  // @@protoc_insertion_point(field_set:TaskTaskObjV1.IsOrder)
}

// optional bool IsAutoSubmit = 6 [default = false];
bool TaskTaskObjV1::has_isautosubmit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TaskTaskObjV1::set_has_isautosubmit() {
  _has_bits_[0] |= 0x00000001u;
}
void TaskTaskObjV1::clear_has_isautosubmit() {
  _has_bits_[0] &= ~0x00000001u;
}
void TaskTaskObjV1::clear_isautosubmit() {
  isautosubmit_ = false;
  clear_has_isautosubmit();
}
bool TaskTaskObjV1::isautosubmit() const {
  // @@protoc_insertion_point(field_get:TaskTaskObjV1.IsAutoSubmit)
  return isautosubmit_;
}
void TaskTaskObjV1::set_isautosubmit(bool value) {
  set_has_isautosubmit();
  isautosubmit_ = value;
  // @@protoc_insertion_point(field_set:TaskTaskObjV1.IsAutoSubmit)
}

// optional sint32 CollectionId = 7 [default = -1];
bool TaskTaskObjV1::has_collectionid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TaskTaskObjV1::set_has_collectionid() {
  _has_bits_[0] |= 0x00000020u;
}
void TaskTaskObjV1::clear_has_collectionid() {
  _has_bits_[0] &= ~0x00000020u;
}
void TaskTaskObjV1::clear_collectionid() {
  collectionid_ = -1;
  clear_has_collectionid();
}
::google::protobuf::int32 TaskTaskObjV1::collectionid() const {
  // @@protoc_insertion_point(field_get:TaskTaskObjV1.CollectionId)
  return collectionid_;
}
void TaskTaskObjV1::set_collectionid(::google::protobuf::int32 value) {
  set_has_collectionid();
  collectionid_ = value;
  // @@protoc_insertion_point(field_set:TaskTaskObjV1.CollectionId)
}

// optional sint32 DungeonId = 9 [default = -1];
bool TaskTaskObjV1::has_dungeonid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void TaskTaskObjV1::set_has_dungeonid() {
  _has_bits_[0] |= 0x00000040u;
}
void TaskTaskObjV1::clear_has_dungeonid() {
  _has_bits_[0] &= ~0x00000040u;
}
void TaskTaskObjV1::clear_dungeonid() {
  dungeonid_ = -1;
  clear_has_dungeonid();
}
::google::protobuf::int32 TaskTaskObjV1::dungeonid() const {
  // @@protoc_insertion_point(field_get:TaskTaskObjV1.DungeonId)
  return dungeonid_;
}
void TaskTaskObjV1::set_dungeonid(::google::protobuf::int32 value) {
  set_has_dungeonid();
  dungeonid_ = value;
  // @@protoc_insertion_point(field_set:TaskTaskObjV1.DungeonId)
}

// optional sint32 Guild = 10 [default = -1];
bool TaskTaskObjV1::has_guild() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void TaskTaskObjV1::set_has_guild() {
  _has_bits_[0] |= 0x00000080u;
}
void TaskTaskObjV1::clear_has_guild() {
  _has_bits_[0] &= ~0x00000080u;
}
void TaskTaskObjV1::clear_guild() {
  guild_ = -1;
  clear_has_guild();
}
::google::protobuf::int32 TaskTaskObjV1::guild() const {
  // @@protoc_insertion_point(field_get:TaskTaskObjV1.Guild)
  return guild_;
}
void TaskTaskObjV1::set_guild(::google::protobuf::int32 value) {
  set_has_guild();
  guild_ = value;
  // @@protoc_insertion_point(field_set:TaskTaskObjV1.Guild)
}

// optional sint32 ObjId = 11 [default = -1];
bool TaskTaskObjV1::has_objid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void TaskTaskObjV1::set_has_objid() {
  _has_bits_[0] |= 0x00000100u;
}
void TaskTaskObjV1::clear_has_objid() {
  _has_bits_[0] &= ~0x00000100u;
}
void TaskTaskObjV1::clear_objid() {
  objid_ = -1;
  clear_has_objid();
}
::google::protobuf::int32 TaskTaskObjV1::objid() const {
  // @@protoc_insertion_point(field_get:TaskTaskObjV1.ObjId)
  return objid_;
}
void TaskTaskObjV1::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:TaskTaskObjV1.ObjId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskTaskDataV1::kAllTaskArrayFieldNumber;
const int TaskTaskDataV1::kUnacceptedTaskArrayFieldNumber;
const int TaskTaskDataV1::kProfTaskIdFieldNumber;
const int TaskTaskDataV1::kProfTaskCompCountFieldNumber;
const int TaskTaskDataV1::kOneDragonTaskIdFieldNumber;
const int TaskTaskDataV1::kOneDragonRingNumFieldNumber;
const int TaskTaskDataV1::kOneDragonComplateCountFieldNumber;
const int TaskTaskDataV1::kOneDragonDungeonIdFieldNumber;
const int TaskTaskDataV1::kGuildSpyComplateCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskTaskDataV1::TaskTaskDataV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TaskV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TaskTaskDataV1)
}
TaskTaskDataV1::TaskTaskDataV1(const TaskTaskDataV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      alltaskarray_(from.alltaskarray_),
      unacceptedtaskarray_(from.unacceptedtaskarray_),
      onedragontaskid_(from.onedragontaskid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&proftaskid_, &from.proftaskid_,
    static_cast<size_t>(reinterpret_cast<char*>(&onedragondungeonid_) -
    reinterpret_cast<char*>(&proftaskid_)) + sizeof(onedragondungeonid_));
  // @@protoc_insertion_point(copy_constructor:TaskTaskDataV1)
}

void TaskTaskDataV1::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&proftaskid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guildspycomplatecount_) -
      reinterpret_cast<char*>(&proftaskid_)) + sizeof(guildspycomplatecount_));
  onedragondungeonid_ = -1;
}

TaskTaskDataV1::~TaskTaskDataV1() {
  // @@protoc_insertion_point(destructor:TaskTaskDataV1)
  SharedDtor();
}

void TaskTaskDataV1::SharedDtor() {
}

void TaskTaskDataV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskTaskDataV1::descriptor() {
  protobuf_TaskV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TaskV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskTaskDataV1& TaskTaskDataV1::default_instance() {
  protobuf_TaskV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

TaskTaskDataV1* TaskTaskDataV1::New(::google::protobuf::Arena* arena) const {
  TaskTaskDataV1* n = new TaskTaskDataV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskTaskDataV1::Clear() {
// @@protoc_insertion_point(message_clear_start:TaskTaskDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alltaskarray_.Clear();
  unacceptedtaskarray_.Clear();
  onedragontaskid_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&proftaskid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&guildspycomplatecount_) -
        reinterpret_cast<char*>(&proftaskid_)) + sizeof(guildspycomplatecount_));
    onedragondungeonid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TaskTaskDataV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TaskTaskDataV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TaskTaskObjV1 AllTaskArray = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_alltaskarray()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TaskUnacceptedTaskObjV1 UnacceptedTaskArray = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_unacceptedtaskarray()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ProfTaskId = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_proftaskid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &proftaskid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ProfTaskCompCount = 5 [default = 0];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_proftaskcompcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &proftaskcompcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 OneDragonTaskId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 48u, input, this->mutable_onedragontaskid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_onedragontaskid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 OneDragonRingNum = 7 [default = 0];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_onedragonringnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &onedragonringnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 OneDragonComplateCount = 8 [default = 0];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_onedragoncomplatecount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &onedragoncomplatecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 OneDragonDungeonId = 9 [default = -1];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_onedragondungeonid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &onedragondungeonid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 GuildSpyComplateCount = 10 [default = 0];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_guildspycomplatecount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &guildspycomplatecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TaskTaskDataV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TaskTaskDataV1)
  return false;
#undef DO_
}

void TaskTaskDataV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TaskTaskDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TaskTaskObjV1 AllTaskArray = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alltaskarray_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->alltaskarray(static_cast<int>(i)), output);
  }

  // repeated .TaskUnacceptedTaskObjV1 UnacceptedTaskArray = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->unacceptedtaskarray_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->unacceptedtaskarray(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional sint32 ProfTaskId = 4 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->proftaskid(), output);
  }

  // optional sint32 ProfTaskCompCount = 5 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->proftaskcompcount(), output);
  }

  // repeated sint32 OneDragonTaskId = 6;
  for (int i = 0, n = this->onedragontaskid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      6, this->onedragontaskid(i), output);
  }

  // optional sint32 OneDragonRingNum = 7 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->onedragonringnum(), output);
  }

  // optional sint32 OneDragonComplateCount = 8 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->onedragoncomplatecount(), output);
  }

  // optional sint32 OneDragonDungeonId = 9 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(9, this->onedragondungeonid(), output);
  }

  // optional sint32 GuildSpyComplateCount = 10 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(10, this->guildspycomplatecount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TaskTaskDataV1)
}

::google::protobuf::uint8* TaskTaskDataV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TaskTaskDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TaskTaskObjV1 AllTaskArray = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->alltaskarray_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->alltaskarray(static_cast<int>(i)), deterministic, target);
  }

  // repeated .TaskUnacceptedTaskObjV1 UnacceptedTaskArray = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->unacceptedtaskarray_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->unacceptedtaskarray(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional sint32 ProfTaskId = 4 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->proftaskid(), target);
  }

  // optional sint32 ProfTaskCompCount = 5 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->proftaskcompcount(), target);
  }

  // repeated sint32 OneDragonTaskId = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSInt32ToArray(6, this->onedragontaskid_, target);

  // optional sint32 OneDragonRingNum = 7 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->onedragonringnum(), target);
  }

  // optional sint32 OneDragonComplateCount = 8 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->onedragoncomplatecount(), target);
  }

  // optional sint32 OneDragonDungeonId = 9 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(9, this->onedragondungeonid(), target);
  }

  // optional sint32 GuildSpyComplateCount = 10 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(10, this->guildspycomplatecount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TaskTaskDataV1)
  return target;
}

size_t TaskTaskDataV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TaskTaskDataV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .TaskTaskObjV1 AllTaskArray = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->alltaskarray_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->alltaskarray(static_cast<int>(i)));
    }
  }

  // repeated .TaskUnacceptedTaskObjV1 UnacceptedTaskArray = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->unacceptedtaskarray_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->unacceptedtaskarray(static_cast<int>(i)));
    }
  }

  // repeated sint32 OneDragonTaskId = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->onedragontaskid_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->onedragontaskid_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional sint32 ProfTaskId = 4 [default = 0];
    if (has_proftaskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->proftaskid());
    }

    // optional sint32 ProfTaskCompCount = 5 [default = 0];
    if (has_proftaskcompcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->proftaskcompcount());
    }

    // optional sint32 OneDragonRingNum = 7 [default = 0];
    if (has_onedragonringnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->onedragonringnum());
    }

    // optional sint32 OneDragonComplateCount = 8 [default = 0];
    if (has_onedragoncomplatecount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->onedragoncomplatecount());
    }

    // optional sint32 GuildSpyComplateCount = 10 [default = 0];
    if (has_guildspycomplatecount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->guildspycomplatecount());
    }

    // optional sint32 OneDragonDungeonId = 9 [default = -1];
    if (has_onedragondungeonid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->onedragondungeonid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskTaskDataV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TaskTaskDataV1)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskTaskDataV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskTaskDataV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TaskTaskDataV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TaskTaskDataV1)
    MergeFrom(*source);
  }
}

void TaskTaskDataV1::MergeFrom(const TaskTaskDataV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TaskTaskDataV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  alltaskarray_.MergeFrom(from.alltaskarray_);
  unacceptedtaskarray_.MergeFrom(from.unacceptedtaskarray_);
  onedragontaskid_.MergeFrom(from.onedragontaskid_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      proftaskid_ = from.proftaskid_;
    }
    if (cached_has_bits & 0x00000002u) {
      proftaskcompcount_ = from.proftaskcompcount_;
    }
    if (cached_has_bits & 0x00000004u) {
      onedragonringnum_ = from.onedragonringnum_;
    }
    if (cached_has_bits & 0x00000008u) {
      onedragoncomplatecount_ = from.onedragoncomplatecount_;
    }
    if (cached_has_bits & 0x00000010u) {
      guildspycomplatecount_ = from.guildspycomplatecount_;
    }
    if (cached_has_bits & 0x00000020u) {
      onedragondungeonid_ = from.onedragondungeonid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TaskTaskDataV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TaskTaskDataV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskTaskDataV1::CopyFrom(const TaskTaskDataV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TaskTaskDataV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskTaskDataV1::IsInitialized() const {
  return true;
}

void TaskTaskDataV1::Swap(TaskTaskDataV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskTaskDataV1::InternalSwap(TaskTaskDataV1* other) {
  using std::swap;
  alltaskarray_.InternalSwap(&other->alltaskarray_);
  unacceptedtaskarray_.InternalSwap(&other->unacceptedtaskarray_);
  onedragontaskid_.InternalSwap(&other->onedragontaskid_);
  swap(proftaskid_, other->proftaskid_);
  swap(proftaskcompcount_, other->proftaskcompcount_);
  swap(onedragonringnum_, other->onedragonringnum_);
  swap(onedragoncomplatecount_, other->onedragoncomplatecount_);
  swap(guildspycomplatecount_, other->guildspycomplatecount_);
  swap(onedragondungeonid_, other->onedragondungeonid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskTaskDataV1::GetMetadata() const {
  protobuf_TaskV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TaskV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskTaskDataV1

// repeated .TaskTaskObjV1 AllTaskArray = 2;
int TaskTaskDataV1::alltaskarray_size() const {
  return alltaskarray_.size();
}
void TaskTaskDataV1::clear_alltaskarray() {
  alltaskarray_.Clear();
}
const ::TaskTaskObjV1& TaskTaskDataV1::alltaskarray(int index) const {
  // @@protoc_insertion_point(field_get:TaskTaskDataV1.AllTaskArray)
  return alltaskarray_.Get(index);
}
::TaskTaskObjV1* TaskTaskDataV1::mutable_alltaskarray(int index) {
  // @@protoc_insertion_point(field_mutable:TaskTaskDataV1.AllTaskArray)
  return alltaskarray_.Mutable(index);
}
::TaskTaskObjV1* TaskTaskDataV1::add_alltaskarray() {
  // @@protoc_insertion_point(field_add:TaskTaskDataV1.AllTaskArray)
  return alltaskarray_.Add();
}
::google::protobuf::RepeatedPtrField< ::TaskTaskObjV1 >*
TaskTaskDataV1::mutable_alltaskarray() {
  // @@protoc_insertion_point(field_mutable_list:TaskTaskDataV1.AllTaskArray)
  return &alltaskarray_;
}
const ::google::protobuf::RepeatedPtrField< ::TaskTaskObjV1 >&
TaskTaskDataV1::alltaskarray() const {
  // @@protoc_insertion_point(field_list:TaskTaskDataV1.AllTaskArray)
  return alltaskarray_;
}

// repeated .TaskUnacceptedTaskObjV1 UnacceptedTaskArray = 3;
int TaskTaskDataV1::unacceptedtaskarray_size() const {
  return unacceptedtaskarray_.size();
}
void TaskTaskDataV1::clear_unacceptedtaskarray() {
  unacceptedtaskarray_.Clear();
}
const ::TaskUnacceptedTaskObjV1& TaskTaskDataV1::unacceptedtaskarray(int index) const {
  // @@protoc_insertion_point(field_get:TaskTaskDataV1.UnacceptedTaskArray)
  return unacceptedtaskarray_.Get(index);
}
::TaskUnacceptedTaskObjV1* TaskTaskDataV1::mutable_unacceptedtaskarray(int index) {
  // @@protoc_insertion_point(field_mutable:TaskTaskDataV1.UnacceptedTaskArray)
  return unacceptedtaskarray_.Mutable(index);
}
::TaskUnacceptedTaskObjV1* TaskTaskDataV1::add_unacceptedtaskarray() {
  // @@protoc_insertion_point(field_add:TaskTaskDataV1.UnacceptedTaskArray)
  return unacceptedtaskarray_.Add();
}
::google::protobuf::RepeatedPtrField< ::TaskUnacceptedTaskObjV1 >*
TaskTaskDataV1::mutable_unacceptedtaskarray() {
  // @@protoc_insertion_point(field_mutable_list:TaskTaskDataV1.UnacceptedTaskArray)
  return &unacceptedtaskarray_;
}
const ::google::protobuf::RepeatedPtrField< ::TaskUnacceptedTaskObjV1 >&
TaskTaskDataV1::unacceptedtaskarray() const {
  // @@protoc_insertion_point(field_list:TaskTaskDataV1.UnacceptedTaskArray)
  return unacceptedtaskarray_;
}

// optional sint32 ProfTaskId = 4 [default = 0];
bool TaskTaskDataV1::has_proftaskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TaskTaskDataV1::set_has_proftaskid() {
  _has_bits_[0] |= 0x00000001u;
}
void TaskTaskDataV1::clear_has_proftaskid() {
  _has_bits_[0] &= ~0x00000001u;
}
void TaskTaskDataV1::clear_proftaskid() {
  proftaskid_ = 0;
  clear_has_proftaskid();
}
::google::protobuf::int32 TaskTaskDataV1::proftaskid() const {
  // @@protoc_insertion_point(field_get:TaskTaskDataV1.ProfTaskId)
  return proftaskid_;
}
void TaskTaskDataV1::set_proftaskid(::google::protobuf::int32 value) {
  set_has_proftaskid();
  proftaskid_ = value;
  // @@protoc_insertion_point(field_set:TaskTaskDataV1.ProfTaskId)
}

// optional sint32 ProfTaskCompCount = 5 [default = 0];
bool TaskTaskDataV1::has_proftaskcompcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TaskTaskDataV1::set_has_proftaskcompcount() {
  _has_bits_[0] |= 0x00000002u;
}
void TaskTaskDataV1::clear_has_proftaskcompcount() {
  _has_bits_[0] &= ~0x00000002u;
}
void TaskTaskDataV1::clear_proftaskcompcount() {
  proftaskcompcount_ = 0;
  clear_has_proftaskcompcount();
}
::google::protobuf::int32 TaskTaskDataV1::proftaskcompcount() const {
  // @@protoc_insertion_point(field_get:TaskTaskDataV1.ProfTaskCompCount)
  return proftaskcompcount_;
}
void TaskTaskDataV1::set_proftaskcompcount(::google::protobuf::int32 value) {
  set_has_proftaskcompcount();
  proftaskcompcount_ = value;
  // @@protoc_insertion_point(field_set:TaskTaskDataV1.ProfTaskCompCount)
}

// repeated sint32 OneDragonTaskId = 6;
int TaskTaskDataV1::onedragontaskid_size() const {
  return onedragontaskid_.size();
}
void TaskTaskDataV1::clear_onedragontaskid() {
  onedragontaskid_.Clear();
}
::google::protobuf::int32 TaskTaskDataV1::onedragontaskid(int index) const {
  // @@protoc_insertion_point(field_get:TaskTaskDataV1.OneDragonTaskId)
  return onedragontaskid_.Get(index);
}
void TaskTaskDataV1::set_onedragontaskid(int index, ::google::protobuf::int32 value) {
  onedragontaskid_.Set(index, value);
  // @@protoc_insertion_point(field_set:TaskTaskDataV1.OneDragonTaskId)
}
void TaskTaskDataV1::add_onedragontaskid(::google::protobuf::int32 value) {
  onedragontaskid_.Add(value);
  // @@protoc_insertion_point(field_add:TaskTaskDataV1.OneDragonTaskId)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TaskTaskDataV1::onedragontaskid() const {
  // @@protoc_insertion_point(field_list:TaskTaskDataV1.OneDragonTaskId)
  return onedragontaskid_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TaskTaskDataV1::mutable_onedragontaskid() {
  // @@protoc_insertion_point(field_mutable_list:TaskTaskDataV1.OneDragonTaskId)
  return &onedragontaskid_;
}

// optional sint32 OneDragonRingNum = 7 [default = 0];
bool TaskTaskDataV1::has_onedragonringnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TaskTaskDataV1::set_has_onedragonringnum() {
  _has_bits_[0] |= 0x00000004u;
}
void TaskTaskDataV1::clear_has_onedragonringnum() {
  _has_bits_[0] &= ~0x00000004u;
}
void TaskTaskDataV1::clear_onedragonringnum() {
  onedragonringnum_ = 0;
  clear_has_onedragonringnum();
}
::google::protobuf::int32 TaskTaskDataV1::onedragonringnum() const {
  // @@protoc_insertion_point(field_get:TaskTaskDataV1.OneDragonRingNum)
  return onedragonringnum_;
}
void TaskTaskDataV1::set_onedragonringnum(::google::protobuf::int32 value) {
  set_has_onedragonringnum();
  onedragonringnum_ = value;
  // @@protoc_insertion_point(field_set:TaskTaskDataV1.OneDragonRingNum)
}

// optional sint32 OneDragonComplateCount = 8 [default = 0];
bool TaskTaskDataV1::has_onedragoncomplatecount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TaskTaskDataV1::set_has_onedragoncomplatecount() {
  _has_bits_[0] |= 0x00000008u;
}
void TaskTaskDataV1::clear_has_onedragoncomplatecount() {
  _has_bits_[0] &= ~0x00000008u;
}
void TaskTaskDataV1::clear_onedragoncomplatecount() {
  onedragoncomplatecount_ = 0;
  clear_has_onedragoncomplatecount();
}
::google::protobuf::int32 TaskTaskDataV1::onedragoncomplatecount() const {
  // @@protoc_insertion_point(field_get:TaskTaskDataV1.OneDragonComplateCount)
  return onedragoncomplatecount_;
}
void TaskTaskDataV1::set_onedragoncomplatecount(::google::protobuf::int32 value) {
  set_has_onedragoncomplatecount();
  onedragoncomplatecount_ = value;
  // @@protoc_insertion_point(field_set:TaskTaskDataV1.OneDragonComplateCount)
}

// optional sint32 OneDragonDungeonId = 9 [default = -1];
bool TaskTaskDataV1::has_onedragondungeonid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TaskTaskDataV1::set_has_onedragondungeonid() {
  _has_bits_[0] |= 0x00000020u;
}
void TaskTaskDataV1::clear_has_onedragondungeonid() {
  _has_bits_[0] &= ~0x00000020u;
}
void TaskTaskDataV1::clear_onedragondungeonid() {
  onedragondungeonid_ = -1;
  clear_has_onedragondungeonid();
}
::google::protobuf::int32 TaskTaskDataV1::onedragondungeonid() const {
  // @@protoc_insertion_point(field_get:TaskTaskDataV1.OneDragonDungeonId)
  return onedragondungeonid_;
}
void TaskTaskDataV1::set_onedragondungeonid(::google::protobuf::int32 value) {
  set_has_onedragondungeonid();
  onedragondungeonid_ = value;
  // @@protoc_insertion_point(field_set:TaskTaskDataV1.OneDragonDungeonId)
}

// optional sint32 GuildSpyComplateCount = 10 [default = 0];
bool TaskTaskDataV1::has_guildspycomplatecount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TaskTaskDataV1::set_has_guildspycomplatecount() {
  _has_bits_[0] |= 0x00000010u;
}
void TaskTaskDataV1::clear_has_guildspycomplatecount() {
  _has_bits_[0] &= ~0x00000010u;
}
void TaskTaskDataV1::clear_guildspycomplatecount() {
  guildspycomplatecount_ = 0;
  clear_has_guildspycomplatecount();
}
::google::protobuf::int32 TaskTaskDataV1::guildspycomplatecount() const {
  // @@protoc_insertion_point(field_get:TaskTaskDataV1.GuildSpyComplateCount)
  return guildspycomplatecount_;
}
void TaskTaskDataV1::set_guildspycomplatecount(::google::protobuf::int32 value) {
  set_has_guildspycomplatecount();
  guildspycomplatecount_ = value;
  // @@protoc_insertion_point(field_set:TaskTaskDataV1.GuildSpyComplateCount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskTaskTargetObjV1::kTargetTypeFieldNumber;
const int TaskTaskTargetObjV1::kTargetIdFieldNumber;
const int TaskTaskTargetObjV1::kCurNumFieldNumber;
const int TaskTaskTargetObjV1::kTotalNumFieldNumber;
const int TaskTaskTargetObjV1::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskTaskTargetObjV1::TaskTaskTargetObjV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TaskV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TaskTaskTargetObjV1)
}
TaskTaskTargetObjV1::TaskTaskTargetObjV1(const TaskTaskTargetObjV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&totalnum_) -
    reinterpret_cast<char*>(&id_)) + sizeof(totalnum_));
  // @@protoc_insertion_point(copy_constructor:TaskTaskTargetObjV1)
}

void TaskTaskTargetObjV1::SharedCtor() {
  _cached_size_ = 0;
  id_ = -1;
  targettype_ = -1;
  targetid_ = -1;
  curnum_ = -1;
  totalnum_ = -1;
}

TaskTaskTargetObjV1::~TaskTaskTargetObjV1() {
  // @@protoc_insertion_point(destructor:TaskTaskTargetObjV1)
  SharedDtor();
}

void TaskTaskTargetObjV1::SharedDtor() {
}

void TaskTaskTargetObjV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskTaskTargetObjV1::descriptor() {
  protobuf_TaskV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TaskV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskTaskTargetObjV1& TaskTaskTargetObjV1::default_instance() {
  protobuf_TaskV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

TaskTaskTargetObjV1* TaskTaskTargetObjV1::New(::google::protobuf::Arena* arena) const {
  TaskTaskTargetObjV1* n = new TaskTaskTargetObjV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskTaskTargetObjV1::Clear() {
// @@protoc_insertion_point(message_clear_start:TaskTaskTargetObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    id_ = -1;
    targettype_ = -1;
    targetid_ = -1;
    curnum_ = -1;
    totalnum_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TaskTaskTargetObjV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TaskTaskTargetObjV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 TargetType = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_targettype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &targettype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TargetId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_targetid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &targetid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 CurNum = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_curnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &curnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TotalNum = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_totalnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &totalnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Id = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TaskTaskTargetObjV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TaskTaskTargetObjV1)
  return false;
#undef DO_
}

void TaskTaskTargetObjV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TaskTaskTargetObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TargetType = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->targettype(), output);
  }

  // optional sint32 TargetId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->targetid(), output);
  }

  // optional sint32 CurNum = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->curnum(), output);
  }

  // optional sint32 TotalNum = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->totalnum(), output);
  }

  // optional sint32 Id = 6 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TaskTaskTargetObjV1)
}

::google::protobuf::uint8* TaskTaskTargetObjV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TaskTaskTargetObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TargetType = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->targettype(), target);
  }

  // optional sint32 TargetId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->targetid(), target);
  }

  // optional sint32 CurNum = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->curnum(), target);
  }

  // optional sint32 TotalNum = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->totalnum(), target);
  }

  // optional sint32 Id = 6 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TaskTaskTargetObjV1)
  return target;
}

size_t TaskTaskTargetObjV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TaskTaskTargetObjV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional sint32 Id = 6 [default = -1];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->id());
    }

    // optional sint32 TargetType = 1 [default = -1];
    if (has_targettype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->targettype());
    }

    // optional sint32 TargetId = 2 [default = -1];
    if (has_targetid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->targetid());
    }

    // optional sint32 CurNum = 3 [default = -1];
    if (has_curnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->curnum());
    }

    // optional sint32 TotalNum = 4 [default = -1];
    if (has_totalnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->totalnum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskTaskTargetObjV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TaskTaskTargetObjV1)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskTaskTargetObjV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskTaskTargetObjV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TaskTaskTargetObjV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TaskTaskTargetObjV1)
    MergeFrom(*source);
  }
}

void TaskTaskTargetObjV1::MergeFrom(const TaskTaskTargetObjV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TaskTaskTargetObjV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      targettype_ = from.targettype_;
    }
    if (cached_has_bits & 0x00000004u) {
      targetid_ = from.targetid_;
    }
    if (cached_has_bits & 0x00000008u) {
      curnum_ = from.curnum_;
    }
    if (cached_has_bits & 0x00000010u) {
      totalnum_ = from.totalnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TaskTaskTargetObjV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TaskTaskTargetObjV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskTaskTargetObjV1::CopyFrom(const TaskTaskTargetObjV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TaskTaskTargetObjV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskTaskTargetObjV1::IsInitialized() const {
  return true;
}

void TaskTaskTargetObjV1::Swap(TaskTaskTargetObjV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskTaskTargetObjV1::InternalSwap(TaskTaskTargetObjV1* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(targettype_, other->targettype_);
  swap(targetid_, other->targetid_);
  swap(curnum_, other->curnum_);
  swap(totalnum_, other->totalnum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskTaskTargetObjV1::GetMetadata() const {
  protobuf_TaskV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TaskV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskTaskTargetObjV1

// optional sint32 TargetType = 1 [default = -1];
bool TaskTaskTargetObjV1::has_targettype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TaskTaskTargetObjV1::set_has_targettype() {
  _has_bits_[0] |= 0x00000002u;
}
void TaskTaskTargetObjV1::clear_has_targettype() {
  _has_bits_[0] &= ~0x00000002u;
}
void TaskTaskTargetObjV1::clear_targettype() {
  targettype_ = -1;
  clear_has_targettype();
}
::google::protobuf::int32 TaskTaskTargetObjV1::targettype() const {
  // @@protoc_insertion_point(field_get:TaskTaskTargetObjV1.TargetType)
  return targettype_;
}
void TaskTaskTargetObjV1::set_targettype(::google::protobuf::int32 value) {
  set_has_targettype();
  targettype_ = value;
  // @@protoc_insertion_point(field_set:TaskTaskTargetObjV1.TargetType)
}

// optional sint32 TargetId = 2 [default = -1];
bool TaskTaskTargetObjV1::has_targetid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TaskTaskTargetObjV1::set_has_targetid() {
  _has_bits_[0] |= 0x00000004u;
}
void TaskTaskTargetObjV1::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000004u;
}
void TaskTaskTargetObjV1::clear_targetid() {
  targetid_ = -1;
  clear_has_targetid();
}
::google::protobuf::int32 TaskTaskTargetObjV1::targetid() const {
  // @@protoc_insertion_point(field_get:TaskTaskTargetObjV1.TargetId)
  return targetid_;
}
void TaskTaskTargetObjV1::set_targetid(::google::protobuf::int32 value) {
  set_has_targetid();
  targetid_ = value;
  // @@protoc_insertion_point(field_set:TaskTaskTargetObjV1.TargetId)
}

// optional sint32 CurNum = 3 [default = -1];
bool TaskTaskTargetObjV1::has_curnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TaskTaskTargetObjV1::set_has_curnum() {
  _has_bits_[0] |= 0x00000008u;
}
void TaskTaskTargetObjV1::clear_has_curnum() {
  _has_bits_[0] &= ~0x00000008u;
}
void TaskTaskTargetObjV1::clear_curnum() {
  curnum_ = -1;
  clear_has_curnum();
}
::google::protobuf::int32 TaskTaskTargetObjV1::curnum() const {
  // @@protoc_insertion_point(field_get:TaskTaskTargetObjV1.CurNum)
  return curnum_;
}
void TaskTaskTargetObjV1::set_curnum(::google::protobuf::int32 value) {
  set_has_curnum();
  curnum_ = value;
  // @@protoc_insertion_point(field_set:TaskTaskTargetObjV1.CurNum)
}

// optional sint32 TotalNum = 4 [default = -1];
bool TaskTaskTargetObjV1::has_totalnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TaskTaskTargetObjV1::set_has_totalnum() {
  _has_bits_[0] |= 0x00000010u;
}
void TaskTaskTargetObjV1::clear_has_totalnum() {
  _has_bits_[0] &= ~0x00000010u;
}
void TaskTaskTargetObjV1::clear_totalnum() {
  totalnum_ = -1;
  clear_has_totalnum();
}
::google::protobuf::int32 TaskTaskTargetObjV1::totalnum() const {
  // @@protoc_insertion_point(field_get:TaskTaskTargetObjV1.TotalNum)
  return totalnum_;
}
void TaskTaskTargetObjV1::set_totalnum(::google::protobuf::int32 value) {
  set_has_totalnum();
  totalnum_ = value;
  // @@protoc_insertion_point(field_set:TaskTaskTargetObjV1.TotalNum)
}

// optional sint32 Id = 6 [default = -1];
bool TaskTaskTargetObjV1::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TaskTaskTargetObjV1::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void TaskTaskTargetObjV1::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void TaskTaskTargetObjV1::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 TaskTaskTargetObjV1::id() const {
  // @@protoc_insertion_point(field_get:TaskTaskTargetObjV1.Id)
  return id_;
}
void TaskTaskTargetObjV1::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TaskTaskTargetObjV1.Id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskUnacceptedTaskObjV1::kTaskIdFieldNumber;
const int TaskUnacceptedTaskObjV1::kTaskTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskUnacceptedTaskObjV1::TaskUnacceptedTaskObjV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TaskV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TaskUnacceptedTaskObjV1)
}
TaskUnacceptedTaskObjV1::TaskUnacceptedTaskObjV1(const TaskUnacceptedTaskObjV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&taskid_, &from.taskid_,
    static_cast<size_t>(reinterpret_cast<char*>(&tasktype_) -
    reinterpret_cast<char*>(&taskid_)) + sizeof(tasktype_));
  // @@protoc_insertion_point(copy_constructor:TaskUnacceptedTaskObjV1)
}

void TaskUnacceptedTaskObjV1::SharedCtor() {
  _cached_size_ = 0;
  taskid_ = -1;
  tasktype_ = -1;
}

TaskUnacceptedTaskObjV1::~TaskUnacceptedTaskObjV1() {
  // @@protoc_insertion_point(destructor:TaskUnacceptedTaskObjV1)
  SharedDtor();
}

void TaskUnacceptedTaskObjV1::SharedDtor() {
}

void TaskUnacceptedTaskObjV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskUnacceptedTaskObjV1::descriptor() {
  protobuf_TaskV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TaskV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TaskUnacceptedTaskObjV1& TaskUnacceptedTaskObjV1::default_instance() {
  protobuf_TaskV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

TaskUnacceptedTaskObjV1* TaskUnacceptedTaskObjV1::New(::google::protobuf::Arena* arena) const {
  TaskUnacceptedTaskObjV1* n = new TaskUnacceptedTaskObjV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskUnacceptedTaskObjV1::Clear() {
// @@protoc_insertion_point(message_clear_start:TaskUnacceptedTaskObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    taskid_ = -1;
    tasktype_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TaskUnacceptedTaskObjV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TaskUnacceptedTaskObjV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 TaskId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_taskid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &taskid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TaskType = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_tasktype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &tasktype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TaskUnacceptedTaskObjV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TaskUnacceptedTaskObjV1)
  return false;
#undef DO_
}

void TaskUnacceptedTaskObjV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TaskUnacceptedTaskObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TaskId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->taskid(), output);
  }

  // optional sint32 TaskType = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->tasktype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TaskUnacceptedTaskObjV1)
}

::google::protobuf::uint8* TaskUnacceptedTaskObjV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TaskUnacceptedTaskObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TaskId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->taskid(), target);
  }

  // optional sint32 TaskType = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->tasktype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TaskUnacceptedTaskObjV1)
  return target;
}

size_t TaskUnacceptedTaskObjV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TaskUnacceptedTaskObjV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 TaskId = 1 [default = -1];
    if (has_taskid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->taskid());
    }

    // optional sint32 TaskType = 2 [default = -1];
    if (has_tasktype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->tasktype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskUnacceptedTaskObjV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TaskUnacceptedTaskObjV1)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskUnacceptedTaskObjV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskUnacceptedTaskObjV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TaskUnacceptedTaskObjV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TaskUnacceptedTaskObjV1)
    MergeFrom(*source);
  }
}

void TaskUnacceptedTaskObjV1::MergeFrom(const TaskUnacceptedTaskObjV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TaskUnacceptedTaskObjV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      taskid_ = from.taskid_;
    }
    if (cached_has_bits & 0x00000002u) {
      tasktype_ = from.tasktype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TaskUnacceptedTaskObjV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TaskUnacceptedTaskObjV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskUnacceptedTaskObjV1::CopyFrom(const TaskUnacceptedTaskObjV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TaskUnacceptedTaskObjV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskUnacceptedTaskObjV1::IsInitialized() const {
  return true;
}

void TaskUnacceptedTaskObjV1::Swap(TaskUnacceptedTaskObjV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskUnacceptedTaskObjV1::InternalSwap(TaskUnacceptedTaskObjV1* other) {
  using std::swap;
  swap(taskid_, other->taskid_);
  swap(tasktype_, other->tasktype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskUnacceptedTaskObjV1::GetMetadata() const {
  protobuf_TaskV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TaskV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskUnacceptedTaskObjV1

// optional sint32 TaskId = 1 [default = -1];
bool TaskUnacceptedTaskObjV1::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TaskUnacceptedTaskObjV1::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
void TaskUnacceptedTaskObjV1::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
void TaskUnacceptedTaskObjV1::clear_taskid() {
  taskid_ = -1;
  clear_has_taskid();
}
::google::protobuf::int32 TaskUnacceptedTaskObjV1::taskid() const {
  // @@protoc_insertion_point(field_get:TaskUnacceptedTaskObjV1.TaskId)
  return taskid_;
}
void TaskUnacceptedTaskObjV1::set_taskid(::google::protobuf::int32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:TaskUnacceptedTaskObjV1.TaskId)
}

// optional sint32 TaskType = 2 [default = -1];
bool TaskUnacceptedTaskObjV1::has_tasktype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TaskUnacceptedTaskObjV1::set_has_tasktype() {
  _has_bits_[0] |= 0x00000002u;
}
void TaskUnacceptedTaskObjV1::clear_has_tasktype() {
  _has_bits_[0] &= ~0x00000002u;
}
void TaskUnacceptedTaskObjV1::clear_tasktype() {
  tasktype_ = -1;
  clear_has_tasktype();
}
::google::protobuf::int32 TaskUnacceptedTaskObjV1::tasktype() const {
  // @@protoc_insertion_point(field_get:TaskUnacceptedTaskObjV1.TaskType)
  return tasktype_;
}
void TaskUnacceptedTaskObjV1::set_tasktype(::google::protobuf::int32 value) {
  set_has_tasktype();
  tasktype_ = value;
  // @@protoc_insertion_point(field_set:TaskUnacceptedTaskObjV1.TaskType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
