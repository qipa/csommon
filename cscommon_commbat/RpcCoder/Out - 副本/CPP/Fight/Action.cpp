#include "Action.h"


#define  NEW_ACTION(_ACT, _ActType) case _ACT: { _ActType* pAction = new _ActType();pAction->Create(buf);return pAction; }
//反序列化
Action* Action::Deserialize(const string& buf)
{
	//取得动作类型
	KernelActionE aType = (KernelActionE)buf[0];
	//根据动作类型创建动作实例
	switch (aType)
	{
NEW_ACTION(ACTION_USESKILL, UseSkillAction);
NEW_ACTION(ACTION_BUFF, BuffAction);
NEW_ACTION(ACTION_CHARHIT, CharHitAction);
NEW_ACTION(ACTION_OFFLINE, OfflineAction);
NEW_ACTION(ACTION_STATE, StateAction);
NEW_ACTION(ACTION_CHARDEAD, CharDeadAction);
NEW_ACTION(ACTION_CHARREVIVE, CharReviveAction);
NEW_ACTION(ACTION_COMBOSKILL, ComboSkillAction);
NEW_ACTION(ACTION_ENDSKILL, EndSkillAction);
NEW_ACTION(ACTION_CITY, CityAction);
NEW_ACTION(ACTION_SNIPE, SnipeAction);
NEW_ACTION(ACTION_HURT, HurtAction);
NEW_ACTION(ACTION_DODGE, DodgeAction);
NEW_ACTION(ACTION_REMOVEOBJ, RemoveObjAction);
NEW_ACTION(ACTION_STORMBASE, StormBaseAction);
NEW_ACTION(ACTION_STORMRES, StormResAction);
NEW_ACTION(ACTION_STORMFLAG, StormFlagAction);
NEW_ACTION(ACTION_STORMCAMP, StormCampAction);
NEW_ACTION(ACTION_STORMRESULT, StormResultAction);
NEW_ACTION(ACTION_CREATE, CreateAction);
NEW_ACTION(ACTION_QUICKFINISH, QuickFinishAction);
NEW_ACTION(ACTION_FINISHLEVEL, FinishLevelAction);
NEW_ACTION(ACTION_TOWERLOCK, TowerLockAction);
NEW_ACTION(ACTION_STORMSTART, StormStartAction);
NEW_ACTION(ACTION_ESCAPESTART, EscapeStartAction);
NEW_ACTION(ACTION_ESCAPERESULT, EscapeResultAction);
NEW_ACTION(ACTION_GMADDHP, GMAddHpAction);
NEW_ACTION(ACTION_TRANDSKILL, TRandSkillAction);
NEW_ACTION(ACTION_GUILDDBEGIN, GuildDBeginAction);
NEW_ACTION(ACTION_GUILDDEND, GuildDEndAction);
NEW_ACTION(ACTION_TRANSFER, TransferAction);
NEW_ACTION(ACTION_HEROFIGHTINFO, HeroFightInfoAction);
NEW_ACTION(ACTION_GUILDFIGHTBEGIN, GuildFightBeginAction);
NEW_ACTION(ACTION_GUILDFIGHTEND, GuildFightEndAction);
NEW_ACTION(ACTION_GUILDFIGHTHP, GuildFightHpAction);
NEW_ACTION(ACTION_EFFECTTRANSLATE, EffectTranslateAction);
NEW_ACTION(ACTION_COLLECT, CollectAction);
NEW_ACTION(ACTION_COLLECTIONSHOWEFFECT, CollectionShowEffectAction);
NEW_ACTION(ACTION_AUTOFIGHT, AutoFightAction);
NEW_ACTION(ACTION_USEITEM, UseItemAction);
NEW_ACTION(ACTION_STORMKILLEFFECT, StormKillEffectAction);
NEW_ACTION(ACTION_ONEVSONESTART, OneVSOneStartAction);
NEW_ACTION(ACTION_ONEVSONERESULT, OneVSOneResultAction);
NEW_ACTION(ACTION_SIGHT, SightAction);
NEW_ACTION(ACTION_EVENTTRIGGER, EventTriggerAction);
NEW_ACTION(ACTION_QUIT, QuitAction);
NEW_ACTION(ACTION_PRODUCT, ProductAction);
NEW_ACTION(ACTION_STARTEND, StartEndAction);

	}
	return nullptr;
}
