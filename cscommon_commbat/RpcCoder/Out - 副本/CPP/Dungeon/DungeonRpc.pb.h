// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DungeonRpc.proto

#ifndef PROTOBUF_DungeonRpc_2eproto__INCLUDED
#define PROTOBUF_DungeonRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)
class DungeonRpcEnterAsk;
class DungeonRpcEnterAskDefaultTypeInternal;
extern DungeonRpcEnterAskDefaultTypeInternal _DungeonRpcEnterAsk_default_instance_;
class DungeonRpcEnterReply;
class DungeonRpcEnterReplyDefaultTypeInternal;
extern DungeonRpcEnterReplyDefaultTypeInternal _DungeonRpcEnterReply_default_instance_;
class DungeonRpcOpenNotify;
class DungeonRpcOpenNotifyDefaultTypeInternal;
extern DungeonRpcOpenNotifyDefaultTypeInternal _DungeonRpcOpenNotify_default_instance_;
class DungeonRpcTransferNotify;
class DungeonRpcTransferNotifyDefaultTypeInternal;
extern DungeonRpcTransferNotifyDefaultTypeInternal _DungeonRpcTransferNotify_default_instance_;
class DungeonRpcTryEnterAsk;
class DungeonRpcTryEnterAskDefaultTypeInternal;
extern DungeonRpcTryEnterAskDefaultTypeInternal _DungeonRpcTryEnterAsk_default_instance_;
class DungeonRpcTryEnterReply;
class DungeonRpcTryEnterReplyDefaultTypeInternal;
extern DungeonRpcTryEnterReplyDefaultTypeInternal _DungeonRpcTryEnterReply_default_instance_;

namespace protobuf_DungeonRpc_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_DungeonRpc_2eproto

// ===================================================================

class DungeonRpcEnterAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DungeonRpcEnterAsk) */ {
 public:
  DungeonRpcEnterAsk();
  virtual ~DungeonRpcEnterAsk();

  DungeonRpcEnterAsk(const DungeonRpcEnterAsk& from);

  inline DungeonRpcEnterAsk& operator=(const DungeonRpcEnterAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DungeonRpcEnterAsk(DungeonRpcEnterAsk&& from) noexcept
    : DungeonRpcEnterAsk() {
    *this = ::std::move(from);
  }

  inline DungeonRpcEnterAsk& operator=(DungeonRpcEnterAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DungeonRpcEnterAsk& default_instance();

  static inline const DungeonRpcEnterAsk* internal_default_instance() {
    return reinterpret_cast<const DungeonRpcEnterAsk*>(
               &_DungeonRpcEnterAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DungeonRpcEnterAsk* other);
  friend void swap(DungeonRpcEnterAsk& a, DungeonRpcEnterAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DungeonRpcEnterAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  DungeonRpcEnterAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DungeonRpcEnterAsk& from);
  void MergeFrom(const DungeonRpcEnterAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DungeonRpcEnterAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 GuildId = 6 [default = -1];
  bool has_guildid() const;
  void clear_guildid();
  static const int kGuildIdFieldNumber = 6;
  ::google::protobuf::int32 guildid() const;
  void set_guildid(::google::protobuf::int32 value);

  // optional sint32 DungeonId = 1 [default = -1];
  bool has_dungeonid() const;
  void clear_dungeonid();
  static const int kDungeonIdFieldNumber = 1;
  ::google::protobuf::int32 dungeonid() const;
  void set_dungeonid(::google::protobuf::int32 value);

  // optional sint32 DungeonType = 3 [default = -1];
  bool has_dungeontype() const;
  void clear_dungeontype();
  static const int kDungeonTypeFieldNumber = 3;
  ::google::protobuf::int32 dungeontype() const;
  void set_dungeontype(::google::protobuf::int32 value);

  // optional sint32 BirthPoint = 4 [default = -1];
  bool has_birthpoint() const;
  void clear_birthpoint();
  static const int kBirthPointFieldNumber = 4;
  ::google::protobuf::int32 birthpoint() const;
  void set_birthpoint(::google::protobuf::int32 value);

  // optional sint32 FaceDir = 5 [default = -1];
  bool has_facedir() const;
  void clear_facedir();
  static const int kFaceDirFieldNumber = 5;
  ::google::protobuf::int32 facedir() const;
  void set_facedir(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DungeonRpcEnterAsk)
 private:
  void set_has_dungeonid();
  void clear_has_dungeonid();
  void set_has_dungeontype();
  void clear_has_dungeontype();
  void set_has_birthpoint();
  void clear_has_birthpoint();
  void set_has_facedir();
  void clear_has_facedir();
  void set_has_guildid();
  void clear_has_guildid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guildid_;
  ::google::protobuf::int32 dungeonid_;
  ::google::protobuf::int32 dungeontype_;
  ::google::protobuf::int32 birthpoint_;
  ::google::protobuf::int32 facedir_;
  friend struct protobuf_DungeonRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DungeonRpcEnterReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DungeonRpcEnterReply) */ {
 public:
  DungeonRpcEnterReply();
  virtual ~DungeonRpcEnterReply();

  DungeonRpcEnterReply(const DungeonRpcEnterReply& from);

  inline DungeonRpcEnterReply& operator=(const DungeonRpcEnterReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DungeonRpcEnterReply(DungeonRpcEnterReply&& from) noexcept
    : DungeonRpcEnterReply() {
    *this = ::std::move(from);
  }

  inline DungeonRpcEnterReply& operator=(DungeonRpcEnterReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DungeonRpcEnterReply& default_instance();

  static inline const DungeonRpcEnterReply* internal_default_instance() {
    return reinterpret_cast<const DungeonRpcEnterReply*>(
               &_DungeonRpcEnterReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(DungeonRpcEnterReply* other);
  friend void swap(DungeonRpcEnterReply& a, DungeonRpcEnterReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DungeonRpcEnterReply* New() const PROTOBUF_FINAL { return New(NULL); }

  DungeonRpcEnterReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DungeonRpcEnterReply& from);
  void MergeFrom(const DungeonRpcEnterReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DungeonRpcEnterReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DungeonRpcEnterReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_DungeonRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DungeonRpcOpenNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DungeonRpcOpenNotify) */ {
 public:
  DungeonRpcOpenNotify();
  virtual ~DungeonRpcOpenNotify();

  DungeonRpcOpenNotify(const DungeonRpcOpenNotify& from);

  inline DungeonRpcOpenNotify& operator=(const DungeonRpcOpenNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DungeonRpcOpenNotify(DungeonRpcOpenNotify&& from) noexcept
    : DungeonRpcOpenNotify() {
    *this = ::std::move(from);
  }

  inline DungeonRpcOpenNotify& operator=(DungeonRpcOpenNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DungeonRpcOpenNotify& default_instance();

  static inline const DungeonRpcOpenNotify* internal_default_instance() {
    return reinterpret_cast<const DungeonRpcOpenNotify*>(
               &_DungeonRpcOpenNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(DungeonRpcOpenNotify* other);
  friend void swap(DungeonRpcOpenNotify& a, DungeonRpcOpenNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DungeonRpcOpenNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DungeonRpcOpenNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DungeonRpcOpenNotify& from);
  void MergeFrom(const DungeonRpcOpenNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DungeonRpcOpenNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string DungeonKey = 1;
  bool has_dungeonkey() const;
  void clear_dungeonkey();
  static const int kDungeonKeyFieldNumber = 1;
  const ::std::string& dungeonkey() const;
  void set_dungeonkey(const ::std::string& value);
  #if LANG_CXX11
  void set_dungeonkey(::std::string&& value);
  #endif
  void set_dungeonkey(const char* value);
  void set_dungeonkey(const char* value, size_t size);
  ::std::string* mutable_dungeonkey();
  ::std::string* release_dungeonkey();
  void set_allocated_dungeonkey(::std::string* dungeonkey);

  // optional string Host = 2;
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 2;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // optional sint32 Port = 3 [default = -1];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // optional sint32 DungeonId = 9 [default = -1];
  bool has_dungeonid() const;
  void clear_dungeonid();
  static const int kDungeonIdFieldNumber = 9;
  ::google::protobuf::int32 dungeonid() const;
  void set_dungeonid(::google::protobuf::int32 value);

  // optional sint32 DungeonType = 10 [default = -1];
  bool has_dungeontype() const;
  void clear_dungeontype();
  static const int kDungeonTypeFieldNumber = 10;
  ::google::protobuf::int32 dungeontype() const;
  void set_dungeontype(::google::protobuf::int32 value);

  // optional sint32 GuildId = 11 [default = -1];
  bool has_guildid() const;
  void clear_guildid();
  static const int kGuildIdFieldNumber = 11;
  ::google::protobuf::int32 guildid() const;
  void set_guildid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DungeonRpcOpenNotify)
 private:
  void set_has_dungeonkey();
  void clear_has_dungeonkey();
  void set_has_host();
  void clear_has_host();
  void set_has_port();
  void clear_has_port();
  void set_has_dungeonid();
  void clear_has_dungeonid();
  void set_has_dungeontype();
  void clear_has_dungeontype();
  void set_has_guildid();
  void clear_has_guildid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr dungeonkey_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 dungeonid_;
  ::google::protobuf::int32 dungeontype_;
  ::google::protobuf::int32 guildid_;
  friend struct protobuf_DungeonRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DungeonRpcTryEnterAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DungeonRpcTryEnterAsk) */ {
 public:
  DungeonRpcTryEnterAsk();
  virtual ~DungeonRpcTryEnterAsk();

  DungeonRpcTryEnterAsk(const DungeonRpcTryEnterAsk& from);

  inline DungeonRpcTryEnterAsk& operator=(const DungeonRpcTryEnterAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DungeonRpcTryEnterAsk(DungeonRpcTryEnterAsk&& from) noexcept
    : DungeonRpcTryEnterAsk() {
    *this = ::std::move(from);
  }

  inline DungeonRpcTryEnterAsk& operator=(DungeonRpcTryEnterAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DungeonRpcTryEnterAsk& default_instance();

  static inline const DungeonRpcTryEnterAsk* internal_default_instance() {
    return reinterpret_cast<const DungeonRpcTryEnterAsk*>(
               &_DungeonRpcTryEnterAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(DungeonRpcTryEnterAsk* other);
  friend void swap(DungeonRpcTryEnterAsk& a, DungeonRpcTryEnterAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DungeonRpcTryEnterAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  DungeonRpcTryEnterAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DungeonRpcTryEnterAsk& from);
  void MergeFrom(const DungeonRpcTryEnterAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DungeonRpcTryEnterAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 DungeonId = 1 [default = -1];
  bool has_dungeonid() const;
  void clear_dungeonid();
  static const int kDungeonIdFieldNumber = 1;
  ::google::protobuf::int32 dungeonid() const;
  void set_dungeonid(::google::protobuf::int32 value);

  // optional sint32 BirthPoint = 3 [default = -1];
  bool has_birthpoint() const;
  void clear_birthpoint();
  static const int kBirthPointFieldNumber = 3;
  ::google::protobuf::int32 birthpoint() const;
  void set_birthpoint(::google::protobuf::int32 value);

  // optional sint32 FaceDir = 4 [default = -1];
  bool has_facedir() const;
  void clear_facedir();
  static const int kFaceDirFieldNumber = 4;
  ::google::protobuf::int32 facedir() const;
  void set_facedir(::google::protobuf::int32 value);

  // optional sint32 GuildId = 5 [default = -1];
  bool has_guildid() const;
  void clear_guildid();
  static const int kGuildIdFieldNumber = 5;
  ::google::protobuf::int32 guildid() const;
  void set_guildid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DungeonRpcTryEnterAsk)
 private:
  void set_has_dungeonid();
  void clear_has_dungeonid();
  void set_has_birthpoint();
  void clear_has_birthpoint();
  void set_has_facedir();
  void clear_has_facedir();
  void set_has_guildid();
  void clear_has_guildid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 dungeonid_;
  ::google::protobuf::int32 birthpoint_;
  ::google::protobuf::int32 facedir_;
  ::google::protobuf::int32 guildid_;
  friend struct protobuf_DungeonRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DungeonRpcTryEnterReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DungeonRpcTryEnterReply) */ {
 public:
  DungeonRpcTryEnterReply();
  virtual ~DungeonRpcTryEnterReply();

  DungeonRpcTryEnterReply(const DungeonRpcTryEnterReply& from);

  inline DungeonRpcTryEnterReply& operator=(const DungeonRpcTryEnterReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DungeonRpcTryEnterReply(DungeonRpcTryEnterReply&& from) noexcept
    : DungeonRpcTryEnterReply() {
    *this = ::std::move(from);
  }

  inline DungeonRpcTryEnterReply& operator=(DungeonRpcTryEnterReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DungeonRpcTryEnterReply& default_instance();

  static inline const DungeonRpcTryEnterReply* internal_default_instance() {
    return reinterpret_cast<const DungeonRpcTryEnterReply*>(
               &_DungeonRpcTryEnterReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(DungeonRpcTryEnterReply* other);
  friend void swap(DungeonRpcTryEnterReply& a, DungeonRpcTryEnterReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DungeonRpcTryEnterReply* New() const PROTOBUF_FINAL { return New(NULL); }

  DungeonRpcTryEnterReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DungeonRpcTryEnterReply& from);
  void MergeFrom(const DungeonRpcTryEnterReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DungeonRpcTryEnterReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 GuildId = 5 [default = -1];
  bool has_guildid() const;
  void clear_guildid();
  static const int kGuildIdFieldNumber = 5;
  ::google::protobuf::int32 guildid() const;
  void set_guildid(::google::protobuf::int32 value);

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional sint32 DungeonId = 2 [default = -1];
  bool has_dungeonid() const;
  void clear_dungeonid();
  static const int kDungeonIdFieldNumber = 2;
  ::google::protobuf::int32 dungeonid() const;
  void set_dungeonid(::google::protobuf::int32 value);

  // optional sint32 BirthPoint = 3 [default = -1];
  bool has_birthpoint() const;
  void clear_birthpoint();
  static const int kBirthPointFieldNumber = 3;
  ::google::protobuf::int32 birthpoint() const;
  void set_birthpoint(::google::protobuf::int32 value);

  // optional sint32 FaceDir = 4 [default = -1];
  bool has_facedir() const;
  void clear_facedir();
  static const int kFaceDirFieldNumber = 4;
  ::google::protobuf::int32 facedir() const;
  void set_facedir(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DungeonRpcTryEnterReply)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_dungeonid();
  void clear_has_dungeonid();
  void set_has_birthpoint();
  void clear_has_birthpoint();
  void set_has_facedir();
  void clear_has_facedir();
  void set_has_guildid();
  void clear_has_guildid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guildid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 dungeonid_;
  ::google::protobuf::int32 birthpoint_;
  ::google::protobuf::int32 facedir_;
  friend struct protobuf_DungeonRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DungeonRpcTransferNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DungeonRpcTransferNotify) */ {
 public:
  DungeonRpcTransferNotify();
  virtual ~DungeonRpcTransferNotify();

  DungeonRpcTransferNotify(const DungeonRpcTransferNotify& from);

  inline DungeonRpcTransferNotify& operator=(const DungeonRpcTransferNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DungeonRpcTransferNotify(DungeonRpcTransferNotify&& from) noexcept
    : DungeonRpcTransferNotify() {
    *this = ::std::move(from);
  }

  inline DungeonRpcTransferNotify& operator=(DungeonRpcTransferNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DungeonRpcTransferNotify& default_instance();

  static inline const DungeonRpcTransferNotify* internal_default_instance() {
    return reinterpret_cast<const DungeonRpcTransferNotify*>(
               &_DungeonRpcTransferNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(DungeonRpcTransferNotify* other);
  friend void swap(DungeonRpcTransferNotify& a, DungeonRpcTransferNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DungeonRpcTransferNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DungeonRpcTransferNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DungeonRpcTransferNotify& from);
  void MergeFrom(const DungeonRpcTransferNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DungeonRpcTransferNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 DungeonId = 2 [default = -1];
  bool has_dungeonid() const;
  void clear_dungeonid();
  static const int kDungeonIdFieldNumber = 2;
  ::google::protobuf::int32 dungeonid() const;
  void set_dungeonid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DungeonRpcTransferNotify)
 private:
  void set_has_dungeonid();
  void clear_has_dungeonid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 dungeonid_;
  friend struct protobuf_DungeonRpc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DungeonRpcEnterAsk

// optional sint32 DungeonId = 1 [default = -1];
inline bool DungeonRpcEnterAsk::has_dungeonid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DungeonRpcEnterAsk::set_has_dungeonid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DungeonRpcEnterAsk::clear_has_dungeonid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DungeonRpcEnterAsk::clear_dungeonid() {
  dungeonid_ = -1;
  clear_has_dungeonid();
}
inline ::google::protobuf::int32 DungeonRpcEnterAsk::dungeonid() const {
  // @@protoc_insertion_point(field_get:DungeonRpcEnterAsk.DungeonId)
  return dungeonid_;
}
inline void DungeonRpcEnterAsk::set_dungeonid(::google::protobuf::int32 value) {
  set_has_dungeonid();
  dungeonid_ = value;
  // @@protoc_insertion_point(field_set:DungeonRpcEnterAsk.DungeonId)
}

// optional sint32 DungeonType = 3 [default = -1];
inline bool DungeonRpcEnterAsk::has_dungeontype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DungeonRpcEnterAsk::set_has_dungeontype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DungeonRpcEnterAsk::clear_has_dungeontype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DungeonRpcEnterAsk::clear_dungeontype() {
  dungeontype_ = -1;
  clear_has_dungeontype();
}
inline ::google::protobuf::int32 DungeonRpcEnterAsk::dungeontype() const {
  // @@protoc_insertion_point(field_get:DungeonRpcEnterAsk.DungeonType)
  return dungeontype_;
}
inline void DungeonRpcEnterAsk::set_dungeontype(::google::protobuf::int32 value) {
  set_has_dungeontype();
  dungeontype_ = value;
  // @@protoc_insertion_point(field_set:DungeonRpcEnterAsk.DungeonType)
}

// optional sint32 BirthPoint = 4 [default = -1];
inline bool DungeonRpcEnterAsk::has_birthpoint() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DungeonRpcEnterAsk::set_has_birthpoint() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DungeonRpcEnterAsk::clear_has_birthpoint() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DungeonRpcEnterAsk::clear_birthpoint() {
  birthpoint_ = -1;
  clear_has_birthpoint();
}
inline ::google::protobuf::int32 DungeonRpcEnterAsk::birthpoint() const {
  // @@protoc_insertion_point(field_get:DungeonRpcEnterAsk.BirthPoint)
  return birthpoint_;
}
inline void DungeonRpcEnterAsk::set_birthpoint(::google::protobuf::int32 value) {
  set_has_birthpoint();
  birthpoint_ = value;
  // @@protoc_insertion_point(field_set:DungeonRpcEnterAsk.BirthPoint)
}

// optional sint32 FaceDir = 5 [default = -1];
inline bool DungeonRpcEnterAsk::has_facedir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DungeonRpcEnterAsk::set_has_facedir() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DungeonRpcEnterAsk::clear_has_facedir() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DungeonRpcEnterAsk::clear_facedir() {
  facedir_ = -1;
  clear_has_facedir();
}
inline ::google::protobuf::int32 DungeonRpcEnterAsk::facedir() const {
  // @@protoc_insertion_point(field_get:DungeonRpcEnterAsk.FaceDir)
  return facedir_;
}
inline void DungeonRpcEnterAsk::set_facedir(::google::protobuf::int32 value) {
  set_has_facedir();
  facedir_ = value;
  // @@protoc_insertion_point(field_set:DungeonRpcEnterAsk.FaceDir)
}

// optional sint32 GuildId = 6 [default = -1];
inline bool DungeonRpcEnterAsk::has_guildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DungeonRpcEnterAsk::set_has_guildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DungeonRpcEnterAsk::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DungeonRpcEnterAsk::clear_guildid() {
  guildid_ = -1;
  clear_has_guildid();
}
inline ::google::protobuf::int32 DungeonRpcEnterAsk::guildid() const {
  // @@protoc_insertion_point(field_get:DungeonRpcEnterAsk.GuildId)
  return guildid_;
}
inline void DungeonRpcEnterAsk::set_guildid(::google::protobuf::int32 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:DungeonRpcEnterAsk.GuildId)
}

// -------------------------------------------------------------------

// DungeonRpcEnterReply

// optional sint32 Result = 1 [default = -9999];
inline bool DungeonRpcEnterReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DungeonRpcEnterReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DungeonRpcEnterReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DungeonRpcEnterReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 DungeonRpcEnterReply::result() const {
  // @@protoc_insertion_point(field_get:DungeonRpcEnterReply.Result)
  return result_;
}
inline void DungeonRpcEnterReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:DungeonRpcEnterReply.Result)
}

// -------------------------------------------------------------------

// DungeonRpcOpenNotify

// optional string DungeonKey = 1;
inline bool DungeonRpcOpenNotify::has_dungeonkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DungeonRpcOpenNotify::set_has_dungeonkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DungeonRpcOpenNotify::clear_has_dungeonkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DungeonRpcOpenNotify::clear_dungeonkey() {
  dungeonkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dungeonkey();
}
inline const ::std::string& DungeonRpcOpenNotify::dungeonkey() const {
  // @@protoc_insertion_point(field_get:DungeonRpcOpenNotify.DungeonKey)
  return dungeonkey_.GetNoArena();
}
inline void DungeonRpcOpenNotify::set_dungeonkey(const ::std::string& value) {
  set_has_dungeonkey();
  dungeonkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DungeonRpcOpenNotify.DungeonKey)
}
#if LANG_CXX11
inline void DungeonRpcOpenNotify::set_dungeonkey(::std::string&& value) {
  set_has_dungeonkey();
  dungeonkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DungeonRpcOpenNotify.DungeonKey)
}
#endif
inline void DungeonRpcOpenNotify::set_dungeonkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_dungeonkey();
  dungeonkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DungeonRpcOpenNotify.DungeonKey)
}
inline void DungeonRpcOpenNotify::set_dungeonkey(const char* value, size_t size) {
  set_has_dungeonkey();
  dungeonkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DungeonRpcOpenNotify.DungeonKey)
}
inline ::std::string* DungeonRpcOpenNotify::mutable_dungeonkey() {
  set_has_dungeonkey();
  // @@protoc_insertion_point(field_mutable:DungeonRpcOpenNotify.DungeonKey)
  return dungeonkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DungeonRpcOpenNotify::release_dungeonkey() {
  // @@protoc_insertion_point(field_release:DungeonRpcOpenNotify.DungeonKey)
  clear_has_dungeonkey();
  return dungeonkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DungeonRpcOpenNotify::set_allocated_dungeonkey(::std::string* dungeonkey) {
  if (dungeonkey != NULL) {
    set_has_dungeonkey();
  } else {
    clear_has_dungeonkey();
  }
  dungeonkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dungeonkey);
  // @@protoc_insertion_point(field_set_allocated:DungeonRpcOpenNotify.DungeonKey)
}

// optional string Host = 2;
inline bool DungeonRpcOpenNotify::has_host() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DungeonRpcOpenNotify::set_has_host() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DungeonRpcOpenNotify::clear_has_host() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DungeonRpcOpenNotify::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
inline const ::std::string& DungeonRpcOpenNotify::host() const {
  // @@protoc_insertion_point(field_get:DungeonRpcOpenNotify.Host)
  return host_.GetNoArena();
}
inline void DungeonRpcOpenNotify::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DungeonRpcOpenNotify.Host)
}
#if LANG_CXX11
inline void DungeonRpcOpenNotify::set_host(::std::string&& value) {
  set_has_host();
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DungeonRpcOpenNotify.Host)
}
#endif
inline void DungeonRpcOpenNotify::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DungeonRpcOpenNotify.Host)
}
inline void DungeonRpcOpenNotify::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DungeonRpcOpenNotify.Host)
}
inline ::std::string* DungeonRpcOpenNotify::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:DungeonRpcOpenNotify.Host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DungeonRpcOpenNotify::release_host() {
  // @@protoc_insertion_point(field_release:DungeonRpcOpenNotify.Host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DungeonRpcOpenNotify::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:DungeonRpcOpenNotify.Host)
}

// optional sint32 Port = 3 [default = -1];
inline bool DungeonRpcOpenNotify::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DungeonRpcOpenNotify::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DungeonRpcOpenNotify::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DungeonRpcOpenNotify::clear_port() {
  port_ = -1;
  clear_has_port();
}
inline ::google::protobuf::int32 DungeonRpcOpenNotify::port() const {
  // @@protoc_insertion_point(field_get:DungeonRpcOpenNotify.Port)
  return port_;
}
inline void DungeonRpcOpenNotify::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:DungeonRpcOpenNotify.Port)
}

// optional sint32 DungeonId = 9 [default = -1];
inline bool DungeonRpcOpenNotify::has_dungeonid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DungeonRpcOpenNotify::set_has_dungeonid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DungeonRpcOpenNotify::clear_has_dungeonid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DungeonRpcOpenNotify::clear_dungeonid() {
  dungeonid_ = -1;
  clear_has_dungeonid();
}
inline ::google::protobuf::int32 DungeonRpcOpenNotify::dungeonid() const {
  // @@protoc_insertion_point(field_get:DungeonRpcOpenNotify.DungeonId)
  return dungeonid_;
}
inline void DungeonRpcOpenNotify::set_dungeonid(::google::protobuf::int32 value) {
  set_has_dungeonid();
  dungeonid_ = value;
  // @@protoc_insertion_point(field_set:DungeonRpcOpenNotify.DungeonId)
}

// optional sint32 DungeonType = 10 [default = -1];
inline bool DungeonRpcOpenNotify::has_dungeontype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DungeonRpcOpenNotify::set_has_dungeontype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DungeonRpcOpenNotify::clear_has_dungeontype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DungeonRpcOpenNotify::clear_dungeontype() {
  dungeontype_ = -1;
  clear_has_dungeontype();
}
inline ::google::protobuf::int32 DungeonRpcOpenNotify::dungeontype() const {
  // @@protoc_insertion_point(field_get:DungeonRpcOpenNotify.DungeonType)
  return dungeontype_;
}
inline void DungeonRpcOpenNotify::set_dungeontype(::google::protobuf::int32 value) {
  set_has_dungeontype();
  dungeontype_ = value;
  // @@protoc_insertion_point(field_set:DungeonRpcOpenNotify.DungeonType)
}

// optional sint32 GuildId = 11 [default = -1];
inline bool DungeonRpcOpenNotify::has_guildid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DungeonRpcOpenNotify::set_has_guildid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DungeonRpcOpenNotify::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DungeonRpcOpenNotify::clear_guildid() {
  guildid_ = -1;
  clear_has_guildid();
}
inline ::google::protobuf::int32 DungeonRpcOpenNotify::guildid() const {
  // @@protoc_insertion_point(field_get:DungeonRpcOpenNotify.GuildId)
  return guildid_;
}
inline void DungeonRpcOpenNotify::set_guildid(::google::protobuf::int32 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:DungeonRpcOpenNotify.GuildId)
}

// -------------------------------------------------------------------

// DungeonRpcTryEnterAsk

// optional sint32 DungeonId = 1 [default = -1];
inline bool DungeonRpcTryEnterAsk::has_dungeonid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DungeonRpcTryEnterAsk::set_has_dungeonid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DungeonRpcTryEnterAsk::clear_has_dungeonid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DungeonRpcTryEnterAsk::clear_dungeonid() {
  dungeonid_ = -1;
  clear_has_dungeonid();
}
inline ::google::protobuf::int32 DungeonRpcTryEnterAsk::dungeonid() const {
  // @@protoc_insertion_point(field_get:DungeonRpcTryEnterAsk.DungeonId)
  return dungeonid_;
}
inline void DungeonRpcTryEnterAsk::set_dungeonid(::google::protobuf::int32 value) {
  set_has_dungeonid();
  dungeonid_ = value;
  // @@protoc_insertion_point(field_set:DungeonRpcTryEnterAsk.DungeonId)
}

// optional sint32 BirthPoint = 3 [default = -1];
inline bool DungeonRpcTryEnterAsk::has_birthpoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DungeonRpcTryEnterAsk::set_has_birthpoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DungeonRpcTryEnterAsk::clear_has_birthpoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DungeonRpcTryEnterAsk::clear_birthpoint() {
  birthpoint_ = -1;
  clear_has_birthpoint();
}
inline ::google::protobuf::int32 DungeonRpcTryEnterAsk::birthpoint() const {
  // @@protoc_insertion_point(field_get:DungeonRpcTryEnterAsk.BirthPoint)
  return birthpoint_;
}
inline void DungeonRpcTryEnterAsk::set_birthpoint(::google::protobuf::int32 value) {
  set_has_birthpoint();
  birthpoint_ = value;
  // @@protoc_insertion_point(field_set:DungeonRpcTryEnterAsk.BirthPoint)
}

// optional sint32 FaceDir = 4 [default = -1];
inline bool DungeonRpcTryEnterAsk::has_facedir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DungeonRpcTryEnterAsk::set_has_facedir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DungeonRpcTryEnterAsk::clear_has_facedir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DungeonRpcTryEnterAsk::clear_facedir() {
  facedir_ = -1;
  clear_has_facedir();
}
inline ::google::protobuf::int32 DungeonRpcTryEnterAsk::facedir() const {
  // @@protoc_insertion_point(field_get:DungeonRpcTryEnterAsk.FaceDir)
  return facedir_;
}
inline void DungeonRpcTryEnterAsk::set_facedir(::google::protobuf::int32 value) {
  set_has_facedir();
  facedir_ = value;
  // @@protoc_insertion_point(field_set:DungeonRpcTryEnterAsk.FaceDir)
}

// optional sint32 GuildId = 5 [default = -1];
inline bool DungeonRpcTryEnterAsk::has_guildid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DungeonRpcTryEnterAsk::set_has_guildid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DungeonRpcTryEnterAsk::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DungeonRpcTryEnterAsk::clear_guildid() {
  guildid_ = -1;
  clear_has_guildid();
}
inline ::google::protobuf::int32 DungeonRpcTryEnterAsk::guildid() const {
  // @@protoc_insertion_point(field_get:DungeonRpcTryEnterAsk.GuildId)
  return guildid_;
}
inline void DungeonRpcTryEnterAsk::set_guildid(::google::protobuf::int32 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:DungeonRpcTryEnterAsk.GuildId)
}

// -------------------------------------------------------------------

// DungeonRpcTryEnterReply

// optional sint32 Result = 1 [default = -9999];
inline bool DungeonRpcTryEnterReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DungeonRpcTryEnterReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DungeonRpcTryEnterReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DungeonRpcTryEnterReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 DungeonRpcTryEnterReply::result() const {
  // @@protoc_insertion_point(field_get:DungeonRpcTryEnterReply.Result)
  return result_;
}
inline void DungeonRpcTryEnterReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:DungeonRpcTryEnterReply.Result)
}

// optional sint32 DungeonId = 2 [default = -1];
inline bool DungeonRpcTryEnterReply::has_dungeonid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DungeonRpcTryEnterReply::set_has_dungeonid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DungeonRpcTryEnterReply::clear_has_dungeonid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DungeonRpcTryEnterReply::clear_dungeonid() {
  dungeonid_ = -1;
  clear_has_dungeonid();
}
inline ::google::protobuf::int32 DungeonRpcTryEnterReply::dungeonid() const {
  // @@protoc_insertion_point(field_get:DungeonRpcTryEnterReply.DungeonId)
  return dungeonid_;
}
inline void DungeonRpcTryEnterReply::set_dungeonid(::google::protobuf::int32 value) {
  set_has_dungeonid();
  dungeonid_ = value;
  // @@protoc_insertion_point(field_set:DungeonRpcTryEnterReply.DungeonId)
}

// optional sint32 BirthPoint = 3 [default = -1];
inline bool DungeonRpcTryEnterReply::has_birthpoint() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DungeonRpcTryEnterReply::set_has_birthpoint() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DungeonRpcTryEnterReply::clear_has_birthpoint() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DungeonRpcTryEnterReply::clear_birthpoint() {
  birthpoint_ = -1;
  clear_has_birthpoint();
}
inline ::google::protobuf::int32 DungeonRpcTryEnterReply::birthpoint() const {
  // @@protoc_insertion_point(field_get:DungeonRpcTryEnterReply.BirthPoint)
  return birthpoint_;
}
inline void DungeonRpcTryEnterReply::set_birthpoint(::google::protobuf::int32 value) {
  set_has_birthpoint();
  birthpoint_ = value;
  // @@protoc_insertion_point(field_set:DungeonRpcTryEnterReply.BirthPoint)
}

// optional sint32 FaceDir = 4 [default = -1];
inline bool DungeonRpcTryEnterReply::has_facedir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DungeonRpcTryEnterReply::set_has_facedir() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DungeonRpcTryEnterReply::clear_has_facedir() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DungeonRpcTryEnterReply::clear_facedir() {
  facedir_ = -1;
  clear_has_facedir();
}
inline ::google::protobuf::int32 DungeonRpcTryEnterReply::facedir() const {
  // @@protoc_insertion_point(field_get:DungeonRpcTryEnterReply.FaceDir)
  return facedir_;
}
inline void DungeonRpcTryEnterReply::set_facedir(::google::protobuf::int32 value) {
  set_has_facedir();
  facedir_ = value;
  // @@protoc_insertion_point(field_set:DungeonRpcTryEnterReply.FaceDir)
}

// optional sint32 GuildId = 5 [default = -1];
inline bool DungeonRpcTryEnterReply::has_guildid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DungeonRpcTryEnterReply::set_has_guildid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DungeonRpcTryEnterReply::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DungeonRpcTryEnterReply::clear_guildid() {
  guildid_ = -1;
  clear_has_guildid();
}
inline ::google::protobuf::int32 DungeonRpcTryEnterReply::guildid() const {
  // @@protoc_insertion_point(field_get:DungeonRpcTryEnterReply.GuildId)
  return guildid_;
}
inline void DungeonRpcTryEnterReply::set_guildid(::google::protobuf::int32 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:DungeonRpcTryEnterReply.GuildId)
}

// -------------------------------------------------------------------

// DungeonRpcTransferNotify

// optional sint32 DungeonId = 2 [default = -1];
inline bool DungeonRpcTransferNotify::has_dungeonid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DungeonRpcTransferNotify::set_has_dungeonid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DungeonRpcTransferNotify::clear_has_dungeonid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DungeonRpcTransferNotify::clear_dungeonid() {
  dungeonid_ = -1;
  clear_has_dungeonid();
}
inline ::google::protobuf::int32 DungeonRpcTransferNotify::dungeonid() const {
  // @@protoc_insertion_point(field_get:DungeonRpcTransferNotify.DungeonId)
  return dungeonid_;
}
inline void DungeonRpcTransferNotify::set_dungeonid(::google::protobuf::int32 value) {
  set_has_dungeonid();
  dungeonid_ = value;
  // @@protoc_insertion_point(field_set:DungeonRpcTransferNotify.DungeonId)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DungeonRpc_2eproto__INCLUDED
