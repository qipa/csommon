// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OneVSOneTopV1Data.proto

#ifndef PROTOBUF_OneVSOneTopV1Data_2eproto__INCLUDED
#define PROTOBUF_OneVSOneTopV1Data_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)
class OneVSOneTopOneVSOneDateV1;
class OneVSOneTopOneVSOneDateV1DefaultTypeInternal;
extern OneVSOneTopOneVSOneDateV1DefaultTypeInternal _OneVSOneTopOneVSOneDateV1_default_instance_;

namespace protobuf_OneVSOneTopV1Data_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_OneVSOneTopV1Data_2eproto

// ===================================================================

class OneVSOneTopOneVSOneDateV1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OneVSOneTopOneVSOneDateV1) */ {
 public:
  OneVSOneTopOneVSOneDateV1();
  virtual ~OneVSOneTopOneVSOneDateV1();

  OneVSOneTopOneVSOneDateV1(const OneVSOneTopOneVSOneDateV1& from);

  inline OneVSOneTopOneVSOneDateV1& operator=(const OneVSOneTopOneVSOneDateV1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OneVSOneTopOneVSOneDateV1(OneVSOneTopOneVSOneDateV1&& from) noexcept
    : OneVSOneTopOneVSOneDateV1() {
    *this = ::std::move(from);
  }

  inline OneVSOneTopOneVSOneDateV1& operator=(OneVSOneTopOneVSOneDateV1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneVSOneTopOneVSOneDateV1& default_instance();

  static inline const OneVSOneTopOneVSOneDateV1* internal_default_instance() {
    return reinterpret_cast<const OneVSOneTopOneVSOneDateV1*>(
               &_OneVSOneTopOneVSOneDateV1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(OneVSOneTopOneVSOneDateV1* other);
  friend void swap(OneVSOneTopOneVSOneDateV1& a, OneVSOneTopOneVSOneDateV1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OneVSOneTopOneVSOneDateV1* New() const PROTOBUF_FINAL { return New(NULL); }

  OneVSOneTopOneVSOneDateV1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OneVSOneTopOneVSOneDateV1& from);
  void MergeFrom(const OneVSOneTopOneVSOneDateV1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OneVSOneTopOneVSOneDateV1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TopMess TopMesses = 1;
  int topmesses_size() const;
  void clear_topmesses();
  static const int kTopMessesFieldNumber = 1;
  const ::TopMess& topmesses(int index) const;
  ::TopMess* mutable_topmesses(int index);
  ::TopMess* add_topmesses();
  ::google::protobuf::RepeatedPtrField< ::TopMess >*
      mutable_topmesses();
  const ::google::protobuf::RepeatedPtrField< ::TopMess >&
      topmesses() const;

  // optional sint64 Time = 6 [default = -1];
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 6;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:OneVSOneTopOneVSOneDateV1)
 private:
  void set_has_time();
  void clear_has_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TopMess > topmesses_;
  ::google::protobuf::int64 time_;
  friend struct protobuf_OneVSOneTopV1Data_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OneVSOneTopOneVSOneDateV1

// repeated .TopMess TopMesses = 1;
inline int OneVSOneTopOneVSOneDateV1::topmesses_size() const {
  return topmesses_.size();
}
inline void OneVSOneTopOneVSOneDateV1::clear_topmesses() {
  topmesses_.Clear();
}
inline const ::TopMess& OneVSOneTopOneVSOneDateV1::topmesses(int index) const {
  // @@protoc_insertion_point(field_get:OneVSOneTopOneVSOneDateV1.TopMesses)
  return topmesses_.Get(index);
}
inline ::TopMess* OneVSOneTopOneVSOneDateV1::mutable_topmesses(int index) {
  // @@protoc_insertion_point(field_mutable:OneVSOneTopOneVSOneDateV1.TopMesses)
  return topmesses_.Mutable(index);
}
inline ::TopMess* OneVSOneTopOneVSOneDateV1::add_topmesses() {
  // @@protoc_insertion_point(field_add:OneVSOneTopOneVSOneDateV1.TopMesses)
  return topmesses_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::TopMess >*
OneVSOneTopOneVSOneDateV1::mutable_topmesses() {
  // @@protoc_insertion_point(field_mutable_list:OneVSOneTopOneVSOneDateV1.TopMesses)
  return &topmesses_;
}
inline const ::google::protobuf::RepeatedPtrField< ::TopMess >&
OneVSOneTopOneVSOneDateV1::topmesses() const {
  // @@protoc_insertion_point(field_list:OneVSOneTopOneVSOneDateV1.TopMesses)
  return topmesses_;
}

// optional sint64 Time = 6 [default = -1];
inline bool OneVSOneTopOneVSOneDateV1::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneVSOneTopOneVSOneDateV1::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneVSOneTopOneVSOneDateV1::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneVSOneTopOneVSOneDateV1::clear_time() {
  time_ = GOOGLE_LONGLONG(-1);
  clear_has_time();
}
inline ::google::protobuf::int64 OneVSOneTopOneVSOneDateV1::time() const {
  // @@protoc_insertion_point(field_get:OneVSOneTopOneVSOneDateV1.Time)
  return time_;
}
inline void OneVSOneTopOneVSOneDateV1::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:OneVSOneTopOneVSOneDateV1.Time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_OneVSOneTopV1Data_2eproto__INCLUDED
