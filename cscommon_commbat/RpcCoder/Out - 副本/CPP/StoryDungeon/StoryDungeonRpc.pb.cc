// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StoryDungeonRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "StoryDungeonRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class StoryDungeonRpcSyncDataAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StoryDungeonRpcSyncDataAsk>
     _instance;
} _StoryDungeonRpcSyncDataAsk_default_instance_;
class StoryDungeonRpcSyncDataReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StoryDungeonRpcSyncDataReply>
     _instance;
} _StoryDungeonRpcSyncDataReply_default_instance_;
class StoryDungeonRpcChallengeAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StoryDungeonRpcChallengeAsk>
     _instance;
} _StoryDungeonRpcChallengeAsk_default_instance_;
class StoryDungeonRpcChallengeReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StoryDungeonRpcChallengeReply>
     _instance;
} _StoryDungeonRpcChallengeReply_default_instance_;
class StoryDungeonRpcWaitForConfirmationNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StoryDungeonRpcWaitForConfirmationNotify>
     _instance;
} _StoryDungeonRpcWaitForConfirmationNotify_default_instance_;
class StoryDungeonRpcConfirmEnterAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StoryDungeonRpcConfirmEnterAsk>
     _instance;
} _StoryDungeonRpcConfirmEnterAsk_default_instance_;
class StoryDungeonRpcConfirmEnterReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StoryDungeonRpcConfirmEnterReply>
     _instance;
} _StoryDungeonRpcConfirmEnterReply_default_instance_;
class StoryDungeonRpcPlayerConfirmResultNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StoryDungeonRpcPlayerConfirmResultNotify>
     _instance;
} _StoryDungeonRpcPlayerConfirmResultNotify_default_instance_;

namespace protobuf_StoryDungeonRpc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[8];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcSyncDataAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcSyncDataAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcSyncDataReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcSyncDataReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcSyncDataReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcChallengeAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcChallengeAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcChallengeAsk, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcChallengeReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcChallengeReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcChallengeReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcChallengeReply, errorusername_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcWaitForConfirmationNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcWaitForConfirmationNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcWaitForConfirmationNotify, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcConfirmEnterAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcConfirmEnterAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcConfirmEnterAsk, isagree_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcConfirmEnterReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcConfirmEnterReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcConfirmEnterReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcPlayerConfirmResultNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcPlayerConfirmResultNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcPlayerConfirmResultNotify, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcPlayerConfirmResultNotify, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoryDungeonRpcPlayerConfirmResultNotify, isagree_),
  2,
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(StoryDungeonRpcSyncDataAsk)},
  { 5, 11, sizeof(StoryDungeonRpcSyncDataReply)},
  { 12, 18, sizeof(StoryDungeonRpcChallengeAsk)},
  { 19, 26, sizeof(StoryDungeonRpcChallengeReply)},
  { 28, 34, sizeof(StoryDungeonRpcWaitForConfirmationNotify)},
  { 35, 41, sizeof(StoryDungeonRpcConfirmEnterAsk)},
  { 42, 48, sizeof(StoryDungeonRpcConfirmEnterReply)},
  { 49, 57, sizeof(StoryDungeonRpcPlayerConfirmResultNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_StoryDungeonRpcSyncDataAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StoryDungeonRpcSyncDataReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StoryDungeonRpcChallengeAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StoryDungeonRpcChallengeReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StoryDungeonRpcWaitForConfirmationNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StoryDungeonRpcConfirmEnterAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StoryDungeonRpcConfirmEnterReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StoryDungeonRpcPlayerConfirmResultNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "StoryDungeonRpc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _StoryDungeonRpcSyncDataAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StoryDungeonRpcSyncDataAsk_default_instance_);_StoryDungeonRpcSyncDataReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StoryDungeonRpcSyncDataReply_default_instance_);_StoryDungeonRpcChallengeAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StoryDungeonRpcChallengeAsk_default_instance_);_StoryDungeonRpcChallengeReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StoryDungeonRpcChallengeReply_default_instance_);_StoryDungeonRpcWaitForConfirmationNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StoryDungeonRpcWaitForConfirmationNotify_default_instance_);_StoryDungeonRpcConfirmEnterAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StoryDungeonRpcConfirmEnterAsk_default_instance_);_StoryDungeonRpcConfirmEnterReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StoryDungeonRpcConfirmEnterReply_default_instance_);_StoryDungeonRpcPlayerConfirmResultNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StoryDungeonRpcPlayerConfirmResultNotify_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025StoryDungeonRpc.proto\032\022PublicStruct.pr"
      "oto\"\034\n\032StoryDungeonRpcSyncDataAsk\"5\n\034Sto"
      "ryDungeonRpcSyncDataReply\022\025\n\006Result\030\001 \001("
      "\021:\005-9999\"-\n\033StoryDungeonRpcChallengeAsk\022"
      "\016\n\002Id\030\001 \001(\021:\002-1\"M\n\035StoryDungeonRpcChalle"
      "ngeReply\022\025\n\006Result\030\001 \001(\021:\005-9999\022\025\n\rError"
      "UserName\030\003 \001(\t\":\n(StoryDungeonRpcWaitFor"
      "ConfirmationNotify\022\016\n\002Id\030\001 \001(\021:\002-1\"8\n\036St"
      "oryDungeonRpcConfirmEnterAsk\022\026\n\007IsAgree\030"
      "\001 \001(\010:\005false\"9\n StoryDungeonRpcConfirmEn"
      "terReply\022\025\n\006Result\030\001 \001(\021:\005-9999\"h\n(Story"
      "DungeonRpcPlayerConfirmResultNotify\022\022\n\006U"
      "serId\030\002 \001(\022:\002-1\022\020\n\010UserName\030\003 \001(\t\022\026\n\007IsA"
      "gree\030\004 \001(\010:\005false"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 537);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "StoryDungeonRpc.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_StoryDungeonRpc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoryDungeonRpcSyncDataAsk::StoryDungeonRpcSyncDataAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_StoryDungeonRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoryDungeonRpcSyncDataAsk)
}
StoryDungeonRpcSyncDataAsk::StoryDungeonRpcSyncDataAsk(const StoryDungeonRpcSyncDataAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:StoryDungeonRpcSyncDataAsk)
}

void StoryDungeonRpcSyncDataAsk::SharedCtor() {
  _cached_size_ = 0;
}

StoryDungeonRpcSyncDataAsk::~StoryDungeonRpcSyncDataAsk() {
  // @@protoc_insertion_point(destructor:StoryDungeonRpcSyncDataAsk)
  SharedDtor();
}

void StoryDungeonRpcSyncDataAsk::SharedDtor() {
}

void StoryDungeonRpcSyncDataAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoryDungeonRpcSyncDataAsk::descriptor() {
  protobuf_StoryDungeonRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StoryDungeonRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoryDungeonRpcSyncDataAsk& StoryDungeonRpcSyncDataAsk::default_instance() {
  protobuf_StoryDungeonRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

StoryDungeonRpcSyncDataAsk* StoryDungeonRpcSyncDataAsk::New(::google::protobuf::Arena* arena) const {
  StoryDungeonRpcSyncDataAsk* n = new StoryDungeonRpcSyncDataAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoryDungeonRpcSyncDataAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:StoryDungeonRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StoryDungeonRpcSyncDataAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoryDungeonRpcSyncDataAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:StoryDungeonRpcSyncDataAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoryDungeonRpcSyncDataAsk)
  return false;
#undef DO_
}

void StoryDungeonRpcSyncDataAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoryDungeonRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StoryDungeonRpcSyncDataAsk)
}

::google::protobuf::uint8* StoryDungeonRpcSyncDataAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoryDungeonRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StoryDungeonRpcSyncDataAsk)
  return target;
}

size_t StoryDungeonRpcSyncDataAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StoryDungeonRpcSyncDataAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoryDungeonRpcSyncDataAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoryDungeonRpcSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const StoryDungeonRpcSyncDataAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoryDungeonRpcSyncDataAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoryDungeonRpcSyncDataAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoryDungeonRpcSyncDataAsk)
    MergeFrom(*source);
  }
}

void StoryDungeonRpcSyncDataAsk::MergeFrom(const StoryDungeonRpcSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoryDungeonRpcSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StoryDungeonRpcSyncDataAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoryDungeonRpcSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoryDungeonRpcSyncDataAsk::CopyFrom(const StoryDungeonRpcSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoryDungeonRpcSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoryDungeonRpcSyncDataAsk::IsInitialized() const {
  return true;
}

void StoryDungeonRpcSyncDataAsk::Swap(StoryDungeonRpcSyncDataAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoryDungeonRpcSyncDataAsk::InternalSwap(StoryDungeonRpcSyncDataAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoryDungeonRpcSyncDataAsk::GetMetadata() const {
  protobuf_StoryDungeonRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StoryDungeonRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoryDungeonRpcSyncDataAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoryDungeonRpcSyncDataReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoryDungeonRpcSyncDataReply::StoryDungeonRpcSyncDataReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_StoryDungeonRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoryDungeonRpcSyncDataReply)
}
StoryDungeonRpcSyncDataReply::StoryDungeonRpcSyncDataReply(const StoryDungeonRpcSyncDataReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:StoryDungeonRpcSyncDataReply)
}

void StoryDungeonRpcSyncDataReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

StoryDungeonRpcSyncDataReply::~StoryDungeonRpcSyncDataReply() {
  // @@protoc_insertion_point(destructor:StoryDungeonRpcSyncDataReply)
  SharedDtor();
}

void StoryDungeonRpcSyncDataReply::SharedDtor() {
}

void StoryDungeonRpcSyncDataReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoryDungeonRpcSyncDataReply::descriptor() {
  protobuf_StoryDungeonRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StoryDungeonRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoryDungeonRpcSyncDataReply& StoryDungeonRpcSyncDataReply::default_instance() {
  protobuf_StoryDungeonRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

StoryDungeonRpcSyncDataReply* StoryDungeonRpcSyncDataReply::New(::google::protobuf::Arena* arena) const {
  StoryDungeonRpcSyncDataReply* n = new StoryDungeonRpcSyncDataReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoryDungeonRpcSyncDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:StoryDungeonRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StoryDungeonRpcSyncDataReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoryDungeonRpcSyncDataReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StoryDungeonRpcSyncDataReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoryDungeonRpcSyncDataReply)
  return false;
#undef DO_
}

void StoryDungeonRpcSyncDataReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoryDungeonRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StoryDungeonRpcSyncDataReply)
}

::google::protobuf::uint8* StoryDungeonRpcSyncDataReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoryDungeonRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StoryDungeonRpcSyncDataReply)
  return target;
}

size_t StoryDungeonRpcSyncDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StoryDungeonRpcSyncDataReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoryDungeonRpcSyncDataReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoryDungeonRpcSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  const StoryDungeonRpcSyncDataReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoryDungeonRpcSyncDataReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoryDungeonRpcSyncDataReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoryDungeonRpcSyncDataReply)
    MergeFrom(*source);
  }
}

void StoryDungeonRpcSyncDataReply::MergeFrom(const StoryDungeonRpcSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoryDungeonRpcSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void StoryDungeonRpcSyncDataReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoryDungeonRpcSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoryDungeonRpcSyncDataReply::CopyFrom(const StoryDungeonRpcSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoryDungeonRpcSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoryDungeonRpcSyncDataReply::IsInitialized() const {
  return true;
}

void StoryDungeonRpcSyncDataReply::Swap(StoryDungeonRpcSyncDataReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoryDungeonRpcSyncDataReply::InternalSwap(StoryDungeonRpcSyncDataReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoryDungeonRpcSyncDataReply::GetMetadata() const {
  protobuf_StoryDungeonRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StoryDungeonRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoryDungeonRpcSyncDataReply

// optional sint32 Result = 1 [default = -9999];
bool StoryDungeonRpcSyncDataReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StoryDungeonRpcSyncDataReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void StoryDungeonRpcSyncDataReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void StoryDungeonRpcSyncDataReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 StoryDungeonRpcSyncDataReply::result() const {
  // @@protoc_insertion_point(field_get:StoryDungeonRpcSyncDataReply.Result)
  return result_;
}
void StoryDungeonRpcSyncDataReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:StoryDungeonRpcSyncDataReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoryDungeonRpcChallengeAsk::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoryDungeonRpcChallengeAsk::StoryDungeonRpcChallengeAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_StoryDungeonRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoryDungeonRpcChallengeAsk)
}
StoryDungeonRpcChallengeAsk::StoryDungeonRpcChallengeAsk(const StoryDungeonRpcChallengeAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:StoryDungeonRpcChallengeAsk)
}

void StoryDungeonRpcChallengeAsk::SharedCtor() {
  _cached_size_ = 0;
  id_ = -1;
}

StoryDungeonRpcChallengeAsk::~StoryDungeonRpcChallengeAsk() {
  // @@protoc_insertion_point(destructor:StoryDungeonRpcChallengeAsk)
  SharedDtor();
}

void StoryDungeonRpcChallengeAsk::SharedDtor() {
}

void StoryDungeonRpcChallengeAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoryDungeonRpcChallengeAsk::descriptor() {
  protobuf_StoryDungeonRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StoryDungeonRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoryDungeonRpcChallengeAsk& StoryDungeonRpcChallengeAsk::default_instance() {
  protobuf_StoryDungeonRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

StoryDungeonRpcChallengeAsk* StoryDungeonRpcChallengeAsk::New(::google::protobuf::Arena* arena) const {
  StoryDungeonRpcChallengeAsk* n = new StoryDungeonRpcChallengeAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoryDungeonRpcChallengeAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:StoryDungeonRpcChallengeAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StoryDungeonRpcChallengeAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoryDungeonRpcChallengeAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Id = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StoryDungeonRpcChallengeAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoryDungeonRpcChallengeAsk)
  return false;
#undef DO_
}

void StoryDungeonRpcChallengeAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoryDungeonRpcChallengeAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Id = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StoryDungeonRpcChallengeAsk)
}

::google::protobuf::uint8* StoryDungeonRpcChallengeAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoryDungeonRpcChallengeAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Id = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StoryDungeonRpcChallengeAsk)
  return target;
}

size_t StoryDungeonRpcChallengeAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StoryDungeonRpcChallengeAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Id = 1 [default = -1];
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoryDungeonRpcChallengeAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoryDungeonRpcChallengeAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const StoryDungeonRpcChallengeAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoryDungeonRpcChallengeAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoryDungeonRpcChallengeAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoryDungeonRpcChallengeAsk)
    MergeFrom(*source);
  }
}

void StoryDungeonRpcChallengeAsk::MergeFrom(const StoryDungeonRpcChallengeAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoryDungeonRpcChallengeAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void StoryDungeonRpcChallengeAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoryDungeonRpcChallengeAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoryDungeonRpcChallengeAsk::CopyFrom(const StoryDungeonRpcChallengeAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoryDungeonRpcChallengeAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoryDungeonRpcChallengeAsk::IsInitialized() const {
  return true;
}

void StoryDungeonRpcChallengeAsk::Swap(StoryDungeonRpcChallengeAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoryDungeonRpcChallengeAsk::InternalSwap(StoryDungeonRpcChallengeAsk* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoryDungeonRpcChallengeAsk::GetMetadata() const {
  protobuf_StoryDungeonRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StoryDungeonRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoryDungeonRpcChallengeAsk

// optional sint32 Id = 1 [default = -1];
bool StoryDungeonRpcChallengeAsk::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StoryDungeonRpcChallengeAsk::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void StoryDungeonRpcChallengeAsk::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void StoryDungeonRpcChallengeAsk::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 StoryDungeonRpcChallengeAsk::id() const {
  // @@protoc_insertion_point(field_get:StoryDungeonRpcChallengeAsk.Id)
  return id_;
}
void StoryDungeonRpcChallengeAsk::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:StoryDungeonRpcChallengeAsk.Id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoryDungeonRpcChallengeReply::kResultFieldNumber;
const int StoryDungeonRpcChallengeReply::kErrorUserNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoryDungeonRpcChallengeReply::StoryDungeonRpcChallengeReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_StoryDungeonRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoryDungeonRpcChallengeReply)
}
StoryDungeonRpcChallengeReply::StoryDungeonRpcChallengeReply(const StoryDungeonRpcChallengeReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errorusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_errorusername()) {
    errorusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorusername_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:StoryDungeonRpcChallengeReply)
}

void StoryDungeonRpcChallengeReply::SharedCtor() {
  _cached_size_ = 0;
  errorusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = -9999;
}

StoryDungeonRpcChallengeReply::~StoryDungeonRpcChallengeReply() {
  // @@protoc_insertion_point(destructor:StoryDungeonRpcChallengeReply)
  SharedDtor();
}

void StoryDungeonRpcChallengeReply::SharedDtor() {
  errorusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StoryDungeonRpcChallengeReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoryDungeonRpcChallengeReply::descriptor() {
  protobuf_StoryDungeonRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StoryDungeonRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoryDungeonRpcChallengeReply& StoryDungeonRpcChallengeReply::default_instance() {
  protobuf_StoryDungeonRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

StoryDungeonRpcChallengeReply* StoryDungeonRpcChallengeReply::New(::google::protobuf::Arena* arena) const {
  StoryDungeonRpcChallengeReply* n = new StoryDungeonRpcChallengeReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoryDungeonRpcChallengeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:StoryDungeonRpcChallengeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!errorusername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*errorusername_.UnsafeRawStringPointer())->clear();
    }
    result_ = -9999;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StoryDungeonRpcChallengeReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoryDungeonRpcChallengeReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ErrorUserName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errorusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->errorusername().data(), static_cast<int>(this->errorusername().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StoryDungeonRpcChallengeReply.ErrorUserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StoryDungeonRpcChallengeReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoryDungeonRpcChallengeReply)
  return false;
#undef DO_
}

void StoryDungeonRpcChallengeReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoryDungeonRpcChallengeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional string ErrorUserName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errorusername().data(), static_cast<int>(this->errorusername().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StoryDungeonRpcChallengeReply.ErrorUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->errorusername(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StoryDungeonRpcChallengeReply)
}

::google::protobuf::uint8* StoryDungeonRpcChallengeReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoryDungeonRpcChallengeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional string ErrorUserName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errorusername().data(), static_cast<int>(this->errorusername().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StoryDungeonRpcChallengeReply.ErrorUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->errorusername(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StoryDungeonRpcChallengeReply)
  return target;
}

size_t StoryDungeonRpcChallengeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StoryDungeonRpcChallengeReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string ErrorUserName = 3;
    if (has_errorusername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->errorusername());
    }

    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoryDungeonRpcChallengeReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoryDungeonRpcChallengeReply)
  GOOGLE_DCHECK_NE(&from, this);
  const StoryDungeonRpcChallengeReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoryDungeonRpcChallengeReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoryDungeonRpcChallengeReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoryDungeonRpcChallengeReply)
    MergeFrom(*source);
  }
}

void StoryDungeonRpcChallengeReply::MergeFrom(const StoryDungeonRpcChallengeReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoryDungeonRpcChallengeReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_errorusername();
      errorusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorusername_);
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StoryDungeonRpcChallengeReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoryDungeonRpcChallengeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoryDungeonRpcChallengeReply::CopyFrom(const StoryDungeonRpcChallengeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoryDungeonRpcChallengeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoryDungeonRpcChallengeReply::IsInitialized() const {
  return true;
}

void StoryDungeonRpcChallengeReply::Swap(StoryDungeonRpcChallengeReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoryDungeonRpcChallengeReply::InternalSwap(StoryDungeonRpcChallengeReply* other) {
  using std::swap;
  errorusername_.Swap(&other->errorusername_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoryDungeonRpcChallengeReply::GetMetadata() const {
  protobuf_StoryDungeonRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StoryDungeonRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoryDungeonRpcChallengeReply

// optional sint32 Result = 1 [default = -9999];
bool StoryDungeonRpcChallengeReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StoryDungeonRpcChallengeReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void StoryDungeonRpcChallengeReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void StoryDungeonRpcChallengeReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 StoryDungeonRpcChallengeReply::result() const {
  // @@protoc_insertion_point(field_get:StoryDungeonRpcChallengeReply.Result)
  return result_;
}
void StoryDungeonRpcChallengeReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:StoryDungeonRpcChallengeReply.Result)
}

// optional string ErrorUserName = 3;
bool StoryDungeonRpcChallengeReply::has_errorusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StoryDungeonRpcChallengeReply::set_has_errorusername() {
  _has_bits_[0] |= 0x00000001u;
}
void StoryDungeonRpcChallengeReply::clear_has_errorusername() {
  _has_bits_[0] &= ~0x00000001u;
}
void StoryDungeonRpcChallengeReply::clear_errorusername() {
  errorusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_errorusername();
}
const ::std::string& StoryDungeonRpcChallengeReply::errorusername() const {
  // @@protoc_insertion_point(field_get:StoryDungeonRpcChallengeReply.ErrorUserName)
  return errorusername_.GetNoArena();
}
void StoryDungeonRpcChallengeReply::set_errorusername(const ::std::string& value) {
  set_has_errorusername();
  errorusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:StoryDungeonRpcChallengeReply.ErrorUserName)
}
#if LANG_CXX11
void StoryDungeonRpcChallengeReply::set_errorusername(::std::string&& value) {
  set_has_errorusername();
  errorusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:StoryDungeonRpcChallengeReply.ErrorUserName)
}
#endif
void StoryDungeonRpcChallengeReply::set_errorusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_errorusername();
  errorusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:StoryDungeonRpcChallengeReply.ErrorUserName)
}
void StoryDungeonRpcChallengeReply::set_errorusername(const char* value, size_t size) {
  set_has_errorusername();
  errorusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:StoryDungeonRpcChallengeReply.ErrorUserName)
}
::std::string* StoryDungeonRpcChallengeReply::mutable_errorusername() {
  set_has_errorusername();
  // @@protoc_insertion_point(field_mutable:StoryDungeonRpcChallengeReply.ErrorUserName)
  return errorusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StoryDungeonRpcChallengeReply::release_errorusername() {
  // @@protoc_insertion_point(field_release:StoryDungeonRpcChallengeReply.ErrorUserName)
  clear_has_errorusername();
  return errorusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StoryDungeonRpcChallengeReply::set_allocated_errorusername(::std::string* errorusername) {
  if (errorusername != NULL) {
    set_has_errorusername();
  } else {
    clear_has_errorusername();
  }
  errorusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errorusername);
  // @@protoc_insertion_point(field_set_allocated:StoryDungeonRpcChallengeReply.ErrorUserName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoryDungeonRpcWaitForConfirmationNotify::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoryDungeonRpcWaitForConfirmationNotify::StoryDungeonRpcWaitForConfirmationNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_StoryDungeonRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoryDungeonRpcWaitForConfirmationNotify)
}
StoryDungeonRpcWaitForConfirmationNotify::StoryDungeonRpcWaitForConfirmationNotify(const StoryDungeonRpcWaitForConfirmationNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:StoryDungeonRpcWaitForConfirmationNotify)
}

void StoryDungeonRpcWaitForConfirmationNotify::SharedCtor() {
  _cached_size_ = 0;
  id_ = -1;
}

StoryDungeonRpcWaitForConfirmationNotify::~StoryDungeonRpcWaitForConfirmationNotify() {
  // @@protoc_insertion_point(destructor:StoryDungeonRpcWaitForConfirmationNotify)
  SharedDtor();
}

void StoryDungeonRpcWaitForConfirmationNotify::SharedDtor() {
}

void StoryDungeonRpcWaitForConfirmationNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoryDungeonRpcWaitForConfirmationNotify::descriptor() {
  protobuf_StoryDungeonRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StoryDungeonRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoryDungeonRpcWaitForConfirmationNotify& StoryDungeonRpcWaitForConfirmationNotify::default_instance() {
  protobuf_StoryDungeonRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

StoryDungeonRpcWaitForConfirmationNotify* StoryDungeonRpcWaitForConfirmationNotify::New(::google::protobuf::Arena* arena) const {
  StoryDungeonRpcWaitForConfirmationNotify* n = new StoryDungeonRpcWaitForConfirmationNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoryDungeonRpcWaitForConfirmationNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:StoryDungeonRpcWaitForConfirmationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StoryDungeonRpcWaitForConfirmationNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoryDungeonRpcWaitForConfirmationNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Id = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StoryDungeonRpcWaitForConfirmationNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoryDungeonRpcWaitForConfirmationNotify)
  return false;
#undef DO_
}

void StoryDungeonRpcWaitForConfirmationNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoryDungeonRpcWaitForConfirmationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Id = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StoryDungeonRpcWaitForConfirmationNotify)
}

::google::protobuf::uint8* StoryDungeonRpcWaitForConfirmationNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoryDungeonRpcWaitForConfirmationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Id = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StoryDungeonRpcWaitForConfirmationNotify)
  return target;
}

size_t StoryDungeonRpcWaitForConfirmationNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StoryDungeonRpcWaitForConfirmationNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Id = 1 [default = -1];
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoryDungeonRpcWaitForConfirmationNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoryDungeonRpcWaitForConfirmationNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const StoryDungeonRpcWaitForConfirmationNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoryDungeonRpcWaitForConfirmationNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoryDungeonRpcWaitForConfirmationNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoryDungeonRpcWaitForConfirmationNotify)
    MergeFrom(*source);
  }
}

void StoryDungeonRpcWaitForConfirmationNotify::MergeFrom(const StoryDungeonRpcWaitForConfirmationNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoryDungeonRpcWaitForConfirmationNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void StoryDungeonRpcWaitForConfirmationNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoryDungeonRpcWaitForConfirmationNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoryDungeonRpcWaitForConfirmationNotify::CopyFrom(const StoryDungeonRpcWaitForConfirmationNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoryDungeonRpcWaitForConfirmationNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoryDungeonRpcWaitForConfirmationNotify::IsInitialized() const {
  return true;
}

void StoryDungeonRpcWaitForConfirmationNotify::Swap(StoryDungeonRpcWaitForConfirmationNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoryDungeonRpcWaitForConfirmationNotify::InternalSwap(StoryDungeonRpcWaitForConfirmationNotify* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoryDungeonRpcWaitForConfirmationNotify::GetMetadata() const {
  protobuf_StoryDungeonRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StoryDungeonRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoryDungeonRpcWaitForConfirmationNotify

// optional sint32 Id = 1 [default = -1];
bool StoryDungeonRpcWaitForConfirmationNotify::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StoryDungeonRpcWaitForConfirmationNotify::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void StoryDungeonRpcWaitForConfirmationNotify::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void StoryDungeonRpcWaitForConfirmationNotify::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 StoryDungeonRpcWaitForConfirmationNotify::id() const {
  // @@protoc_insertion_point(field_get:StoryDungeonRpcWaitForConfirmationNotify.Id)
  return id_;
}
void StoryDungeonRpcWaitForConfirmationNotify::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:StoryDungeonRpcWaitForConfirmationNotify.Id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoryDungeonRpcConfirmEnterAsk::kIsAgreeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoryDungeonRpcConfirmEnterAsk::StoryDungeonRpcConfirmEnterAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_StoryDungeonRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoryDungeonRpcConfirmEnterAsk)
}
StoryDungeonRpcConfirmEnterAsk::StoryDungeonRpcConfirmEnterAsk(const StoryDungeonRpcConfirmEnterAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  isagree_ = from.isagree_;
  // @@protoc_insertion_point(copy_constructor:StoryDungeonRpcConfirmEnterAsk)
}

void StoryDungeonRpcConfirmEnterAsk::SharedCtor() {
  _cached_size_ = 0;
  isagree_ = false;
}

StoryDungeonRpcConfirmEnterAsk::~StoryDungeonRpcConfirmEnterAsk() {
  // @@protoc_insertion_point(destructor:StoryDungeonRpcConfirmEnterAsk)
  SharedDtor();
}

void StoryDungeonRpcConfirmEnterAsk::SharedDtor() {
}

void StoryDungeonRpcConfirmEnterAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoryDungeonRpcConfirmEnterAsk::descriptor() {
  protobuf_StoryDungeonRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StoryDungeonRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoryDungeonRpcConfirmEnterAsk& StoryDungeonRpcConfirmEnterAsk::default_instance() {
  protobuf_StoryDungeonRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

StoryDungeonRpcConfirmEnterAsk* StoryDungeonRpcConfirmEnterAsk::New(::google::protobuf::Arena* arena) const {
  StoryDungeonRpcConfirmEnterAsk* n = new StoryDungeonRpcConfirmEnterAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoryDungeonRpcConfirmEnterAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:StoryDungeonRpcConfirmEnterAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  isagree_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StoryDungeonRpcConfirmEnterAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoryDungeonRpcConfirmEnterAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool IsAgree = 1 [default = false];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_isagree();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isagree_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StoryDungeonRpcConfirmEnterAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoryDungeonRpcConfirmEnterAsk)
  return false;
#undef DO_
}

void StoryDungeonRpcConfirmEnterAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoryDungeonRpcConfirmEnterAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool IsAgree = 1 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isagree(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StoryDungeonRpcConfirmEnterAsk)
}

::google::protobuf::uint8* StoryDungeonRpcConfirmEnterAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoryDungeonRpcConfirmEnterAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool IsAgree = 1 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isagree(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StoryDungeonRpcConfirmEnterAsk)
  return target;
}

size_t StoryDungeonRpcConfirmEnterAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StoryDungeonRpcConfirmEnterAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool IsAgree = 1 [default = false];
  if (has_isagree()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoryDungeonRpcConfirmEnterAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoryDungeonRpcConfirmEnterAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const StoryDungeonRpcConfirmEnterAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoryDungeonRpcConfirmEnterAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoryDungeonRpcConfirmEnterAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoryDungeonRpcConfirmEnterAsk)
    MergeFrom(*source);
  }
}

void StoryDungeonRpcConfirmEnterAsk::MergeFrom(const StoryDungeonRpcConfirmEnterAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoryDungeonRpcConfirmEnterAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_isagree()) {
    set_isagree(from.isagree());
  }
}

void StoryDungeonRpcConfirmEnterAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoryDungeonRpcConfirmEnterAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoryDungeonRpcConfirmEnterAsk::CopyFrom(const StoryDungeonRpcConfirmEnterAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoryDungeonRpcConfirmEnterAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoryDungeonRpcConfirmEnterAsk::IsInitialized() const {
  return true;
}

void StoryDungeonRpcConfirmEnterAsk::Swap(StoryDungeonRpcConfirmEnterAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoryDungeonRpcConfirmEnterAsk::InternalSwap(StoryDungeonRpcConfirmEnterAsk* other) {
  using std::swap;
  swap(isagree_, other->isagree_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoryDungeonRpcConfirmEnterAsk::GetMetadata() const {
  protobuf_StoryDungeonRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StoryDungeonRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoryDungeonRpcConfirmEnterAsk

// optional bool IsAgree = 1 [default = false];
bool StoryDungeonRpcConfirmEnterAsk::has_isagree() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StoryDungeonRpcConfirmEnterAsk::set_has_isagree() {
  _has_bits_[0] |= 0x00000001u;
}
void StoryDungeonRpcConfirmEnterAsk::clear_has_isagree() {
  _has_bits_[0] &= ~0x00000001u;
}
void StoryDungeonRpcConfirmEnterAsk::clear_isagree() {
  isagree_ = false;
  clear_has_isagree();
}
bool StoryDungeonRpcConfirmEnterAsk::isagree() const {
  // @@protoc_insertion_point(field_get:StoryDungeonRpcConfirmEnterAsk.IsAgree)
  return isagree_;
}
void StoryDungeonRpcConfirmEnterAsk::set_isagree(bool value) {
  set_has_isagree();
  isagree_ = value;
  // @@protoc_insertion_point(field_set:StoryDungeonRpcConfirmEnterAsk.IsAgree)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoryDungeonRpcConfirmEnterReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoryDungeonRpcConfirmEnterReply::StoryDungeonRpcConfirmEnterReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_StoryDungeonRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoryDungeonRpcConfirmEnterReply)
}
StoryDungeonRpcConfirmEnterReply::StoryDungeonRpcConfirmEnterReply(const StoryDungeonRpcConfirmEnterReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:StoryDungeonRpcConfirmEnterReply)
}

void StoryDungeonRpcConfirmEnterReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

StoryDungeonRpcConfirmEnterReply::~StoryDungeonRpcConfirmEnterReply() {
  // @@protoc_insertion_point(destructor:StoryDungeonRpcConfirmEnterReply)
  SharedDtor();
}

void StoryDungeonRpcConfirmEnterReply::SharedDtor() {
}

void StoryDungeonRpcConfirmEnterReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoryDungeonRpcConfirmEnterReply::descriptor() {
  protobuf_StoryDungeonRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StoryDungeonRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoryDungeonRpcConfirmEnterReply& StoryDungeonRpcConfirmEnterReply::default_instance() {
  protobuf_StoryDungeonRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

StoryDungeonRpcConfirmEnterReply* StoryDungeonRpcConfirmEnterReply::New(::google::protobuf::Arena* arena) const {
  StoryDungeonRpcConfirmEnterReply* n = new StoryDungeonRpcConfirmEnterReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoryDungeonRpcConfirmEnterReply::Clear() {
// @@protoc_insertion_point(message_clear_start:StoryDungeonRpcConfirmEnterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StoryDungeonRpcConfirmEnterReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoryDungeonRpcConfirmEnterReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StoryDungeonRpcConfirmEnterReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoryDungeonRpcConfirmEnterReply)
  return false;
#undef DO_
}

void StoryDungeonRpcConfirmEnterReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoryDungeonRpcConfirmEnterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StoryDungeonRpcConfirmEnterReply)
}

::google::protobuf::uint8* StoryDungeonRpcConfirmEnterReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoryDungeonRpcConfirmEnterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StoryDungeonRpcConfirmEnterReply)
  return target;
}

size_t StoryDungeonRpcConfirmEnterReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StoryDungeonRpcConfirmEnterReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoryDungeonRpcConfirmEnterReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoryDungeonRpcConfirmEnterReply)
  GOOGLE_DCHECK_NE(&from, this);
  const StoryDungeonRpcConfirmEnterReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoryDungeonRpcConfirmEnterReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoryDungeonRpcConfirmEnterReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoryDungeonRpcConfirmEnterReply)
    MergeFrom(*source);
  }
}

void StoryDungeonRpcConfirmEnterReply::MergeFrom(const StoryDungeonRpcConfirmEnterReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoryDungeonRpcConfirmEnterReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void StoryDungeonRpcConfirmEnterReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoryDungeonRpcConfirmEnterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoryDungeonRpcConfirmEnterReply::CopyFrom(const StoryDungeonRpcConfirmEnterReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoryDungeonRpcConfirmEnterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoryDungeonRpcConfirmEnterReply::IsInitialized() const {
  return true;
}

void StoryDungeonRpcConfirmEnterReply::Swap(StoryDungeonRpcConfirmEnterReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoryDungeonRpcConfirmEnterReply::InternalSwap(StoryDungeonRpcConfirmEnterReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoryDungeonRpcConfirmEnterReply::GetMetadata() const {
  protobuf_StoryDungeonRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StoryDungeonRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoryDungeonRpcConfirmEnterReply

// optional sint32 Result = 1 [default = -9999];
bool StoryDungeonRpcConfirmEnterReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StoryDungeonRpcConfirmEnterReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void StoryDungeonRpcConfirmEnterReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void StoryDungeonRpcConfirmEnterReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 StoryDungeonRpcConfirmEnterReply::result() const {
  // @@protoc_insertion_point(field_get:StoryDungeonRpcConfirmEnterReply.Result)
  return result_;
}
void StoryDungeonRpcConfirmEnterReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:StoryDungeonRpcConfirmEnterReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoryDungeonRpcPlayerConfirmResultNotify::kUserIdFieldNumber;
const int StoryDungeonRpcPlayerConfirmResultNotify::kUserNameFieldNumber;
const int StoryDungeonRpcPlayerConfirmResultNotify::kIsAgreeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoryDungeonRpcPlayerConfirmResultNotify::StoryDungeonRpcPlayerConfirmResultNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_StoryDungeonRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoryDungeonRpcPlayerConfirmResultNotify)
}
StoryDungeonRpcPlayerConfirmResultNotify::StoryDungeonRpcPlayerConfirmResultNotify(const StoryDungeonRpcPlayerConfirmResultNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  ::memcpy(&isagree_, &from.isagree_,
    static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&isagree_)) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:StoryDungeonRpcPlayerConfirmResultNotify)
}

void StoryDungeonRpcPlayerConfirmResultNotify::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isagree_ = false;
  userid_ = GOOGLE_LONGLONG(-1);
}

StoryDungeonRpcPlayerConfirmResultNotify::~StoryDungeonRpcPlayerConfirmResultNotify() {
  // @@protoc_insertion_point(destructor:StoryDungeonRpcPlayerConfirmResultNotify)
  SharedDtor();
}

void StoryDungeonRpcPlayerConfirmResultNotify::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StoryDungeonRpcPlayerConfirmResultNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoryDungeonRpcPlayerConfirmResultNotify::descriptor() {
  protobuf_StoryDungeonRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StoryDungeonRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoryDungeonRpcPlayerConfirmResultNotify& StoryDungeonRpcPlayerConfirmResultNotify::default_instance() {
  protobuf_StoryDungeonRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

StoryDungeonRpcPlayerConfirmResultNotify* StoryDungeonRpcPlayerConfirmResultNotify::New(::google::protobuf::Arena* arena) const {
  StoryDungeonRpcPlayerConfirmResultNotify* n = new StoryDungeonRpcPlayerConfirmResultNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoryDungeonRpcPlayerConfirmResultNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:StoryDungeonRpcPlayerConfirmResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_username()) {
    GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*username_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 6u) {
    isagree_ = false;
    userid_ = GOOGLE_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StoryDungeonRpcPlayerConfirmResultNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoryDungeonRpcPlayerConfirmResultNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 UserId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string UserName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "StoryDungeonRpcPlayerConfirmResultNotify.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsAgree = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_isagree();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isagree_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StoryDungeonRpcPlayerConfirmResultNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoryDungeonRpcPlayerConfirmResultNotify)
  return false;
#undef DO_
}

void StoryDungeonRpcPlayerConfirmResultNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoryDungeonRpcPlayerConfirmResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->userid(), output);
  }

  // optional string UserName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StoryDungeonRpcPlayerConfirmResultNotify.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  // optional bool IsAgree = 4 [default = false];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->isagree(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StoryDungeonRpcPlayerConfirmResultNotify)
}

::google::protobuf::uint8* StoryDungeonRpcPlayerConfirmResultNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoryDungeonRpcPlayerConfirmResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->userid(), target);
  }

  // optional string UserName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "StoryDungeonRpcPlayerConfirmResultNotify.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  // optional bool IsAgree = 4 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->isagree(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StoryDungeonRpcPlayerConfirmResultNotify)
  return target;
}

size_t StoryDungeonRpcPlayerConfirmResultNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StoryDungeonRpcPlayerConfirmResultNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string UserName = 3;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional bool IsAgree = 4 [default = false];
    if (has_isagree()) {
      total_size += 1 + 1;
    }

    // optional sint64 UserId = 2 [default = -1];
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoryDungeonRpcPlayerConfirmResultNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoryDungeonRpcPlayerConfirmResultNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const StoryDungeonRpcPlayerConfirmResultNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoryDungeonRpcPlayerConfirmResultNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoryDungeonRpcPlayerConfirmResultNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoryDungeonRpcPlayerConfirmResultNotify)
    MergeFrom(*source);
  }
}

void StoryDungeonRpcPlayerConfirmResultNotify::MergeFrom(const StoryDungeonRpcPlayerConfirmResultNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoryDungeonRpcPlayerConfirmResultNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      isagree_ = from.isagree_;
    }
    if (cached_has_bits & 0x00000004u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StoryDungeonRpcPlayerConfirmResultNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoryDungeonRpcPlayerConfirmResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoryDungeonRpcPlayerConfirmResultNotify::CopyFrom(const StoryDungeonRpcPlayerConfirmResultNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoryDungeonRpcPlayerConfirmResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoryDungeonRpcPlayerConfirmResultNotify::IsInitialized() const {
  return true;
}

void StoryDungeonRpcPlayerConfirmResultNotify::Swap(StoryDungeonRpcPlayerConfirmResultNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoryDungeonRpcPlayerConfirmResultNotify::InternalSwap(StoryDungeonRpcPlayerConfirmResultNotify* other) {
  using std::swap;
  username_.Swap(&other->username_);
  swap(isagree_, other->isagree_);
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoryDungeonRpcPlayerConfirmResultNotify::GetMetadata() const {
  protobuf_StoryDungeonRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StoryDungeonRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoryDungeonRpcPlayerConfirmResultNotify

// optional sint64 UserId = 2 [default = -1];
bool StoryDungeonRpcPlayerConfirmResultNotify::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void StoryDungeonRpcPlayerConfirmResultNotify::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
void StoryDungeonRpcPlayerConfirmResultNotify::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
void StoryDungeonRpcPlayerConfirmResultNotify::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 StoryDungeonRpcPlayerConfirmResultNotify::userid() const {
  // @@protoc_insertion_point(field_get:StoryDungeonRpcPlayerConfirmResultNotify.UserId)
  return userid_;
}
void StoryDungeonRpcPlayerConfirmResultNotify::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:StoryDungeonRpcPlayerConfirmResultNotify.UserId)
}

// optional string UserName = 3;
bool StoryDungeonRpcPlayerConfirmResultNotify::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StoryDungeonRpcPlayerConfirmResultNotify::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void StoryDungeonRpcPlayerConfirmResultNotify::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void StoryDungeonRpcPlayerConfirmResultNotify::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& StoryDungeonRpcPlayerConfirmResultNotify::username() const {
  // @@protoc_insertion_point(field_get:StoryDungeonRpcPlayerConfirmResultNotify.UserName)
  return username_.GetNoArena();
}
void StoryDungeonRpcPlayerConfirmResultNotify::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:StoryDungeonRpcPlayerConfirmResultNotify.UserName)
}
#if LANG_CXX11
void StoryDungeonRpcPlayerConfirmResultNotify::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:StoryDungeonRpcPlayerConfirmResultNotify.UserName)
}
#endif
void StoryDungeonRpcPlayerConfirmResultNotify::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:StoryDungeonRpcPlayerConfirmResultNotify.UserName)
}
void StoryDungeonRpcPlayerConfirmResultNotify::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:StoryDungeonRpcPlayerConfirmResultNotify.UserName)
}
::std::string* StoryDungeonRpcPlayerConfirmResultNotify::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:StoryDungeonRpcPlayerConfirmResultNotify.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StoryDungeonRpcPlayerConfirmResultNotify::release_username() {
  // @@protoc_insertion_point(field_release:StoryDungeonRpcPlayerConfirmResultNotify.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StoryDungeonRpcPlayerConfirmResultNotify::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:StoryDungeonRpcPlayerConfirmResultNotify.UserName)
}

// optional bool IsAgree = 4 [default = false];
bool StoryDungeonRpcPlayerConfirmResultNotify::has_isagree() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StoryDungeonRpcPlayerConfirmResultNotify::set_has_isagree() {
  _has_bits_[0] |= 0x00000002u;
}
void StoryDungeonRpcPlayerConfirmResultNotify::clear_has_isagree() {
  _has_bits_[0] &= ~0x00000002u;
}
void StoryDungeonRpcPlayerConfirmResultNotify::clear_isagree() {
  isagree_ = false;
  clear_has_isagree();
}
bool StoryDungeonRpcPlayerConfirmResultNotify::isagree() const {
  // @@protoc_insertion_point(field_get:StoryDungeonRpcPlayerConfirmResultNotify.IsAgree)
  return isagree_;
}
void StoryDungeonRpcPlayerConfirmResultNotify::set_isagree(bool value) {
  set_has_isagree();
  isagree_ = value;
  // @@protoc_insertion_point(field_set:StoryDungeonRpcPlayerConfirmResultNotify.IsAgree)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
