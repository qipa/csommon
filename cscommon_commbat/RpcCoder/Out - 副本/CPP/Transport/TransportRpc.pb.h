// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TransportRpc.proto

#ifndef PROTOBUF_TransportRpc_2eproto__INCLUDED
#define PROTOBUF_TransportRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)
class TransportRpcAddTransportAsk;
class TransportRpcAddTransportAskDefaultTypeInternal;
extern TransportRpcAddTransportAskDefaultTypeInternal _TransportRpcAddTransportAsk_default_instance_;
class TransportRpcAddTransportReply;
class TransportRpcAddTransportReplyDefaultTypeInternal;
extern TransportRpcAddTransportReplyDefaultTypeInternal _TransportRpcAddTransportReply_default_instance_;
class TransportRpcAskHelpAsk;
class TransportRpcAskHelpAskDefaultTypeInternal;
extern TransportRpcAskHelpAskDefaultTypeInternal _TransportRpcAskHelpAsk_default_instance_;
class TransportRpcAskHelpReply;
class TransportRpcAskHelpReplyDefaultTypeInternal;
extern TransportRpcAskHelpReplyDefaultTypeInternal _TransportRpcAskHelpReply_default_instance_;
class TransportRpcFillAsk;
class TransportRpcFillAskDefaultTypeInternal;
extern TransportRpcFillAskDefaultTypeInternal _TransportRpcFillAsk_default_instance_;
class TransportRpcFillReply;
class TransportRpcFillReplyDefaultTypeInternal;
extern TransportRpcFillReplyDefaultTypeInternal _TransportRpcFillReply_default_instance_;
class TransportRpcHelpOtherAsk;
class TransportRpcHelpOtherAskDefaultTypeInternal;
extern TransportRpcHelpOtherAskDefaultTypeInternal _TransportRpcHelpOtherAsk_default_instance_;
class TransportRpcHelpOtherReply;
class TransportRpcHelpOtherReplyDefaultTypeInternal;
extern TransportRpcHelpOtherReplyDefaultTypeInternal _TransportRpcHelpOtherReply_default_instance_;
class TransportRpcIsHelpedNotify;
class TransportRpcIsHelpedNotifyDefaultTypeInternal;
extern TransportRpcIsHelpedNotifyDefaultTypeInternal _TransportRpcIsHelpedNotify_default_instance_;
class TransportRpcSetSailAsk;
class TransportRpcSetSailAskDefaultTypeInternal;
extern TransportRpcSetSailAskDefaultTypeInternal _TransportRpcSetSailAsk_default_instance_;
class TransportRpcSetSailReply;
class TransportRpcSetSailReplyDefaultTypeInternal;
extern TransportRpcSetSailReplyDefaultTypeInternal _TransportRpcSetSailReply_default_instance_;
class TransportRpcSyncDataAsk;
class TransportRpcSyncDataAskDefaultTypeInternal;
extern TransportRpcSyncDataAskDefaultTypeInternal _TransportRpcSyncDataAsk_default_instance_;
class TransportRpcSyncDataReply;
class TransportRpcSyncDataReplyDefaultTypeInternal;
extern TransportRpcSyncDataReplyDefaultTypeInternal _TransportRpcSyncDataReply_default_instance_;

namespace protobuf_TransportRpc_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_TransportRpc_2eproto

// ===================================================================

class TransportRpcSyncDataAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TransportRpcSyncDataAsk) */ {
 public:
  TransportRpcSyncDataAsk();
  virtual ~TransportRpcSyncDataAsk();

  TransportRpcSyncDataAsk(const TransportRpcSyncDataAsk& from);

  inline TransportRpcSyncDataAsk& operator=(const TransportRpcSyncDataAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransportRpcSyncDataAsk(TransportRpcSyncDataAsk&& from) noexcept
    : TransportRpcSyncDataAsk() {
    *this = ::std::move(from);
  }

  inline TransportRpcSyncDataAsk& operator=(TransportRpcSyncDataAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransportRpcSyncDataAsk& default_instance();

  static inline const TransportRpcSyncDataAsk* internal_default_instance() {
    return reinterpret_cast<const TransportRpcSyncDataAsk*>(
               &_TransportRpcSyncDataAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TransportRpcSyncDataAsk* other);
  friend void swap(TransportRpcSyncDataAsk& a, TransportRpcSyncDataAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransportRpcSyncDataAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  TransportRpcSyncDataAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransportRpcSyncDataAsk& from);
  void MergeFrom(const TransportRpcSyncDataAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransportRpcSyncDataAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:TransportRpcSyncDataAsk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_TransportRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransportRpcSyncDataReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TransportRpcSyncDataReply) */ {
 public:
  TransportRpcSyncDataReply();
  virtual ~TransportRpcSyncDataReply();

  TransportRpcSyncDataReply(const TransportRpcSyncDataReply& from);

  inline TransportRpcSyncDataReply& operator=(const TransportRpcSyncDataReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransportRpcSyncDataReply(TransportRpcSyncDataReply&& from) noexcept
    : TransportRpcSyncDataReply() {
    *this = ::std::move(from);
  }

  inline TransportRpcSyncDataReply& operator=(TransportRpcSyncDataReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransportRpcSyncDataReply& default_instance();

  static inline const TransportRpcSyncDataReply* internal_default_instance() {
    return reinterpret_cast<const TransportRpcSyncDataReply*>(
               &_TransportRpcSyncDataReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(TransportRpcSyncDataReply* other);
  friend void swap(TransportRpcSyncDataReply& a, TransportRpcSyncDataReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransportRpcSyncDataReply* New() const PROTOBUF_FINAL { return New(NULL); }

  TransportRpcSyncDataReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransportRpcSyncDataReply& from);
  void MergeFrom(const TransportRpcSyncDataReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransportRpcSyncDataReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TransportRpcSyncDataReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_TransportRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransportRpcFillAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TransportRpcFillAsk) */ {
 public:
  TransportRpcFillAsk();
  virtual ~TransportRpcFillAsk();

  TransportRpcFillAsk(const TransportRpcFillAsk& from);

  inline TransportRpcFillAsk& operator=(const TransportRpcFillAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransportRpcFillAsk(TransportRpcFillAsk&& from) noexcept
    : TransportRpcFillAsk() {
    *this = ::std::move(from);
  }

  inline TransportRpcFillAsk& operator=(TransportRpcFillAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransportRpcFillAsk& default_instance();

  static inline const TransportRpcFillAsk* internal_default_instance() {
    return reinterpret_cast<const TransportRpcFillAsk*>(
               &_TransportRpcFillAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(TransportRpcFillAsk* other);
  friend void swap(TransportRpcFillAsk& a, TransportRpcFillAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransportRpcFillAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  TransportRpcFillAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransportRpcFillAsk& from);
  void MergeFrom(const TransportRpcFillAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransportRpcFillAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 FillID = 1 [default = -1];
  bool has_fillid() const;
  void clear_fillid();
  static const int kFillIDFieldNumber = 1;
  ::google::protobuf::int32 fillid() const;
  void set_fillid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TransportRpcFillAsk)
 private:
  void set_has_fillid();
  void clear_has_fillid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 fillid_;
  friend struct protobuf_TransportRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransportRpcFillReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TransportRpcFillReply) */ {
 public:
  TransportRpcFillReply();
  virtual ~TransportRpcFillReply();

  TransportRpcFillReply(const TransportRpcFillReply& from);

  inline TransportRpcFillReply& operator=(const TransportRpcFillReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransportRpcFillReply(TransportRpcFillReply&& from) noexcept
    : TransportRpcFillReply() {
    *this = ::std::move(from);
  }

  inline TransportRpcFillReply& operator=(TransportRpcFillReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransportRpcFillReply& default_instance();

  static inline const TransportRpcFillReply* internal_default_instance() {
    return reinterpret_cast<const TransportRpcFillReply*>(
               &_TransportRpcFillReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(TransportRpcFillReply* other);
  friend void swap(TransportRpcFillReply& a, TransportRpcFillReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransportRpcFillReply* New() const PROTOBUF_FINAL { return New(NULL); }

  TransportRpcFillReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransportRpcFillReply& from);
  void MergeFrom(const TransportRpcFillReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransportRpcFillReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional sint32 FillID = 2 [default = -1];
  bool has_fillid() const;
  void clear_fillid();
  static const int kFillIDFieldNumber = 2;
  ::google::protobuf::int32 fillid() const;
  void set_fillid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TransportRpcFillReply)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_fillid();
  void clear_has_fillid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 fillid_;
  friend struct protobuf_TransportRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransportRpcHelpOtherAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TransportRpcHelpOtherAsk) */ {
 public:
  TransportRpcHelpOtherAsk();
  virtual ~TransportRpcHelpOtherAsk();

  TransportRpcHelpOtherAsk(const TransportRpcHelpOtherAsk& from);

  inline TransportRpcHelpOtherAsk& operator=(const TransportRpcHelpOtherAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransportRpcHelpOtherAsk(TransportRpcHelpOtherAsk&& from) noexcept
    : TransportRpcHelpOtherAsk() {
    *this = ::std::move(from);
  }

  inline TransportRpcHelpOtherAsk& operator=(TransportRpcHelpOtherAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransportRpcHelpOtherAsk& default_instance();

  static inline const TransportRpcHelpOtherAsk* internal_default_instance() {
    return reinterpret_cast<const TransportRpcHelpOtherAsk*>(
               &_TransportRpcHelpOtherAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(TransportRpcHelpOtherAsk* other);
  friend void swap(TransportRpcHelpOtherAsk& a, TransportRpcHelpOtherAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransportRpcHelpOtherAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  TransportRpcHelpOtherAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransportRpcHelpOtherAsk& from);
  void MergeFrom(const TransportRpcHelpOtherAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransportRpcHelpOtherAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 ItemID = 1 [default = -1];
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  ::google::protobuf::int32 itemid() const;
  void set_itemid(::google::protobuf::int32 value);

  // optional sint64 UserId = 3 [default = -1];
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:TransportRpcHelpOtherAsk)
 private:
  void set_has_itemid();
  void clear_has_itemid();
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int64 userid_;
  friend struct protobuf_TransportRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransportRpcHelpOtherReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TransportRpcHelpOtherReply) */ {
 public:
  TransportRpcHelpOtherReply();
  virtual ~TransportRpcHelpOtherReply();

  TransportRpcHelpOtherReply(const TransportRpcHelpOtherReply& from);

  inline TransportRpcHelpOtherReply& operator=(const TransportRpcHelpOtherReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransportRpcHelpOtherReply(TransportRpcHelpOtherReply&& from) noexcept
    : TransportRpcHelpOtherReply() {
    *this = ::std::move(from);
  }

  inline TransportRpcHelpOtherReply& operator=(TransportRpcHelpOtherReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransportRpcHelpOtherReply& default_instance();

  static inline const TransportRpcHelpOtherReply* internal_default_instance() {
    return reinterpret_cast<const TransportRpcHelpOtherReply*>(
               &_TransportRpcHelpOtherReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(TransportRpcHelpOtherReply* other);
  friend void swap(TransportRpcHelpOtherReply& a, TransportRpcHelpOtherReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransportRpcHelpOtherReply* New() const PROTOBUF_FINAL { return New(NULL); }

  TransportRpcHelpOtherReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransportRpcHelpOtherReply& from);
  void MergeFrom(const TransportRpcHelpOtherReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransportRpcHelpOtherReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional sint32 ItemID = 2 [default = -1];
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemIDFieldNumber = 2;
  ::google::protobuf::int32 itemid() const;
  void set_itemid(::google::protobuf::int32 value);

  // optional sint64 UserId = 4 [default = -1];
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 4;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:TransportRpcHelpOtherReply)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_itemid();
  void clear_has_itemid();
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int64 userid_;
  friend struct protobuf_TransportRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransportRpcAskHelpAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TransportRpcAskHelpAsk) */ {
 public:
  TransportRpcAskHelpAsk();
  virtual ~TransportRpcAskHelpAsk();

  TransportRpcAskHelpAsk(const TransportRpcAskHelpAsk& from);

  inline TransportRpcAskHelpAsk& operator=(const TransportRpcAskHelpAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransportRpcAskHelpAsk(TransportRpcAskHelpAsk&& from) noexcept
    : TransportRpcAskHelpAsk() {
    *this = ::std::move(from);
  }

  inline TransportRpcAskHelpAsk& operator=(TransportRpcAskHelpAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransportRpcAskHelpAsk& default_instance();

  static inline const TransportRpcAskHelpAsk* internal_default_instance() {
    return reinterpret_cast<const TransportRpcAskHelpAsk*>(
               &_TransportRpcAskHelpAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(TransportRpcAskHelpAsk* other);
  friend void swap(TransportRpcAskHelpAsk& a, TransportRpcAskHelpAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransportRpcAskHelpAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  TransportRpcAskHelpAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransportRpcAskHelpAsk& from);
  void MergeFrom(const TransportRpcAskHelpAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransportRpcAskHelpAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 ItemID = 1 [default = -1];
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  ::google::protobuf::int32 itemid() const;
  void set_itemid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TransportRpcAskHelpAsk)
 private:
  void set_has_itemid();
  void clear_has_itemid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 itemid_;
  friend struct protobuf_TransportRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransportRpcAskHelpReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TransportRpcAskHelpReply) */ {
 public:
  TransportRpcAskHelpReply();
  virtual ~TransportRpcAskHelpReply();

  TransportRpcAskHelpReply(const TransportRpcAskHelpReply& from);

  inline TransportRpcAskHelpReply& operator=(const TransportRpcAskHelpReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransportRpcAskHelpReply(TransportRpcAskHelpReply&& from) noexcept
    : TransportRpcAskHelpReply() {
    *this = ::std::move(from);
  }

  inline TransportRpcAskHelpReply& operator=(TransportRpcAskHelpReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransportRpcAskHelpReply& default_instance();

  static inline const TransportRpcAskHelpReply* internal_default_instance() {
    return reinterpret_cast<const TransportRpcAskHelpReply*>(
               &_TransportRpcAskHelpReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(TransportRpcAskHelpReply* other);
  friend void swap(TransportRpcAskHelpReply& a, TransportRpcAskHelpReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransportRpcAskHelpReply* New() const PROTOBUF_FINAL { return New(NULL); }

  TransportRpcAskHelpReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransportRpcAskHelpReply& from);
  void MergeFrom(const TransportRpcAskHelpReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransportRpcAskHelpReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional sint32 ItemID = 3 [default = -1];
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemIDFieldNumber = 3;
  ::google::protobuf::int32 itemid() const;
  void set_itemid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TransportRpcAskHelpReply)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_itemid();
  void clear_has_itemid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 itemid_;
  friend struct protobuf_TransportRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransportRpcSetSailAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TransportRpcSetSailAsk) */ {
 public:
  TransportRpcSetSailAsk();
  virtual ~TransportRpcSetSailAsk();

  TransportRpcSetSailAsk(const TransportRpcSetSailAsk& from);

  inline TransportRpcSetSailAsk& operator=(const TransportRpcSetSailAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransportRpcSetSailAsk(TransportRpcSetSailAsk&& from) noexcept
    : TransportRpcSetSailAsk() {
    *this = ::std::move(from);
  }

  inline TransportRpcSetSailAsk& operator=(TransportRpcSetSailAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransportRpcSetSailAsk& default_instance();

  static inline const TransportRpcSetSailAsk* internal_default_instance() {
    return reinterpret_cast<const TransportRpcSetSailAsk*>(
               &_TransportRpcSetSailAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(TransportRpcSetSailAsk* other);
  friend void swap(TransportRpcSetSailAsk& a, TransportRpcSetSailAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransportRpcSetSailAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  TransportRpcSetSailAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransportRpcSetSailAsk& from);
  void MergeFrom(const TransportRpcSetSailAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransportRpcSetSailAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:TransportRpcSetSailAsk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_TransportRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransportRpcSetSailReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TransportRpcSetSailReply) */ {
 public:
  TransportRpcSetSailReply();
  virtual ~TransportRpcSetSailReply();

  TransportRpcSetSailReply(const TransportRpcSetSailReply& from);

  inline TransportRpcSetSailReply& operator=(const TransportRpcSetSailReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransportRpcSetSailReply(TransportRpcSetSailReply&& from) noexcept
    : TransportRpcSetSailReply() {
    *this = ::std::move(from);
  }

  inline TransportRpcSetSailReply& operator=(TransportRpcSetSailReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransportRpcSetSailReply& default_instance();

  static inline const TransportRpcSetSailReply* internal_default_instance() {
    return reinterpret_cast<const TransportRpcSetSailReply*>(
               &_TransportRpcSetSailReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(TransportRpcSetSailReply* other);
  friend void swap(TransportRpcSetSailReply& a, TransportRpcSetSailReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransportRpcSetSailReply* New() const PROTOBUF_FINAL { return New(NULL); }

  TransportRpcSetSailReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransportRpcSetSailReply& from);
  void MergeFrom(const TransportRpcSetSailReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransportRpcSetSailReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TransportRpcSetSailReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_TransportRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransportRpcAddTransportAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TransportRpcAddTransportAsk) */ {
 public:
  TransportRpcAddTransportAsk();
  virtual ~TransportRpcAddTransportAsk();

  TransportRpcAddTransportAsk(const TransportRpcAddTransportAsk& from);

  inline TransportRpcAddTransportAsk& operator=(const TransportRpcAddTransportAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransportRpcAddTransportAsk(TransportRpcAddTransportAsk&& from) noexcept
    : TransportRpcAddTransportAsk() {
    *this = ::std::move(from);
  }

  inline TransportRpcAddTransportAsk& operator=(TransportRpcAddTransportAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransportRpcAddTransportAsk& default_instance();

  static inline const TransportRpcAddTransportAsk* internal_default_instance() {
    return reinterpret_cast<const TransportRpcAddTransportAsk*>(
               &_TransportRpcAddTransportAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(TransportRpcAddTransportAsk* other);
  friend void swap(TransportRpcAddTransportAsk& a, TransportRpcAddTransportAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransportRpcAddTransportAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  TransportRpcAddTransportAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransportRpcAddTransportAsk& from);
  void MergeFrom(const TransportRpcAddTransportAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransportRpcAddTransportAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Lv = 1 [default = -1];
  bool has_lv() const;
  void clear_lv();
  static const int kLvFieldNumber = 1;
  ::google::protobuf::int32 lv() const;
  void set_lv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TransportRpcAddTransportAsk)
 private:
  void set_has_lv();
  void clear_has_lv();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 lv_;
  friend struct protobuf_TransportRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransportRpcAddTransportReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TransportRpcAddTransportReply) */ {
 public:
  TransportRpcAddTransportReply();
  virtual ~TransportRpcAddTransportReply();

  TransportRpcAddTransportReply(const TransportRpcAddTransportReply& from);

  inline TransportRpcAddTransportReply& operator=(const TransportRpcAddTransportReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransportRpcAddTransportReply(TransportRpcAddTransportReply&& from) noexcept
    : TransportRpcAddTransportReply() {
    *this = ::std::move(from);
  }

  inline TransportRpcAddTransportReply& operator=(TransportRpcAddTransportReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransportRpcAddTransportReply& default_instance();

  static inline const TransportRpcAddTransportReply* internal_default_instance() {
    return reinterpret_cast<const TransportRpcAddTransportReply*>(
               &_TransportRpcAddTransportReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(TransportRpcAddTransportReply* other);
  friend void swap(TransportRpcAddTransportReply& a, TransportRpcAddTransportReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransportRpcAddTransportReply* New() const PROTOBUF_FINAL { return New(NULL); }

  TransportRpcAddTransportReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransportRpcAddTransportReply& from);
  void MergeFrom(const TransportRpcAddTransportReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransportRpcAddTransportReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional sint32 Lv = 2 [default = -1];
  bool has_lv() const;
  void clear_lv();
  static const int kLvFieldNumber = 2;
  ::google::protobuf::int32 lv() const;
  void set_lv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TransportRpcAddTransportReply)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_lv();
  void clear_has_lv();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 lv_;
  friend struct protobuf_TransportRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransportRpcIsHelpedNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TransportRpcIsHelpedNotify) */ {
 public:
  TransportRpcIsHelpedNotify();
  virtual ~TransportRpcIsHelpedNotify();

  TransportRpcIsHelpedNotify(const TransportRpcIsHelpedNotify& from);

  inline TransportRpcIsHelpedNotify& operator=(const TransportRpcIsHelpedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransportRpcIsHelpedNotify(TransportRpcIsHelpedNotify&& from) noexcept
    : TransportRpcIsHelpedNotify() {
    *this = ::std::move(from);
  }

  inline TransportRpcIsHelpedNotify& operator=(TransportRpcIsHelpedNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransportRpcIsHelpedNotify& default_instance();

  static inline const TransportRpcIsHelpedNotify* internal_default_instance() {
    return reinterpret_cast<const TransportRpcIsHelpedNotify*>(
               &_TransportRpcIsHelpedNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(TransportRpcIsHelpedNotify* other);
  friend void swap(TransportRpcIsHelpedNotify& a, TransportRpcIsHelpedNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransportRpcIsHelpedNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  TransportRpcIsHelpedNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransportRpcIsHelpedNotify& from);
  void MergeFrom(const TransportRpcIsHelpedNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransportRpcIsHelpedNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 TemplateId = 1 [default = -1];
  bool has_templateid() const;
  void clear_templateid();
  static const int kTemplateIdFieldNumber = 1;
  ::google::protobuf::int32 templateid() const;
  void set_templateid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TransportRpcIsHelpedNotify)
 private:
  void set_has_templateid();
  void clear_has_templateid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 templateid_;
  friend struct protobuf_TransportRpc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TransportRpcSyncDataAsk

// -------------------------------------------------------------------

// TransportRpcSyncDataReply

// optional sint32 Result = 1 [default = -9999];
inline bool TransportRpcSyncDataReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransportRpcSyncDataReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransportRpcSyncDataReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransportRpcSyncDataReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TransportRpcSyncDataReply::result() const {
  // @@protoc_insertion_point(field_get:TransportRpcSyncDataReply.Result)
  return result_;
}
inline void TransportRpcSyncDataReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:TransportRpcSyncDataReply.Result)
}

// -------------------------------------------------------------------

// TransportRpcFillAsk

// optional sint32 FillID = 1 [default = -1];
inline bool TransportRpcFillAsk::has_fillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransportRpcFillAsk::set_has_fillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransportRpcFillAsk::clear_has_fillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransportRpcFillAsk::clear_fillid() {
  fillid_ = -1;
  clear_has_fillid();
}
inline ::google::protobuf::int32 TransportRpcFillAsk::fillid() const {
  // @@protoc_insertion_point(field_get:TransportRpcFillAsk.FillID)
  return fillid_;
}
inline void TransportRpcFillAsk::set_fillid(::google::protobuf::int32 value) {
  set_has_fillid();
  fillid_ = value;
  // @@protoc_insertion_point(field_set:TransportRpcFillAsk.FillID)
}

// -------------------------------------------------------------------

// TransportRpcFillReply

// optional sint32 Result = 1 [default = -9999];
inline bool TransportRpcFillReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransportRpcFillReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransportRpcFillReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransportRpcFillReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TransportRpcFillReply::result() const {
  // @@protoc_insertion_point(field_get:TransportRpcFillReply.Result)
  return result_;
}
inline void TransportRpcFillReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:TransportRpcFillReply.Result)
}

// optional sint32 FillID = 2 [default = -1];
inline bool TransportRpcFillReply::has_fillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransportRpcFillReply::set_has_fillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransportRpcFillReply::clear_has_fillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransportRpcFillReply::clear_fillid() {
  fillid_ = -1;
  clear_has_fillid();
}
inline ::google::protobuf::int32 TransportRpcFillReply::fillid() const {
  // @@protoc_insertion_point(field_get:TransportRpcFillReply.FillID)
  return fillid_;
}
inline void TransportRpcFillReply::set_fillid(::google::protobuf::int32 value) {
  set_has_fillid();
  fillid_ = value;
  // @@protoc_insertion_point(field_set:TransportRpcFillReply.FillID)
}

// -------------------------------------------------------------------

// TransportRpcHelpOtherAsk

// optional sint32 ItemID = 1 [default = -1];
inline bool TransportRpcHelpOtherAsk::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransportRpcHelpOtherAsk::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransportRpcHelpOtherAsk::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransportRpcHelpOtherAsk::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
inline ::google::protobuf::int32 TransportRpcHelpOtherAsk::itemid() const {
  // @@protoc_insertion_point(field_get:TransportRpcHelpOtherAsk.ItemID)
  return itemid_;
}
inline void TransportRpcHelpOtherAsk::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:TransportRpcHelpOtherAsk.ItemID)
}

// optional sint64 UserId = 3 [default = -1];
inline bool TransportRpcHelpOtherAsk::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransportRpcHelpOtherAsk::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransportRpcHelpOtherAsk::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransportRpcHelpOtherAsk::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
inline ::google::protobuf::int64 TransportRpcHelpOtherAsk::userid() const {
  // @@protoc_insertion_point(field_get:TransportRpcHelpOtherAsk.UserId)
  return userid_;
}
inline void TransportRpcHelpOtherAsk::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:TransportRpcHelpOtherAsk.UserId)
}

// -------------------------------------------------------------------

// TransportRpcHelpOtherReply

// optional sint32 Result = 1 [default = -9999];
inline bool TransportRpcHelpOtherReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransportRpcHelpOtherReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransportRpcHelpOtherReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransportRpcHelpOtherReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TransportRpcHelpOtherReply::result() const {
  // @@protoc_insertion_point(field_get:TransportRpcHelpOtherReply.Result)
  return result_;
}
inline void TransportRpcHelpOtherReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:TransportRpcHelpOtherReply.Result)
}

// optional sint32 ItemID = 2 [default = -1];
inline bool TransportRpcHelpOtherReply::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransportRpcHelpOtherReply::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransportRpcHelpOtherReply::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransportRpcHelpOtherReply::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
inline ::google::protobuf::int32 TransportRpcHelpOtherReply::itemid() const {
  // @@protoc_insertion_point(field_get:TransportRpcHelpOtherReply.ItemID)
  return itemid_;
}
inline void TransportRpcHelpOtherReply::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:TransportRpcHelpOtherReply.ItemID)
}

// optional sint64 UserId = 4 [default = -1];
inline bool TransportRpcHelpOtherReply::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransportRpcHelpOtherReply::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransportRpcHelpOtherReply::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransportRpcHelpOtherReply::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
inline ::google::protobuf::int64 TransportRpcHelpOtherReply::userid() const {
  // @@protoc_insertion_point(field_get:TransportRpcHelpOtherReply.UserId)
  return userid_;
}
inline void TransportRpcHelpOtherReply::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:TransportRpcHelpOtherReply.UserId)
}

// -------------------------------------------------------------------

// TransportRpcAskHelpAsk

// optional sint32 ItemID = 1 [default = -1];
inline bool TransportRpcAskHelpAsk::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransportRpcAskHelpAsk::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransportRpcAskHelpAsk::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransportRpcAskHelpAsk::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
inline ::google::protobuf::int32 TransportRpcAskHelpAsk::itemid() const {
  // @@protoc_insertion_point(field_get:TransportRpcAskHelpAsk.ItemID)
  return itemid_;
}
inline void TransportRpcAskHelpAsk::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:TransportRpcAskHelpAsk.ItemID)
}

// -------------------------------------------------------------------

// TransportRpcAskHelpReply

// optional sint32 Result = 1 [default = -9999];
inline bool TransportRpcAskHelpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransportRpcAskHelpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransportRpcAskHelpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransportRpcAskHelpReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TransportRpcAskHelpReply::result() const {
  // @@protoc_insertion_point(field_get:TransportRpcAskHelpReply.Result)
  return result_;
}
inline void TransportRpcAskHelpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:TransportRpcAskHelpReply.Result)
}

// optional sint32 ItemID = 3 [default = -1];
inline bool TransportRpcAskHelpReply::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransportRpcAskHelpReply::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransportRpcAskHelpReply::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransportRpcAskHelpReply::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
inline ::google::protobuf::int32 TransportRpcAskHelpReply::itemid() const {
  // @@protoc_insertion_point(field_get:TransportRpcAskHelpReply.ItemID)
  return itemid_;
}
inline void TransportRpcAskHelpReply::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:TransportRpcAskHelpReply.ItemID)
}

// -------------------------------------------------------------------

// TransportRpcSetSailAsk

// -------------------------------------------------------------------

// TransportRpcSetSailReply

// optional sint32 Result = 1 [default = -9999];
inline bool TransportRpcSetSailReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransportRpcSetSailReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransportRpcSetSailReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransportRpcSetSailReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TransportRpcSetSailReply::result() const {
  // @@protoc_insertion_point(field_get:TransportRpcSetSailReply.Result)
  return result_;
}
inline void TransportRpcSetSailReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:TransportRpcSetSailReply.Result)
}

// -------------------------------------------------------------------

// TransportRpcAddTransportAsk

// optional sint32 Lv = 1 [default = -1];
inline bool TransportRpcAddTransportAsk::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransportRpcAddTransportAsk::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransportRpcAddTransportAsk::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransportRpcAddTransportAsk::clear_lv() {
  lv_ = -1;
  clear_has_lv();
}
inline ::google::protobuf::int32 TransportRpcAddTransportAsk::lv() const {
  // @@protoc_insertion_point(field_get:TransportRpcAddTransportAsk.Lv)
  return lv_;
}
inline void TransportRpcAddTransportAsk::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:TransportRpcAddTransportAsk.Lv)
}

// -------------------------------------------------------------------

// TransportRpcAddTransportReply

// optional sint32 Result = 1 [default = -9999];
inline bool TransportRpcAddTransportReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransportRpcAddTransportReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransportRpcAddTransportReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransportRpcAddTransportReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 TransportRpcAddTransportReply::result() const {
  // @@protoc_insertion_point(field_get:TransportRpcAddTransportReply.Result)
  return result_;
}
inline void TransportRpcAddTransportReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:TransportRpcAddTransportReply.Result)
}

// optional sint32 Lv = 2 [default = -1];
inline bool TransportRpcAddTransportReply::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransportRpcAddTransportReply::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransportRpcAddTransportReply::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransportRpcAddTransportReply::clear_lv() {
  lv_ = -1;
  clear_has_lv();
}
inline ::google::protobuf::int32 TransportRpcAddTransportReply::lv() const {
  // @@protoc_insertion_point(field_get:TransportRpcAddTransportReply.Lv)
  return lv_;
}
inline void TransportRpcAddTransportReply::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:TransportRpcAddTransportReply.Lv)
}

// -------------------------------------------------------------------

// TransportRpcIsHelpedNotify

// optional sint32 TemplateId = 1 [default = -1];
inline bool TransportRpcIsHelpedNotify::has_templateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransportRpcIsHelpedNotify::set_has_templateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransportRpcIsHelpedNotify::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransportRpcIsHelpedNotify::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
inline ::google::protobuf::int32 TransportRpcIsHelpedNotify::templateid() const {
  // @@protoc_insertion_point(field_get:TransportRpcIsHelpedNotify.TemplateId)
  return templateid_;
}
inline void TransportRpcIsHelpedNotify::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:TransportRpcIsHelpedNotify.TemplateId)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TransportRpc_2eproto__INCLUDED
