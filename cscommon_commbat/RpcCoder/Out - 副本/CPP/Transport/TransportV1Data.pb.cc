// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TransportV1Data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "TransportV1Data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class TransportGoodsDataV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TransportGoodsDataV1>
     _instance;
} _TransportGoodsDataV1_default_instance_;
class TransportGoodsObjV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TransportGoodsObjV1>
     _instance;
} _TransportGoodsObjV1_default_instance_;
class TransportRewardObjV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TransportRewardObjV1>
     _instance;
} _TransportRewardObjV1_default_instance_;

namespace protobuf_TransportV1Data_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransportGoodsDataV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransportGoodsDataV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransportGoodsDataV1, goodsarray_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransportGoodsDataV1, asknum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransportGoodsDataV1, helpnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransportGoodsDataV1, rewardarry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransportGoodsDataV1, rewardflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransportGoodsDataV1, picktaskflag_),
  ~0u,
  2,
  3,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransportGoodsObjV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransportGoodsObjV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransportGoodsObjV1, goodid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransportGoodsObjV1, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransportGoodsObjV1, itemnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransportGoodsObjV1, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransportGoodsObjV1, ishelp_),
  1,
  2,
  3,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransportRewardObjV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransportRewardObjV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransportRewardObjV1, rewardid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransportRewardObjV1, lv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransportRewardObjV1, goodtype_),
  1,
  2,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(TransportGoodsDataV1)},
  { 17, 27, sizeof(TransportGoodsObjV1)},
  { 32, 40, sizeof(TransportRewardObjV1)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TransportGoodsDataV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TransportGoodsObjV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TransportRewardObjV1_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "TransportV1Data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _TransportGoodsDataV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TransportGoodsDataV1_default_instance_);_TransportGoodsObjV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TransportGoodsObjV1_default_instance_);_TransportRewardObjV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TransportRewardObjV1_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025TransportV1Data.proto\032\022PublicStruct.pr"
      "oto\"\314\001\n\024TransportGoodsDataV1\022(\n\nGoodsArr"
      "ay\030\001 \003(\0132\024.TransportGoodsObjV1\022\022\n\006AskNum"
      "\030\002 \001(\021:\002-1\022\023\n\007HelpNum\030\003 \001(\021:\002-1\022)\n\nRewar"
      "dArry\030\004 \003(\0132\025.TransportRewardObjV1\022\031\n\nRe"
      "wardFlag\030\006 \001(\010:\005false\022\033\n\014PickTaskFlag\030\007 "
      "\001(\010:\005false\"\203\001\n\023TransportGoodsObjV1\022\022\n\006Go"
      "odId\030\001 \001(\021:\002-1\022\026\n\nTemplateId\030\002 \001(\021:\002-1\022\023"
      "\n\007ItemNum\030\003 \001(\021:\002-1\022\024\n\010CateGory\030\004 \001(\021:\002-"
      "1\022\025\n\006IsHelp\030\005 \001(\010:\005false\"R\n\024TransportRew"
      "ardObjV1\022\024\n\010RewardId\030\001 \001(\021:\002-1\022\016\n\002LV\030\004 \001"
      "(\021:\002-1\022\024\n\010GoodType\030\005 \001(\021:\002-1"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 468);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TransportV1Data.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_TransportV1Data_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransportGoodsDataV1::kGoodsArrayFieldNumber;
const int TransportGoodsDataV1::kAskNumFieldNumber;
const int TransportGoodsDataV1::kHelpNumFieldNumber;
const int TransportGoodsDataV1::kRewardArryFieldNumber;
const int TransportGoodsDataV1::kRewardFlagFieldNumber;
const int TransportGoodsDataV1::kPickTaskFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransportGoodsDataV1::TransportGoodsDataV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TransportV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransportGoodsDataV1)
}
TransportGoodsDataV1::TransportGoodsDataV1(const TransportGoodsDataV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      goodsarray_(from.goodsarray_),
      rewardarry_(from.rewardarry_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rewardflag_, &from.rewardflag_,
    static_cast<size_t>(reinterpret_cast<char*>(&helpnum_) -
    reinterpret_cast<char*>(&rewardflag_)) + sizeof(helpnum_));
  // @@protoc_insertion_point(copy_constructor:TransportGoodsDataV1)
}

void TransportGoodsDataV1::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&rewardflag_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&picktaskflag_) -
      reinterpret_cast<char*>(&rewardflag_)) + sizeof(picktaskflag_));
  asknum_ = -1;
  helpnum_ = -1;
}

TransportGoodsDataV1::~TransportGoodsDataV1() {
  // @@protoc_insertion_point(destructor:TransportGoodsDataV1)
  SharedDtor();
}

void TransportGoodsDataV1::SharedDtor() {
}

void TransportGoodsDataV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransportGoodsDataV1::descriptor() {
  protobuf_TransportV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TransportV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransportGoodsDataV1& TransportGoodsDataV1::default_instance() {
  protobuf_TransportV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

TransportGoodsDataV1* TransportGoodsDataV1::New(::google::protobuf::Arena* arena) const {
  TransportGoodsDataV1* n = new TransportGoodsDataV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransportGoodsDataV1::Clear() {
// @@protoc_insertion_point(message_clear_start:TransportGoodsDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  goodsarray_.Clear();
  rewardarry_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&rewardflag_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&picktaskflag_) -
        reinterpret_cast<char*>(&rewardflag_)) + sizeof(picktaskflag_));
    asknum_ = -1;
    helpnum_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TransportGoodsDataV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransportGoodsDataV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TransportGoodsObjV1 GoodsArray = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goodsarray()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 AskNum = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_asknum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &asknum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 HelpNum = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_helpnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &helpnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TransportRewardObjV1 RewardArry = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewardarry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool RewardFlag = 6 [default = false];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_rewardflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rewardflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool PickTaskFlag = 7 [default = false];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_picktaskflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &picktaskflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransportGoodsDataV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransportGoodsDataV1)
  return false;
#undef DO_
}

void TransportGoodsDataV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransportGoodsDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TransportGoodsObjV1 GoodsArray = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->goodsarray_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goodsarray(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional sint32 AskNum = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->asknum(), output);
  }

  // optional sint32 HelpNum = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->helpnum(), output);
  }

  // repeated .TransportRewardObjV1 RewardArry = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rewardarry_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->rewardarry(static_cast<int>(i)), output);
  }

  // optional bool RewardFlag = 6 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->rewardflag(), output);
  }

  // optional bool PickTaskFlag = 7 [default = false];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->picktaskflag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TransportGoodsDataV1)
}

::google::protobuf::uint8* TransportGoodsDataV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TransportGoodsDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TransportGoodsObjV1 GoodsArray = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->goodsarray_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->goodsarray(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional sint32 AskNum = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->asknum(), target);
  }

  // optional sint32 HelpNum = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->helpnum(), target);
  }

  // repeated .TransportRewardObjV1 RewardArry = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rewardarry_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->rewardarry(static_cast<int>(i)), deterministic, target);
  }

  // optional bool RewardFlag = 6 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->rewardflag(), target);
  }

  // optional bool PickTaskFlag = 7 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->picktaskflag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TransportGoodsDataV1)
  return target;
}

size_t TransportGoodsDataV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TransportGoodsDataV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .TransportGoodsObjV1 GoodsArray = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->goodsarray_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->goodsarray(static_cast<int>(i)));
    }
  }

  // repeated .TransportRewardObjV1 RewardArry = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->rewardarry_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rewardarry(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional bool RewardFlag = 6 [default = false];
    if (has_rewardflag()) {
      total_size += 1 + 1;
    }

    // optional bool PickTaskFlag = 7 [default = false];
    if (has_picktaskflag()) {
      total_size += 1 + 1;
    }

    // optional sint32 AskNum = 2 [default = -1];
    if (has_asknum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->asknum());
    }

    // optional sint32 HelpNum = 3 [default = -1];
    if (has_helpnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->helpnum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransportGoodsDataV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransportGoodsDataV1)
  GOOGLE_DCHECK_NE(&from, this);
  const TransportGoodsDataV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransportGoodsDataV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransportGoodsDataV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransportGoodsDataV1)
    MergeFrom(*source);
  }
}

void TransportGoodsDataV1::MergeFrom(const TransportGoodsDataV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransportGoodsDataV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  goodsarray_.MergeFrom(from.goodsarray_);
  rewardarry_.MergeFrom(from.rewardarry_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      rewardflag_ = from.rewardflag_;
    }
    if (cached_has_bits & 0x00000002u) {
      picktaskflag_ = from.picktaskflag_;
    }
    if (cached_has_bits & 0x00000004u) {
      asknum_ = from.asknum_;
    }
    if (cached_has_bits & 0x00000008u) {
      helpnum_ = from.helpnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TransportGoodsDataV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransportGoodsDataV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransportGoodsDataV1::CopyFrom(const TransportGoodsDataV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransportGoodsDataV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransportGoodsDataV1::IsInitialized() const {
  return true;
}

void TransportGoodsDataV1::Swap(TransportGoodsDataV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransportGoodsDataV1::InternalSwap(TransportGoodsDataV1* other) {
  using std::swap;
  goodsarray_.InternalSwap(&other->goodsarray_);
  rewardarry_.InternalSwap(&other->rewardarry_);
  swap(rewardflag_, other->rewardflag_);
  swap(picktaskflag_, other->picktaskflag_);
  swap(asknum_, other->asknum_);
  swap(helpnum_, other->helpnum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransportGoodsDataV1::GetMetadata() const {
  protobuf_TransportV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TransportV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransportGoodsDataV1

// repeated .TransportGoodsObjV1 GoodsArray = 1;
int TransportGoodsDataV1::goodsarray_size() const {
  return goodsarray_.size();
}
void TransportGoodsDataV1::clear_goodsarray() {
  goodsarray_.Clear();
}
const ::TransportGoodsObjV1& TransportGoodsDataV1::goodsarray(int index) const {
  // @@protoc_insertion_point(field_get:TransportGoodsDataV1.GoodsArray)
  return goodsarray_.Get(index);
}
::TransportGoodsObjV1* TransportGoodsDataV1::mutable_goodsarray(int index) {
  // @@protoc_insertion_point(field_mutable:TransportGoodsDataV1.GoodsArray)
  return goodsarray_.Mutable(index);
}
::TransportGoodsObjV1* TransportGoodsDataV1::add_goodsarray() {
  // @@protoc_insertion_point(field_add:TransportGoodsDataV1.GoodsArray)
  return goodsarray_.Add();
}
::google::protobuf::RepeatedPtrField< ::TransportGoodsObjV1 >*
TransportGoodsDataV1::mutable_goodsarray() {
  // @@protoc_insertion_point(field_mutable_list:TransportGoodsDataV1.GoodsArray)
  return &goodsarray_;
}
const ::google::protobuf::RepeatedPtrField< ::TransportGoodsObjV1 >&
TransportGoodsDataV1::goodsarray() const {
  // @@protoc_insertion_point(field_list:TransportGoodsDataV1.GoodsArray)
  return goodsarray_;
}

// optional sint32 AskNum = 2 [default = -1];
bool TransportGoodsDataV1::has_asknum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TransportGoodsDataV1::set_has_asknum() {
  _has_bits_[0] |= 0x00000004u;
}
void TransportGoodsDataV1::clear_has_asknum() {
  _has_bits_[0] &= ~0x00000004u;
}
void TransportGoodsDataV1::clear_asknum() {
  asknum_ = -1;
  clear_has_asknum();
}
::google::protobuf::int32 TransportGoodsDataV1::asknum() const {
  // @@protoc_insertion_point(field_get:TransportGoodsDataV1.AskNum)
  return asknum_;
}
void TransportGoodsDataV1::set_asknum(::google::protobuf::int32 value) {
  set_has_asknum();
  asknum_ = value;
  // @@protoc_insertion_point(field_set:TransportGoodsDataV1.AskNum)
}

// optional sint32 HelpNum = 3 [default = -1];
bool TransportGoodsDataV1::has_helpnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TransportGoodsDataV1::set_has_helpnum() {
  _has_bits_[0] |= 0x00000008u;
}
void TransportGoodsDataV1::clear_has_helpnum() {
  _has_bits_[0] &= ~0x00000008u;
}
void TransportGoodsDataV1::clear_helpnum() {
  helpnum_ = -1;
  clear_has_helpnum();
}
::google::protobuf::int32 TransportGoodsDataV1::helpnum() const {
  // @@protoc_insertion_point(field_get:TransportGoodsDataV1.HelpNum)
  return helpnum_;
}
void TransportGoodsDataV1::set_helpnum(::google::protobuf::int32 value) {
  set_has_helpnum();
  helpnum_ = value;
  // @@protoc_insertion_point(field_set:TransportGoodsDataV1.HelpNum)
}

// repeated .TransportRewardObjV1 RewardArry = 4;
int TransportGoodsDataV1::rewardarry_size() const {
  return rewardarry_.size();
}
void TransportGoodsDataV1::clear_rewardarry() {
  rewardarry_.Clear();
}
const ::TransportRewardObjV1& TransportGoodsDataV1::rewardarry(int index) const {
  // @@protoc_insertion_point(field_get:TransportGoodsDataV1.RewardArry)
  return rewardarry_.Get(index);
}
::TransportRewardObjV1* TransportGoodsDataV1::mutable_rewardarry(int index) {
  // @@protoc_insertion_point(field_mutable:TransportGoodsDataV1.RewardArry)
  return rewardarry_.Mutable(index);
}
::TransportRewardObjV1* TransportGoodsDataV1::add_rewardarry() {
  // @@protoc_insertion_point(field_add:TransportGoodsDataV1.RewardArry)
  return rewardarry_.Add();
}
::google::protobuf::RepeatedPtrField< ::TransportRewardObjV1 >*
TransportGoodsDataV1::mutable_rewardarry() {
  // @@protoc_insertion_point(field_mutable_list:TransportGoodsDataV1.RewardArry)
  return &rewardarry_;
}
const ::google::protobuf::RepeatedPtrField< ::TransportRewardObjV1 >&
TransportGoodsDataV1::rewardarry() const {
  // @@protoc_insertion_point(field_list:TransportGoodsDataV1.RewardArry)
  return rewardarry_;
}

// optional bool RewardFlag = 6 [default = false];
bool TransportGoodsDataV1::has_rewardflag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TransportGoodsDataV1::set_has_rewardflag() {
  _has_bits_[0] |= 0x00000001u;
}
void TransportGoodsDataV1::clear_has_rewardflag() {
  _has_bits_[0] &= ~0x00000001u;
}
void TransportGoodsDataV1::clear_rewardflag() {
  rewardflag_ = false;
  clear_has_rewardflag();
}
bool TransportGoodsDataV1::rewardflag() const {
  // @@protoc_insertion_point(field_get:TransportGoodsDataV1.RewardFlag)
  return rewardflag_;
}
void TransportGoodsDataV1::set_rewardflag(bool value) {
  set_has_rewardflag();
  rewardflag_ = value;
  // @@protoc_insertion_point(field_set:TransportGoodsDataV1.RewardFlag)
}

// optional bool PickTaskFlag = 7 [default = false];
bool TransportGoodsDataV1::has_picktaskflag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TransportGoodsDataV1::set_has_picktaskflag() {
  _has_bits_[0] |= 0x00000002u;
}
void TransportGoodsDataV1::clear_has_picktaskflag() {
  _has_bits_[0] &= ~0x00000002u;
}
void TransportGoodsDataV1::clear_picktaskflag() {
  picktaskflag_ = false;
  clear_has_picktaskflag();
}
bool TransportGoodsDataV1::picktaskflag() const {
  // @@protoc_insertion_point(field_get:TransportGoodsDataV1.PickTaskFlag)
  return picktaskflag_;
}
void TransportGoodsDataV1::set_picktaskflag(bool value) {
  set_has_picktaskflag();
  picktaskflag_ = value;
  // @@protoc_insertion_point(field_set:TransportGoodsDataV1.PickTaskFlag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransportGoodsObjV1::kGoodIdFieldNumber;
const int TransportGoodsObjV1::kTemplateIdFieldNumber;
const int TransportGoodsObjV1::kItemNumFieldNumber;
const int TransportGoodsObjV1::kCateGoryFieldNumber;
const int TransportGoodsObjV1::kIsHelpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransportGoodsObjV1::TransportGoodsObjV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TransportV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransportGoodsObjV1)
}
TransportGoodsObjV1::TransportGoodsObjV1(const TransportGoodsObjV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ishelp_, &from.ishelp_,
    static_cast<size_t>(reinterpret_cast<char*>(&category_) -
    reinterpret_cast<char*>(&ishelp_)) + sizeof(category_));
  // @@protoc_insertion_point(copy_constructor:TransportGoodsObjV1)
}

void TransportGoodsObjV1::SharedCtor() {
  _cached_size_ = 0;
  ishelp_ = false;
  goodid_ = -1;
  templateid_ = -1;
  itemnum_ = -1;
  category_ = -1;
}

TransportGoodsObjV1::~TransportGoodsObjV1() {
  // @@protoc_insertion_point(destructor:TransportGoodsObjV1)
  SharedDtor();
}

void TransportGoodsObjV1::SharedDtor() {
}

void TransportGoodsObjV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransportGoodsObjV1::descriptor() {
  protobuf_TransportV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TransportV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransportGoodsObjV1& TransportGoodsObjV1::default_instance() {
  protobuf_TransportV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

TransportGoodsObjV1* TransportGoodsObjV1::New(::google::protobuf::Arena* arena) const {
  TransportGoodsObjV1* n = new TransportGoodsObjV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransportGoodsObjV1::Clear() {
// @@protoc_insertion_point(message_clear_start:TransportGoodsObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ishelp_ = false;
    goodid_ = -1;
    templateid_ = -1;
    itemnum_ = -1;
    category_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TransportGoodsObjV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransportGoodsObjV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 GoodId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_goodid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &goodid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TemplateId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ItemNum = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_itemnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 CateGory = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_category();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &category_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsHelp = 5 [default = false];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_ishelp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ishelp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransportGoodsObjV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransportGoodsObjV1)
  return false;
#undef DO_
}

void TransportGoodsObjV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransportGoodsObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 GoodId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->goodid(), output);
  }

  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->templateid(), output);
  }

  // optional sint32 ItemNum = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->itemnum(), output);
  }

  // optional sint32 CateGory = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->category(), output);
  }

  // optional bool IsHelp = 5 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->ishelp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TransportGoodsObjV1)
}

::google::protobuf::uint8* TransportGoodsObjV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TransportGoodsObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 GoodId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->goodid(), target);
  }

  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->templateid(), target);
  }

  // optional sint32 ItemNum = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->itemnum(), target);
  }

  // optional sint32 CateGory = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->category(), target);
  }

  // optional bool IsHelp = 5 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->ishelp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TransportGoodsObjV1)
  return target;
}

size_t TransportGoodsObjV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TransportGoodsObjV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bool IsHelp = 5 [default = false];
    if (has_ishelp()) {
      total_size += 1 + 1;
    }

    // optional sint32 GoodId = 1 [default = -1];
    if (has_goodid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->goodid());
    }

    // optional sint32 TemplateId = 2 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 ItemNum = 3 [default = -1];
    if (has_itemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemnum());
    }

    // optional sint32 CateGory = 4 [default = -1];
    if (has_category()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->category());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransportGoodsObjV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransportGoodsObjV1)
  GOOGLE_DCHECK_NE(&from, this);
  const TransportGoodsObjV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransportGoodsObjV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransportGoodsObjV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransportGoodsObjV1)
    MergeFrom(*source);
  }
}

void TransportGoodsObjV1::MergeFrom(const TransportGoodsObjV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransportGoodsObjV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      ishelp_ = from.ishelp_;
    }
    if (cached_has_bits & 0x00000002u) {
      goodid_ = from.goodid_;
    }
    if (cached_has_bits & 0x00000004u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000008u) {
      itemnum_ = from.itemnum_;
    }
    if (cached_has_bits & 0x00000010u) {
      category_ = from.category_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TransportGoodsObjV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransportGoodsObjV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransportGoodsObjV1::CopyFrom(const TransportGoodsObjV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransportGoodsObjV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransportGoodsObjV1::IsInitialized() const {
  return true;
}

void TransportGoodsObjV1::Swap(TransportGoodsObjV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransportGoodsObjV1::InternalSwap(TransportGoodsObjV1* other) {
  using std::swap;
  swap(ishelp_, other->ishelp_);
  swap(goodid_, other->goodid_);
  swap(templateid_, other->templateid_);
  swap(itemnum_, other->itemnum_);
  swap(category_, other->category_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransportGoodsObjV1::GetMetadata() const {
  protobuf_TransportV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TransportV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransportGoodsObjV1

// optional sint32 GoodId = 1 [default = -1];
bool TransportGoodsObjV1::has_goodid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TransportGoodsObjV1::set_has_goodid() {
  _has_bits_[0] |= 0x00000002u;
}
void TransportGoodsObjV1::clear_has_goodid() {
  _has_bits_[0] &= ~0x00000002u;
}
void TransportGoodsObjV1::clear_goodid() {
  goodid_ = -1;
  clear_has_goodid();
}
::google::protobuf::int32 TransportGoodsObjV1::goodid() const {
  // @@protoc_insertion_point(field_get:TransportGoodsObjV1.GoodId)
  return goodid_;
}
void TransportGoodsObjV1::set_goodid(::google::protobuf::int32 value) {
  set_has_goodid();
  goodid_ = value;
  // @@protoc_insertion_point(field_set:TransportGoodsObjV1.GoodId)
}

// optional sint32 TemplateId = 2 [default = -1];
bool TransportGoodsObjV1::has_templateid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TransportGoodsObjV1::set_has_templateid() {
  _has_bits_[0] |= 0x00000004u;
}
void TransportGoodsObjV1::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000004u;
}
void TransportGoodsObjV1::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 TransportGoodsObjV1::templateid() const {
  // @@protoc_insertion_point(field_get:TransportGoodsObjV1.TemplateId)
  return templateid_;
}
void TransportGoodsObjV1::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:TransportGoodsObjV1.TemplateId)
}

// optional sint32 ItemNum = 3 [default = -1];
bool TransportGoodsObjV1::has_itemnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TransportGoodsObjV1::set_has_itemnum() {
  _has_bits_[0] |= 0x00000008u;
}
void TransportGoodsObjV1::clear_has_itemnum() {
  _has_bits_[0] &= ~0x00000008u;
}
void TransportGoodsObjV1::clear_itemnum() {
  itemnum_ = -1;
  clear_has_itemnum();
}
::google::protobuf::int32 TransportGoodsObjV1::itemnum() const {
  // @@protoc_insertion_point(field_get:TransportGoodsObjV1.ItemNum)
  return itemnum_;
}
void TransportGoodsObjV1::set_itemnum(::google::protobuf::int32 value) {
  set_has_itemnum();
  itemnum_ = value;
  // @@protoc_insertion_point(field_set:TransportGoodsObjV1.ItemNum)
}

// optional sint32 CateGory = 4 [default = -1];
bool TransportGoodsObjV1::has_category() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TransportGoodsObjV1::set_has_category() {
  _has_bits_[0] |= 0x00000010u;
}
void TransportGoodsObjV1::clear_has_category() {
  _has_bits_[0] &= ~0x00000010u;
}
void TransportGoodsObjV1::clear_category() {
  category_ = -1;
  clear_has_category();
}
::google::protobuf::int32 TransportGoodsObjV1::category() const {
  // @@protoc_insertion_point(field_get:TransportGoodsObjV1.CateGory)
  return category_;
}
void TransportGoodsObjV1::set_category(::google::protobuf::int32 value) {
  set_has_category();
  category_ = value;
  // @@protoc_insertion_point(field_set:TransportGoodsObjV1.CateGory)
}

// optional bool IsHelp = 5 [default = false];
bool TransportGoodsObjV1::has_ishelp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TransportGoodsObjV1::set_has_ishelp() {
  _has_bits_[0] |= 0x00000001u;
}
void TransportGoodsObjV1::clear_has_ishelp() {
  _has_bits_[0] &= ~0x00000001u;
}
void TransportGoodsObjV1::clear_ishelp() {
  ishelp_ = false;
  clear_has_ishelp();
}
bool TransportGoodsObjV1::ishelp() const {
  // @@protoc_insertion_point(field_get:TransportGoodsObjV1.IsHelp)
  return ishelp_;
}
void TransportGoodsObjV1::set_ishelp(bool value) {
  set_has_ishelp();
  ishelp_ = value;
  // @@protoc_insertion_point(field_set:TransportGoodsObjV1.IsHelp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransportRewardObjV1::kRewardIdFieldNumber;
const int TransportRewardObjV1::kLVFieldNumber;
const int TransportRewardObjV1::kGoodTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransportRewardObjV1::TransportRewardObjV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TransportV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransportRewardObjV1)
}
TransportRewardObjV1::TransportRewardObjV1(const TransportRewardObjV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&goodtype_, &from.goodtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&lv_) -
    reinterpret_cast<char*>(&goodtype_)) + sizeof(lv_));
  // @@protoc_insertion_point(copy_constructor:TransportRewardObjV1)
}

void TransportRewardObjV1::SharedCtor() {
  _cached_size_ = 0;
  goodtype_ = -1;
  rewardid_ = -1;
  lv_ = -1;
}

TransportRewardObjV1::~TransportRewardObjV1() {
  // @@protoc_insertion_point(destructor:TransportRewardObjV1)
  SharedDtor();
}

void TransportRewardObjV1::SharedDtor() {
}

void TransportRewardObjV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransportRewardObjV1::descriptor() {
  protobuf_TransportV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TransportV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransportRewardObjV1& TransportRewardObjV1::default_instance() {
  protobuf_TransportV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

TransportRewardObjV1* TransportRewardObjV1::New(::google::protobuf::Arena* arena) const {
  TransportRewardObjV1* n = new TransportRewardObjV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransportRewardObjV1::Clear() {
// @@protoc_insertion_point(message_clear_start:TransportRewardObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    goodtype_ = -1;
    rewardid_ = -1;
    lv_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TransportRewardObjV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransportRewardObjV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 RewardId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_rewardid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &rewardid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 LV = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_lv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &lv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 GoodType = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_goodtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &goodtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransportRewardObjV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransportRewardObjV1)
  return false;
#undef DO_
}

void TransportRewardObjV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransportRewardObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 RewardId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->rewardid(), output);
  }

  // optional sint32 LV = 4 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->lv(), output);
  }

  // optional sint32 GoodType = 5 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->goodtype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TransportRewardObjV1)
}

::google::protobuf::uint8* TransportRewardObjV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TransportRewardObjV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 RewardId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->rewardid(), target);
  }

  // optional sint32 LV = 4 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->lv(), target);
  }

  // optional sint32 GoodType = 5 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->goodtype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TransportRewardObjV1)
  return target;
}

size_t TransportRewardObjV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TransportRewardObjV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 GoodType = 5 [default = -1];
    if (has_goodtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->goodtype());
    }

    // optional sint32 RewardId = 1 [default = -1];
    if (has_rewardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->rewardid());
    }

    // optional sint32 LV = 4 [default = -1];
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->lv());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransportRewardObjV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransportRewardObjV1)
  GOOGLE_DCHECK_NE(&from, this);
  const TransportRewardObjV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransportRewardObjV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransportRewardObjV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransportRewardObjV1)
    MergeFrom(*source);
  }
}

void TransportRewardObjV1::MergeFrom(const TransportRewardObjV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransportRewardObjV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      goodtype_ = from.goodtype_;
    }
    if (cached_has_bits & 0x00000002u) {
      rewardid_ = from.rewardid_;
    }
    if (cached_has_bits & 0x00000004u) {
      lv_ = from.lv_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TransportRewardObjV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransportRewardObjV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransportRewardObjV1::CopyFrom(const TransportRewardObjV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransportRewardObjV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransportRewardObjV1::IsInitialized() const {
  return true;
}

void TransportRewardObjV1::Swap(TransportRewardObjV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransportRewardObjV1::InternalSwap(TransportRewardObjV1* other) {
  using std::swap;
  swap(goodtype_, other->goodtype_);
  swap(rewardid_, other->rewardid_);
  swap(lv_, other->lv_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransportRewardObjV1::GetMetadata() const {
  protobuf_TransportV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TransportV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransportRewardObjV1

// optional sint32 RewardId = 1 [default = -1];
bool TransportRewardObjV1::has_rewardid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TransportRewardObjV1::set_has_rewardid() {
  _has_bits_[0] |= 0x00000002u;
}
void TransportRewardObjV1::clear_has_rewardid() {
  _has_bits_[0] &= ~0x00000002u;
}
void TransportRewardObjV1::clear_rewardid() {
  rewardid_ = -1;
  clear_has_rewardid();
}
::google::protobuf::int32 TransportRewardObjV1::rewardid() const {
  // @@protoc_insertion_point(field_get:TransportRewardObjV1.RewardId)
  return rewardid_;
}
void TransportRewardObjV1::set_rewardid(::google::protobuf::int32 value) {
  set_has_rewardid();
  rewardid_ = value;
  // @@protoc_insertion_point(field_set:TransportRewardObjV1.RewardId)
}

// optional sint32 LV = 4 [default = -1];
bool TransportRewardObjV1::has_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TransportRewardObjV1::set_has_lv() {
  _has_bits_[0] |= 0x00000004u;
}
void TransportRewardObjV1::clear_has_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
void TransportRewardObjV1::clear_lv() {
  lv_ = -1;
  clear_has_lv();
}
::google::protobuf::int32 TransportRewardObjV1::lv() const {
  // @@protoc_insertion_point(field_get:TransportRewardObjV1.LV)
  return lv_;
}
void TransportRewardObjV1::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:TransportRewardObjV1.LV)
}

// optional sint32 GoodType = 5 [default = -1];
bool TransportRewardObjV1::has_goodtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TransportRewardObjV1::set_has_goodtype() {
  _has_bits_[0] |= 0x00000001u;
}
void TransportRewardObjV1::clear_has_goodtype() {
  _has_bits_[0] &= ~0x00000001u;
}
void TransportRewardObjV1::clear_goodtype() {
  goodtype_ = -1;
  clear_has_goodtype();
}
::google::protobuf::int32 TransportRewardObjV1::goodtype() const {
  // @@protoc_insertion_point(field_get:TransportRewardObjV1.GoodType)
  return goodtype_;
}
void TransportRewardObjV1::set_goodtype(::google::protobuf::int32 value) {
  set_has_goodtype();
  goodtype_ = value;
  // @@protoc_insertion_point(field_set:TransportRewardObjV1.GoodType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
