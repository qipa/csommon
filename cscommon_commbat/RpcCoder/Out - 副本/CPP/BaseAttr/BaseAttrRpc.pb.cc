// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BaseAttrRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BaseAttrRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class BaseAttrRpcSyncDataAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcSyncDataAsk>
     _instance;
} _BaseAttrRpcSyncDataAsk_default_instance_;
class BaseAttrRpcSyncDataReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcSyncDataReply>
     _instance;
} _BaseAttrRpcSyncDataReply_default_instance_;
class BaseAttrRpcGetRankRewardAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcGetRankRewardAsk>
     _instance;
} _BaseAttrRpcGetRankRewardAsk_default_instance_;
class BaseAttrRpcGetRankRewardReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcGetRankRewardReply>
     _instance;
} _BaseAttrRpcGetRankRewardReply_default_instance_;
class BaseAttrRpcUpGradeRankAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcUpGradeRankAsk>
     _instance;
} _BaseAttrRpcUpGradeRankAsk_default_instance_;
class BaseAttrRpcUpGradeRankReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcUpGradeRankReply>
     _instance;
} _BaseAttrRpcUpGradeRankReply_default_instance_;
class BaseAttrRpcChooseRoleAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcChooseRoleAsk>
     _instance;
} _BaseAttrRpcChooseRoleAsk_default_instance_;
class BaseAttrRpcChooseRoleReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcChooseRoleReply>
     _instance;
} _BaseAttrRpcChooseRoleReply_default_instance_;
class BaseAttrRpcLevelUpAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcLevelUpAsk>
     _instance;
} _BaseAttrRpcLevelUpAsk_default_instance_;
class BaseAttrRpcLevelUpReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcLevelUpReply>
     _instance;
} _BaseAttrRpcLevelUpReply_default_instance_;
class BaseAttrRpcGetTimerAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcGetTimerAsk>
     _instance;
} _BaseAttrRpcGetTimerAsk_default_instance_;
class BaseAttrRpcGetTimerReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcGetTimerReply>
     _instance;
} _BaseAttrRpcGetTimerReply_default_instance_;
class BaseAttrRpcReviveAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcReviveAsk>
     _instance;
} _BaseAttrRpcReviveAsk_default_instance_;
class BaseAttrRpcReviveReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcReviveReply>
     _instance;
} _BaseAttrRpcReviveReply_default_instance_;
class BaseAttrRpcQueryEquipAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcQueryEquipAsk>
     _instance;
} _BaseAttrRpcQueryEquipAsk_default_instance_;
class BaseAttrRpcQueryEquipReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcQueryEquipReply>
     _instance;
} _BaseAttrRpcQueryEquipReply_default_instance_;
class BaseAttrRpcUpdateNewbieGuideAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcUpdateNewbieGuideAsk>
     _instance;
} _BaseAttrRpcUpdateNewbieGuideAsk_default_instance_;
class BaseAttrRpcUpdateNewbieGuideReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcUpdateNewbieGuideReply>
     _instance;
} _BaseAttrRpcUpdateNewbieGuideReply_default_instance_;
class BaseAttrRpcGridInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcGridInfo>
     _instance;
} _BaseAttrRpcGridInfo_default_instance_;
class BaseAttrRpcSysTipsNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcSysTipsNotify>
     _instance;
} _BaseAttrRpcSysTipsNotify_default_instance_;
class BaseAttrRpcChangPKStateAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcChangPKStateAsk>
     _instance;
} _BaseAttrRpcChangPKStateAsk_default_instance_;
class BaseAttrRpcChangPKStateReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcChangPKStateReply>
     _instance;
} _BaseAttrRpcChangPKStateReply_default_instance_;
class BaseAttrRpcChangePKProtectAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcChangePKProtectAsk>
     _instance;
} _BaseAttrRpcChangePKProtectAsk_default_instance_;
class BaseAttrRpcChangePKProtectReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BaseAttrRpcChangePKProtectReply>
     _instance;
} _BaseAttrRpcChangePKProtectReply_default_instance_;

namespace protobuf_BaseAttrRpc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[24];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcSyncDataAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcSyncDataAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcSyncDataReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcSyncDataReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcSyncDataReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcGetRankRewardAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcGetRankRewardAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcGetRankRewardReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcGetRankRewardReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcGetRankRewardReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcUpGradeRankAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcUpGradeRankAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcUpGradeRankReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcUpGradeRankReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcUpGradeRankReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcChooseRoleAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcChooseRoleAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcChooseRoleAsk, prof_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcChooseRoleReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcChooseRoleReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcChooseRoleReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcChooseRoleReply, prof_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcLevelUpAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcLevelUpAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcLevelUpReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcLevelUpReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcLevelUpReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcGetTimerAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcGetTimerAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcGetTimerReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcGetTimerReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcGetTimerReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcGetTimerReply, timer_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcReviveAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcReviveAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcReviveReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcReviveReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcReviveReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcQueryEquipAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcQueryEquipAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcQueryEquipAsk, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcQueryEquipAsk, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcQueryEquipAsk, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcQueryEquipAsk, index_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcQueryEquipReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcQueryEquipReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcQueryEquipReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcQueryEquipReply, equipdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcQueryEquipReply, griddata_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcUpdateNewbieGuideAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcUpdateNewbieGuideAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcUpdateNewbieGuideAsk, groupid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcUpdateNewbieGuideAsk, step_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcUpdateNewbieGuideReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcUpdateNewbieGuideReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcUpdateNewbieGuideReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcGridInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcGridInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcGridInfo, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcGridInfo, num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcGridInfo, itemtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcGridInfo, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcGridInfo, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcGridInfo, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcGridInfo, bind_),
  2,
  0,
  3,
  4,
  5,
  6,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcSysTipsNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcSysTipsNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcSysTipsNotify, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcChangPKStateAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcChangPKStateAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcChangPKStateAsk, changstate_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcChangPKStateReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcChangPKStateReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcChangPKStateReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcChangePKProtectAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcChangePKProtectAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcChangePKProtectAsk, protectlist_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcChangePKProtectReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcChangePKProtectReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseAttrRpcChangePKProtectReply, result_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(BaseAttrRpcSyncDataAsk)},
  { 5, 11, sizeof(BaseAttrRpcSyncDataReply)},
  { 12, 17, sizeof(BaseAttrRpcGetRankRewardAsk)},
  { 17, 23, sizeof(BaseAttrRpcGetRankRewardReply)},
  { 24, 29, sizeof(BaseAttrRpcUpGradeRankAsk)},
  { 29, 35, sizeof(BaseAttrRpcUpGradeRankReply)},
  { 36, 42, sizeof(BaseAttrRpcChooseRoleAsk)},
  { 43, 50, sizeof(BaseAttrRpcChooseRoleReply)},
  { 52, 57, sizeof(BaseAttrRpcLevelUpAsk)},
  { 57, 63, sizeof(BaseAttrRpcLevelUpReply)},
  { 64, 69, sizeof(BaseAttrRpcGetTimerAsk)},
  { 69, 76, sizeof(BaseAttrRpcGetTimerReply)},
  { 78, 83, sizeof(BaseAttrRpcReviveAsk)},
  { 83, 89, sizeof(BaseAttrRpcReviveReply)},
  { 90, 99, sizeof(BaseAttrRpcQueryEquipAsk)},
  { 103, 111, sizeof(BaseAttrRpcQueryEquipReply)},
  { 114, 121, sizeof(BaseAttrRpcUpdateNewbieGuideAsk)},
  { 123, 129, sizeof(BaseAttrRpcUpdateNewbieGuideReply)},
  { 130, 142, sizeof(BaseAttrRpcGridInfo)},
  { 149, 155, sizeof(BaseAttrRpcSysTipsNotify)},
  { 156, 162, sizeof(BaseAttrRpcChangPKStateAsk)},
  { 163, 169, sizeof(BaseAttrRpcChangPKStateReply)},
  { 170, 176, sizeof(BaseAttrRpcChangePKProtectAsk)},
  { 177, 183, sizeof(BaseAttrRpcChangePKProtectReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcSyncDataAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcSyncDataReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcGetRankRewardAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcGetRankRewardReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcUpGradeRankAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcUpGradeRankReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcChooseRoleAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcChooseRoleReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcLevelUpAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcLevelUpReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcGetTimerAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcGetTimerReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcReviveAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcReviveReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcQueryEquipAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcQueryEquipReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcUpdateNewbieGuideAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcUpdateNewbieGuideReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcGridInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcSysTipsNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcChangPKStateAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcChangPKStateReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcChangePKProtectAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseAttrRpcChangePKProtectReply_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "BaseAttrRpc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 24);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _BaseAttrRpcSyncDataAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcSyncDataAsk_default_instance_);_BaseAttrRpcSyncDataReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcSyncDataReply_default_instance_);_BaseAttrRpcGetRankRewardAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcGetRankRewardAsk_default_instance_);_BaseAttrRpcGetRankRewardReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcGetRankRewardReply_default_instance_);_BaseAttrRpcUpGradeRankAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcUpGradeRankAsk_default_instance_);_BaseAttrRpcUpGradeRankReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcUpGradeRankReply_default_instance_);_BaseAttrRpcChooseRoleAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcChooseRoleAsk_default_instance_);_BaseAttrRpcChooseRoleReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcChooseRoleReply_default_instance_);_BaseAttrRpcLevelUpAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcLevelUpAsk_default_instance_);_BaseAttrRpcLevelUpReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcLevelUpReply_default_instance_);_BaseAttrRpcGetTimerAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcGetTimerAsk_default_instance_);_BaseAttrRpcGetTimerReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcGetTimerReply_default_instance_);_BaseAttrRpcReviveAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcReviveAsk_default_instance_);_BaseAttrRpcReviveReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcReviveReply_default_instance_);_BaseAttrRpcQueryEquipAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcQueryEquipAsk_default_instance_);_BaseAttrRpcQueryEquipReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcQueryEquipReply_default_instance_);_BaseAttrRpcUpdateNewbieGuideAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcUpdateNewbieGuideAsk_default_instance_);_BaseAttrRpcUpdateNewbieGuideReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcUpdateNewbieGuideReply_default_instance_);_BaseAttrRpcGridInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcGridInfo_default_instance_);_BaseAttrRpcSysTipsNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcSysTipsNotify_default_instance_);_BaseAttrRpcChangPKStateAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcChangPKStateAsk_default_instance_);_BaseAttrRpcChangPKStateReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcChangPKStateReply_default_instance_);_BaseAttrRpcChangePKProtectAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcChangePKProtectAsk_default_instance_);_BaseAttrRpcChangePKProtectReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BaseAttrRpcChangePKProtectReply_default_instance_);_BaseAttrRpcQueryEquipReply_default_instance_._instance.get_mutable()->equipdata_ = const_cast< ::BagEquipObj*>(
      ::BagEquipObj::internal_default_instance());
  _BaseAttrRpcQueryEquipReply_default_instance_._instance.get_mutable()->griddata_ = const_cast< ::BaseAttrRpcGridInfo*>(
      ::BaseAttrRpcGridInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021BaseAttrRpc.proto\032\022PublicStruct.proto\""
      "\030\n\026BaseAttrRpcSyncDataAsk\"1\n\030BaseAttrRpc"
      "SyncDataReply\022\025\n\006Result\030\001 \001(\021:\005-9999\"\035\n\033"
      "BaseAttrRpcGetRankRewardAsk\"6\n\035BaseAttrR"
      "pcGetRankRewardReply\022\025\n\006Result\030\001 \001(\021:\005-9"
      "999\"\033\n\031BaseAttrRpcUpGradeRankAsk\"4\n\033Base"
      "AttrRpcUpGradeRankReply\022\025\n\006Result\030\001 \001(\021:"
      "\005-9999\",\n\030BaseAttrRpcChooseRoleAsk\022\020\n\004Pr"
      "of\030\001 \001(\021:\002-1\"E\n\032BaseAttrRpcChooseRoleRep"
      "ly\022\025\n\006Result\030\001 \001(\021:\005-9999\022\020\n\004Prof\030\002 \001(\021:"
      "\002-1\"\027\n\025BaseAttrRpcLevelUpAsk\"0\n\027BaseAttr"
      "RpcLevelUpReply\022\025\n\006Result\030\001 \001(\021:\005-9999\"\030"
      "\n\026BaseAttrRpcGetTimerAsk\"D\n\030BaseAttrRpcG"
      "etTimerReply\022\025\n\006Result\030\001 \001(\021:\005-9999\022\021\n\005T"
      "imer\030\002 \001(\022:\002-1\"\026\n\024BaseAttrRpcReviveAsk\"/"
      "\n\026BaseAttrRpcReviveReply\022\025\n\006Result\030\001 \001(\021"
      ":\005-9999\"j\n\030BaseAttrRpcQueryEquipAsk\022\022\n\006U"
      "serId\030\002 \001(\022:\002-1\022\017\n\003Pos\030\006 \001(\021:\002-1\022\026\n\nTemp"
      "lateID\030\007 \001(\021:\002-1\022\021\n\005Index\030\010 \001(\022:\002-1\"|\n\032B"
      "aseAttrRpcQueryEquipReply\022\025\n\006Result\030\001 \001("
      "\021:\005-9999\022\037\n\tEquipData\030\002 \001(\0132\014.BagEquipOb"
      "j\022&\n\010GridData\030\003 \001(\0132\024.BaseAttrRpcGridInf"
      "o\"H\n\037BaseAttrRpcUpdateNewbieGuideAsk\022\023\n\007"
      "GroupId\030\001 \001(\021:\002-1\022\020\n\004Step\030\002 \001(\021:\002-1\":\n!B"
      "aseAttrRpcUpdateNewbieGuideReply\022\025\n\006Resu"
      "lt\030\001 \001(\021:\005-9999\"\237\001\n\023BaseAttrRpcGridInfo\022"
      "\026\n\nTemplateID\030\001 \001(\021:\002-1\022\016\n\003Num\030\002 \001(\021:\0010\022"
      "\024\n\010ItemType\030\003 \001(\021:\002-1\022\017\n\003Pos\030\004 \001(\021:\002-1\022\021"
      "\n\005Value\030\005 \001(\021:\002-1\022\021\n\005Index\030\006 \001(\022:\002-1\022\023\n\004"
      "Bind\030\007 \001(\010:\005false\"*\n\030BaseAttrRpcSysTipsN"
      "otify\022\016\n\002Id\030\001 \001(\021:\002-1\"4\n\032BaseAttrRpcChan"
      "gPKStateAsk\022\026\n\nChangState\030\001 \001(\021:\002-1\"5\n\034B"
      "aseAttrRpcChangPKStateReply\022\025\n\006Result\030\001 "
      "\001(\021:\005-9999\"G\n\035BaseAttrRpcChangePKProtect"
      "Ask\022&\n\013ProtectList\030\001 \003(\0132\021.KeyValue2IntB"
      "ool\"8\n\037BaseAttrRpcChangePKProtectReply\022\025"
      "\n\006Result\030\001 \001(\021:\005-9999"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1461);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BaseAttrRpc.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_BaseAttrRpc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcSyncDataAsk::BaseAttrRpcSyncDataAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcSyncDataAsk)
}
BaseAttrRpcSyncDataAsk::BaseAttrRpcSyncDataAsk(const BaseAttrRpcSyncDataAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcSyncDataAsk)
}

void BaseAttrRpcSyncDataAsk::SharedCtor() {
  _cached_size_ = 0;
}

BaseAttrRpcSyncDataAsk::~BaseAttrRpcSyncDataAsk() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcSyncDataAsk)
  SharedDtor();
}

void BaseAttrRpcSyncDataAsk::SharedDtor() {
}

void BaseAttrRpcSyncDataAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcSyncDataAsk::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcSyncDataAsk& BaseAttrRpcSyncDataAsk::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcSyncDataAsk* BaseAttrRpcSyncDataAsk::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcSyncDataAsk* n = new BaseAttrRpcSyncDataAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcSyncDataAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcSyncDataAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcSyncDataAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcSyncDataAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcSyncDataAsk)
  return false;
#undef DO_
}

void BaseAttrRpcSyncDataAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcSyncDataAsk)
}

::google::protobuf::uint8* BaseAttrRpcSyncDataAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcSyncDataAsk)
  return target;
}

size_t BaseAttrRpcSyncDataAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcSyncDataAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcSyncDataAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcSyncDataAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcSyncDataAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcSyncDataAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcSyncDataAsk)
    MergeFrom(*source);
  }
}

void BaseAttrRpcSyncDataAsk::MergeFrom(const BaseAttrRpcSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BaseAttrRpcSyncDataAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcSyncDataAsk::CopyFrom(const BaseAttrRpcSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcSyncDataAsk::IsInitialized() const {
  return true;
}

void BaseAttrRpcSyncDataAsk::Swap(BaseAttrRpcSyncDataAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcSyncDataAsk::InternalSwap(BaseAttrRpcSyncDataAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcSyncDataAsk::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcSyncDataAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrRpcSyncDataReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcSyncDataReply::BaseAttrRpcSyncDataReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcSyncDataReply)
}
BaseAttrRpcSyncDataReply::BaseAttrRpcSyncDataReply(const BaseAttrRpcSyncDataReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcSyncDataReply)
}

void BaseAttrRpcSyncDataReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

BaseAttrRpcSyncDataReply::~BaseAttrRpcSyncDataReply() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcSyncDataReply)
  SharedDtor();
}

void BaseAttrRpcSyncDataReply::SharedDtor() {
}

void BaseAttrRpcSyncDataReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcSyncDataReply::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcSyncDataReply& BaseAttrRpcSyncDataReply::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcSyncDataReply* BaseAttrRpcSyncDataReply::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcSyncDataReply* n = new BaseAttrRpcSyncDataReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcSyncDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcSyncDataReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcSyncDataReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcSyncDataReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcSyncDataReply)
  return false;
#undef DO_
}

void BaseAttrRpcSyncDataReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcSyncDataReply)
}

::google::protobuf::uint8* BaseAttrRpcSyncDataReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcSyncDataReply)
  return target;
}

size_t BaseAttrRpcSyncDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcSyncDataReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcSyncDataReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcSyncDataReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcSyncDataReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcSyncDataReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcSyncDataReply)
    MergeFrom(*source);
  }
}

void BaseAttrRpcSyncDataReply::MergeFrom(const BaseAttrRpcSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void BaseAttrRpcSyncDataReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcSyncDataReply::CopyFrom(const BaseAttrRpcSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcSyncDataReply::IsInitialized() const {
  return true;
}

void BaseAttrRpcSyncDataReply::Swap(BaseAttrRpcSyncDataReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcSyncDataReply::InternalSwap(BaseAttrRpcSyncDataReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcSyncDataReply::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcSyncDataReply

// optional sint32 Result = 1 [default = -9999];
bool BaseAttrRpcSyncDataReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrRpcSyncDataReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrRpcSyncDataReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrRpcSyncDataReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BaseAttrRpcSyncDataReply::result() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcSyncDataReply.Result)
  return result_;
}
void BaseAttrRpcSyncDataReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcSyncDataReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcGetRankRewardAsk::BaseAttrRpcGetRankRewardAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcGetRankRewardAsk)
}
BaseAttrRpcGetRankRewardAsk::BaseAttrRpcGetRankRewardAsk(const BaseAttrRpcGetRankRewardAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcGetRankRewardAsk)
}

void BaseAttrRpcGetRankRewardAsk::SharedCtor() {
  _cached_size_ = 0;
}

BaseAttrRpcGetRankRewardAsk::~BaseAttrRpcGetRankRewardAsk() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcGetRankRewardAsk)
  SharedDtor();
}

void BaseAttrRpcGetRankRewardAsk::SharedDtor() {
}

void BaseAttrRpcGetRankRewardAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcGetRankRewardAsk::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcGetRankRewardAsk& BaseAttrRpcGetRankRewardAsk::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcGetRankRewardAsk* BaseAttrRpcGetRankRewardAsk::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcGetRankRewardAsk* n = new BaseAttrRpcGetRankRewardAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcGetRankRewardAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcGetRankRewardAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcGetRankRewardAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcGetRankRewardAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcGetRankRewardAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcGetRankRewardAsk)
  return false;
#undef DO_
}

void BaseAttrRpcGetRankRewardAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcGetRankRewardAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcGetRankRewardAsk)
}

::google::protobuf::uint8* BaseAttrRpcGetRankRewardAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcGetRankRewardAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcGetRankRewardAsk)
  return target;
}

size_t BaseAttrRpcGetRankRewardAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcGetRankRewardAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcGetRankRewardAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcGetRankRewardAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcGetRankRewardAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcGetRankRewardAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcGetRankRewardAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcGetRankRewardAsk)
    MergeFrom(*source);
  }
}

void BaseAttrRpcGetRankRewardAsk::MergeFrom(const BaseAttrRpcGetRankRewardAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcGetRankRewardAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BaseAttrRpcGetRankRewardAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcGetRankRewardAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcGetRankRewardAsk::CopyFrom(const BaseAttrRpcGetRankRewardAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcGetRankRewardAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcGetRankRewardAsk::IsInitialized() const {
  return true;
}

void BaseAttrRpcGetRankRewardAsk::Swap(BaseAttrRpcGetRankRewardAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcGetRankRewardAsk::InternalSwap(BaseAttrRpcGetRankRewardAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcGetRankRewardAsk::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcGetRankRewardAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrRpcGetRankRewardReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcGetRankRewardReply::BaseAttrRpcGetRankRewardReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcGetRankRewardReply)
}
BaseAttrRpcGetRankRewardReply::BaseAttrRpcGetRankRewardReply(const BaseAttrRpcGetRankRewardReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcGetRankRewardReply)
}

void BaseAttrRpcGetRankRewardReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

BaseAttrRpcGetRankRewardReply::~BaseAttrRpcGetRankRewardReply() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcGetRankRewardReply)
  SharedDtor();
}

void BaseAttrRpcGetRankRewardReply::SharedDtor() {
}

void BaseAttrRpcGetRankRewardReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcGetRankRewardReply::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcGetRankRewardReply& BaseAttrRpcGetRankRewardReply::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcGetRankRewardReply* BaseAttrRpcGetRankRewardReply::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcGetRankRewardReply* n = new BaseAttrRpcGetRankRewardReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcGetRankRewardReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcGetRankRewardReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcGetRankRewardReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcGetRankRewardReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcGetRankRewardReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcGetRankRewardReply)
  return false;
#undef DO_
}

void BaseAttrRpcGetRankRewardReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcGetRankRewardReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcGetRankRewardReply)
}

::google::protobuf::uint8* BaseAttrRpcGetRankRewardReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcGetRankRewardReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcGetRankRewardReply)
  return target;
}

size_t BaseAttrRpcGetRankRewardReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcGetRankRewardReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcGetRankRewardReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcGetRankRewardReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcGetRankRewardReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcGetRankRewardReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcGetRankRewardReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcGetRankRewardReply)
    MergeFrom(*source);
  }
}

void BaseAttrRpcGetRankRewardReply::MergeFrom(const BaseAttrRpcGetRankRewardReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcGetRankRewardReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void BaseAttrRpcGetRankRewardReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcGetRankRewardReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcGetRankRewardReply::CopyFrom(const BaseAttrRpcGetRankRewardReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcGetRankRewardReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcGetRankRewardReply::IsInitialized() const {
  return true;
}

void BaseAttrRpcGetRankRewardReply::Swap(BaseAttrRpcGetRankRewardReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcGetRankRewardReply::InternalSwap(BaseAttrRpcGetRankRewardReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcGetRankRewardReply::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcGetRankRewardReply

// optional sint32 Result = 1 [default = -9999];
bool BaseAttrRpcGetRankRewardReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrRpcGetRankRewardReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrRpcGetRankRewardReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrRpcGetRankRewardReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BaseAttrRpcGetRankRewardReply::result() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcGetRankRewardReply.Result)
  return result_;
}
void BaseAttrRpcGetRankRewardReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcGetRankRewardReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcUpGradeRankAsk::BaseAttrRpcUpGradeRankAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcUpGradeRankAsk)
}
BaseAttrRpcUpGradeRankAsk::BaseAttrRpcUpGradeRankAsk(const BaseAttrRpcUpGradeRankAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcUpGradeRankAsk)
}

void BaseAttrRpcUpGradeRankAsk::SharedCtor() {
  _cached_size_ = 0;
}

BaseAttrRpcUpGradeRankAsk::~BaseAttrRpcUpGradeRankAsk() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcUpGradeRankAsk)
  SharedDtor();
}

void BaseAttrRpcUpGradeRankAsk::SharedDtor() {
}

void BaseAttrRpcUpGradeRankAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcUpGradeRankAsk::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcUpGradeRankAsk& BaseAttrRpcUpGradeRankAsk::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcUpGradeRankAsk* BaseAttrRpcUpGradeRankAsk::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcUpGradeRankAsk* n = new BaseAttrRpcUpGradeRankAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcUpGradeRankAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcUpGradeRankAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcUpGradeRankAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcUpGradeRankAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcUpGradeRankAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcUpGradeRankAsk)
  return false;
#undef DO_
}

void BaseAttrRpcUpGradeRankAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcUpGradeRankAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcUpGradeRankAsk)
}

::google::protobuf::uint8* BaseAttrRpcUpGradeRankAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcUpGradeRankAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcUpGradeRankAsk)
  return target;
}

size_t BaseAttrRpcUpGradeRankAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcUpGradeRankAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcUpGradeRankAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcUpGradeRankAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcUpGradeRankAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcUpGradeRankAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcUpGradeRankAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcUpGradeRankAsk)
    MergeFrom(*source);
  }
}

void BaseAttrRpcUpGradeRankAsk::MergeFrom(const BaseAttrRpcUpGradeRankAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcUpGradeRankAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BaseAttrRpcUpGradeRankAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcUpGradeRankAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcUpGradeRankAsk::CopyFrom(const BaseAttrRpcUpGradeRankAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcUpGradeRankAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcUpGradeRankAsk::IsInitialized() const {
  return true;
}

void BaseAttrRpcUpGradeRankAsk::Swap(BaseAttrRpcUpGradeRankAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcUpGradeRankAsk::InternalSwap(BaseAttrRpcUpGradeRankAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcUpGradeRankAsk::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcUpGradeRankAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrRpcUpGradeRankReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcUpGradeRankReply::BaseAttrRpcUpGradeRankReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcUpGradeRankReply)
}
BaseAttrRpcUpGradeRankReply::BaseAttrRpcUpGradeRankReply(const BaseAttrRpcUpGradeRankReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcUpGradeRankReply)
}

void BaseAttrRpcUpGradeRankReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

BaseAttrRpcUpGradeRankReply::~BaseAttrRpcUpGradeRankReply() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcUpGradeRankReply)
  SharedDtor();
}

void BaseAttrRpcUpGradeRankReply::SharedDtor() {
}

void BaseAttrRpcUpGradeRankReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcUpGradeRankReply::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcUpGradeRankReply& BaseAttrRpcUpGradeRankReply::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcUpGradeRankReply* BaseAttrRpcUpGradeRankReply::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcUpGradeRankReply* n = new BaseAttrRpcUpGradeRankReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcUpGradeRankReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcUpGradeRankReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcUpGradeRankReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcUpGradeRankReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcUpGradeRankReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcUpGradeRankReply)
  return false;
#undef DO_
}

void BaseAttrRpcUpGradeRankReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcUpGradeRankReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcUpGradeRankReply)
}

::google::protobuf::uint8* BaseAttrRpcUpGradeRankReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcUpGradeRankReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcUpGradeRankReply)
  return target;
}

size_t BaseAttrRpcUpGradeRankReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcUpGradeRankReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcUpGradeRankReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcUpGradeRankReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcUpGradeRankReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcUpGradeRankReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcUpGradeRankReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcUpGradeRankReply)
    MergeFrom(*source);
  }
}

void BaseAttrRpcUpGradeRankReply::MergeFrom(const BaseAttrRpcUpGradeRankReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcUpGradeRankReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void BaseAttrRpcUpGradeRankReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcUpGradeRankReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcUpGradeRankReply::CopyFrom(const BaseAttrRpcUpGradeRankReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcUpGradeRankReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcUpGradeRankReply::IsInitialized() const {
  return true;
}

void BaseAttrRpcUpGradeRankReply::Swap(BaseAttrRpcUpGradeRankReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcUpGradeRankReply::InternalSwap(BaseAttrRpcUpGradeRankReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcUpGradeRankReply::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcUpGradeRankReply

// optional sint32 Result = 1 [default = -9999];
bool BaseAttrRpcUpGradeRankReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrRpcUpGradeRankReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrRpcUpGradeRankReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrRpcUpGradeRankReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BaseAttrRpcUpGradeRankReply::result() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcUpGradeRankReply.Result)
  return result_;
}
void BaseAttrRpcUpGradeRankReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcUpGradeRankReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrRpcChooseRoleAsk::kProfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcChooseRoleAsk::BaseAttrRpcChooseRoleAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcChooseRoleAsk)
}
BaseAttrRpcChooseRoleAsk::BaseAttrRpcChooseRoleAsk(const BaseAttrRpcChooseRoleAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prof_ = from.prof_;
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcChooseRoleAsk)
}

void BaseAttrRpcChooseRoleAsk::SharedCtor() {
  _cached_size_ = 0;
  prof_ = -1;
}

BaseAttrRpcChooseRoleAsk::~BaseAttrRpcChooseRoleAsk() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcChooseRoleAsk)
  SharedDtor();
}

void BaseAttrRpcChooseRoleAsk::SharedDtor() {
}

void BaseAttrRpcChooseRoleAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcChooseRoleAsk::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcChooseRoleAsk& BaseAttrRpcChooseRoleAsk::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcChooseRoleAsk* BaseAttrRpcChooseRoleAsk::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcChooseRoleAsk* n = new BaseAttrRpcChooseRoleAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcChooseRoleAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcChooseRoleAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prof_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcChooseRoleAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcChooseRoleAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Prof = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_prof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &prof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcChooseRoleAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcChooseRoleAsk)
  return false;
#undef DO_
}

void BaseAttrRpcChooseRoleAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcChooseRoleAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Prof = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->prof(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcChooseRoleAsk)
}

::google::protobuf::uint8* BaseAttrRpcChooseRoleAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcChooseRoleAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Prof = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->prof(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcChooseRoleAsk)
  return target;
}

size_t BaseAttrRpcChooseRoleAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcChooseRoleAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Prof = 1 [default = -1];
  if (has_prof()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->prof());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcChooseRoleAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcChooseRoleAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcChooseRoleAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcChooseRoleAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcChooseRoleAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcChooseRoleAsk)
    MergeFrom(*source);
  }
}

void BaseAttrRpcChooseRoleAsk::MergeFrom(const BaseAttrRpcChooseRoleAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcChooseRoleAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_prof()) {
    set_prof(from.prof());
  }
}

void BaseAttrRpcChooseRoleAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcChooseRoleAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcChooseRoleAsk::CopyFrom(const BaseAttrRpcChooseRoleAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcChooseRoleAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcChooseRoleAsk::IsInitialized() const {
  return true;
}

void BaseAttrRpcChooseRoleAsk::Swap(BaseAttrRpcChooseRoleAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcChooseRoleAsk::InternalSwap(BaseAttrRpcChooseRoleAsk* other) {
  using std::swap;
  swap(prof_, other->prof_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcChooseRoleAsk::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcChooseRoleAsk

// optional sint32 Prof = 1 [default = -1];
bool BaseAttrRpcChooseRoleAsk::has_prof() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrRpcChooseRoleAsk::set_has_prof() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrRpcChooseRoleAsk::clear_has_prof() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrRpcChooseRoleAsk::clear_prof() {
  prof_ = -1;
  clear_has_prof();
}
::google::protobuf::int32 BaseAttrRpcChooseRoleAsk::prof() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcChooseRoleAsk.Prof)
  return prof_;
}
void BaseAttrRpcChooseRoleAsk::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcChooseRoleAsk.Prof)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrRpcChooseRoleReply::kResultFieldNumber;
const int BaseAttrRpcChooseRoleReply::kProfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcChooseRoleReply::BaseAttrRpcChooseRoleReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcChooseRoleReply)
}
BaseAttrRpcChooseRoleReply::BaseAttrRpcChooseRoleReply(const BaseAttrRpcChooseRoleReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&prof_) -
    reinterpret_cast<char*>(&result_)) + sizeof(prof_));
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcChooseRoleReply)
}

void BaseAttrRpcChooseRoleReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  prof_ = -1;
}

BaseAttrRpcChooseRoleReply::~BaseAttrRpcChooseRoleReply() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcChooseRoleReply)
  SharedDtor();
}

void BaseAttrRpcChooseRoleReply::SharedDtor() {
}

void BaseAttrRpcChooseRoleReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcChooseRoleReply::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcChooseRoleReply& BaseAttrRpcChooseRoleReply::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcChooseRoleReply* BaseAttrRpcChooseRoleReply::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcChooseRoleReply* n = new BaseAttrRpcChooseRoleReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcChooseRoleReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcChooseRoleReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    result_ = -9999;
    prof_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcChooseRoleReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcChooseRoleReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Prof = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_prof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &prof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcChooseRoleReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcChooseRoleReply)
  return false;
#undef DO_
}

void BaseAttrRpcChooseRoleReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcChooseRoleReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 Prof = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->prof(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcChooseRoleReply)
}

::google::protobuf::uint8* BaseAttrRpcChooseRoleReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcChooseRoleReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 Prof = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->prof(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcChooseRoleReply)
  return target;
}

size_t BaseAttrRpcChooseRoleReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcChooseRoleReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 Prof = 2 [default = -1];
    if (has_prof()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->prof());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcChooseRoleReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcChooseRoleReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcChooseRoleReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcChooseRoleReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcChooseRoleReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcChooseRoleReply)
    MergeFrom(*source);
  }
}

void BaseAttrRpcChooseRoleReply::MergeFrom(const BaseAttrRpcChooseRoleReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcChooseRoleReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      prof_ = from.prof_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BaseAttrRpcChooseRoleReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcChooseRoleReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcChooseRoleReply::CopyFrom(const BaseAttrRpcChooseRoleReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcChooseRoleReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcChooseRoleReply::IsInitialized() const {
  return true;
}

void BaseAttrRpcChooseRoleReply::Swap(BaseAttrRpcChooseRoleReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcChooseRoleReply::InternalSwap(BaseAttrRpcChooseRoleReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(prof_, other->prof_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcChooseRoleReply::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcChooseRoleReply

// optional sint32 Result = 1 [default = -9999];
bool BaseAttrRpcChooseRoleReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrRpcChooseRoleReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrRpcChooseRoleReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrRpcChooseRoleReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BaseAttrRpcChooseRoleReply::result() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcChooseRoleReply.Result)
  return result_;
}
void BaseAttrRpcChooseRoleReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcChooseRoleReply.Result)
}

// optional sint32 Prof = 2 [default = -1];
bool BaseAttrRpcChooseRoleReply::has_prof() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BaseAttrRpcChooseRoleReply::set_has_prof() {
  _has_bits_[0] |= 0x00000002u;
}
void BaseAttrRpcChooseRoleReply::clear_has_prof() {
  _has_bits_[0] &= ~0x00000002u;
}
void BaseAttrRpcChooseRoleReply::clear_prof() {
  prof_ = -1;
  clear_has_prof();
}
::google::protobuf::int32 BaseAttrRpcChooseRoleReply::prof() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcChooseRoleReply.Prof)
  return prof_;
}
void BaseAttrRpcChooseRoleReply::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcChooseRoleReply.Prof)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcLevelUpAsk::BaseAttrRpcLevelUpAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcLevelUpAsk)
}
BaseAttrRpcLevelUpAsk::BaseAttrRpcLevelUpAsk(const BaseAttrRpcLevelUpAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcLevelUpAsk)
}

void BaseAttrRpcLevelUpAsk::SharedCtor() {
  _cached_size_ = 0;
}

BaseAttrRpcLevelUpAsk::~BaseAttrRpcLevelUpAsk() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcLevelUpAsk)
  SharedDtor();
}

void BaseAttrRpcLevelUpAsk::SharedDtor() {
}

void BaseAttrRpcLevelUpAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcLevelUpAsk::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcLevelUpAsk& BaseAttrRpcLevelUpAsk::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcLevelUpAsk* BaseAttrRpcLevelUpAsk::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcLevelUpAsk* n = new BaseAttrRpcLevelUpAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcLevelUpAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcLevelUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcLevelUpAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcLevelUpAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcLevelUpAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcLevelUpAsk)
  return false;
#undef DO_
}

void BaseAttrRpcLevelUpAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcLevelUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcLevelUpAsk)
}

::google::protobuf::uint8* BaseAttrRpcLevelUpAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcLevelUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcLevelUpAsk)
  return target;
}

size_t BaseAttrRpcLevelUpAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcLevelUpAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcLevelUpAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcLevelUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcLevelUpAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcLevelUpAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcLevelUpAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcLevelUpAsk)
    MergeFrom(*source);
  }
}

void BaseAttrRpcLevelUpAsk::MergeFrom(const BaseAttrRpcLevelUpAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcLevelUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BaseAttrRpcLevelUpAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcLevelUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcLevelUpAsk::CopyFrom(const BaseAttrRpcLevelUpAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcLevelUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcLevelUpAsk::IsInitialized() const {
  return true;
}

void BaseAttrRpcLevelUpAsk::Swap(BaseAttrRpcLevelUpAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcLevelUpAsk::InternalSwap(BaseAttrRpcLevelUpAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcLevelUpAsk::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcLevelUpAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrRpcLevelUpReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcLevelUpReply::BaseAttrRpcLevelUpReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcLevelUpReply)
}
BaseAttrRpcLevelUpReply::BaseAttrRpcLevelUpReply(const BaseAttrRpcLevelUpReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcLevelUpReply)
}

void BaseAttrRpcLevelUpReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

BaseAttrRpcLevelUpReply::~BaseAttrRpcLevelUpReply() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcLevelUpReply)
  SharedDtor();
}

void BaseAttrRpcLevelUpReply::SharedDtor() {
}

void BaseAttrRpcLevelUpReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcLevelUpReply::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcLevelUpReply& BaseAttrRpcLevelUpReply::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcLevelUpReply* BaseAttrRpcLevelUpReply::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcLevelUpReply* n = new BaseAttrRpcLevelUpReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcLevelUpReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcLevelUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcLevelUpReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcLevelUpReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcLevelUpReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcLevelUpReply)
  return false;
#undef DO_
}

void BaseAttrRpcLevelUpReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcLevelUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcLevelUpReply)
}

::google::protobuf::uint8* BaseAttrRpcLevelUpReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcLevelUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcLevelUpReply)
  return target;
}

size_t BaseAttrRpcLevelUpReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcLevelUpReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcLevelUpReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcLevelUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcLevelUpReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcLevelUpReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcLevelUpReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcLevelUpReply)
    MergeFrom(*source);
  }
}

void BaseAttrRpcLevelUpReply::MergeFrom(const BaseAttrRpcLevelUpReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcLevelUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void BaseAttrRpcLevelUpReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcLevelUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcLevelUpReply::CopyFrom(const BaseAttrRpcLevelUpReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcLevelUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcLevelUpReply::IsInitialized() const {
  return true;
}

void BaseAttrRpcLevelUpReply::Swap(BaseAttrRpcLevelUpReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcLevelUpReply::InternalSwap(BaseAttrRpcLevelUpReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcLevelUpReply::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcLevelUpReply

// optional sint32 Result = 1 [default = -9999];
bool BaseAttrRpcLevelUpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrRpcLevelUpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrRpcLevelUpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrRpcLevelUpReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BaseAttrRpcLevelUpReply::result() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcLevelUpReply.Result)
  return result_;
}
void BaseAttrRpcLevelUpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcLevelUpReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcGetTimerAsk::BaseAttrRpcGetTimerAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcGetTimerAsk)
}
BaseAttrRpcGetTimerAsk::BaseAttrRpcGetTimerAsk(const BaseAttrRpcGetTimerAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcGetTimerAsk)
}

void BaseAttrRpcGetTimerAsk::SharedCtor() {
  _cached_size_ = 0;
}

BaseAttrRpcGetTimerAsk::~BaseAttrRpcGetTimerAsk() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcGetTimerAsk)
  SharedDtor();
}

void BaseAttrRpcGetTimerAsk::SharedDtor() {
}

void BaseAttrRpcGetTimerAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcGetTimerAsk::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcGetTimerAsk& BaseAttrRpcGetTimerAsk::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcGetTimerAsk* BaseAttrRpcGetTimerAsk::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcGetTimerAsk* n = new BaseAttrRpcGetTimerAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcGetTimerAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcGetTimerAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcGetTimerAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcGetTimerAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcGetTimerAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcGetTimerAsk)
  return false;
#undef DO_
}

void BaseAttrRpcGetTimerAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcGetTimerAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcGetTimerAsk)
}

::google::protobuf::uint8* BaseAttrRpcGetTimerAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcGetTimerAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcGetTimerAsk)
  return target;
}

size_t BaseAttrRpcGetTimerAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcGetTimerAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcGetTimerAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcGetTimerAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcGetTimerAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcGetTimerAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcGetTimerAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcGetTimerAsk)
    MergeFrom(*source);
  }
}

void BaseAttrRpcGetTimerAsk::MergeFrom(const BaseAttrRpcGetTimerAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcGetTimerAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BaseAttrRpcGetTimerAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcGetTimerAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcGetTimerAsk::CopyFrom(const BaseAttrRpcGetTimerAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcGetTimerAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcGetTimerAsk::IsInitialized() const {
  return true;
}

void BaseAttrRpcGetTimerAsk::Swap(BaseAttrRpcGetTimerAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcGetTimerAsk::InternalSwap(BaseAttrRpcGetTimerAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcGetTimerAsk::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcGetTimerAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrRpcGetTimerReply::kResultFieldNumber;
const int BaseAttrRpcGetTimerReply::kTimerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcGetTimerReply::BaseAttrRpcGetTimerReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcGetTimerReply)
}
BaseAttrRpcGetTimerReply::BaseAttrRpcGetTimerReply(const BaseAttrRpcGetTimerReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&timer_) -
    reinterpret_cast<char*>(&result_)) + sizeof(timer_));
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcGetTimerReply)
}

void BaseAttrRpcGetTimerReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  timer_ = GOOGLE_LONGLONG(-1);
}

BaseAttrRpcGetTimerReply::~BaseAttrRpcGetTimerReply() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcGetTimerReply)
  SharedDtor();
}

void BaseAttrRpcGetTimerReply::SharedDtor() {
}

void BaseAttrRpcGetTimerReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcGetTimerReply::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcGetTimerReply& BaseAttrRpcGetTimerReply::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcGetTimerReply* BaseAttrRpcGetTimerReply::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcGetTimerReply* n = new BaseAttrRpcGetTimerReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcGetTimerReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcGetTimerReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    result_ = -9999;
    timer_ = GOOGLE_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcGetTimerReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcGetTimerReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 Timer = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_timer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &timer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcGetTimerReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcGetTimerReply)
  return false;
#undef DO_
}

void BaseAttrRpcGetTimerReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcGetTimerReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint64 Timer = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->timer(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcGetTimerReply)
}

::google::protobuf::uint8* BaseAttrRpcGetTimerReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcGetTimerReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint64 Timer = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->timer(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcGetTimerReply)
  return target;
}

size_t BaseAttrRpcGetTimerReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcGetTimerReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint64 Timer = 2 [default = -1];
    if (has_timer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->timer());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcGetTimerReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcGetTimerReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcGetTimerReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcGetTimerReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcGetTimerReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcGetTimerReply)
    MergeFrom(*source);
  }
}

void BaseAttrRpcGetTimerReply::MergeFrom(const BaseAttrRpcGetTimerReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcGetTimerReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      timer_ = from.timer_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BaseAttrRpcGetTimerReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcGetTimerReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcGetTimerReply::CopyFrom(const BaseAttrRpcGetTimerReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcGetTimerReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcGetTimerReply::IsInitialized() const {
  return true;
}

void BaseAttrRpcGetTimerReply::Swap(BaseAttrRpcGetTimerReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcGetTimerReply::InternalSwap(BaseAttrRpcGetTimerReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(timer_, other->timer_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcGetTimerReply::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcGetTimerReply

// optional sint32 Result = 1 [default = -9999];
bool BaseAttrRpcGetTimerReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrRpcGetTimerReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrRpcGetTimerReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrRpcGetTimerReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BaseAttrRpcGetTimerReply::result() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcGetTimerReply.Result)
  return result_;
}
void BaseAttrRpcGetTimerReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcGetTimerReply.Result)
}

// optional sint64 Timer = 2 [default = -1];
bool BaseAttrRpcGetTimerReply::has_timer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BaseAttrRpcGetTimerReply::set_has_timer() {
  _has_bits_[0] |= 0x00000002u;
}
void BaseAttrRpcGetTimerReply::clear_has_timer() {
  _has_bits_[0] &= ~0x00000002u;
}
void BaseAttrRpcGetTimerReply::clear_timer() {
  timer_ = GOOGLE_LONGLONG(-1);
  clear_has_timer();
}
::google::protobuf::int64 BaseAttrRpcGetTimerReply::timer() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcGetTimerReply.Timer)
  return timer_;
}
void BaseAttrRpcGetTimerReply::set_timer(::google::protobuf::int64 value) {
  set_has_timer();
  timer_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcGetTimerReply.Timer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcReviveAsk::BaseAttrRpcReviveAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcReviveAsk)
}
BaseAttrRpcReviveAsk::BaseAttrRpcReviveAsk(const BaseAttrRpcReviveAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcReviveAsk)
}

void BaseAttrRpcReviveAsk::SharedCtor() {
  _cached_size_ = 0;
}

BaseAttrRpcReviveAsk::~BaseAttrRpcReviveAsk() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcReviveAsk)
  SharedDtor();
}

void BaseAttrRpcReviveAsk::SharedDtor() {
}

void BaseAttrRpcReviveAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcReviveAsk::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcReviveAsk& BaseAttrRpcReviveAsk::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcReviveAsk* BaseAttrRpcReviveAsk::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcReviveAsk* n = new BaseAttrRpcReviveAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcReviveAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcReviveAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcReviveAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcReviveAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcReviveAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcReviveAsk)
  return false;
#undef DO_
}

void BaseAttrRpcReviveAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcReviveAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcReviveAsk)
}

::google::protobuf::uint8* BaseAttrRpcReviveAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcReviveAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcReviveAsk)
  return target;
}

size_t BaseAttrRpcReviveAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcReviveAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcReviveAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcReviveAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcReviveAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcReviveAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcReviveAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcReviveAsk)
    MergeFrom(*source);
  }
}

void BaseAttrRpcReviveAsk::MergeFrom(const BaseAttrRpcReviveAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcReviveAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BaseAttrRpcReviveAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcReviveAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcReviveAsk::CopyFrom(const BaseAttrRpcReviveAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcReviveAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcReviveAsk::IsInitialized() const {
  return true;
}

void BaseAttrRpcReviveAsk::Swap(BaseAttrRpcReviveAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcReviveAsk::InternalSwap(BaseAttrRpcReviveAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcReviveAsk::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcReviveAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrRpcReviveReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcReviveReply::BaseAttrRpcReviveReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcReviveReply)
}
BaseAttrRpcReviveReply::BaseAttrRpcReviveReply(const BaseAttrRpcReviveReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcReviveReply)
}

void BaseAttrRpcReviveReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

BaseAttrRpcReviveReply::~BaseAttrRpcReviveReply() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcReviveReply)
  SharedDtor();
}

void BaseAttrRpcReviveReply::SharedDtor() {
}

void BaseAttrRpcReviveReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcReviveReply::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcReviveReply& BaseAttrRpcReviveReply::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcReviveReply* BaseAttrRpcReviveReply::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcReviveReply* n = new BaseAttrRpcReviveReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcReviveReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcReviveReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcReviveReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcReviveReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcReviveReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcReviveReply)
  return false;
#undef DO_
}

void BaseAttrRpcReviveReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcReviveReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcReviveReply)
}

::google::protobuf::uint8* BaseAttrRpcReviveReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcReviveReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcReviveReply)
  return target;
}

size_t BaseAttrRpcReviveReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcReviveReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcReviveReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcReviveReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcReviveReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcReviveReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcReviveReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcReviveReply)
    MergeFrom(*source);
  }
}

void BaseAttrRpcReviveReply::MergeFrom(const BaseAttrRpcReviveReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcReviveReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void BaseAttrRpcReviveReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcReviveReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcReviveReply::CopyFrom(const BaseAttrRpcReviveReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcReviveReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcReviveReply::IsInitialized() const {
  return true;
}

void BaseAttrRpcReviveReply::Swap(BaseAttrRpcReviveReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcReviveReply::InternalSwap(BaseAttrRpcReviveReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcReviveReply::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcReviveReply

// optional sint32 Result = 1 [default = -9999];
bool BaseAttrRpcReviveReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrRpcReviveReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrRpcReviveReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrRpcReviveReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BaseAttrRpcReviveReply::result() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcReviveReply.Result)
  return result_;
}
void BaseAttrRpcReviveReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcReviveReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrRpcQueryEquipAsk::kUserIdFieldNumber;
const int BaseAttrRpcQueryEquipAsk::kPosFieldNumber;
const int BaseAttrRpcQueryEquipAsk::kTemplateIDFieldNumber;
const int BaseAttrRpcQueryEquipAsk::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcQueryEquipAsk::BaseAttrRpcQueryEquipAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcQueryEquipAsk)
}
BaseAttrRpcQueryEquipAsk::BaseAttrRpcQueryEquipAsk(const BaseAttrRpcQueryEquipAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcQueryEquipAsk)
}

void BaseAttrRpcQueryEquipAsk::SharedCtor() {
  _cached_size_ = 0;
  userid_ = GOOGLE_LONGLONG(-1);
  pos_ = -1;
  templateid_ = -1;
  index_ = GOOGLE_LONGLONG(-1);
}

BaseAttrRpcQueryEquipAsk::~BaseAttrRpcQueryEquipAsk() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcQueryEquipAsk)
  SharedDtor();
}

void BaseAttrRpcQueryEquipAsk::SharedDtor() {
}

void BaseAttrRpcQueryEquipAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcQueryEquipAsk::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcQueryEquipAsk& BaseAttrRpcQueryEquipAsk::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcQueryEquipAsk* BaseAttrRpcQueryEquipAsk::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcQueryEquipAsk* n = new BaseAttrRpcQueryEquipAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcQueryEquipAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcQueryEquipAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    userid_ = GOOGLE_LONGLONG(-1);
    pos_ = -1;
    templateid_ = -1;
    index_ = GOOGLE_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcQueryEquipAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcQueryEquipAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 UserId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TemplateID = 7 [default = -1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 Index = 8 [default = -1];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcQueryEquipAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcQueryEquipAsk)
  return false;
#undef DO_
}

void BaseAttrRpcQueryEquipAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcQueryEquipAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->userid(), output);
  }

  // optional sint32 Pos = 6 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->pos(), output);
  }

  // optional sint32 TemplateID = 7 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->templateid(), output);
  }

  // optional sint64 Index = 8 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(8, this->index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcQueryEquipAsk)
}

::google::protobuf::uint8* BaseAttrRpcQueryEquipAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcQueryEquipAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->userid(), target);
  }

  // optional sint32 Pos = 6 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->pos(), target);
  }

  // optional sint32 TemplateID = 7 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->templateid(), target);
  }

  // optional sint64 Index = 8 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(8, this->index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcQueryEquipAsk)
  return target;
}

size_t BaseAttrRpcQueryEquipAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcQueryEquipAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional sint64 UserId = 2 [default = -1];
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->userid());
    }

    // optional sint32 Pos = 6 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 TemplateID = 7 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint64 Index = 8 [default = -1];
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcQueryEquipAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcQueryEquipAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcQueryEquipAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcQueryEquipAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcQueryEquipAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcQueryEquipAsk)
    MergeFrom(*source);
  }
}

void BaseAttrRpcQueryEquipAsk::MergeFrom(const BaseAttrRpcQueryEquipAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcQueryEquipAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000004u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000008u) {
      index_ = from.index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BaseAttrRpcQueryEquipAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcQueryEquipAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcQueryEquipAsk::CopyFrom(const BaseAttrRpcQueryEquipAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcQueryEquipAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcQueryEquipAsk::IsInitialized() const {
  return true;
}

void BaseAttrRpcQueryEquipAsk::Swap(BaseAttrRpcQueryEquipAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcQueryEquipAsk::InternalSwap(BaseAttrRpcQueryEquipAsk* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(pos_, other->pos_);
  swap(templateid_, other->templateid_);
  swap(index_, other->index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcQueryEquipAsk::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcQueryEquipAsk

// optional sint64 UserId = 2 [default = -1];
bool BaseAttrRpcQueryEquipAsk::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrRpcQueryEquipAsk::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrRpcQueryEquipAsk::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrRpcQueryEquipAsk::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 BaseAttrRpcQueryEquipAsk::userid() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcQueryEquipAsk.UserId)
  return userid_;
}
void BaseAttrRpcQueryEquipAsk::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcQueryEquipAsk.UserId)
}

// optional sint32 Pos = 6 [default = -1];
bool BaseAttrRpcQueryEquipAsk::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BaseAttrRpcQueryEquipAsk::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
void BaseAttrRpcQueryEquipAsk::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
void BaseAttrRpcQueryEquipAsk::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BaseAttrRpcQueryEquipAsk::pos() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcQueryEquipAsk.Pos)
  return pos_;
}
void BaseAttrRpcQueryEquipAsk::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcQueryEquipAsk.Pos)
}

// optional sint32 TemplateID = 7 [default = -1];
bool BaseAttrRpcQueryEquipAsk::has_templateid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BaseAttrRpcQueryEquipAsk::set_has_templateid() {
  _has_bits_[0] |= 0x00000004u;
}
void BaseAttrRpcQueryEquipAsk::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000004u;
}
void BaseAttrRpcQueryEquipAsk::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BaseAttrRpcQueryEquipAsk::templateid() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcQueryEquipAsk.TemplateID)
  return templateid_;
}
void BaseAttrRpcQueryEquipAsk::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcQueryEquipAsk.TemplateID)
}

// optional sint64 Index = 8 [default = -1];
bool BaseAttrRpcQueryEquipAsk::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BaseAttrRpcQueryEquipAsk::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
void BaseAttrRpcQueryEquipAsk::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
void BaseAttrRpcQueryEquipAsk::clear_index() {
  index_ = GOOGLE_LONGLONG(-1);
  clear_has_index();
}
::google::protobuf::int64 BaseAttrRpcQueryEquipAsk::index() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcQueryEquipAsk.Index)
  return index_;
}
void BaseAttrRpcQueryEquipAsk::set_index(::google::protobuf::int64 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcQueryEquipAsk.Index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrRpcQueryEquipReply::kResultFieldNumber;
const int BaseAttrRpcQueryEquipReply::kEquipDataFieldNumber;
const int BaseAttrRpcQueryEquipReply::kGridDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcQueryEquipReply::BaseAttrRpcQueryEquipReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcQueryEquipReply)
}
BaseAttrRpcQueryEquipReply::BaseAttrRpcQueryEquipReply(const BaseAttrRpcQueryEquipReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_equipdata()) {
    equipdata_ = new ::BagEquipObj(*from.equipdata_);
  } else {
    equipdata_ = NULL;
  }
  if (from.has_griddata()) {
    griddata_ = new ::BaseAttrRpcGridInfo(*from.griddata_);
  } else {
    griddata_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcQueryEquipReply)
}

void BaseAttrRpcQueryEquipReply::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&equipdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&griddata_) -
      reinterpret_cast<char*>(&equipdata_)) + sizeof(griddata_));
  result_ = -9999;
}

BaseAttrRpcQueryEquipReply::~BaseAttrRpcQueryEquipReply() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcQueryEquipReply)
  SharedDtor();
}

void BaseAttrRpcQueryEquipReply::SharedDtor() {
  if (this != internal_default_instance()) delete equipdata_;
  if (this != internal_default_instance()) delete griddata_;
}

void BaseAttrRpcQueryEquipReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcQueryEquipReply::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcQueryEquipReply& BaseAttrRpcQueryEquipReply::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcQueryEquipReply* BaseAttrRpcQueryEquipReply::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcQueryEquipReply* n = new BaseAttrRpcQueryEquipReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcQueryEquipReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcQueryEquipReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(equipdata_ != NULL);
      equipdata_->::BagEquipObj::Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(griddata_ != NULL);
      griddata_->::BaseAttrRpcGridInfo::Clear();
    }
    result_ = -9999;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcQueryEquipReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcQueryEquipReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .BagEquipObj EquipData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equipdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .BaseAttrRpcGridInfo GridData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_griddata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcQueryEquipReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcQueryEquipReply)
  return false;
#undef DO_
}

void BaseAttrRpcQueryEquipReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcQueryEquipReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional .BagEquipObj EquipData = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->equipdata_, output);
  }

  // optional .BaseAttrRpcGridInfo GridData = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->griddata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcQueryEquipReply)
}

::google::protobuf::uint8* BaseAttrRpcQueryEquipReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcQueryEquipReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional .BagEquipObj EquipData = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->equipdata_, deterministic, target);
  }

  // optional .BaseAttrRpcGridInfo GridData = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->griddata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcQueryEquipReply)
  return target;
}

size_t BaseAttrRpcQueryEquipReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcQueryEquipReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .BagEquipObj EquipData = 2;
    if (has_equipdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->equipdata_);
    }

    // optional .BaseAttrRpcGridInfo GridData = 3;
    if (has_griddata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->griddata_);
    }

    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcQueryEquipReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcQueryEquipReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcQueryEquipReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcQueryEquipReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcQueryEquipReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcQueryEquipReply)
    MergeFrom(*source);
  }
}

void BaseAttrRpcQueryEquipReply::MergeFrom(const BaseAttrRpcQueryEquipReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcQueryEquipReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_equipdata()->::BagEquipObj::MergeFrom(from.equipdata());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_griddata()->::BaseAttrRpcGridInfo::MergeFrom(from.griddata());
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BaseAttrRpcQueryEquipReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcQueryEquipReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcQueryEquipReply::CopyFrom(const BaseAttrRpcQueryEquipReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcQueryEquipReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcQueryEquipReply::IsInitialized() const {
  return true;
}

void BaseAttrRpcQueryEquipReply::Swap(BaseAttrRpcQueryEquipReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcQueryEquipReply::InternalSwap(BaseAttrRpcQueryEquipReply* other) {
  using std::swap;
  swap(equipdata_, other->equipdata_);
  swap(griddata_, other->griddata_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcQueryEquipReply::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcQueryEquipReply

// optional sint32 Result = 1 [default = -9999];
bool BaseAttrRpcQueryEquipReply::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BaseAttrRpcQueryEquipReply::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void BaseAttrRpcQueryEquipReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void BaseAttrRpcQueryEquipReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BaseAttrRpcQueryEquipReply::result() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcQueryEquipReply.Result)
  return result_;
}
void BaseAttrRpcQueryEquipReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcQueryEquipReply.Result)
}

// optional .BagEquipObj EquipData = 2;
bool BaseAttrRpcQueryEquipReply::has_equipdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrRpcQueryEquipReply::set_has_equipdata() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrRpcQueryEquipReply::clear_has_equipdata() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrRpcQueryEquipReply::clear_equipdata() {
  if (equipdata_ != NULL) equipdata_->::BagEquipObj::Clear();
  clear_has_equipdata();
}
const ::BagEquipObj& BaseAttrRpcQueryEquipReply::equipdata() const {
  const ::BagEquipObj* p = equipdata_;
  // @@protoc_insertion_point(field_get:BaseAttrRpcQueryEquipReply.EquipData)
  return p != NULL ? *p : *reinterpret_cast<const ::BagEquipObj*>(
      &::_BagEquipObj_default_instance_);
}
::BagEquipObj* BaseAttrRpcQueryEquipReply::mutable_equipdata() {
  set_has_equipdata();
  if (equipdata_ == NULL) {
    equipdata_ = new ::BagEquipObj;
  }
  // @@protoc_insertion_point(field_mutable:BaseAttrRpcQueryEquipReply.EquipData)
  return equipdata_;
}
::BagEquipObj* BaseAttrRpcQueryEquipReply::release_equipdata() {
  // @@protoc_insertion_point(field_release:BaseAttrRpcQueryEquipReply.EquipData)
  clear_has_equipdata();
  ::BagEquipObj* temp = equipdata_;
  equipdata_ = NULL;
  return temp;
}
void BaseAttrRpcQueryEquipReply::set_allocated_equipdata(::BagEquipObj* equipdata) {
  delete equipdata_;
  equipdata_ = equipdata;
  if (equipdata) {
    set_has_equipdata();
  } else {
    clear_has_equipdata();
  }
  // @@protoc_insertion_point(field_set_allocated:BaseAttrRpcQueryEquipReply.EquipData)
}

// optional .BaseAttrRpcGridInfo GridData = 3;
bool BaseAttrRpcQueryEquipReply::has_griddata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BaseAttrRpcQueryEquipReply::set_has_griddata() {
  _has_bits_[0] |= 0x00000002u;
}
void BaseAttrRpcQueryEquipReply::clear_has_griddata() {
  _has_bits_[0] &= ~0x00000002u;
}
void BaseAttrRpcQueryEquipReply::clear_griddata() {
  if (griddata_ != NULL) griddata_->::BaseAttrRpcGridInfo::Clear();
  clear_has_griddata();
}
const ::BaseAttrRpcGridInfo& BaseAttrRpcQueryEquipReply::griddata() const {
  const ::BaseAttrRpcGridInfo* p = griddata_;
  // @@protoc_insertion_point(field_get:BaseAttrRpcQueryEquipReply.GridData)
  return p != NULL ? *p : *reinterpret_cast<const ::BaseAttrRpcGridInfo*>(
      &::_BaseAttrRpcGridInfo_default_instance_);
}
::BaseAttrRpcGridInfo* BaseAttrRpcQueryEquipReply::mutable_griddata() {
  set_has_griddata();
  if (griddata_ == NULL) {
    griddata_ = new ::BaseAttrRpcGridInfo;
  }
  // @@protoc_insertion_point(field_mutable:BaseAttrRpcQueryEquipReply.GridData)
  return griddata_;
}
::BaseAttrRpcGridInfo* BaseAttrRpcQueryEquipReply::release_griddata() {
  // @@protoc_insertion_point(field_release:BaseAttrRpcQueryEquipReply.GridData)
  clear_has_griddata();
  ::BaseAttrRpcGridInfo* temp = griddata_;
  griddata_ = NULL;
  return temp;
}
void BaseAttrRpcQueryEquipReply::set_allocated_griddata(::BaseAttrRpcGridInfo* griddata) {
  delete griddata_;
  griddata_ = griddata;
  if (griddata) {
    set_has_griddata();
  } else {
    clear_has_griddata();
  }
  // @@protoc_insertion_point(field_set_allocated:BaseAttrRpcQueryEquipReply.GridData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrRpcUpdateNewbieGuideAsk::kGroupIdFieldNumber;
const int BaseAttrRpcUpdateNewbieGuideAsk::kStepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcUpdateNewbieGuideAsk::BaseAttrRpcUpdateNewbieGuideAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcUpdateNewbieGuideAsk)
}
BaseAttrRpcUpdateNewbieGuideAsk::BaseAttrRpcUpdateNewbieGuideAsk(const BaseAttrRpcUpdateNewbieGuideAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&groupid_, &from.groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&step_) -
    reinterpret_cast<char*>(&groupid_)) + sizeof(step_));
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcUpdateNewbieGuideAsk)
}

void BaseAttrRpcUpdateNewbieGuideAsk::SharedCtor() {
  _cached_size_ = 0;
  groupid_ = -1;
  step_ = -1;
}

BaseAttrRpcUpdateNewbieGuideAsk::~BaseAttrRpcUpdateNewbieGuideAsk() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcUpdateNewbieGuideAsk)
  SharedDtor();
}

void BaseAttrRpcUpdateNewbieGuideAsk::SharedDtor() {
}

void BaseAttrRpcUpdateNewbieGuideAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcUpdateNewbieGuideAsk::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcUpdateNewbieGuideAsk& BaseAttrRpcUpdateNewbieGuideAsk::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcUpdateNewbieGuideAsk* BaseAttrRpcUpdateNewbieGuideAsk::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcUpdateNewbieGuideAsk* n = new BaseAttrRpcUpdateNewbieGuideAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcUpdateNewbieGuideAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcUpdateNewbieGuideAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    groupid_ = -1;
    step_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcUpdateNewbieGuideAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcUpdateNewbieGuideAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 GroupId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_groupid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Step = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_step();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcUpdateNewbieGuideAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcUpdateNewbieGuideAsk)
  return false;
#undef DO_
}

void BaseAttrRpcUpdateNewbieGuideAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcUpdateNewbieGuideAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 GroupId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->groupid(), output);
  }

  // optional sint32 Step = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->step(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcUpdateNewbieGuideAsk)
}

::google::protobuf::uint8* BaseAttrRpcUpdateNewbieGuideAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcUpdateNewbieGuideAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 GroupId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->groupid(), target);
  }

  // optional sint32 Step = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->step(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcUpdateNewbieGuideAsk)
  return target;
}

size_t BaseAttrRpcUpdateNewbieGuideAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcUpdateNewbieGuideAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 GroupId = 1 [default = -1];
    if (has_groupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->groupid());
    }

    // optional sint32 Step = 2 [default = -1];
    if (has_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->step());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcUpdateNewbieGuideAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcUpdateNewbieGuideAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcUpdateNewbieGuideAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcUpdateNewbieGuideAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcUpdateNewbieGuideAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcUpdateNewbieGuideAsk)
    MergeFrom(*source);
  }
}

void BaseAttrRpcUpdateNewbieGuideAsk::MergeFrom(const BaseAttrRpcUpdateNewbieGuideAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcUpdateNewbieGuideAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      groupid_ = from.groupid_;
    }
    if (cached_has_bits & 0x00000002u) {
      step_ = from.step_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BaseAttrRpcUpdateNewbieGuideAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcUpdateNewbieGuideAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcUpdateNewbieGuideAsk::CopyFrom(const BaseAttrRpcUpdateNewbieGuideAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcUpdateNewbieGuideAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcUpdateNewbieGuideAsk::IsInitialized() const {
  return true;
}

void BaseAttrRpcUpdateNewbieGuideAsk::Swap(BaseAttrRpcUpdateNewbieGuideAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcUpdateNewbieGuideAsk::InternalSwap(BaseAttrRpcUpdateNewbieGuideAsk* other) {
  using std::swap;
  swap(groupid_, other->groupid_);
  swap(step_, other->step_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcUpdateNewbieGuideAsk::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcUpdateNewbieGuideAsk

// optional sint32 GroupId = 1 [default = -1];
bool BaseAttrRpcUpdateNewbieGuideAsk::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrRpcUpdateNewbieGuideAsk::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrRpcUpdateNewbieGuideAsk::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrRpcUpdateNewbieGuideAsk::clear_groupid() {
  groupid_ = -1;
  clear_has_groupid();
}
::google::protobuf::int32 BaseAttrRpcUpdateNewbieGuideAsk::groupid() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcUpdateNewbieGuideAsk.GroupId)
  return groupid_;
}
void BaseAttrRpcUpdateNewbieGuideAsk::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcUpdateNewbieGuideAsk.GroupId)
}

// optional sint32 Step = 2 [default = -1];
bool BaseAttrRpcUpdateNewbieGuideAsk::has_step() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BaseAttrRpcUpdateNewbieGuideAsk::set_has_step() {
  _has_bits_[0] |= 0x00000002u;
}
void BaseAttrRpcUpdateNewbieGuideAsk::clear_has_step() {
  _has_bits_[0] &= ~0x00000002u;
}
void BaseAttrRpcUpdateNewbieGuideAsk::clear_step() {
  step_ = -1;
  clear_has_step();
}
::google::protobuf::int32 BaseAttrRpcUpdateNewbieGuideAsk::step() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcUpdateNewbieGuideAsk.Step)
  return step_;
}
void BaseAttrRpcUpdateNewbieGuideAsk::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcUpdateNewbieGuideAsk.Step)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrRpcUpdateNewbieGuideReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcUpdateNewbieGuideReply::BaseAttrRpcUpdateNewbieGuideReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcUpdateNewbieGuideReply)
}
BaseAttrRpcUpdateNewbieGuideReply::BaseAttrRpcUpdateNewbieGuideReply(const BaseAttrRpcUpdateNewbieGuideReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcUpdateNewbieGuideReply)
}

void BaseAttrRpcUpdateNewbieGuideReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

BaseAttrRpcUpdateNewbieGuideReply::~BaseAttrRpcUpdateNewbieGuideReply() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcUpdateNewbieGuideReply)
  SharedDtor();
}

void BaseAttrRpcUpdateNewbieGuideReply::SharedDtor() {
}

void BaseAttrRpcUpdateNewbieGuideReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcUpdateNewbieGuideReply::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcUpdateNewbieGuideReply& BaseAttrRpcUpdateNewbieGuideReply::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcUpdateNewbieGuideReply* BaseAttrRpcUpdateNewbieGuideReply::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcUpdateNewbieGuideReply* n = new BaseAttrRpcUpdateNewbieGuideReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcUpdateNewbieGuideReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcUpdateNewbieGuideReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcUpdateNewbieGuideReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcUpdateNewbieGuideReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcUpdateNewbieGuideReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcUpdateNewbieGuideReply)
  return false;
#undef DO_
}

void BaseAttrRpcUpdateNewbieGuideReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcUpdateNewbieGuideReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcUpdateNewbieGuideReply)
}

::google::protobuf::uint8* BaseAttrRpcUpdateNewbieGuideReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcUpdateNewbieGuideReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcUpdateNewbieGuideReply)
  return target;
}

size_t BaseAttrRpcUpdateNewbieGuideReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcUpdateNewbieGuideReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcUpdateNewbieGuideReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcUpdateNewbieGuideReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcUpdateNewbieGuideReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcUpdateNewbieGuideReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcUpdateNewbieGuideReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcUpdateNewbieGuideReply)
    MergeFrom(*source);
  }
}

void BaseAttrRpcUpdateNewbieGuideReply::MergeFrom(const BaseAttrRpcUpdateNewbieGuideReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcUpdateNewbieGuideReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void BaseAttrRpcUpdateNewbieGuideReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcUpdateNewbieGuideReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcUpdateNewbieGuideReply::CopyFrom(const BaseAttrRpcUpdateNewbieGuideReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcUpdateNewbieGuideReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcUpdateNewbieGuideReply::IsInitialized() const {
  return true;
}

void BaseAttrRpcUpdateNewbieGuideReply::Swap(BaseAttrRpcUpdateNewbieGuideReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcUpdateNewbieGuideReply::InternalSwap(BaseAttrRpcUpdateNewbieGuideReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcUpdateNewbieGuideReply::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcUpdateNewbieGuideReply

// optional sint32 Result = 1 [default = -9999];
bool BaseAttrRpcUpdateNewbieGuideReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrRpcUpdateNewbieGuideReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrRpcUpdateNewbieGuideReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrRpcUpdateNewbieGuideReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BaseAttrRpcUpdateNewbieGuideReply::result() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcUpdateNewbieGuideReply.Result)
  return result_;
}
void BaseAttrRpcUpdateNewbieGuideReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcUpdateNewbieGuideReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrRpcGridInfo::kTemplateIDFieldNumber;
const int BaseAttrRpcGridInfo::kNumFieldNumber;
const int BaseAttrRpcGridInfo::kItemTypeFieldNumber;
const int BaseAttrRpcGridInfo::kPosFieldNumber;
const int BaseAttrRpcGridInfo::kValueFieldNumber;
const int BaseAttrRpcGridInfo::kIndexFieldNumber;
const int BaseAttrRpcGridInfo::kBindFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcGridInfo::BaseAttrRpcGridInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcGridInfo)
}
BaseAttrRpcGridInfo::BaseAttrRpcGridInfo(const BaseAttrRpcGridInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&num_, &from.num_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&num_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcGridInfo)
}

void BaseAttrRpcGridInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bind_) -
      reinterpret_cast<char*>(&num_)) + sizeof(bind_));
  templateid_ = -1;
  itemtype_ = -1;
  pos_ = -1;
  value_ = -1;
  index_ = GOOGLE_LONGLONG(-1);
}

BaseAttrRpcGridInfo::~BaseAttrRpcGridInfo() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcGridInfo)
  SharedDtor();
}

void BaseAttrRpcGridInfo::SharedDtor() {
}

void BaseAttrRpcGridInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcGridInfo::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcGridInfo& BaseAttrRpcGridInfo::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcGridInfo* BaseAttrRpcGridInfo::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcGridInfo* n = new BaseAttrRpcGridInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcGridInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcGridInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&num_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bind_) -
        reinterpret_cast<char*>(&num_)) + sizeof(bind_));
    templateid_ = -1;
    itemtype_ = -1;
    pos_ = -1;
    value_ = -1;
    index_ = GOOGLE_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcGridInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcGridInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 TemplateID = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Num = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ItemType = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_itemtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Value = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 Index = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool Bind = 7 [default = false];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_bind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcGridInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcGridInfo)
  return false;
#undef DO_
}

void BaseAttrRpcGridInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcGridInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateID = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->templateid(), output);
  }

  // optional sint32 Num = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->num(), output);
  }

  // optional sint32 ItemType = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->itemtype(), output);
  }

  // optional sint32 Pos = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->pos(), output);
  }

  // optional sint32 Value = 5 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->value(), output);
  }

  // optional sint64 Index = 6 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(6, this->index(), output);
  }

  // optional bool Bind = 7 [default = false];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->bind(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcGridInfo)
}

::google::protobuf::uint8* BaseAttrRpcGridInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcGridInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateID = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->templateid(), target);
  }

  // optional sint32 Num = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->num(), target);
  }

  // optional sint32 ItemType = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->itemtype(), target);
  }

  // optional sint32 Pos = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->pos(), target);
  }

  // optional sint32 Value = 5 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->value(), target);
  }

  // optional sint64 Index = 6 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(6, this->index(), target);
  }

  // optional bool Bind = 7 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->bind(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcGridInfo)
  return target;
}

size_t BaseAttrRpcGridInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcGridInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional sint32 Num = 2 [default = 0];
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->num());
    }

    // optional bool Bind = 7 [default = false];
    if (has_bind()) {
      total_size += 1 + 1;
    }

    // optional sint32 TemplateID = 1 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 ItemType = 3 [default = -1];
    if (has_itemtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemtype());
    }

    // optional sint32 Pos = 4 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 Value = 5 [default = -1];
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->value());
    }

    // optional sint64 Index = 6 [default = -1];
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcGridInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcGridInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcGridInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcGridInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcGridInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcGridInfo)
    MergeFrom(*source);
  }
}

void BaseAttrRpcGridInfo::MergeFrom(const BaseAttrRpcGridInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcGridInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      num_ = from.num_;
    }
    if (cached_has_bits & 0x00000002u) {
      bind_ = from.bind_;
    }
    if (cached_has_bits & 0x00000004u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000008u) {
      itemtype_ = from.itemtype_;
    }
    if (cached_has_bits & 0x00000010u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000020u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000040u) {
      index_ = from.index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BaseAttrRpcGridInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcGridInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcGridInfo::CopyFrom(const BaseAttrRpcGridInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcGridInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcGridInfo::IsInitialized() const {
  return true;
}

void BaseAttrRpcGridInfo::Swap(BaseAttrRpcGridInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcGridInfo::InternalSwap(BaseAttrRpcGridInfo* other) {
  using std::swap;
  swap(num_, other->num_);
  swap(bind_, other->bind_);
  swap(templateid_, other->templateid_);
  swap(itemtype_, other->itemtype_);
  swap(pos_, other->pos_);
  swap(value_, other->value_);
  swap(index_, other->index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcGridInfo::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcGridInfo

// optional sint32 TemplateID = 1 [default = -1];
bool BaseAttrRpcGridInfo::has_templateid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BaseAttrRpcGridInfo::set_has_templateid() {
  _has_bits_[0] |= 0x00000004u;
}
void BaseAttrRpcGridInfo::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000004u;
}
void BaseAttrRpcGridInfo::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BaseAttrRpcGridInfo::templateid() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcGridInfo.TemplateID)
  return templateid_;
}
void BaseAttrRpcGridInfo::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcGridInfo.TemplateID)
}

// optional sint32 Num = 2 [default = 0];
bool BaseAttrRpcGridInfo::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrRpcGridInfo::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrRpcGridInfo::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrRpcGridInfo::clear_num() {
  num_ = 0;
  clear_has_num();
}
::google::protobuf::int32 BaseAttrRpcGridInfo::num() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcGridInfo.Num)
  return num_;
}
void BaseAttrRpcGridInfo::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcGridInfo.Num)
}

// optional sint32 ItemType = 3 [default = -1];
bool BaseAttrRpcGridInfo::has_itemtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BaseAttrRpcGridInfo::set_has_itemtype() {
  _has_bits_[0] |= 0x00000008u;
}
void BaseAttrRpcGridInfo::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000008u;
}
void BaseAttrRpcGridInfo::clear_itemtype() {
  itemtype_ = -1;
  clear_has_itemtype();
}
::google::protobuf::int32 BaseAttrRpcGridInfo::itemtype() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcGridInfo.ItemType)
  return itemtype_;
}
void BaseAttrRpcGridInfo::set_itemtype(::google::protobuf::int32 value) {
  set_has_itemtype();
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcGridInfo.ItemType)
}

// optional sint32 Pos = 4 [default = -1];
bool BaseAttrRpcGridInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BaseAttrRpcGridInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000010u;
}
void BaseAttrRpcGridInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
void BaseAttrRpcGridInfo::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BaseAttrRpcGridInfo::pos() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcGridInfo.Pos)
  return pos_;
}
void BaseAttrRpcGridInfo::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcGridInfo.Pos)
}

// optional sint32 Value = 5 [default = -1];
bool BaseAttrRpcGridInfo::has_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BaseAttrRpcGridInfo::set_has_value() {
  _has_bits_[0] |= 0x00000020u;
}
void BaseAttrRpcGridInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000020u;
}
void BaseAttrRpcGridInfo::clear_value() {
  value_ = -1;
  clear_has_value();
}
::google::protobuf::int32 BaseAttrRpcGridInfo::value() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcGridInfo.Value)
  return value_;
}
void BaseAttrRpcGridInfo::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcGridInfo.Value)
}

// optional sint64 Index = 6 [default = -1];
bool BaseAttrRpcGridInfo::has_index() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BaseAttrRpcGridInfo::set_has_index() {
  _has_bits_[0] |= 0x00000040u;
}
void BaseAttrRpcGridInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000040u;
}
void BaseAttrRpcGridInfo::clear_index() {
  index_ = GOOGLE_LONGLONG(-1);
  clear_has_index();
}
::google::protobuf::int64 BaseAttrRpcGridInfo::index() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcGridInfo.Index)
  return index_;
}
void BaseAttrRpcGridInfo::set_index(::google::protobuf::int64 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcGridInfo.Index)
}

// optional bool Bind = 7 [default = false];
bool BaseAttrRpcGridInfo::has_bind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BaseAttrRpcGridInfo::set_has_bind() {
  _has_bits_[0] |= 0x00000002u;
}
void BaseAttrRpcGridInfo::clear_has_bind() {
  _has_bits_[0] &= ~0x00000002u;
}
void BaseAttrRpcGridInfo::clear_bind() {
  bind_ = false;
  clear_has_bind();
}
bool BaseAttrRpcGridInfo::bind() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcGridInfo.Bind)
  return bind_;
}
void BaseAttrRpcGridInfo::set_bind(bool value) {
  set_has_bind();
  bind_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcGridInfo.Bind)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrRpcSysTipsNotify::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcSysTipsNotify::BaseAttrRpcSysTipsNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcSysTipsNotify)
}
BaseAttrRpcSysTipsNotify::BaseAttrRpcSysTipsNotify(const BaseAttrRpcSysTipsNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcSysTipsNotify)
}

void BaseAttrRpcSysTipsNotify::SharedCtor() {
  _cached_size_ = 0;
  id_ = -1;
}

BaseAttrRpcSysTipsNotify::~BaseAttrRpcSysTipsNotify() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcSysTipsNotify)
  SharedDtor();
}

void BaseAttrRpcSysTipsNotify::SharedDtor() {
}

void BaseAttrRpcSysTipsNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcSysTipsNotify::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcSysTipsNotify& BaseAttrRpcSysTipsNotify::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcSysTipsNotify* BaseAttrRpcSysTipsNotify::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcSysTipsNotify* n = new BaseAttrRpcSysTipsNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcSysTipsNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcSysTipsNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcSysTipsNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcSysTipsNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Id = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcSysTipsNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcSysTipsNotify)
  return false;
#undef DO_
}

void BaseAttrRpcSysTipsNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcSysTipsNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Id = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcSysTipsNotify)
}

::google::protobuf::uint8* BaseAttrRpcSysTipsNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcSysTipsNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Id = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcSysTipsNotify)
  return target;
}

size_t BaseAttrRpcSysTipsNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcSysTipsNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Id = 1 [default = -1];
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcSysTipsNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcSysTipsNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcSysTipsNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcSysTipsNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcSysTipsNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcSysTipsNotify)
    MergeFrom(*source);
  }
}

void BaseAttrRpcSysTipsNotify::MergeFrom(const BaseAttrRpcSysTipsNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcSysTipsNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void BaseAttrRpcSysTipsNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcSysTipsNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcSysTipsNotify::CopyFrom(const BaseAttrRpcSysTipsNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcSysTipsNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcSysTipsNotify::IsInitialized() const {
  return true;
}

void BaseAttrRpcSysTipsNotify::Swap(BaseAttrRpcSysTipsNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcSysTipsNotify::InternalSwap(BaseAttrRpcSysTipsNotify* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcSysTipsNotify::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcSysTipsNotify

// optional sint32 Id = 1 [default = -1];
bool BaseAttrRpcSysTipsNotify::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrRpcSysTipsNotify::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrRpcSysTipsNotify::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrRpcSysTipsNotify::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 BaseAttrRpcSysTipsNotify::id() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcSysTipsNotify.Id)
  return id_;
}
void BaseAttrRpcSysTipsNotify::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcSysTipsNotify.Id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrRpcChangPKStateAsk::kChangStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcChangPKStateAsk::BaseAttrRpcChangPKStateAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcChangPKStateAsk)
}
BaseAttrRpcChangPKStateAsk::BaseAttrRpcChangPKStateAsk(const BaseAttrRpcChangPKStateAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  changstate_ = from.changstate_;
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcChangPKStateAsk)
}

void BaseAttrRpcChangPKStateAsk::SharedCtor() {
  _cached_size_ = 0;
  changstate_ = -1;
}

BaseAttrRpcChangPKStateAsk::~BaseAttrRpcChangPKStateAsk() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcChangPKStateAsk)
  SharedDtor();
}

void BaseAttrRpcChangPKStateAsk::SharedDtor() {
}

void BaseAttrRpcChangPKStateAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcChangPKStateAsk::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcChangPKStateAsk& BaseAttrRpcChangPKStateAsk::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcChangPKStateAsk* BaseAttrRpcChangPKStateAsk::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcChangPKStateAsk* n = new BaseAttrRpcChangPKStateAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcChangPKStateAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcChangPKStateAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  changstate_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcChangPKStateAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcChangPKStateAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 ChangState = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_changstate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &changstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcChangPKStateAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcChangPKStateAsk)
  return false;
#undef DO_
}

void BaseAttrRpcChangPKStateAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcChangPKStateAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ChangState = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->changstate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcChangPKStateAsk)
}

::google::protobuf::uint8* BaseAttrRpcChangPKStateAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcChangPKStateAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ChangState = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->changstate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcChangPKStateAsk)
  return target;
}

size_t BaseAttrRpcChangPKStateAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcChangPKStateAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 ChangState = 1 [default = -1];
  if (has_changstate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->changstate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcChangPKStateAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcChangPKStateAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcChangPKStateAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcChangPKStateAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcChangPKStateAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcChangPKStateAsk)
    MergeFrom(*source);
  }
}

void BaseAttrRpcChangPKStateAsk::MergeFrom(const BaseAttrRpcChangPKStateAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcChangPKStateAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_changstate()) {
    set_changstate(from.changstate());
  }
}

void BaseAttrRpcChangPKStateAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcChangPKStateAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcChangPKStateAsk::CopyFrom(const BaseAttrRpcChangPKStateAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcChangPKStateAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcChangPKStateAsk::IsInitialized() const {
  return true;
}

void BaseAttrRpcChangPKStateAsk::Swap(BaseAttrRpcChangPKStateAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcChangPKStateAsk::InternalSwap(BaseAttrRpcChangPKStateAsk* other) {
  using std::swap;
  swap(changstate_, other->changstate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcChangPKStateAsk::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcChangPKStateAsk

// optional sint32 ChangState = 1 [default = -1];
bool BaseAttrRpcChangPKStateAsk::has_changstate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrRpcChangPKStateAsk::set_has_changstate() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrRpcChangPKStateAsk::clear_has_changstate() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrRpcChangPKStateAsk::clear_changstate() {
  changstate_ = -1;
  clear_has_changstate();
}
::google::protobuf::int32 BaseAttrRpcChangPKStateAsk::changstate() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcChangPKStateAsk.ChangState)
  return changstate_;
}
void BaseAttrRpcChangPKStateAsk::set_changstate(::google::protobuf::int32 value) {
  set_has_changstate();
  changstate_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcChangPKStateAsk.ChangState)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrRpcChangPKStateReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcChangPKStateReply::BaseAttrRpcChangPKStateReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcChangPKStateReply)
}
BaseAttrRpcChangPKStateReply::BaseAttrRpcChangPKStateReply(const BaseAttrRpcChangPKStateReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcChangPKStateReply)
}

void BaseAttrRpcChangPKStateReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

BaseAttrRpcChangPKStateReply::~BaseAttrRpcChangPKStateReply() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcChangPKStateReply)
  SharedDtor();
}

void BaseAttrRpcChangPKStateReply::SharedDtor() {
}

void BaseAttrRpcChangPKStateReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcChangPKStateReply::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcChangPKStateReply& BaseAttrRpcChangPKStateReply::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcChangPKStateReply* BaseAttrRpcChangPKStateReply::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcChangPKStateReply* n = new BaseAttrRpcChangPKStateReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcChangPKStateReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcChangPKStateReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcChangPKStateReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcChangPKStateReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcChangPKStateReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcChangPKStateReply)
  return false;
#undef DO_
}

void BaseAttrRpcChangPKStateReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcChangPKStateReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcChangPKStateReply)
}

::google::protobuf::uint8* BaseAttrRpcChangPKStateReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcChangPKStateReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcChangPKStateReply)
  return target;
}

size_t BaseAttrRpcChangPKStateReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcChangPKStateReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcChangPKStateReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcChangPKStateReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcChangPKStateReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcChangPKStateReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcChangPKStateReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcChangPKStateReply)
    MergeFrom(*source);
  }
}

void BaseAttrRpcChangPKStateReply::MergeFrom(const BaseAttrRpcChangPKStateReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcChangPKStateReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void BaseAttrRpcChangPKStateReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcChangPKStateReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcChangPKStateReply::CopyFrom(const BaseAttrRpcChangPKStateReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcChangPKStateReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcChangPKStateReply::IsInitialized() const {
  return true;
}

void BaseAttrRpcChangPKStateReply::Swap(BaseAttrRpcChangPKStateReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcChangPKStateReply::InternalSwap(BaseAttrRpcChangPKStateReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcChangPKStateReply::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcChangPKStateReply

// optional sint32 Result = 1 [default = -9999];
bool BaseAttrRpcChangPKStateReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrRpcChangPKStateReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrRpcChangPKStateReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrRpcChangPKStateReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BaseAttrRpcChangPKStateReply::result() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcChangPKStateReply.Result)
  return result_;
}
void BaseAttrRpcChangPKStateReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcChangPKStateReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrRpcChangePKProtectAsk::kProtectListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcChangePKProtectAsk::BaseAttrRpcChangePKProtectAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcChangePKProtectAsk)
}
BaseAttrRpcChangePKProtectAsk::BaseAttrRpcChangePKProtectAsk(const BaseAttrRpcChangePKProtectAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      protectlist_(from.protectlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcChangePKProtectAsk)
}

void BaseAttrRpcChangePKProtectAsk::SharedCtor() {
  _cached_size_ = 0;
}

BaseAttrRpcChangePKProtectAsk::~BaseAttrRpcChangePKProtectAsk() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcChangePKProtectAsk)
  SharedDtor();
}

void BaseAttrRpcChangePKProtectAsk::SharedDtor() {
}

void BaseAttrRpcChangePKProtectAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcChangePKProtectAsk::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcChangePKProtectAsk& BaseAttrRpcChangePKProtectAsk::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcChangePKProtectAsk* BaseAttrRpcChangePKProtectAsk::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcChangePKProtectAsk* n = new BaseAttrRpcChangePKProtectAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcChangePKProtectAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcChangePKProtectAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  protectlist_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcChangePKProtectAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcChangePKProtectAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KeyValue2IntBool ProtectList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_protectlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcChangePKProtectAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcChangePKProtectAsk)
  return false;
#undef DO_
}

void BaseAttrRpcChangePKProtectAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcChangePKProtectAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KeyValue2IntBool ProtectList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->protectlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->protectlist(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcChangePKProtectAsk)
}

::google::protobuf::uint8* BaseAttrRpcChangePKProtectAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcChangePKProtectAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KeyValue2IntBool ProtectList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->protectlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->protectlist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcChangePKProtectAsk)
  return target;
}

size_t BaseAttrRpcChangePKProtectAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcChangePKProtectAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .KeyValue2IntBool ProtectList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->protectlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->protectlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcChangePKProtectAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcChangePKProtectAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcChangePKProtectAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcChangePKProtectAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcChangePKProtectAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcChangePKProtectAsk)
    MergeFrom(*source);
  }
}

void BaseAttrRpcChangePKProtectAsk::MergeFrom(const BaseAttrRpcChangePKProtectAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcChangePKProtectAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  protectlist_.MergeFrom(from.protectlist_);
}

void BaseAttrRpcChangePKProtectAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcChangePKProtectAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcChangePKProtectAsk::CopyFrom(const BaseAttrRpcChangePKProtectAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcChangePKProtectAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcChangePKProtectAsk::IsInitialized() const {
  return true;
}

void BaseAttrRpcChangePKProtectAsk::Swap(BaseAttrRpcChangePKProtectAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcChangePKProtectAsk::InternalSwap(BaseAttrRpcChangePKProtectAsk* other) {
  using std::swap;
  protectlist_.InternalSwap(&other->protectlist_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcChangePKProtectAsk::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcChangePKProtectAsk

// repeated .KeyValue2IntBool ProtectList = 1;
int BaseAttrRpcChangePKProtectAsk::protectlist_size() const {
  return protectlist_.size();
}
void BaseAttrRpcChangePKProtectAsk::clear_protectlist() {
  protectlist_.Clear();
}
const ::KeyValue2IntBool& BaseAttrRpcChangePKProtectAsk::protectlist(int index) const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcChangePKProtectAsk.ProtectList)
  return protectlist_.Get(index);
}
::KeyValue2IntBool* BaseAttrRpcChangePKProtectAsk::mutable_protectlist(int index) {
  // @@protoc_insertion_point(field_mutable:BaseAttrRpcChangePKProtectAsk.ProtectList)
  return protectlist_.Mutable(index);
}
::KeyValue2IntBool* BaseAttrRpcChangePKProtectAsk::add_protectlist() {
  // @@protoc_insertion_point(field_add:BaseAttrRpcChangePKProtectAsk.ProtectList)
  return protectlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::KeyValue2IntBool >*
BaseAttrRpcChangePKProtectAsk::mutable_protectlist() {
  // @@protoc_insertion_point(field_mutable_list:BaseAttrRpcChangePKProtectAsk.ProtectList)
  return &protectlist_;
}
const ::google::protobuf::RepeatedPtrField< ::KeyValue2IntBool >&
BaseAttrRpcChangePKProtectAsk::protectlist() const {
  // @@protoc_insertion_point(field_list:BaseAttrRpcChangePKProtectAsk.ProtectList)
  return protectlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseAttrRpcChangePKProtectReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseAttrRpcChangePKProtectReply::BaseAttrRpcChangePKProtectReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BaseAttrRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BaseAttrRpcChangePKProtectReply)
}
BaseAttrRpcChangePKProtectReply::BaseAttrRpcChangePKProtectReply(const BaseAttrRpcChangePKProtectReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:BaseAttrRpcChangePKProtectReply)
}

void BaseAttrRpcChangePKProtectReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

BaseAttrRpcChangePKProtectReply::~BaseAttrRpcChangePKProtectReply() {
  // @@protoc_insertion_point(destructor:BaseAttrRpcChangePKProtectReply)
  SharedDtor();
}

void BaseAttrRpcChangePKProtectReply::SharedDtor() {
}

void BaseAttrRpcChangePKProtectReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseAttrRpcChangePKProtectReply::descriptor() {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BaseAttrRpcChangePKProtectReply& BaseAttrRpcChangePKProtectReply::default_instance() {
  protobuf_BaseAttrRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseAttrRpcChangePKProtectReply* BaseAttrRpcChangePKProtectReply::New(::google::protobuf::Arena* arena) const {
  BaseAttrRpcChangePKProtectReply* n = new BaseAttrRpcChangePKProtectReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseAttrRpcChangePKProtectReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BaseAttrRpcChangePKProtectReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseAttrRpcChangePKProtectReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BaseAttrRpcChangePKProtectReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BaseAttrRpcChangePKProtectReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BaseAttrRpcChangePKProtectReply)
  return false;
#undef DO_
}

void BaseAttrRpcChangePKProtectReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BaseAttrRpcChangePKProtectReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BaseAttrRpcChangePKProtectReply)
}

::google::protobuf::uint8* BaseAttrRpcChangePKProtectReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BaseAttrRpcChangePKProtectReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BaseAttrRpcChangePKProtectReply)
  return target;
}

size_t BaseAttrRpcChangePKProtectReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BaseAttrRpcChangePKProtectReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseAttrRpcChangePKProtectReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BaseAttrRpcChangePKProtectReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseAttrRpcChangePKProtectReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseAttrRpcChangePKProtectReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BaseAttrRpcChangePKProtectReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BaseAttrRpcChangePKProtectReply)
    MergeFrom(*source);
  }
}

void BaseAttrRpcChangePKProtectReply::MergeFrom(const BaseAttrRpcChangePKProtectReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BaseAttrRpcChangePKProtectReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void BaseAttrRpcChangePKProtectReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BaseAttrRpcChangePKProtectReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseAttrRpcChangePKProtectReply::CopyFrom(const BaseAttrRpcChangePKProtectReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BaseAttrRpcChangePKProtectReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseAttrRpcChangePKProtectReply::IsInitialized() const {
  return true;
}

void BaseAttrRpcChangePKProtectReply::Swap(BaseAttrRpcChangePKProtectReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseAttrRpcChangePKProtectReply::InternalSwap(BaseAttrRpcChangePKProtectReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseAttrRpcChangePKProtectReply::GetMetadata() const {
  protobuf_BaseAttrRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BaseAttrRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseAttrRpcChangePKProtectReply

// optional sint32 Result = 1 [default = -9999];
bool BaseAttrRpcChangePKProtectReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseAttrRpcChangePKProtectReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseAttrRpcChangePKProtectReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseAttrRpcChangePKProtectReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BaseAttrRpcChangePKProtectReply::result() const {
  // @@protoc_insertion_point(field_get:BaseAttrRpcChangePKProtectReply.Result)
  return result_;
}
void BaseAttrRpcChangePKProtectReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BaseAttrRpcChangePKProtectReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
