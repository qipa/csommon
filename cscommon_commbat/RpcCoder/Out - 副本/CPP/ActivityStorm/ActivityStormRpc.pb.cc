// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActivityStormRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ActivityStormRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class ActivityStormRpcSignUpAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityStormRpcSignUpAsk>
     _instance;
} _ActivityStormRpcSignUpAsk_default_instance_;
class ActivityStormRpcSignUpReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityStormRpcSignUpReply>
     _instance;
} _ActivityStormRpcSignUpReply_default_instance_;
class ActivityStormRpcCancelSignUpAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityStormRpcCancelSignUpAsk>
     _instance;
} _ActivityStormRpcCancelSignUpAsk_default_instance_;
class ActivityStormRpcCancelSignUpReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityStormRpcCancelSignUpReply>
     _instance;
} _ActivityStormRpcCancelSignUpReply_default_instance_;
class ActivityStormRpcInsertBattlefieldAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityStormRpcInsertBattlefieldAsk>
     _instance;
} _ActivityStormRpcInsertBattlefieldAsk_default_instance_;
class ActivityStormRpcInsertBattlefieldReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityStormRpcInsertBattlefieldReply>
     _instance;
} _ActivityStormRpcInsertBattlefieldReply_default_instance_;
class ActivityStormRpcBattlefieldMessageNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityStormRpcBattlefieldMessageNotify>
     _instance;
} _ActivityStormRpcBattlefieldMessageNotify_default_instance_;
class ActivityStormRpcTimeOutMessageNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityStormRpcTimeOutMessageNotify>
     _instance;
} _ActivityStormRpcTimeOutMessageNotify_default_instance_;
class ActivityStormRpcSyncDataAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityStormRpcSyncDataAsk>
     _instance;
} _ActivityStormRpcSyncDataAsk_default_instance_;
class ActivityStormRpcSyncDataReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityStormRpcSyncDataReply>
     _instance;
} _ActivityStormRpcSyncDataReply_default_instance_;
class ActivityStormRpcJoinLevevNotifyNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityStormRpcJoinLevevNotifyNotify>
     _instance;
} _ActivityStormRpcJoinLevevNotifyNotify_default_instance_;
class ActivityStormRpcCanceInsertBattleAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityStormRpcCanceInsertBattleAsk>
     _instance;
} _ActivityStormRpcCanceInsertBattleAsk_default_instance_;
class ActivityStormRpcCanceInsertBattleReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityStormRpcCanceInsertBattleReply>
     _instance;
} _ActivityStormRpcCanceInsertBattleReply_default_instance_;
class ActivityStormRpcResetSignUpNotifyNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityStormRpcResetSignUpNotifyNotify>
     _instance;
} _ActivityStormRpcResetSignUpNotifyNotify_default_instance_;

namespace protobuf_ActivityStormRpc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[14];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcSignUpAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcSignUpAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcSignUpReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcSignUpReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcSignUpReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcSignUpReply, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcSignUpReply, time_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcCancelSignUpAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcCancelSignUpAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcCancelSignUpReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcCancelSignUpReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcCancelSignUpReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcInsertBattlefieldAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcInsertBattlefieldAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcInsertBattlefieldReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcInsertBattlefieldReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcInsertBattlefieldReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcInsertBattlefieldReply, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcInsertBattlefieldReply, time_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcBattlefieldMessageNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcBattlefieldMessageNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcBattlefieldMessageNotify, time_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcTimeOutMessageNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcTimeOutMessageNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcSyncDataAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcSyncDataAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcSyncDataReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcSyncDataReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcSyncDataReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcSyncDataReply, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcSyncDataReply, time_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcJoinLevevNotifyNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcJoinLevevNotifyNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcJoinLevevNotifyNotify, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcJoinLevevNotifyNotify, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcJoinLevevNotifyNotify, type_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcCanceInsertBattleAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcCanceInsertBattleAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcCanceInsertBattleReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcCanceInsertBattleReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcCanceInsertBattleReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcResetSignUpNotifyNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcResetSignUpNotifyNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcResetSignUpNotifyNotify, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormRpcResetSignUpNotifyNotify, time_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(ActivityStormRpcSignUpAsk)},
  { 5, 13, sizeof(ActivityStormRpcSignUpReply)},
  { 16, 21, sizeof(ActivityStormRpcCancelSignUpAsk)},
  { 21, 27, sizeof(ActivityStormRpcCancelSignUpReply)},
  { 28, 33, sizeof(ActivityStormRpcInsertBattlefieldAsk)},
  { 33, 41, sizeof(ActivityStormRpcInsertBattlefieldReply)},
  { 44, 50, sizeof(ActivityStormRpcBattlefieldMessageNotify)},
  { 51, 56, sizeof(ActivityStormRpcTimeOutMessageNotify)},
  { 56, 61, sizeof(ActivityStormRpcSyncDataAsk)},
  { 61, 69, sizeof(ActivityStormRpcSyncDataReply)},
  { 72, 80, sizeof(ActivityStormRpcJoinLevevNotifyNotify)},
  { 83, 88, sizeof(ActivityStormRpcCanceInsertBattleAsk)},
  { 88, 94, sizeof(ActivityStormRpcCanceInsertBattleReply)},
  { 95, 102, sizeof(ActivityStormRpcResetSignUpNotifyNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityStormRpcSignUpAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityStormRpcSignUpReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityStormRpcCancelSignUpAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityStormRpcCancelSignUpReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityStormRpcInsertBattlefieldAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityStormRpcInsertBattlefieldReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityStormRpcBattlefieldMessageNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityStormRpcTimeOutMessageNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityStormRpcSyncDataAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityStormRpcSyncDataReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityStormRpcJoinLevevNotifyNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityStormRpcCanceInsertBattleAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityStormRpcCanceInsertBattleReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityStormRpcResetSignUpNotifyNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ActivityStormRpc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _ActivityStormRpcSignUpAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityStormRpcSignUpAsk_default_instance_);_ActivityStormRpcSignUpReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityStormRpcSignUpReply_default_instance_);_ActivityStormRpcCancelSignUpAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityStormRpcCancelSignUpAsk_default_instance_);_ActivityStormRpcCancelSignUpReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityStormRpcCancelSignUpReply_default_instance_);_ActivityStormRpcInsertBattlefieldAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityStormRpcInsertBattlefieldAsk_default_instance_);_ActivityStormRpcInsertBattlefieldReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityStormRpcInsertBattlefieldReply_default_instance_);_ActivityStormRpcBattlefieldMessageNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityStormRpcBattlefieldMessageNotify_default_instance_);_ActivityStormRpcTimeOutMessageNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityStormRpcTimeOutMessageNotify_default_instance_);_ActivityStormRpcSyncDataAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityStormRpcSyncDataAsk_default_instance_);_ActivityStormRpcSyncDataReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityStormRpcSyncDataReply_default_instance_);_ActivityStormRpcJoinLevevNotifyNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityStormRpcJoinLevevNotifyNotify_default_instance_);_ActivityStormRpcCanceInsertBattleAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityStormRpcCanceInsertBattleAsk_default_instance_);_ActivityStormRpcCanceInsertBattleReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityStormRpcCanceInsertBattleReply_default_instance_);_ActivityStormRpcResetSignUpNotifyNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityStormRpcResetSignUpNotifyNotify_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026ActivityStormRpc.proto\032\022PublicStruct.p"
      "roto\"\033\n\031ActivityStormRpcSignUpAsk\"X\n\033Act"
      "ivityStormRpcSignUpReply\022\025\n\006Result\030\001 \001(\021"
      ":\005-9999\022\020\n\004Type\030\006 \001(\021:\002-1\022\020\n\004Time\030\007 \001(\021:"
      "\002-1\"!\n\037ActivityStormRpcCancelSignUpAsk\":"
      "\n!ActivityStormRpcCancelSignUpReply\022\025\n\006R"
      "esult\030\001 \001(\021:\005-9999\"&\n$ActivityStormRpcIn"
      "sertBattlefieldAsk\"c\n&ActivityStormRpcIn"
      "sertBattlefieldReply\022\025\n\006Result\030\001 \001(\021:\005-9"
      "999\022\020\n\004Type\030\003 \001(\021:\002-1\022\020\n\004Time\030\004 \001(\021:\002-1\""
      "<\n(ActivityStormRpcBattlefieldMessageNot"
      "ify\022\020\n\004Time\030\002 \001(\021:\002-1\"&\n$ActivityStormRp"
      "cTimeOutMessageNotify\"\035\n\033ActivityStormRp"
      "cSyncDataAsk\"Z\n\035ActivityStormRpcSyncData"
      "Reply\022\025\n\006Result\030\001 \001(\021:\005-9999\022\020\n\004Type\030\002 \001"
      "(\021:\002-1\022\020\n\004Time\030\003 \001(\021:\002-1\"_\n%ActivityStor"
      "mRpcJoinLevevNotifyNotify\022\022\n\006UserID\030\001 \001("
      "\022:\002-1\022\020\n\010NickName\030\002 \001(\t\022\020\n\004Type\030\003 \001(\021:\002-"
      "1\"&\n$ActivityStormRpcCanceInsertBattleAs"
      "k\"\?\n&ActivityStormRpcCanceInsertBattleRe"
      "ply\022\025\n\006Result\030\001 \001(\021:\005-9999\"M\n\'ActivitySt"
      "ormRpcResetSignUpNotifyNotify\022\020\n\004Type\030\001 "
      "\001(\021:\002-1\022\020\n\004Time\030\002 \001(\021:\002-1"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 905);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ActivityStormRpc.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_ActivityStormRpc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityStormRpcSignUpAsk::ActivityStormRpcSignUpAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityStormRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityStormRpcSignUpAsk)
}
ActivityStormRpcSignUpAsk::ActivityStormRpcSignUpAsk(const ActivityStormRpcSignUpAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ActivityStormRpcSignUpAsk)
}

void ActivityStormRpcSignUpAsk::SharedCtor() {
  _cached_size_ = 0;
}

ActivityStormRpcSignUpAsk::~ActivityStormRpcSignUpAsk() {
  // @@protoc_insertion_point(destructor:ActivityStormRpcSignUpAsk)
  SharedDtor();
}

void ActivityStormRpcSignUpAsk::SharedDtor() {
}

void ActivityStormRpcSignUpAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityStormRpcSignUpAsk::descriptor() {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityStormRpcSignUpAsk& ActivityStormRpcSignUpAsk::default_instance() {
  protobuf_ActivityStormRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityStormRpcSignUpAsk* ActivityStormRpcSignUpAsk::New(::google::protobuf::Arena* arena) const {
  ActivityStormRpcSignUpAsk* n = new ActivityStormRpcSignUpAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityStormRpcSignUpAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityStormRpcSignUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityStormRpcSignUpAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityStormRpcSignUpAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityStormRpcSignUpAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityStormRpcSignUpAsk)
  return false;
#undef DO_
}

void ActivityStormRpcSignUpAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityStormRpcSignUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityStormRpcSignUpAsk)
}

::google::protobuf::uint8* ActivityStormRpcSignUpAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityStormRpcSignUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityStormRpcSignUpAsk)
  return target;
}

size_t ActivityStormRpcSignUpAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityStormRpcSignUpAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityStormRpcSignUpAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityStormRpcSignUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityStormRpcSignUpAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityStormRpcSignUpAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityStormRpcSignUpAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityStormRpcSignUpAsk)
    MergeFrom(*source);
  }
}

void ActivityStormRpcSignUpAsk::MergeFrom(const ActivityStormRpcSignUpAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityStormRpcSignUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ActivityStormRpcSignUpAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityStormRpcSignUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityStormRpcSignUpAsk::CopyFrom(const ActivityStormRpcSignUpAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityStormRpcSignUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityStormRpcSignUpAsk::IsInitialized() const {
  return true;
}

void ActivityStormRpcSignUpAsk::Swap(ActivityStormRpcSignUpAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityStormRpcSignUpAsk::InternalSwap(ActivityStormRpcSignUpAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityStormRpcSignUpAsk::GetMetadata() const {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityStormRpcSignUpAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityStormRpcSignUpReply::kResultFieldNumber;
const int ActivityStormRpcSignUpReply::kTypeFieldNumber;
const int ActivityStormRpcSignUpReply::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityStormRpcSignUpReply::ActivityStormRpcSignUpReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityStormRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityStormRpcSignUpReply)
}
ActivityStormRpcSignUpReply::ActivityStormRpcSignUpReply(const ActivityStormRpcSignUpReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&time_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:ActivityStormRpcSignUpReply)
}

void ActivityStormRpcSignUpReply::SharedCtor() {
  _cached_size_ = 0;
  time_ = -1;
  result_ = -9999;
  type_ = -1;
}

ActivityStormRpcSignUpReply::~ActivityStormRpcSignUpReply() {
  // @@protoc_insertion_point(destructor:ActivityStormRpcSignUpReply)
  SharedDtor();
}

void ActivityStormRpcSignUpReply::SharedDtor() {
}

void ActivityStormRpcSignUpReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityStormRpcSignUpReply::descriptor() {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityStormRpcSignUpReply& ActivityStormRpcSignUpReply::default_instance() {
  protobuf_ActivityStormRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityStormRpcSignUpReply* ActivityStormRpcSignUpReply::New(::google::protobuf::Arena* arena) const {
  ActivityStormRpcSignUpReply* n = new ActivityStormRpcSignUpReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityStormRpcSignUpReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityStormRpcSignUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    time_ = -1;
    result_ = -9999;
    type_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityStormRpcSignUpReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityStormRpcSignUpReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Type = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Time = 7 [default = -1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityStormRpcSignUpReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityStormRpcSignUpReply)
  return false;
#undef DO_
}

void ActivityStormRpcSignUpReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityStormRpcSignUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 Type = 6 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->type(), output);
  }

  // optional sint32 Time = 7 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityStormRpcSignUpReply)
}

::google::protobuf::uint8* ActivityStormRpcSignUpReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityStormRpcSignUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 Type = 6 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->type(), target);
  }

  // optional sint32 Time = 7 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityStormRpcSignUpReply)
  return target;
}

size_t ActivityStormRpcSignUpReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityStormRpcSignUpReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 Time = 7 [default = -1];
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->time());
    }

    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 Type = 6 [default = -1];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityStormRpcSignUpReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityStormRpcSignUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityStormRpcSignUpReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityStormRpcSignUpReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityStormRpcSignUpReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityStormRpcSignUpReply)
    MergeFrom(*source);
  }
}

void ActivityStormRpcSignUpReply::MergeFrom(const ActivityStormRpcSignUpReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityStormRpcSignUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      time_ = from.time_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ActivityStormRpcSignUpReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityStormRpcSignUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityStormRpcSignUpReply::CopyFrom(const ActivityStormRpcSignUpReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityStormRpcSignUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityStormRpcSignUpReply::IsInitialized() const {
  return true;
}

void ActivityStormRpcSignUpReply::Swap(ActivityStormRpcSignUpReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityStormRpcSignUpReply::InternalSwap(ActivityStormRpcSignUpReply* other) {
  using std::swap;
  swap(time_, other->time_);
  swap(result_, other->result_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityStormRpcSignUpReply::GetMetadata() const {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityStormRpcSignUpReply

// optional sint32 Result = 1 [default = -9999];
bool ActivityStormRpcSignUpReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ActivityStormRpcSignUpReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void ActivityStormRpcSignUpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void ActivityStormRpcSignUpReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 ActivityStormRpcSignUpReply::result() const {
  // @@protoc_insertion_point(field_get:ActivityStormRpcSignUpReply.Result)
  return result_;
}
void ActivityStormRpcSignUpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ActivityStormRpcSignUpReply.Result)
}

// optional sint32 Type = 6 [default = -1];
bool ActivityStormRpcSignUpReply::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ActivityStormRpcSignUpReply::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void ActivityStormRpcSignUpReply::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void ActivityStormRpcSignUpReply::clear_type() {
  type_ = -1;
  clear_has_type();
}
::google::protobuf::int32 ActivityStormRpcSignUpReply::type() const {
  // @@protoc_insertion_point(field_get:ActivityStormRpcSignUpReply.Type)
  return type_;
}
void ActivityStormRpcSignUpReply::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ActivityStormRpcSignUpReply.Type)
}

// optional sint32 Time = 7 [default = -1];
bool ActivityStormRpcSignUpReply::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityStormRpcSignUpReply::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityStormRpcSignUpReply::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityStormRpcSignUpReply::clear_time() {
  time_ = -1;
  clear_has_time();
}
::google::protobuf::int32 ActivityStormRpcSignUpReply::time() const {
  // @@protoc_insertion_point(field_get:ActivityStormRpcSignUpReply.Time)
  return time_;
}
void ActivityStormRpcSignUpReply::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:ActivityStormRpcSignUpReply.Time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityStormRpcCancelSignUpAsk::ActivityStormRpcCancelSignUpAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityStormRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityStormRpcCancelSignUpAsk)
}
ActivityStormRpcCancelSignUpAsk::ActivityStormRpcCancelSignUpAsk(const ActivityStormRpcCancelSignUpAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ActivityStormRpcCancelSignUpAsk)
}

void ActivityStormRpcCancelSignUpAsk::SharedCtor() {
  _cached_size_ = 0;
}

ActivityStormRpcCancelSignUpAsk::~ActivityStormRpcCancelSignUpAsk() {
  // @@protoc_insertion_point(destructor:ActivityStormRpcCancelSignUpAsk)
  SharedDtor();
}

void ActivityStormRpcCancelSignUpAsk::SharedDtor() {
}

void ActivityStormRpcCancelSignUpAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityStormRpcCancelSignUpAsk::descriptor() {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityStormRpcCancelSignUpAsk& ActivityStormRpcCancelSignUpAsk::default_instance() {
  protobuf_ActivityStormRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityStormRpcCancelSignUpAsk* ActivityStormRpcCancelSignUpAsk::New(::google::protobuf::Arena* arena) const {
  ActivityStormRpcCancelSignUpAsk* n = new ActivityStormRpcCancelSignUpAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityStormRpcCancelSignUpAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityStormRpcCancelSignUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityStormRpcCancelSignUpAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityStormRpcCancelSignUpAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityStormRpcCancelSignUpAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityStormRpcCancelSignUpAsk)
  return false;
#undef DO_
}

void ActivityStormRpcCancelSignUpAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityStormRpcCancelSignUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityStormRpcCancelSignUpAsk)
}

::google::protobuf::uint8* ActivityStormRpcCancelSignUpAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityStormRpcCancelSignUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityStormRpcCancelSignUpAsk)
  return target;
}

size_t ActivityStormRpcCancelSignUpAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityStormRpcCancelSignUpAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityStormRpcCancelSignUpAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityStormRpcCancelSignUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityStormRpcCancelSignUpAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityStormRpcCancelSignUpAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityStormRpcCancelSignUpAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityStormRpcCancelSignUpAsk)
    MergeFrom(*source);
  }
}

void ActivityStormRpcCancelSignUpAsk::MergeFrom(const ActivityStormRpcCancelSignUpAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityStormRpcCancelSignUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ActivityStormRpcCancelSignUpAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityStormRpcCancelSignUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityStormRpcCancelSignUpAsk::CopyFrom(const ActivityStormRpcCancelSignUpAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityStormRpcCancelSignUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityStormRpcCancelSignUpAsk::IsInitialized() const {
  return true;
}

void ActivityStormRpcCancelSignUpAsk::Swap(ActivityStormRpcCancelSignUpAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityStormRpcCancelSignUpAsk::InternalSwap(ActivityStormRpcCancelSignUpAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityStormRpcCancelSignUpAsk::GetMetadata() const {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityStormRpcCancelSignUpAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityStormRpcCancelSignUpReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityStormRpcCancelSignUpReply::ActivityStormRpcCancelSignUpReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityStormRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityStormRpcCancelSignUpReply)
}
ActivityStormRpcCancelSignUpReply::ActivityStormRpcCancelSignUpReply(const ActivityStormRpcCancelSignUpReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ActivityStormRpcCancelSignUpReply)
}

void ActivityStormRpcCancelSignUpReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

ActivityStormRpcCancelSignUpReply::~ActivityStormRpcCancelSignUpReply() {
  // @@protoc_insertion_point(destructor:ActivityStormRpcCancelSignUpReply)
  SharedDtor();
}

void ActivityStormRpcCancelSignUpReply::SharedDtor() {
}

void ActivityStormRpcCancelSignUpReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityStormRpcCancelSignUpReply::descriptor() {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityStormRpcCancelSignUpReply& ActivityStormRpcCancelSignUpReply::default_instance() {
  protobuf_ActivityStormRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityStormRpcCancelSignUpReply* ActivityStormRpcCancelSignUpReply::New(::google::protobuf::Arena* arena) const {
  ActivityStormRpcCancelSignUpReply* n = new ActivityStormRpcCancelSignUpReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityStormRpcCancelSignUpReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityStormRpcCancelSignUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityStormRpcCancelSignUpReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityStormRpcCancelSignUpReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityStormRpcCancelSignUpReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityStormRpcCancelSignUpReply)
  return false;
#undef DO_
}

void ActivityStormRpcCancelSignUpReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityStormRpcCancelSignUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityStormRpcCancelSignUpReply)
}

::google::protobuf::uint8* ActivityStormRpcCancelSignUpReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityStormRpcCancelSignUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityStormRpcCancelSignUpReply)
  return target;
}

size_t ActivityStormRpcCancelSignUpReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityStormRpcCancelSignUpReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityStormRpcCancelSignUpReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityStormRpcCancelSignUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityStormRpcCancelSignUpReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityStormRpcCancelSignUpReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityStormRpcCancelSignUpReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityStormRpcCancelSignUpReply)
    MergeFrom(*source);
  }
}

void ActivityStormRpcCancelSignUpReply::MergeFrom(const ActivityStormRpcCancelSignUpReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityStormRpcCancelSignUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void ActivityStormRpcCancelSignUpReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityStormRpcCancelSignUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityStormRpcCancelSignUpReply::CopyFrom(const ActivityStormRpcCancelSignUpReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityStormRpcCancelSignUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityStormRpcCancelSignUpReply::IsInitialized() const {
  return true;
}

void ActivityStormRpcCancelSignUpReply::Swap(ActivityStormRpcCancelSignUpReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityStormRpcCancelSignUpReply::InternalSwap(ActivityStormRpcCancelSignUpReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityStormRpcCancelSignUpReply::GetMetadata() const {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityStormRpcCancelSignUpReply

// optional sint32 Result = 1 [default = -9999];
bool ActivityStormRpcCancelSignUpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityStormRpcCancelSignUpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityStormRpcCancelSignUpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityStormRpcCancelSignUpReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 ActivityStormRpcCancelSignUpReply::result() const {
  // @@protoc_insertion_point(field_get:ActivityStormRpcCancelSignUpReply.Result)
  return result_;
}
void ActivityStormRpcCancelSignUpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ActivityStormRpcCancelSignUpReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityStormRpcInsertBattlefieldAsk::ActivityStormRpcInsertBattlefieldAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityStormRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityStormRpcInsertBattlefieldAsk)
}
ActivityStormRpcInsertBattlefieldAsk::ActivityStormRpcInsertBattlefieldAsk(const ActivityStormRpcInsertBattlefieldAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ActivityStormRpcInsertBattlefieldAsk)
}

void ActivityStormRpcInsertBattlefieldAsk::SharedCtor() {
  _cached_size_ = 0;
}

ActivityStormRpcInsertBattlefieldAsk::~ActivityStormRpcInsertBattlefieldAsk() {
  // @@protoc_insertion_point(destructor:ActivityStormRpcInsertBattlefieldAsk)
  SharedDtor();
}

void ActivityStormRpcInsertBattlefieldAsk::SharedDtor() {
}

void ActivityStormRpcInsertBattlefieldAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityStormRpcInsertBattlefieldAsk::descriptor() {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityStormRpcInsertBattlefieldAsk& ActivityStormRpcInsertBattlefieldAsk::default_instance() {
  protobuf_ActivityStormRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityStormRpcInsertBattlefieldAsk* ActivityStormRpcInsertBattlefieldAsk::New(::google::protobuf::Arena* arena) const {
  ActivityStormRpcInsertBattlefieldAsk* n = new ActivityStormRpcInsertBattlefieldAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityStormRpcInsertBattlefieldAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityStormRpcInsertBattlefieldAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityStormRpcInsertBattlefieldAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityStormRpcInsertBattlefieldAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityStormRpcInsertBattlefieldAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityStormRpcInsertBattlefieldAsk)
  return false;
#undef DO_
}

void ActivityStormRpcInsertBattlefieldAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityStormRpcInsertBattlefieldAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityStormRpcInsertBattlefieldAsk)
}

::google::protobuf::uint8* ActivityStormRpcInsertBattlefieldAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityStormRpcInsertBattlefieldAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityStormRpcInsertBattlefieldAsk)
  return target;
}

size_t ActivityStormRpcInsertBattlefieldAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityStormRpcInsertBattlefieldAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityStormRpcInsertBattlefieldAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityStormRpcInsertBattlefieldAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityStormRpcInsertBattlefieldAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityStormRpcInsertBattlefieldAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityStormRpcInsertBattlefieldAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityStormRpcInsertBattlefieldAsk)
    MergeFrom(*source);
  }
}

void ActivityStormRpcInsertBattlefieldAsk::MergeFrom(const ActivityStormRpcInsertBattlefieldAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityStormRpcInsertBattlefieldAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ActivityStormRpcInsertBattlefieldAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityStormRpcInsertBattlefieldAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityStormRpcInsertBattlefieldAsk::CopyFrom(const ActivityStormRpcInsertBattlefieldAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityStormRpcInsertBattlefieldAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityStormRpcInsertBattlefieldAsk::IsInitialized() const {
  return true;
}

void ActivityStormRpcInsertBattlefieldAsk::Swap(ActivityStormRpcInsertBattlefieldAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityStormRpcInsertBattlefieldAsk::InternalSwap(ActivityStormRpcInsertBattlefieldAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityStormRpcInsertBattlefieldAsk::GetMetadata() const {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityStormRpcInsertBattlefieldAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityStormRpcInsertBattlefieldReply::kResultFieldNumber;
const int ActivityStormRpcInsertBattlefieldReply::kTypeFieldNumber;
const int ActivityStormRpcInsertBattlefieldReply::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityStormRpcInsertBattlefieldReply::ActivityStormRpcInsertBattlefieldReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityStormRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityStormRpcInsertBattlefieldReply)
}
ActivityStormRpcInsertBattlefieldReply::ActivityStormRpcInsertBattlefieldReply(const ActivityStormRpcInsertBattlefieldReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&time_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:ActivityStormRpcInsertBattlefieldReply)
}

void ActivityStormRpcInsertBattlefieldReply::SharedCtor() {
  _cached_size_ = 0;
  time_ = -1;
  result_ = -9999;
  type_ = -1;
}

ActivityStormRpcInsertBattlefieldReply::~ActivityStormRpcInsertBattlefieldReply() {
  // @@protoc_insertion_point(destructor:ActivityStormRpcInsertBattlefieldReply)
  SharedDtor();
}

void ActivityStormRpcInsertBattlefieldReply::SharedDtor() {
}

void ActivityStormRpcInsertBattlefieldReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityStormRpcInsertBattlefieldReply::descriptor() {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityStormRpcInsertBattlefieldReply& ActivityStormRpcInsertBattlefieldReply::default_instance() {
  protobuf_ActivityStormRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityStormRpcInsertBattlefieldReply* ActivityStormRpcInsertBattlefieldReply::New(::google::protobuf::Arena* arena) const {
  ActivityStormRpcInsertBattlefieldReply* n = new ActivityStormRpcInsertBattlefieldReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityStormRpcInsertBattlefieldReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityStormRpcInsertBattlefieldReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    time_ = -1;
    result_ = -9999;
    type_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityStormRpcInsertBattlefieldReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityStormRpcInsertBattlefieldReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Type = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Time = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityStormRpcInsertBattlefieldReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityStormRpcInsertBattlefieldReply)
  return false;
#undef DO_
}

void ActivityStormRpcInsertBattlefieldReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityStormRpcInsertBattlefieldReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 Type = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->type(), output);
  }

  // optional sint32 Time = 4 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityStormRpcInsertBattlefieldReply)
}

::google::protobuf::uint8* ActivityStormRpcInsertBattlefieldReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityStormRpcInsertBattlefieldReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 Type = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->type(), target);
  }

  // optional sint32 Time = 4 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityStormRpcInsertBattlefieldReply)
  return target;
}

size_t ActivityStormRpcInsertBattlefieldReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityStormRpcInsertBattlefieldReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 Time = 4 [default = -1];
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->time());
    }

    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 Type = 3 [default = -1];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityStormRpcInsertBattlefieldReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityStormRpcInsertBattlefieldReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityStormRpcInsertBattlefieldReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityStormRpcInsertBattlefieldReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityStormRpcInsertBattlefieldReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityStormRpcInsertBattlefieldReply)
    MergeFrom(*source);
  }
}

void ActivityStormRpcInsertBattlefieldReply::MergeFrom(const ActivityStormRpcInsertBattlefieldReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityStormRpcInsertBattlefieldReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      time_ = from.time_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ActivityStormRpcInsertBattlefieldReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityStormRpcInsertBattlefieldReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityStormRpcInsertBattlefieldReply::CopyFrom(const ActivityStormRpcInsertBattlefieldReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityStormRpcInsertBattlefieldReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityStormRpcInsertBattlefieldReply::IsInitialized() const {
  return true;
}

void ActivityStormRpcInsertBattlefieldReply::Swap(ActivityStormRpcInsertBattlefieldReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityStormRpcInsertBattlefieldReply::InternalSwap(ActivityStormRpcInsertBattlefieldReply* other) {
  using std::swap;
  swap(time_, other->time_);
  swap(result_, other->result_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityStormRpcInsertBattlefieldReply::GetMetadata() const {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityStormRpcInsertBattlefieldReply

// optional sint32 Result = 1 [default = -9999];
bool ActivityStormRpcInsertBattlefieldReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ActivityStormRpcInsertBattlefieldReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void ActivityStormRpcInsertBattlefieldReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void ActivityStormRpcInsertBattlefieldReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 ActivityStormRpcInsertBattlefieldReply::result() const {
  // @@protoc_insertion_point(field_get:ActivityStormRpcInsertBattlefieldReply.Result)
  return result_;
}
void ActivityStormRpcInsertBattlefieldReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ActivityStormRpcInsertBattlefieldReply.Result)
}

// optional sint32 Type = 3 [default = -1];
bool ActivityStormRpcInsertBattlefieldReply::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ActivityStormRpcInsertBattlefieldReply::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void ActivityStormRpcInsertBattlefieldReply::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void ActivityStormRpcInsertBattlefieldReply::clear_type() {
  type_ = -1;
  clear_has_type();
}
::google::protobuf::int32 ActivityStormRpcInsertBattlefieldReply::type() const {
  // @@protoc_insertion_point(field_get:ActivityStormRpcInsertBattlefieldReply.Type)
  return type_;
}
void ActivityStormRpcInsertBattlefieldReply::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ActivityStormRpcInsertBattlefieldReply.Type)
}

// optional sint32 Time = 4 [default = -1];
bool ActivityStormRpcInsertBattlefieldReply::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityStormRpcInsertBattlefieldReply::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityStormRpcInsertBattlefieldReply::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityStormRpcInsertBattlefieldReply::clear_time() {
  time_ = -1;
  clear_has_time();
}
::google::protobuf::int32 ActivityStormRpcInsertBattlefieldReply::time() const {
  // @@protoc_insertion_point(field_get:ActivityStormRpcInsertBattlefieldReply.Time)
  return time_;
}
void ActivityStormRpcInsertBattlefieldReply::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:ActivityStormRpcInsertBattlefieldReply.Time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityStormRpcBattlefieldMessageNotify::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityStormRpcBattlefieldMessageNotify::ActivityStormRpcBattlefieldMessageNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityStormRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityStormRpcBattlefieldMessageNotify)
}
ActivityStormRpcBattlefieldMessageNotify::ActivityStormRpcBattlefieldMessageNotify(const ActivityStormRpcBattlefieldMessageNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:ActivityStormRpcBattlefieldMessageNotify)
}

void ActivityStormRpcBattlefieldMessageNotify::SharedCtor() {
  _cached_size_ = 0;
  time_ = -1;
}

ActivityStormRpcBattlefieldMessageNotify::~ActivityStormRpcBattlefieldMessageNotify() {
  // @@protoc_insertion_point(destructor:ActivityStormRpcBattlefieldMessageNotify)
  SharedDtor();
}

void ActivityStormRpcBattlefieldMessageNotify::SharedDtor() {
}

void ActivityStormRpcBattlefieldMessageNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityStormRpcBattlefieldMessageNotify::descriptor() {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityStormRpcBattlefieldMessageNotify& ActivityStormRpcBattlefieldMessageNotify::default_instance() {
  protobuf_ActivityStormRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityStormRpcBattlefieldMessageNotify* ActivityStormRpcBattlefieldMessageNotify::New(::google::protobuf::Arena* arena) const {
  ActivityStormRpcBattlefieldMessageNotify* n = new ActivityStormRpcBattlefieldMessageNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityStormRpcBattlefieldMessageNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityStormRpcBattlefieldMessageNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  time_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityStormRpcBattlefieldMessageNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityStormRpcBattlefieldMessageNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Time = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityStormRpcBattlefieldMessageNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityStormRpcBattlefieldMessageNotify)
  return false;
#undef DO_
}

void ActivityStormRpcBattlefieldMessageNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityStormRpcBattlefieldMessageNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Time = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityStormRpcBattlefieldMessageNotify)
}

::google::protobuf::uint8* ActivityStormRpcBattlefieldMessageNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityStormRpcBattlefieldMessageNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Time = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityStormRpcBattlefieldMessageNotify)
  return target;
}

size_t ActivityStormRpcBattlefieldMessageNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityStormRpcBattlefieldMessageNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Time = 2 [default = -1];
  if (has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityStormRpcBattlefieldMessageNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityStormRpcBattlefieldMessageNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityStormRpcBattlefieldMessageNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityStormRpcBattlefieldMessageNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityStormRpcBattlefieldMessageNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityStormRpcBattlefieldMessageNotify)
    MergeFrom(*source);
  }
}

void ActivityStormRpcBattlefieldMessageNotify::MergeFrom(const ActivityStormRpcBattlefieldMessageNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityStormRpcBattlefieldMessageNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_time()) {
    set_time(from.time());
  }
}

void ActivityStormRpcBattlefieldMessageNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityStormRpcBattlefieldMessageNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityStormRpcBattlefieldMessageNotify::CopyFrom(const ActivityStormRpcBattlefieldMessageNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityStormRpcBattlefieldMessageNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityStormRpcBattlefieldMessageNotify::IsInitialized() const {
  return true;
}

void ActivityStormRpcBattlefieldMessageNotify::Swap(ActivityStormRpcBattlefieldMessageNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityStormRpcBattlefieldMessageNotify::InternalSwap(ActivityStormRpcBattlefieldMessageNotify* other) {
  using std::swap;
  swap(time_, other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityStormRpcBattlefieldMessageNotify::GetMetadata() const {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityStormRpcBattlefieldMessageNotify

// optional sint32 Time = 2 [default = -1];
bool ActivityStormRpcBattlefieldMessageNotify::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityStormRpcBattlefieldMessageNotify::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityStormRpcBattlefieldMessageNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityStormRpcBattlefieldMessageNotify::clear_time() {
  time_ = -1;
  clear_has_time();
}
::google::protobuf::int32 ActivityStormRpcBattlefieldMessageNotify::time() const {
  // @@protoc_insertion_point(field_get:ActivityStormRpcBattlefieldMessageNotify.Time)
  return time_;
}
void ActivityStormRpcBattlefieldMessageNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:ActivityStormRpcBattlefieldMessageNotify.Time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityStormRpcTimeOutMessageNotify::ActivityStormRpcTimeOutMessageNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityStormRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityStormRpcTimeOutMessageNotify)
}
ActivityStormRpcTimeOutMessageNotify::ActivityStormRpcTimeOutMessageNotify(const ActivityStormRpcTimeOutMessageNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ActivityStormRpcTimeOutMessageNotify)
}

void ActivityStormRpcTimeOutMessageNotify::SharedCtor() {
  _cached_size_ = 0;
}

ActivityStormRpcTimeOutMessageNotify::~ActivityStormRpcTimeOutMessageNotify() {
  // @@protoc_insertion_point(destructor:ActivityStormRpcTimeOutMessageNotify)
  SharedDtor();
}

void ActivityStormRpcTimeOutMessageNotify::SharedDtor() {
}

void ActivityStormRpcTimeOutMessageNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityStormRpcTimeOutMessageNotify::descriptor() {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityStormRpcTimeOutMessageNotify& ActivityStormRpcTimeOutMessageNotify::default_instance() {
  protobuf_ActivityStormRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityStormRpcTimeOutMessageNotify* ActivityStormRpcTimeOutMessageNotify::New(::google::protobuf::Arena* arena) const {
  ActivityStormRpcTimeOutMessageNotify* n = new ActivityStormRpcTimeOutMessageNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityStormRpcTimeOutMessageNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityStormRpcTimeOutMessageNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityStormRpcTimeOutMessageNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityStormRpcTimeOutMessageNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityStormRpcTimeOutMessageNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityStormRpcTimeOutMessageNotify)
  return false;
#undef DO_
}

void ActivityStormRpcTimeOutMessageNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityStormRpcTimeOutMessageNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityStormRpcTimeOutMessageNotify)
}

::google::protobuf::uint8* ActivityStormRpcTimeOutMessageNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityStormRpcTimeOutMessageNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityStormRpcTimeOutMessageNotify)
  return target;
}

size_t ActivityStormRpcTimeOutMessageNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityStormRpcTimeOutMessageNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityStormRpcTimeOutMessageNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityStormRpcTimeOutMessageNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityStormRpcTimeOutMessageNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityStormRpcTimeOutMessageNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityStormRpcTimeOutMessageNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityStormRpcTimeOutMessageNotify)
    MergeFrom(*source);
  }
}

void ActivityStormRpcTimeOutMessageNotify::MergeFrom(const ActivityStormRpcTimeOutMessageNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityStormRpcTimeOutMessageNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ActivityStormRpcTimeOutMessageNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityStormRpcTimeOutMessageNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityStormRpcTimeOutMessageNotify::CopyFrom(const ActivityStormRpcTimeOutMessageNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityStormRpcTimeOutMessageNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityStormRpcTimeOutMessageNotify::IsInitialized() const {
  return true;
}

void ActivityStormRpcTimeOutMessageNotify::Swap(ActivityStormRpcTimeOutMessageNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityStormRpcTimeOutMessageNotify::InternalSwap(ActivityStormRpcTimeOutMessageNotify* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityStormRpcTimeOutMessageNotify::GetMetadata() const {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityStormRpcTimeOutMessageNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityStormRpcSyncDataAsk::ActivityStormRpcSyncDataAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityStormRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityStormRpcSyncDataAsk)
}
ActivityStormRpcSyncDataAsk::ActivityStormRpcSyncDataAsk(const ActivityStormRpcSyncDataAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ActivityStormRpcSyncDataAsk)
}

void ActivityStormRpcSyncDataAsk::SharedCtor() {
  _cached_size_ = 0;
}

ActivityStormRpcSyncDataAsk::~ActivityStormRpcSyncDataAsk() {
  // @@protoc_insertion_point(destructor:ActivityStormRpcSyncDataAsk)
  SharedDtor();
}

void ActivityStormRpcSyncDataAsk::SharedDtor() {
}

void ActivityStormRpcSyncDataAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityStormRpcSyncDataAsk::descriptor() {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityStormRpcSyncDataAsk& ActivityStormRpcSyncDataAsk::default_instance() {
  protobuf_ActivityStormRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityStormRpcSyncDataAsk* ActivityStormRpcSyncDataAsk::New(::google::protobuf::Arena* arena) const {
  ActivityStormRpcSyncDataAsk* n = new ActivityStormRpcSyncDataAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityStormRpcSyncDataAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityStormRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityStormRpcSyncDataAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityStormRpcSyncDataAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityStormRpcSyncDataAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityStormRpcSyncDataAsk)
  return false;
#undef DO_
}

void ActivityStormRpcSyncDataAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityStormRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityStormRpcSyncDataAsk)
}

::google::protobuf::uint8* ActivityStormRpcSyncDataAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityStormRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityStormRpcSyncDataAsk)
  return target;
}

size_t ActivityStormRpcSyncDataAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityStormRpcSyncDataAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityStormRpcSyncDataAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityStormRpcSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityStormRpcSyncDataAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityStormRpcSyncDataAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityStormRpcSyncDataAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityStormRpcSyncDataAsk)
    MergeFrom(*source);
  }
}

void ActivityStormRpcSyncDataAsk::MergeFrom(const ActivityStormRpcSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityStormRpcSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ActivityStormRpcSyncDataAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityStormRpcSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityStormRpcSyncDataAsk::CopyFrom(const ActivityStormRpcSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityStormRpcSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityStormRpcSyncDataAsk::IsInitialized() const {
  return true;
}

void ActivityStormRpcSyncDataAsk::Swap(ActivityStormRpcSyncDataAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityStormRpcSyncDataAsk::InternalSwap(ActivityStormRpcSyncDataAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityStormRpcSyncDataAsk::GetMetadata() const {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityStormRpcSyncDataAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityStormRpcSyncDataReply::kResultFieldNumber;
const int ActivityStormRpcSyncDataReply::kTypeFieldNumber;
const int ActivityStormRpcSyncDataReply::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityStormRpcSyncDataReply::ActivityStormRpcSyncDataReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityStormRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityStormRpcSyncDataReply)
}
ActivityStormRpcSyncDataReply::ActivityStormRpcSyncDataReply(const ActivityStormRpcSyncDataReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&time_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:ActivityStormRpcSyncDataReply)
}

void ActivityStormRpcSyncDataReply::SharedCtor() {
  _cached_size_ = 0;
  time_ = -1;
  result_ = -9999;
  type_ = -1;
}

ActivityStormRpcSyncDataReply::~ActivityStormRpcSyncDataReply() {
  // @@protoc_insertion_point(destructor:ActivityStormRpcSyncDataReply)
  SharedDtor();
}

void ActivityStormRpcSyncDataReply::SharedDtor() {
}

void ActivityStormRpcSyncDataReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityStormRpcSyncDataReply::descriptor() {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityStormRpcSyncDataReply& ActivityStormRpcSyncDataReply::default_instance() {
  protobuf_ActivityStormRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityStormRpcSyncDataReply* ActivityStormRpcSyncDataReply::New(::google::protobuf::Arena* arena) const {
  ActivityStormRpcSyncDataReply* n = new ActivityStormRpcSyncDataReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityStormRpcSyncDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityStormRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    time_ = -1;
    result_ = -9999;
    type_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityStormRpcSyncDataReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityStormRpcSyncDataReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Type = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Time = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityStormRpcSyncDataReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityStormRpcSyncDataReply)
  return false;
#undef DO_
}

void ActivityStormRpcSyncDataReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityStormRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 Type = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->type(), output);
  }

  // optional sint32 Time = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityStormRpcSyncDataReply)
}

::google::protobuf::uint8* ActivityStormRpcSyncDataReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityStormRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 Type = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->type(), target);
  }

  // optional sint32 Time = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityStormRpcSyncDataReply)
  return target;
}

size_t ActivityStormRpcSyncDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityStormRpcSyncDataReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 Time = 3 [default = -1];
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->time());
    }

    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 Type = 2 [default = -1];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityStormRpcSyncDataReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityStormRpcSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityStormRpcSyncDataReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityStormRpcSyncDataReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityStormRpcSyncDataReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityStormRpcSyncDataReply)
    MergeFrom(*source);
  }
}

void ActivityStormRpcSyncDataReply::MergeFrom(const ActivityStormRpcSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityStormRpcSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      time_ = from.time_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ActivityStormRpcSyncDataReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityStormRpcSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityStormRpcSyncDataReply::CopyFrom(const ActivityStormRpcSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityStormRpcSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityStormRpcSyncDataReply::IsInitialized() const {
  return true;
}

void ActivityStormRpcSyncDataReply::Swap(ActivityStormRpcSyncDataReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityStormRpcSyncDataReply::InternalSwap(ActivityStormRpcSyncDataReply* other) {
  using std::swap;
  swap(time_, other->time_);
  swap(result_, other->result_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityStormRpcSyncDataReply::GetMetadata() const {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityStormRpcSyncDataReply

// optional sint32 Result = 1 [default = -9999];
bool ActivityStormRpcSyncDataReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ActivityStormRpcSyncDataReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void ActivityStormRpcSyncDataReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void ActivityStormRpcSyncDataReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 ActivityStormRpcSyncDataReply::result() const {
  // @@protoc_insertion_point(field_get:ActivityStormRpcSyncDataReply.Result)
  return result_;
}
void ActivityStormRpcSyncDataReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ActivityStormRpcSyncDataReply.Result)
}

// optional sint32 Type = 2 [default = -1];
bool ActivityStormRpcSyncDataReply::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ActivityStormRpcSyncDataReply::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void ActivityStormRpcSyncDataReply::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void ActivityStormRpcSyncDataReply::clear_type() {
  type_ = -1;
  clear_has_type();
}
::google::protobuf::int32 ActivityStormRpcSyncDataReply::type() const {
  // @@protoc_insertion_point(field_get:ActivityStormRpcSyncDataReply.Type)
  return type_;
}
void ActivityStormRpcSyncDataReply::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ActivityStormRpcSyncDataReply.Type)
}

// optional sint32 Time = 3 [default = -1];
bool ActivityStormRpcSyncDataReply::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityStormRpcSyncDataReply::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityStormRpcSyncDataReply::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityStormRpcSyncDataReply::clear_time() {
  time_ = -1;
  clear_has_time();
}
::google::protobuf::int32 ActivityStormRpcSyncDataReply::time() const {
  // @@protoc_insertion_point(field_get:ActivityStormRpcSyncDataReply.Time)
  return time_;
}
void ActivityStormRpcSyncDataReply::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:ActivityStormRpcSyncDataReply.Time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityStormRpcJoinLevevNotifyNotify::kUserIDFieldNumber;
const int ActivityStormRpcJoinLevevNotifyNotify::kNickNameFieldNumber;
const int ActivityStormRpcJoinLevevNotifyNotify::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityStormRpcJoinLevevNotifyNotify::ActivityStormRpcJoinLevevNotifyNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityStormRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityStormRpcJoinLevevNotifyNotify)
}
ActivityStormRpcJoinLevevNotifyNotify::ActivityStormRpcJoinLevevNotifyNotify(const ActivityStormRpcJoinLevevNotifyNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&type_)) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:ActivityStormRpcJoinLevevNotifyNotify)
}

void ActivityStormRpcJoinLevevNotifyNotify::SharedCtor() {
  _cached_size_ = 0;
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = -1;
  userid_ = GOOGLE_LONGLONG(-1);
}

ActivityStormRpcJoinLevevNotifyNotify::~ActivityStormRpcJoinLevevNotifyNotify() {
  // @@protoc_insertion_point(destructor:ActivityStormRpcJoinLevevNotifyNotify)
  SharedDtor();
}

void ActivityStormRpcJoinLevevNotifyNotify::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ActivityStormRpcJoinLevevNotifyNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityStormRpcJoinLevevNotifyNotify::descriptor() {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityStormRpcJoinLevevNotifyNotify& ActivityStormRpcJoinLevevNotifyNotify::default_instance() {
  protobuf_ActivityStormRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityStormRpcJoinLevevNotifyNotify* ActivityStormRpcJoinLevevNotifyNotify::New(::google::protobuf::Arena* arena) const {
  ActivityStormRpcJoinLevevNotifyNotify* n = new ActivityStormRpcJoinLevevNotifyNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityStormRpcJoinLevevNotifyNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityStormRpcJoinLevevNotifyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nickname_.UnsafeRawStringPointer())->clear();
    }
    type_ = -1;
    userid_ = GOOGLE_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityStormRpcJoinLevevNotifyNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityStormRpcJoinLevevNotifyNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 UserID = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string NickName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ActivityStormRpcJoinLevevNotifyNotify.NickName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Type = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityStormRpcJoinLevevNotifyNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityStormRpcJoinLevevNotifyNotify)
  return false;
#undef DO_
}

void ActivityStormRpcJoinLevevNotifyNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityStormRpcJoinLevevNotifyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserID = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->userid(), output);
  }

  // optional string NickName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ActivityStormRpcJoinLevevNotifyNotify.NickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // optional sint32 Type = 3 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityStormRpcJoinLevevNotifyNotify)
}

::google::protobuf::uint8* ActivityStormRpcJoinLevevNotifyNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityStormRpcJoinLevevNotifyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserID = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->userid(), target);
  }

  // optional string NickName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ActivityStormRpcJoinLevevNotifyNotify.NickName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // optional sint32 Type = 3 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityStormRpcJoinLevevNotifyNotify)
  return target;
}

size_t ActivityStormRpcJoinLevevNotifyNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityStormRpcJoinLevevNotifyNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string NickName = 2;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional sint32 Type = 3 [default = -1];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->type());
    }

    // optional sint64 UserID = 1 [default = -1];
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityStormRpcJoinLevevNotifyNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityStormRpcJoinLevevNotifyNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityStormRpcJoinLevevNotifyNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityStormRpcJoinLevevNotifyNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityStormRpcJoinLevevNotifyNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityStormRpcJoinLevevNotifyNotify)
    MergeFrom(*source);
  }
}

void ActivityStormRpcJoinLevevNotifyNotify::MergeFrom(const ActivityStormRpcJoinLevevNotifyNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityStormRpcJoinLevevNotifyNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ActivityStormRpcJoinLevevNotifyNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityStormRpcJoinLevevNotifyNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityStormRpcJoinLevevNotifyNotify::CopyFrom(const ActivityStormRpcJoinLevevNotifyNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityStormRpcJoinLevevNotifyNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityStormRpcJoinLevevNotifyNotify::IsInitialized() const {
  return true;
}

void ActivityStormRpcJoinLevevNotifyNotify::Swap(ActivityStormRpcJoinLevevNotifyNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityStormRpcJoinLevevNotifyNotify::InternalSwap(ActivityStormRpcJoinLevevNotifyNotify* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_);
  swap(type_, other->type_);
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityStormRpcJoinLevevNotifyNotify::GetMetadata() const {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityStormRpcJoinLevevNotifyNotify

// optional sint64 UserID = 1 [default = -1];
bool ActivityStormRpcJoinLevevNotifyNotify::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ActivityStormRpcJoinLevevNotifyNotify::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
void ActivityStormRpcJoinLevevNotifyNotify::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
void ActivityStormRpcJoinLevevNotifyNotify::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 ActivityStormRpcJoinLevevNotifyNotify::userid() const {
  // @@protoc_insertion_point(field_get:ActivityStormRpcJoinLevevNotifyNotify.UserID)
  return userid_;
}
void ActivityStormRpcJoinLevevNotifyNotify::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:ActivityStormRpcJoinLevevNotifyNotify.UserID)
}

// optional string NickName = 2;
bool ActivityStormRpcJoinLevevNotifyNotify::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityStormRpcJoinLevevNotifyNotify::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityStormRpcJoinLevevNotifyNotify::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityStormRpcJoinLevevNotifyNotify::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& ActivityStormRpcJoinLevevNotifyNotify::nickname() const {
  // @@protoc_insertion_point(field_get:ActivityStormRpcJoinLevevNotifyNotify.NickName)
  return nickname_.GetNoArena();
}
void ActivityStormRpcJoinLevevNotifyNotify::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ActivityStormRpcJoinLevevNotifyNotify.NickName)
}
#if LANG_CXX11
void ActivityStormRpcJoinLevevNotifyNotify::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ActivityStormRpcJoinLevevNotifyNotify.NickName)
}
#endif
void ActivityStormRpcJoinLevevNotifyNotify::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ActivityStormRpcJoinLevevNotifyNotify.NickName)
}
void ActivityStormRpcJoinLevevNotifyNotify::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ActivityStormRpcJoinLevevNotifyNotify.NickName)
}
::std::string* ActivityStormRpcJoinLevevNotifyNotify::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:ActivityStormRpcJoinLevevNotifyNotify.NickName)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ActivityStormRpcJoinLevevNotifyNotify::release_nickname() {
  // @@protoc_insertion_point(field_release:ActivityStormRpcJoinLevevNotifyNotify.NickName)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ActivityStormRpcJoinLevevNotifyNotify::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:ActivityStormRpcJoinLevevNotifyNotify.NickName)
}

// optional sint32 Type = 3 [default = -1];
bool ActivityStormRpcJoinLevevNotifyNotify::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ActivityStormRpcJoinLevevNotifyNotify::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void ActivityStormRpcJoinLevevNotifyNotify::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void ActivityStormRpcJoinLevevNotifyNotify::clear_type() {
  type_ = -1;
  clear_has_type();
}
::google::protobuf::int32 ActivityStormRpcJoinLevevNotifyNotify::type() const {
  // @@protoc_insertion_point(field_get:ActivityStormRpcJoinLevevNotifyNotify.Type)
  return type_;
}
void ActivityStormRpcJoinLevevNotifyNotify::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ActivityStormRpcJoinLevevNotifyNotify.Type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityStormRpcCanceInsertBattleAsk::ActivityStormRpcCanceInsertBattleAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityStormRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityStormRpcCanceInsertBattleAsk)
}
ActivityStormRpcCanceInsertBattleAsk::ActivityStormRpcCanceInsertBattleAsk(const ActivityStormRpcCanceInsertBattleAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ActivityStormRpcCanceInsertBattleAsk)
}

void ActivityStormRpcCanceInsertBattleAsk::SharedCtor() {
  _cached_size_ = 0;
}

ActivityStormRpcCanceInsertBattleAsk::~ActivityStormRpcCanceInsertBattleAsk() {
  // @@protoc_insertion_point(destructor:ActivityStormRpcCanceInsertBattleAsk)
  SharedDtor();
}

void ActivityStormRpcCanceInsertBattleAsk::SharedDtor() {
}

void ActivityStormRpcCanceInsertBattleAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityStormRpcCanceInsertBattleAsk::descriptor() {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityStormRpcCanceInsertBattleAsk& ActivityStormRpcCanceInsertBattleAsk::default_instance() {
  protobuf_ActivityStormRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityStormRpcCanceInsertBattleAsk* ActivityStormRpcCanceInsertBattleAsk::New(::google::protobuf::Arena* arena) const {
  ActivityStormRpcCanceInsertBattleAsk* n = new ActivityStormRpcCanceInsertBattleAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityStormRpcCanceInsertBattleAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityStormRpcCanceInsertBattleAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityStormRpcCanceInsertBattleAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityStormRpcCanceInsertBattleAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityStormRpcCanceInsertBattleAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityStormRpcCanceInsertBattleAsk)
  return false;
#undef DO_
}

void ActivityStormRpcCanceInsertBattleAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityStormRpcCanceInsertBattleAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityStormRpcCanceInsertBattleAsk)
}

::google::protobuf::uint8* ActivityStormRpcCanceInsertBattleAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityStormRpcCanceInsertBattleAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityStormRpcCanceInsertBattleAsk)
  return target;
}

size_t ActivityStormRpcCanceInsertBattleAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityStormRpcCanceInsertBattleAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityStormRpcCanceInsertBattleAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityStormRpcCanceInsertBattleAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityStormRpcCanceInsertBattleAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityStormRpcCanceInsertBattleAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityStormRpcCanceInsertBattleAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityStormRpcCanceInsertBattleAsk)
    MergeFrom(*source);
  }
}

void ActivityStormRpcCanceInsertBattleAsk::MergeFrom(const ActivityStormRpcCanceInsertBattleAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityStormRpcCanceInsertBattleAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ActivityStormRpcCanceInsertBattleAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityStormRpcCanceInsertBattleAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityStormRpcCanceInsertBattleAsk::CopyFrom(const ActivityStormRpcCanceInsertBattleAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityStormRpcCanceInsertBattleAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityStormRpcCanceInsertBattleAsk::IsInitialized() const {
  return true;
}

void ActivityStormRpcCanceInsertBattleAsk::Swap(ActivityStormRpcCanceInsertBattleAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityStormRpcCanceInsertBattleAsk::InternalSwap(ActivityStormRpcCanceInsertBattleAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityStormRpcCanceInsertBattleAsk::GetMetadata() const {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityStormRpcCanceInsertBattleAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityStormRpcCanceInsertBattleReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityStormRpcCanceInsertBattleReply::ActivityStormRpcCanceInsertBattleReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityStormRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityStormRpcCanceInsertBattleReply)
}
ActivityStormRpcCanceInsertBattleReply::ActivityStormRpcCanceInsertBattleReply(const ActivityStormRpcCanceInsertBattleReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ActivityStormRpcCanceInsertBattleReply)
}

void ActivityStormRpcCanceInsertBattleReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

ActivityStormRpcCanceInsertBattleReply::~ActivityStormRpcCanceInsertBattleReply() {
  // @@protoc_insertion_point(destructor:ActivityStormRpcCanceInsertBattleReply)
  SharedDtor();
}

void ActivityStormRpcCanceInsertBattleReply::SharedDtor() {
}

void ActivityStormRpcCanceInsertBattleReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityStormRpcCanceInsertBattleReply::descriptor() {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityStormRpcCanceInsertBattleReply& ActivityStormRpcCanceInsertBattleReply::default_instance() {
  protobuf_ActivityStormRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityStormRpcCanceInsertBattleReply* ActivityStormRpcCanceInsertBattleReply::New(::google::protobuf::Arena* arena) const {
  ActivityStormRpcCanceInsertBattleReply* n = new ActivityStormRpcCanceInsertBattleReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityStormRpcCanceInsertBattleReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityStormRpcCanceInsertBattleReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityStormRpcCanceInsertBattleReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityStormRpcCanceInsertBattleReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityStormRpcCanceInsertBattleReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityStormRpcCanceInsertBattleReply)
  return false;
#undef DO_
}

void ActivityStormRpcCanceInsertBattleReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityStormRpcCanceInsertBattleReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityStormRpcCanceInsertBattleReply)
}

::google::protobuf::uint8* ActivityStormRpcCanceInsertBattleReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityStormRpcCanceInsertBattleReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityStormRpcCanceInsertBattleReply)
  return target;
}

size_t ActivityStormRpcCanceInsertBattleReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityStormRpcCanceInsertBattleReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityStormRpcCanceInsertBattleReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityStormRpcCanceInsertBattleReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityStormRpcCanceInsertBattleReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityStormRpcCanceInsertBattleReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityStormRpcCanceInsertBattleReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityStormRpcCanceInsertBattleReply)
    MergeFrom(*source);
  }
}

void ActivityStormRpcCanceInsertBattleReply::MergeFrom(const ActivityStormRpcCanceInsertBattleReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityStormRpcCanceInsertBattleReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void ActivityStormRpcCanceInsertBattleReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityStormRpcCanceInsertBattleReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityStormRpcCanceInsertBattleReply::CopyFrom(const ActivityStormRpcCanceInsertBattleReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityStormRpcCanceInsertBattleReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityStormRpcCanceInsertBattleReply::IsInitialized() const {
  return true;
}

void ActivityStormRpcCanceInsertBattleReply::Swap(ActivityStormRpcCanceInsertBattleReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityStormRpcCanceInsertBattleReply::InternalSwap(ActivityStormRpcCanceInsertBattleReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityStormRpcCanceInsertBattleReply::GetMetadata() const {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityStormRpcCanceInsertBattleReply

// optional sint32 Result = 1 [default = -9999];
bool ActivityStormRpcCanceInsertBattleReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityStormRpcCanceInsertBattleReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityStormRpcCanceInsertBattleReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityStormRpcCanceInsertBattleReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 ActivityStormRpcCanceInsertBattleReply::result() const {
  // @@protoc_insertion_point(field_get:ActivityStormRpcCanceInsertBattleReply.Result)
  return result_;
}
void ActivityStormRpcCanceInsertBattleReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ActivityStormRpcCanceInsertBattleReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityStormRpcResetSignUpNotifyNotify::kTypeFieldNumber;
const int ActivityStormRpcResetSignUpNotifyNotify::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityStormRpcResetSignUpNotifyNotify::ActivityStormRpcResetSignUpNotifyNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityStormRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityStormRpcResetSignUpNotifyNotify)
}
ActivityStormRpcResetSignUpNotifyNotify::ActivityStormRpcResetSignUpNotifyNotify(const ActivityStormRpcResetSignUpNotifyNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&type_)) + sizeof(time_));
  // @@protoc_insertion_point(copy_constructor:ActivityStormRpcResetSignUpNotifyNotify)
}

void ActivityStormRpcResetSignUpNotifyNotify::SharedCtor() {
  _cached_size_ = 0;
  type_ = -1;
  time_ = -1;
}

ActivityStormRpcResetSignUpNotifyNotify::~ActivityStormRpcResetSignUpNotifyNotify() {
  // @@protoc_insertion_point(destructor:ActivityStormRpcResetSignUpNotifyNotify)
  SharedDtor();
}

void ActivityStormRpcResetSignUpNotifyNotify::SharedDtor() {
}

void ActivityStormRpcResetSignUpNotifyNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityStormRpcResetSignUpNotifyNotify::descriptor() {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityStormRpcResetSignUpNotifyNotify& ActivityStormRpcResetSignUpNotifyNotify::default_instance() {
  protobuf_ActivityStormRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityStormRpcResetSignUpNotifyNotify* ActivityStormRpcResetSignUpNotifyNotify::New(::google::protobuf::Arena* arena) const {
  ActivityStormRpcResetSignUpNotifyNotify* n = new ActivityStormRpcResetSignUpNotifyNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityStormRpcResetSignUpNotifyNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityStormRpcResetSignUpNotifyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    type_ = -1;
    time_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityStormRpcResetSignUpNotifyNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityStormRpcResetSignUpNotifyNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Type = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Time = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityStormRpcResetSignUpNotifyNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityStormRpcResetSignUpNotifyNotify)
  return false;
#undef DO_
}

void ActivityStormRpcResetSignUpNotifyNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityStormRpcResetSignUpNotifyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Type = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->type(), output);
  }

  // optional sint32 Time = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityStormRpcResetSignUpNotifyNotify)
}

::google::protobuf::uint8* ActivityStormRpcResetSignUpNotifyNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityStormRpcResetSignUpNotifyNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Type = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->type(), target);
  }

  // optional sint32 Time = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityStormRpcResetSignUpNotifyNotify)
  return target;
}

size_t ActivityStormRpcResetSignUpNotifyNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityStormRpcResetSignUpNotifyNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Type = 1 [default = -1];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->type());
    }

    // optional sint32 Time = 2 [default = -1];
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityStormRpcResetSignUpNotifyNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityStormRpcResetSignUpNotifyNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityStormRpcResetSignUpNotifyNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityStormRpcResetSignUpNotifyNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityStormRpcResetSignUpNotifyNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityStormRpcResetSignUpNotifyNotify)
    MergeFrom(*source);
  }
}

void ActivityStormRpcResetSignUpNotifyNotify::MergeFrom(const ActivityStormRpcResetSignUpNotifyNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityStormRpcResetSignUpNotifyNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000002u) {
      time_ = from.time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ActivityStormRpcResetSignUpNotifyNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityStormRpcResetSignUpNotifyNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityStormRpcResetSignUpNotifyNotify::CopyFrom(const ActivityStormRpcResetSignUpNotifyNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityStormRpcResetSignUpNotifyNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityStormRpcResetSignUpNotifyNotify::IsInitialized() const {
  return true;
}

void ActivityStormRpcResetSignUpNotifyNotify::Swap(ActivityStormRpcResetSignUpNotifyNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityStormRpcResetSignUpNotifyNotify::InternalSwap(ActivityStormRpcResetSignUpNotifyNotify* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(time_, other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityStormRpcResetSignUpNotifyNotify::GetMetadata() const {
  protobuf_ActivityStormRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityStormRpcResetSignUpNotifyNotify

// optional sint32 Type = 1 [default = -1];
bool ActivityStormRpcResetSignUpNotifyNotify::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityStormRpcResetSignUpNotifyNotify::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityStormRpcResetSignUpNotifyNotify::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityStormRpcResetSignUpNotifyNotify::clear_type() {
  type_ = -1;
  clear_has_type();
}
::google::protobuf::int32 ActivityStormRpcResetSignUpNotifyNotify::type() const {
  // @@protoc_insertion_point(field_get:ActivityStormRpcResetSignUpNotifyNotify.Type)
  return type_;
}
void ActivityStormRpcResetSignUpNotifyNotify::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ActivityStormRpcResetSignUpNotifyNotify.Type)
}

// optional sint32 Time = 2 [default = -1];
bool ActivityStormRpcResetSignUpNotifyNotify::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ActivityStormRpcResetSignUpNotifyNotify::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
void ActivityStormRpcResetSignUpNotifyNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void ActivityStormRpcResetSignUpNotifyNotify::clear_time() {
  time_ = -1;
  clear_has_time();
}
::google::protobuf::int32 ActivityStormRpcResetSignUpNotifyNotify::time() const {
  // @@protoc_insertion_point(field_get:ActivityStormRpcResetSignUpNotifyNotify.Time)
  return time_;
}
void ActivityStormRpcResetSignUpNotifyNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:ActivityStormRpcResetSignUpNotifyNotify.Time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
