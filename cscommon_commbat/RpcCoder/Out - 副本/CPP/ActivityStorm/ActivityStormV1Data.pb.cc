// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActivityStormV1Data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ActivityStormV1Data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class ActivityStormActivityStormV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityStormActivityStormV1>
     _instance;
} _ActivityStormActivityStormV1_default_instance_;

namespace protobuf_ActivityStormV1Data_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormActivityStormV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormActivityStormV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormActivityStormV1, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormActivityStormV1, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormActivityStormV1, actid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityStormActivityStormV1, lvd_),
  0,
  1,
  2,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(ActivityStormActivityStormV1)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityStormActivityStormV1_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ActivityStormV1Data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _ActivityStormActivityStormV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityStormActivityStormV1_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031ActivityStormV1Data.proto\032\022PublicStruc"
      "t.proto\"f\n\034ActivityStormActivityStormV1\022"
      "\020\n\004Type\030\001 \001(\021:\002-1\022\020\n\004Time\030\002 \001(\021:\002-1\022\021\n\005A"
      "ctID\030\003 \001(\021:\002-1\022\017\n\003LvD\030\004 \001(\021:\002-1"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 151);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ActivityStormV1Data.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_ActivityStormV1Data_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityStormActivityStormV1::kTypeFieldNumber;
const int ActivityStormActivityStormV1::kTimeFieldNumber;
const int ActivityStormActivityStormV1::kActIDFieldNumber;
const int ActivityStormActivityStormV1::kLvDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityStormActivityStormV1::ActivityStormActivityStormV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityStormV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityStormActivityStormV1)
}
ActivityStormActivityStormV1::ActivityStormActivityStormV1(const ActivityStormActivityStormV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&lvd_) -
    reinterpret_cast<char*>(&type_)) + sizeof(lvd_));
  // @@protoc_insertion_point(copy_constructor:ActivityStormActivityStormV1)
}

void ActivityStormActivityStormV1::SharedCtor() {
  _cached_size_ = 0;
  type_ = -1;
  time_ = -1;
  actid_ = -1;
  lvd_ = -1;
}

ActivityStormActivityStormV1::~ActivityStormActivityStormV1() {
  // @@protoc_insertion_point(destructor:ActivityStormActivityStormV1)
  SharedDtor();
}

void ActivityStormActivityStormV1::SharedDtor() {
}

void ActivityStormActivityStormV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityStormActivityStormV1::descriptor() {
  protobuf_ActivityStormV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityStormActivityStormV1& ActivityStormActivityStormV1::default_instance() {
  protobuf_ActivityStormV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityStormActivityStormV1* ActivityStormActivityStormV1::New(::google::protobuf::Arena* arena) const {
  ActivityStormActivityStormV1* n = new ActivityStormActivityStormV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityStormActivityStormV1::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityStormActivityStormV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    type_ = -1;
    time_ = -1;
    actid_ = -1;
    lvd_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityStormActivityStormV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityStormActivityStormV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Type = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Time = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ActID = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_actid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &actid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 LvD = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_lvd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &lvd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityStormActivityStormV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityStormActivityStormV1)
  return false;
#undef DO_
}

void ActivityStormActivityStormV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityStormActivityStormV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Type = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->type(), output);
  }

  // optional sint32 Time = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->time(), output);
  }

  // optional sint32 ActID = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->actid(), output);
  }

  // optional sint32 LvD = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->lvd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityStormActivityStormV1)
}

::google::protobuf::uint8* ActivityStormActivityStormV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityStormActivityStormV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Type = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->type(), target);
  }

  // optional sint32 Time = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->time(), target);
  }

  // optional sint32 ActID = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->actid(), target);
  }

  // optional sint32 LvD = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->lvd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityStormActivityStormV1)
  return target;
}

size_t ActivityStormActivityStormV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityStormActivityStormV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional sint32 Type = 1 [default = -1];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->type());
    }

    // optional sint32 Time = 2 [default = -1];
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->time());
    }

    // optional sint32 ActID = 3 [default = -1];
    if (has_actid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->actid());
    }

    // optional sint32 LvD = 4 [default = -1];
    if (has_lvd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->lvd());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityStormActivityStormV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityStormActivityStormV1)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityStormActivityStormV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityStormActivityStormV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityStormActivityStormV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityStormActivityStormV1)
    MergeFrom(*source);
  }
}

void ActivityStormActivityStormV1::MergeFrom(const ActivityStormActivityStormV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityStormActivityStormV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000002u) {
      time_ = from.time_;
    }
    if (cached_has_bits & 0x00000004u) {
      actid_ = from.actid_;
    }
    if (cached_has_bits & 0x00000008u) {
      lvd_ = from.lvd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ActivityStormActivityStormV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityStormActivityStormV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityStormActivityStormV1::CopyFrom(const ActivityStormActivityStormV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityStormActivityStormV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityStormActivityStormV1::IsInitialized() const {
  return true;
}

void ActivityStormActivityStormV1::Swap(ActivityStormActivityStormV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityStormActivityStormV1::InternalSwap(ActivityStormActivityStormV1* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(time_, other->time_);
  swap(actid_, other->actid_);
  swap(lvd_, other->lvd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityStormActivityStormV1::GetMetadata() const {
  protobuf_ActivityStormV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityStormV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityStormActivityStormV1

// optional sint32 Type = 1 [default = -1];
bool ActivityStormActivityStormV1::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityStormActivityStormV1::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityStormActivityStormV1::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityStormActivityStormV1::clear_type() {
  type_ = -1;
  clear_has_type();
}
::google::protobuf::int32 ActivityStormActivityStormV1::type() const {
  // @@protoc_insertion_point(field_get:ActivityStormActivityStormV1.Type)
  return type_;
}
void ActivityStormActivityStormV1::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ActivityStormActivityStormV1.Type)
}

// optional sint32 Time = 2 [default = -1];
bool ActivityStormActivityStormV1::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ActivityStormActivityStormV1::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
void ActivityStormActivityStormV1::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void ActivityStormActivityStormV1::clear_time() {
  time_ = -1;
  clear_has_time();
}
::google::protobuf::int32 ActivityStormActivityStormV1::time() const {
  // @@protoc_insertion_point(field_get:ActivityStormActivityStormV1.Time)
  return time_;
}
void ActivityStormActivityStormV1::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:ActivityStormActivityStormV1.Time)
}

// optional sint32 ActID = 3 [default = -1];
bool ActivityStormActivityStormV1::has_actid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ActivityStormActivityStormV1::set_has_actid() {
  _has_bits_[0] |= 0x00000004u;
}
void ActivityStormActivityStormV1::clear_has_actid() {
  _has_bits_[0] &= ~0x00000004u;
}
void ActivityStormActivityStormV1::clear_actid() {
  actid_ = -1;
  clear_has_actid();
}
::google::protobuf::int32 ActivityStormActivityStormV1::actid() const {
  // @@protoc_insertion_point(field_get:ActivityStormActivityStormV1.ActID)
  return actid_;
}
void ActivityStormActivityStormV1::set_actid(::google::protobuf::int32 value) {
  set_has_actid();
  actid_ = value;
  // @@protoc_insertion_point(field_set:ActivityStormActivityStormV1.ActID)
}

// optional sint32 LvD = 4 [default = -1];
bool ActivityStormActivityStormV1::has_lvd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ActivityStormActivityStormV1::set_has_lvd() {
  _has_bits_[0] |= 0x00000008u;
}
void ActivityStormActivityStormV1::clear_has_lvd() {
  _has_bits_[0] &= ~0x00000008u;
}
void ActivityStormActivityStormV1::clear_lvd() {
  lvd_ = -1;
  clear_has_lvd();
}
::google::protobuf::int32 ActivityStormActivityStormV1::lvd() const {
  // @@protoc_insertion_point(field_get:ActivityStormActivityStormV1.LvD)
  return lvd_;
}
void ActivityStormActivityStormV1::set_lvd(::google::protobuf::int32 value) {
  set_has_lvd();
  lvd_ = value;
  // @@protoc_insertion_point(field_set:ActivityStormActivityStormV1.LvD)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
