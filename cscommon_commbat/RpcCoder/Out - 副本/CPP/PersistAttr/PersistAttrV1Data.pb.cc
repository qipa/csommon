// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PersistAttrV1Data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PersistAttrV1Data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class PersistAttrPersistAttrV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PersistAttrPersistAttrV1>
     _instance;
} _PersistAttrPersistAttrV1_default_instance_;

namespace protobuf_PersistAttrV1Data_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistAttrPersistAttrV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistAttrPersistAttrV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistAttrPersistAttrV1, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistAttrPersistAttrV1, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistAttrPersistAttrV1, platname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistAttrPersistAttrV1, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistAttrPersistAttrV1, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistAttrPersistAttrV1, rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistAttrPersistAttrV1, fightpower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistAttrPersistAttrV1, sec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistAttrPersistAttrV1, prof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistAttrPersistAttrV1, onlinestate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistAttrPersistAttrV1, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistAttrPersistAttrV1, shopscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistAttrPersistAttrV1, dungeonid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistAttrPersistAttrV1, sessionkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersistAttrPersistAttrV1, guildid_),
  0,
  3,
  1,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  2,
  14,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 20, sizeof(PersistAttrPersistAttrV1)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PersistAttrPersistAttrV1_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "PersistAttrV1Data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _PersistAttrPersistAttrV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PersistAttrPersistAttrV1_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027PersistAttrV1Data.proto\032\022PublicStruct."
      "proto\"\315\002\n\030PersistAttrPersistAttrV1\022\020\n\010Us"
      "erName\030\001 \001(\t\022\022\n\006UserId\030\003 \001(\022:\002-1\022\020\n\010Plat"
      "Name\030\004 \001(\t\022\025\n\tAccountId\030\025 \001(\022:\002-1\022\021\n\005Lev"
      "el\030\036 \001(\021:\002-1\022\020\n\004Rank\030\037 \001(\021:\002-1\022\026\n\nFightP"
      "ower\030  \001(\021:\002-1\022\017\n\003Sec\030! \001(\021:\002-1\022\020\n\004Prof\030"
      "# \001(\021:\002-1\022\027\n\013OnlineState\030$ \001(\021:\002-1\022\022\n\006Te"
      "amId\030% \001(\021:\002-1\022\025\n\tShopScore\030\' \001(\021:\002-1\022\025\n"
      "\tDungeonId\030* \001(\021:\002-1\022\022\n\nSessionKey\030+ \001(\t"
      "\022\023\n\007GuildId\030, \001(\021:\002-1"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 381);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PersistAttrV1Data.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_PersistAttrV1Data_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PersistAttrPersistAttrV1::kUserNameFieldNumber;
const int PersistAttrPersistAttrV1::kUserIdFieldNumber;
const int PersistAttrPersistAttrV1::kPlatNameFieldNumber;
const int PersistAttrPersistAttrV1::kAccountIdFieldNumber;
const int PersistAttrPersistAttrV1::kLevelFieldNumber;
const int PersistAttrPersistAttrV1::kRankFieldNumber;
const int PersistAttrPersistAttrV1::kFightPowerFieldNumber;
const int PersistAttrPersistAttrV1::kSecFieldNumber;
const int PersistAttrPersistAttrV1::kProfFieldNumber;
const int PersistAttrPersistAttrV1::kOnlineStateFieldNumber;
const int PersistAttrPersistAttrV1::kTeamIdFieldNumber;
const int PersistAttrPersistAttrV1::kShopScoreFieldNumber;
const int PersistAttrPersistAttrV1::kDungeonIdFieldNumber;
const int PersistAttrPersistAttrV1::kSessionKeyFieldNumber;
const int PersistAttrPersistAttrV1::kGuildIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PersistAttrPersistAttrV1::PersistAttrPersistAttrV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PersistAttrV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PersistAttrPersistAttrV1)
}
PersistAttrPersistAttrV1::PersistAttrPersistAttrV1(const PersistAttrPersistAttrV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  platname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_platname()) {
    platname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platname_);
  }
  sessionkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sessionkey()) {
    sessionkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionkey_);
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&guildid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(guildid_));
  // @@protoc_insertion_point(copy_constructor:PersistAttrPersistAttrV1)
}

void PersistAttrPersistAttrV1::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = GOOGLE_LONGLONG(-1);
  accountid_ = GOOGLE_LONGLONG(-1);
  level_ = -1;
  rank_ = -1;
  fightpower_ = -1;
  sec_ = -1;
  prof_ = -1;
  onlinestate_ = -1;
  teamid_ = -1;
  shopscore_ = -1;
  dungeonid_ = -1;
  guildid_ = -1;
}

PersistAttrPersistAttrV1::~PersistAttrPersistAttrV1() {
  // @@protoc_insertion_point(destructor:PersistAttrPersistAttrV1)
  SharedDtor();
}

void PersistAttrPersistAttrV1::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PersistAttrPersistAttrV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PersistAttrPersistAttrV1::descriptor() {
  protobuf_PersistAttrV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PersistAttrV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PersistAttrPersistAttrV1& PersistAttrPersistAttrV1::default_instance() {
  protobuf_PersistAttrV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

PersistAttrPersistAttrV1* PersistAttrPersistAttrV1::New(::google::protobuf::Arena* arena) const {
  PersistAttrPersistAttrV1* n = new PersistAttrPersistAttrV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PersistAttrPersistAttrV1::Clear() {
// @@protoc_insertion_point(message_clear_start:PersistAttrPersistAttrV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!platname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*platname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!sessionkey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sessionkey_.UnsafeRawStringPointer())->clear();
    }
    userid_ = GOOGLE_LONGLONG(-1);
    accountid_ = GOOGLE_LONGLONG(-1);
    level_ = -1;
    rank_ = -1;
    fightpower_ = -1;
  }
  if (cached_has_bits & 32512u) {
    sec_ = -1;
    prof_ = -1;
    onlinestate_ = -1;
    teamid_ = -1;
    shopscore_ = -1;
    dungeonid_ = -1;
    guildid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PersistAttrPersistAttrV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PersistAttrPersistAttrV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string UserName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PersistAttrPersistAttrV1.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 UserId = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string PlatName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->platname().data(), static_cast<int>(this->platname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PersistAttrPersistAttrV1.PlatName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 AccountId = 21 [default = -1];
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_accountid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Level = 30 [default = -1];
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Rank = 31 [default = -1];
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          set_has_rank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 FightPower = 32 [default = -1];
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {
          set_has_fightpower();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &fightpower_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Sec = 33 [default = -1];
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {
          set_has_sec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Prof = 35 [default = -1];
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {
          set_has_prof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &prof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 OnlineState = 36 [default = -1];
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {
          set_has_onlinestate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &onlinestate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TeamId = 37 [default = -1];
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 296 & 0xFF */)) {
          set_has_teamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ShopScore = 39 [default = -1];
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 312 & 0xFF */)) {
          set_has_shopscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &shopscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 DungeonId = 42 [default = -1];
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 336 & 0xFF */)) {
          set_has_dungeonid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &dungeonid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string SessionKey = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 346 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sessionkey().data(), static_cast<int>(this->sessionkey().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PersistAttrPersistAttrV1.SessionKey");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 GuildId = 44 [default = -1];
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 352 & 0xFF */)) {
          set_has_guildid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &guildid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PersistAttrPersistAttrV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PersistAttrPersistAttrV1)
  return false;
#undef DO_
}

void PersistAttrPersistAttrV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PersistAttrPersistAttrV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PersistAttrPersistAttrV1.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // optional sint64 UserId = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(3, this->userid(), output);
  }

  // optional string PlatName = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platname().data(), static_cast<int>(this->platname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PersistAttrPersistAttrV1.PlatName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->platname(), output);
  }

  // optional sint64 AccountId = 21 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(21, this->accountid(), output);
  }

  // optional sint32 Level = 30 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(30, this->level(), output);
  }

  // optional sint32 Rank = 31 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(31, this->rank(), output);
  }

  // optional sint32 FightPower = 32 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(32, this->fightpower(), output);
  }

  // optional sint32 Sec = 33 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(33, this->sec(), output);
  }

  // optional sint32 Prof = 35 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(35, this->prof(), output);
  }

  // optional sint32 OnlineState = 36 [default = -1];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(36, this->onlinestate(), output);
  }

  // optional sint32 TeamId = 37 [default = -1];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(37, this->teamid(), output);
  }

  // optional sint32 ShopScore = 39 [default = -1];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(39, this->shopscore(), output);
  }

  // optional sint32 DungeonId = 42 [default = -1];
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(42, this->dungeonid(), output);
  }

  // optional string SessionKey = 43;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionkey().data(), static_cast<int>(this->sessionkey().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PersistAttrPersistAttrV1.SessionKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      43, this->sessionkey(), output);
  }

  // optional sint32 GuildId = 44 [default = -1];
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(44, this->guildid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PersistAttrPersistAttrV1)
}

::google::protobuf::uint8* PersistAttrPersistAttrV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PersistAttrPersistAttrV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PersistAttrPersistAttrV1.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // optional sint64 UserId = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(3, this->userid(), target);
  }

  // optional string PlatName = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platname().data(), static_cast<int>(this->platname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PersistAttrPersistAttrV1.PlatName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->platname(), target);
  }

  // optional sint64 AccountId = 21 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(21, this->accountid(), target);
  }

  // optional sint32 Level = 30 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(30, this->level(), target);
  }

  // optional sint32 Rank = 31 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(31, this->rank(), target);
  }

  // optional sint32 FightPower = 32 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(32, this->fightpower(), target);
  }

  // optional sint32 Sec = 33 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(33, this->sec(), target);
  }

  // optional sint32 Prof = 35 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(35, this->prof(), target);
  }

  // optional sint32 OnlineState = 36 [default = -1];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(36, this->onlinestate(), target);
  }

  // optional sint32 TeamId = 37 [default = -1];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(37, this->teamid(), target);
  }

  // optional sint32 ShopScore = 39 [default = -1];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(39, this->shopscore(), target);
  }

  // optional sint32 DungeonId = 42 [default = -1];
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(42, this->dungeonid(), target);
  }

  // optional string SessionKey = 43;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionkey().data(), static_cast<int>(this->sessionkey().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PersistAttrPersistAttrV1.SessionKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        43, this->sessionkey(), target);
  }

  // optional sint32 GuildId = 44 [default = -1];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(44, this->guildid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PersistAttrPersistAttrV1)
  return target;
}

size_t PersistAttrPersistAttrV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PersistAttrPersistAttrV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string UserName = 1;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string PlatName = 4;
    if (has_platname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platname());
    }

    // optional string SessionKey = 43;
    if (has_sessionkey()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sessionkey());
    }

    // optional sint64 UserId = 3 [default = -1];
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->userid());
    }

    // optional sint64 AccountId = 21 [default = -1];
    if (has_accountid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->accountid());
    }

    // optional sint32 Level = 30 [default = -1];
    if (has_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->level());
    }

    // optional sint32 Rank = 31 [default = -1];
    if (has_rank()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->rank());
    }

    // optional sint32 FightPower = 32 [default = -1];
    if (has_fightpower()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->fightpower());
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional sint32 Sec = 33 [default = -1];
    if (has_sec()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->sec());
    }

    // optional sint32 Prof = 35 [default = -1];
    if (has_prof()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->prof());
    }

    // optional sint32 OnlineState = 36 [default = -1];
    if (has_onlinestate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->onlinestate());
    }

    // optional sint32 TeamId = 37 [default = -1];
    if (has_teamid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->teamid());
    }

    // optional sint32 ShopScore = 39 [default = -1];
    if (has_shopscore()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->shopscore());
    }

    // optional sint32 DungeonId = 42 [default = -1];
    if (has_dungeonid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->dungeonid());
    }

    // optional sint32 GuildId = 44 [default = -1];
    if (has_guildid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->guildid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PersistAttrPersistAttrV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PersistAttrPersistAttrV1)
  GOOGLE_DCHECK_NE(&from, this);
  const PersistAttrPersistAttrV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PersistAttrPersistAttrV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PersistAttrPersistAttrV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PersistAttrPersistAttrV1)
    MergeFrom(*source);
  }
}

void PersistAttrPersistAttrV1::MergeFrom(const PersistAttrPersistAttrV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PersistAttrPersistAttrV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_platname();
      platname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_sessionkey();
      sessionkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionkey_);
    }
    if (cached_has_bits & 0x00000008u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000010u) {
      accountid_ = from.accountid_;
    }
    if (cached_has_bits & 0x00000020u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000040u) {
      rank_ = from.rank_;
    }
    if (cached_has_bits & 0x00000080u) {
      fightpower_ = from.fightpower_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      sec_ = from.sec_;
    }
    if (cached_has_bits & 0x00000200u) {
      prof_ = from.prof_;
    }
    if (cached_has_bits & 0x00000400u) {
      onlinestate_ = from.onlinestate_;
    }
    if (cached_has_bits & 0x00000800u) {
      teamid_ = from.teamid_;
    }
    if (cached_has_bits & 0x00001000u) {
      shopscore_ = from.shopscore_;
    }
    if (cached_has_bits & 0x00002000u) {
      dungeonid_ = from.dungeonid_;
    }
    if (cached_has_bits & 0x00004000u) {
      guildid_ = from.guildid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PersistAttrPersistAttrV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PersistAttrPersistAttrV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PersistAttrPersistAttrV1::CopyFrom(const PersistAttrPersistAttrV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PersistAttrPersistAttrV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PersistAttrPersistAttrV1::IsInitialized() const {
  return true;
}

void PersistAttrPersistAttrV1::Swap(PersistAttrPersistAttrV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PersistAttrPersistAttrV1::InternalSwap(PersistAttrPersistAttrV1* other) {
  using std::swap;
  username_.Swap(&other->username_);
  platname_.Swap(&other->platname_);
  sessionkey_.Swap(&other->sessionkey_);
  swap(userid_, other->userid_);
  swap(accountid_, other->accountid_);
  swap(level_, other->level_);
  swap(rank_, other->rank_);
  swap(fightpower_, other->fightpower_);
  swap(sec_, other->sec_);
  swap(prof_, other->prof_);
  swap(onlinestate_, other->onlinestate_);
  swap(teamid_, other->teamid_);
  swap(shopscore_, other->shopscore_);
  swap(dungeonid_, other->dungeonid_);
  swap(guildid_, other->guildid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PersistAttrPersistAttrV1::GetMetadata() const {
  protobuf_PersistAttrV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PersistAttrV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PersistAttrPersistAttrV1

// optional string UserName = 1;
bool PersistAttrPersistAttrV1::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PersistAttrPersistAttrV1::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void PersistAttrPersistAttrV1::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void PersistAttrPersistAttrV1::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& PersistAttrPersistAttrV1::username() const {
  // @@protoc_insertion_point(field_get:PersistAttrPersistAttrV1.UserName)
  return username_.GetNoArena();
}
void PersistAttrPersistAttrV1::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PersistAttrPersistAttrV1.UserName)
}
#if LANG_CXX11
void PersistAttrPersistAttrV1::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PersistAttrPersistAttrV1.UserName)
}
#endif
void PersistAttrPersistAttrV1::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PersistAttrPersistAttrV1.UserName)
}
void PersistAttrPersistAttrV1::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PersistAttrPersistAttrV1.UserName)
}
::std::string* PersistAttrPersistAttrV1::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:PersistAttrPersistAttrV1.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PersistAttrPersistAttrV1::release_username() {
  // @@protoc_insertion_point(field_release:PersistAttrPersistAttrV1.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PersistAttrPersistAttrV1::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:PersistAttrPersistAttrV1.UserName)
}

// optional sint64 UserId = 3 [default = -1];
bool PersistAttrPersistAttrV1::has_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PersistAttrPersistAttrV1::set_has_userid() {
  _has_bits_[0] |= 0x00000008u;
}
void PersistAttrPersistAttrV1::clear_has_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
void PersistAttrPersistAttrV1::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 PersistAttrPersistAttrV1::userid() const {
  // @@protoc_insertion_point(field_get:PersistAttrPersistAttrV1.UserId)
  return userid_;
}
void PersistAttrPersistAttrV1::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:PersistAttrPersistAttrV1.UserId)
}

// optional string PlatName = 4;
bool PersistAttrPersistAttrV1::has_platname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PersistAttrPersistAttrV1::set_has_platname() {
  _has_bits_[0] |= 0x00000002u;
}
void PersistAttrPersistAttrV1::clear_has_platname() {
  _has_bits_[0] &= ~0x00000002u;
}
void PersistAttrPersistAttrV1::clear_platname() {
  platname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platname();
}
const ::std::string& PersistAttrPersistAttrV1::platname() const {
  // @@protoc_insertion_point(field_get:PersistAttrPersistAttrV1.PlatName)
  return platname_.GetNoArena();
}
void PersistAttrPersistAttrV1::set_platname(const ::std::string& value) {
  set_has_platname();
  platname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PersistAttrPersistAttrV1.PlatName)
}
#if LANG_CXX11
void PersistAttrPersistAttrV1::set_platname(::std::string&& value) {
  set_has_platname();
  platname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PersistAttrPersistAttrV1.PlatName)
}
#endif
void PersistAttrPersistAttrV1::set_platname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_platname();
  platname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PersistAttrPersistAttrV1.PlatName)
}
void PersistAttrPersistAttrV1::set_platname(const char* value, size_t size) {
  set_has_platname();
  platname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PersistAttrPersistAttrV1.PlatName)
}
::std::string* PersistAttrPersistAttrV1::mutable_platname() {
  set_has_platname();
  // @@protoc_insertion_point(field_mutable:PersistAttrPersistAttrV1.PlatName)
  return platname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PersistAttrPersistAttrV1::release_platname() {
  // @@protoc_insertion_point(field_release:PersistAttrPersistAttrV1.PlatName)
  clear_has_platname();
  return platname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PersistAttrPersistAttrV1::set_allocated_platname(::std::string* platname) {
  if (platname != NULL) {
    set_has_platname();
  } else {
    clear_has_platname();
  }
  platname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platname);
  // @@protoc_insertion_point(field_set_allocated:PersistAttrPersistAttrV1.PlatName)
}

// optional sint64 AccountId = 21 [default = -1];
bool PersistAttrPersistAttrV1::has_accountid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PersistAttrPersistAttrV1::set_has_accountid() {
  _has_bits_[0] |= 0x00000010u;
}
void PersistAttrPersistAttrV1::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000010u;
}
void PersistAttrPersistAttrV1::clear_accountid() {
  accountid_ = GOOGLE_LONGLONG(-1);
  clear_has_accountid();
}
::google::protobuf::int64 PersistAttrPersistAttrV1::accountid() const {
  // @@protoc_insertion_point(field_get:PersistAttrPersistAttrV1.AccountId)
  return accountid_;
}
void PersistAttrPersistAttrV1::set_accountid(::google::protobuf::int64 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:PersistAttrPersistAttrV1.AccountId)
}

// optional sint32 Level = 30 [default = -1];
bool PersistAttrPersistAttrV1::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PersistAttrPersistAttrV1::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
void PersistAttrPersistAttrV1::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
void PersistAttrPersistAttrV1::clear_level() {
  level_ = -1;
  clear_has_level();
}
::google::protobuf::int32 PersistAttrPersistAttrV1::level() const {
  // @@protoc_insertion_point(field_get:PersistAttrPersistAttrV1.Level)
  return level_;
}
void PersistAttrPersistAttrV1::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:PersistAttrPersistAttrV1.Level)
}

// optional sint32 Rank = 31 [default = -1];
bool PersistAttrPersistAttrV1::has_rank() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PersistAttrPersistAttrV1::set_has_rank() {
  _has_bits_[0] |= 0x00000040u;
}
void PersistAttrPersistAttrV1::clear_has_rank() {
  _has_bits_[0] &= ~0x00000040u;
}
void PersistAttrPersistAttrV1::clear_rank() {
  rank_ = -1;
  clear_has_rank();
}
::google::protobuf::int32 PersistAttrPersistAttrV1::rank() const {
  // @@protoc_insertion_point(field_get:PersistAttrPersistAttrV1.Rank)
  return rank_;
}
void PersistAttrPersistAttrV1::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:PersistAttrPersistAttrV1.Rank)
}

// optional sint32 FightPower = 32 [default = -1];
bool PersistAttrPersistAttrV1::has_fightpower() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PersistAttrPersistAttrV1::set_has_fightpower() {
  _has_bits_[0] |= 0x00000080u;
}
void PersistAttrPersistAttrV1::clear_has_fightpower() {
  _has_bits_[0] &= ~0x00000080u;
}
void PersistAttrPersistAttrV1::clear_fightpower() {
  fightpower_ = -1;
  clear_has_fightpower();
}
::google::protobuf::int32 PersistAttrPersistAttrV1::fightpower() const {
  // @@protoc_insertion_point(field_get:PersistAttrPersistAttrV1.FightPower)
  return fightpower_;
}
void PersistAttrPersistAttrV1::set_fightpower(::google::protobuf::int32 value) {
  set_has_fightpower();
  fightpower_ = value;
  // @@protoc_insertion_point(field_set:PersistAttrPersistAttrV1.FightPower)
}

// optional sint32 Sec = 33 [default = -1];
bool PersistAttrPersistAttrV1::has_sec() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void PersistAttrPersistAttrV1::set_has_sec() {
  _has_bits_[0] |= 0x00000100u;
}
void PersistAttrPersistAttrV1::clear_has_sec() {
  _has_bits_[0] &= ~0x00000100u;
}
void PersistAttrPersistAttrV1::clear_sec() {
  sec_ = -1;
  clear_has_sec();
}
::google::protobuf::int32 PersistAttrPersistAttrV1::sec() const {
  // @@protoc_insertion_point(field_get:PersistAttrPersistAttrV1.Sec)
  return sec_;
}
void PersistAttrPersistAttrV1::set_sec(::google::protobuf::int32 value) {
  set_has_sec();
  sec_ = value;
  // @@protoc_insertion_point(field_set:PersistAttrPersistAttrV1.Sec)
}

// optional sint32 Prof = 35 [default = -1];
bool PersistAttrPersistAttrV1::has_prof() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void PersistAttrPersistAttrV1::set_has_prof() {
  _has_bits_[0] |= 0x00000200u;
}
void PersistAttrPersistAttrV1::clear_has_prof() {
  _has_bits_[0] &= ~0x00000200u;
}
void PersistAttrPersistAttrV1::clear_prof() {
  prof_ = -1;
  clear_has_prof();
}
::google::protobuf::int32 PersistAttrPersistAttrV1::prof() const {
  // @@protoc_insertion_point(field_get:PersistAttrPersistAttrV1.Prof)
  return prof_;
}
void PersistAttrPersistAttrV1::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
  // @@protoc_insertion_point(field_set:PersistAttrPersistAttrV1.Prof)
}

// optional sint32 OnlineState = 36 [default = -1];
bool PersistAttrPersistAttrV1::has_onlinestate() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void PersistAttrPersistAttrV1::set_has_onlinestate() {
  _has_bits_[0] |= 0x00000400u;
}
void PersistAttrPersistAttrV1::clear_has_onlinestate() {
  _has_bits_[0] &= ~0x00000400u;
}
void PersistAttrPersistAttrV1::clear_onlinestate() {
  onlinestate_ = -1;
  clear_has_onlinestate();
}
::google::protobuf::int32 PersistAttrPersistAttrV1::onlinestate() const {
  // @@protoc_insertion_point(field_get:PersistAttrPersistAttrV1.OnlineState)
  return onlinestate_;
}
void PersistAttrPersistAttrV1::set_onlinestate(::google::protobuf::int32 value) {
  set_has_onlinestate();
  onlinestate_ = value;
  // @@protoc_insertion_point(field_set:PersistAttrPersistAttrV1.OnlineState)
}

// optional sint32 TeamId = 37 [default = -1];
bool PersistAttrPersistAttrV1::has_teamid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void PersistAttrPersistAttrV1::set_has_teamid() {
  _has_bits_[0] |= 0x00000800u;
}
void PersistAttrPersistAttrV1::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000800u;
}
void PersistAttrPersistAttrV1::clear_teamid() {
  teamid_ = -1;
  clear_has_teamid();
}
::google::protobuf::int32 PersistAttrPersistAttrV1::teamid() const {
  // @@protoc_insertion_point(field_get:PersistAttrPersistAttrV1.TeamId)
  return teamid_;
}
void PersistAttrPersistAttrV1::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:PersistAttrPersistAttrV1.TeamId)
}

// optional sint32 ShopScore = 39 [default = -1];
bool PersistAttrPersistAttrV1::has_shopscore() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void PersistAttrPersistAttrV1::set_has_shopscore() {
  _has_bits_[0] |= 0x00001000u;
}
void PersistAttrPersistAttrV1::clear_has_shopscore() {
  _has_bits_[0] &= ~0x00001000u;
}
void PersistAttrPersistAttrV1::clear_shopscore() {
  shopscore_ = -1;
  clear_has_shopscore();
}
::google::protobuf::int32 PersistAttrPersistAttrV1::shopscore() const {
  // @@protoc_insertion_point(field_get:PersistAttrPersistAttrV1.ShopScore)
  return shopscore_;
}
void PersistAttrPersistAttrV1::set_shopscore(::google::protobuf::int32 value) {
  set_has_shopscore();
  shopscore_ = value;
  // @@protoc_insertion_point(field_set:PersistAttrPersistAttrV1.ShopScore)
}

// optional sint32 DungeonId = 42 [default = -1];
bool PersistAttrPersistAttrV1::has_dungeonid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void PersistAttrPersistAttrV1::set_has_dungeonid() {
  _has_bits_[0] |= 0x00002000u;
}
void PersistAttrPersistAttrV1::clear_has_dungeonid() {
  _has_bits_[0] &= ~0x00002000u;
}
void PersistAttrPersistAttrV1::clear_dungeonid() {
  dungeonid_ = -1;
  clear_has_dungeonid();
}
::google::protobuf::int32 PersistAttrPersistAttrV1::dungeonid() const {
  // @@protoc_insertion_point(field_get:PersistAttrPersistAttrV1.DungeonId)
  return dungeonid_;
}
void PersistAttrPersistAttrV1::set_dungeonid(::google::protobuf::int32 value) {
  set_has_dungeonid();
  dungeonid_ = value;
  // @@protoc_insertion_point(field_set:PersistAttrPersistAttrV1.DungeonId)
}

// optional string SessionKey = 43;
bool PersistAttrPersistAttrV1::has_sessionkey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PersistAttrPersistAttrV1::set_has_sessionkey() {
  _has_bits_[0] |= 0x00000004u;
}
void PersistAttrPersistAttrV1::clear_has_sessionkey() {
  _has_bits_[0] &= ~0x00000004u;
}
void PersistAttrPersistAttrV1::clear_sessionkey() {
  sessionkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sessionkey();
}
const ::std::string& PersistAttrPersistAttrV1::sessionkey() const {
  // @@protoc_insertion_point(field_get:PersistAttrPersistAttrV1.SessionKey)
  return sessionkey_.GetNoArena();
}
void PersistAttrPersistAttrV1::set_sessionkey(const ::std::string& value) {
  set_has_sessionkey();
  sessionkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PersistAttrPersistAttrV1.SessionKey)
}
#if LANG_CXX11
void PersistAttrPersistAttrV1::set_sessionkey(::std::string&& value) {
  set_has_sessionkey();
  sessionkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PersistAttrPersistAttrV1.SessionKey)
}
#endif
void PersistAttrPersistAttrV1::set_sessionkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sessionkey();
  sessionkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PersistAttrPersistAttrV1.SessionKey)
}
void PersistAttrPersistAttrV1::set_sessionkey(const char* value, size_t size) {
  set_has_sessionkey();
  sessionkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PersistAttrPersistAttrV1.SessionKey)
}
::std::string* PersistAttrPersistAttrV1::mutable_sessionkey() {
  set_has_sessionkey();
  // @@protoc_insertion_point(field_mutable:PersistAttrPersistAttrV1.SessionKey)
  return sessionkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PersistAttrPersistAttrV1::release_sessionkey() {
  // @@protoc_insertion_point(field_release:PersistAttrPersistAttrV1.SessionKey)
  clear_has_sessionkey();
  return sessionkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PersistAttrPersistAttrV1::set_allocated_sessionkey(::std::string* sessionkey) {
  if (sessionkey != NULL) {
    set_has_sessionkey();
  } else {
    clear_has_sessionkey();
  }
  sessionkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionkey);
  // @@protoc_insertion_point(field_set_allocated:PersistAttrPersistAttrV1.SessionKey)
}

// optional sint32 GuildId = 44 [default = -1];
bool PersistAttrPersistAttrV1::has_guildid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void PersistAttrPersistAttrV1::set_has_guildid() {
  _has_bits_[0] |= 0x00004000u;
}
void PersistAttrPersistAttrV1::clear_has_guildid() {
  _has_bits_[0] &= ~0x00004000u;
}
void PersistAttrPersistAttrV1::clear_guildid() {
  guildid_ = -1;
  clear_has_guildid();
}
::google::protobuf::int32 PersistAttrPersistAttrV1::guildid() const {
  // @@protoc_insertion_point(field_get:PersistAttrPersistAttrV1.GuildId)
  return guildid_;
}
void PersistAttrPersistAttrV1::set_guildid(::google::protobuf::int32 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:PersistAttrPersistAttrV1.GuildId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
