// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ShopRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ShopRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class ShopRpcSyncDataAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ShopRpcSyncDataAsk>
     _instance;
} _ShopRpcSyncDataAsk_default_instance_;
class ShopRpcSyncDataReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ShopRpcSyncDataReply>
     _instance;
} _ShopRpcSyncDataReply_default_instance_;
class ShopRpcBuyAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ShopRpcBuyAsk>
     _instance;
} _ShopRpcBuyAsk_default_instance_;
class ShopRpcBuyReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ShopRpcBuyReply>
     _instance;
} _ShopRpcBuyReply_default_instance_;
class ShopRpcRefreshItemAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ShopRpcRefreshItemAsk>
     _instance;
} _ShopRpcRefreshItemAsk_default_instance_;
class ShopRpcRefreshItemReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ShopRpcRefreshItemReply>
     _instance;
} _ShopRpcRefreshItemReply_default_instance_;

namespace protobuf_ShopRpc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcSyncDataAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcSyncDataAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcSyncDataReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcSyncDataReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcSyncDataReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcBuyAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcBuyAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcBuyAsk, shoptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcBuyAsk, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcBuyAsk, pos_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcBuyReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcBuyReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcBuyReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcBuyReply, shoptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcBuyReply, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcBuyReply, pos_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcRefreshItemAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcRefreshItemAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcRefreshItemAsk, shoptype_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcRefreshItemReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcRefreshItemReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcRefreshItemReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRpcRefreshItemReply, shoptype_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(ShopRpcSyncDataAsk)},
  { 5, 11, sizeof(ShopRpcSyncDataReply)},
  { 12, 20, sizeof(ShopRpcBuyAsk)},
  { 23, 32, sizeof(ShopRpcBuyReply)},
  { 36, 42, sizeof(ShopRpcRefreshItemAsk)},
  { 43, 50, sizeof(ShopRpcRefreshItemReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShopRpcSyncDataAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShopRpcSyncDataReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShopRpcBuyAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShopRpcBuyReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShopRpcRefreshItemAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShopRpcRefreshItemReply_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ShopRpc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _ShopRpcSyncDataAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ShopRpcSyncDataAsk_default_instance_);_ShopRpcSyncDataReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ShopRpcSyncDataReply_default_instance_);_ShopRpcBuyAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ShopRpcBuyAsk_default_instance_);_ShopRpcBuyReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ShopRpcBuyReply_default_instance_);_ShopRpcRefreshItemAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ShopRpcRefreshItemAsk_default_instance_);_ShopRpcRefreshItemReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ShopRpcRefreshItemReply_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rShopRpc.proto\032\022PublicStruct.proto\"\024\n\022S"
      "hopRpcSyncDataAsk\"-\n\024ShopRpcSyncDataRepl"
      "y\022\025\n\006Result\030\001 \001(\021:\005-9999\"J\n\rShopRpcBuyAs"
      "k\022\024\n\010ShopType\030\001 \001(\021:\002-1\022\022\n\006ItemId\030\002 \001(\021:"
      "\002-1\022\017\n\003Pos\030\003 \001(\021:\002-1\"c\n\017ShopRpcBuyReply\022"
      "\025\n\006Result\030\001 \001(\021:\005-9999\022\024\n\010ShopType\030\002 \001(\021"
      ":\002-1\022\022\n\006ItemId\030\003 \001(\021:\002-1\022\017\n\003Pos\030\004 \001(\021:\002-"
      "1\"-\n\025ShopRpcRefreshItemAsk\022\024\n\010ShopType\030\002"
      " \001(\021:\002-1\"F\n\027ShopRpcRefreshItemReply\022\025\n\006R"
      "esult\030\001 \001(\021:\005-9999\022\024\n\010ShopType\030\002 \001(\021:\002-1"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 400);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ShopRpc.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_ShopRpc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShopRpcSyncDataAsk::ShopRpcSyncDataAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ShopRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShopRpcSyncDataAsk)
}
ShopRpcSyncDataAsk::ShopRpcSyncDataAsk(const ShopRpcSyncDataAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ShopRpcSyncDataAsk)
}

void ShopRpcSyncDataAsk::SharedCtor() {
  _cached_size_ = 0;
}

ShopRpcSyncDataAsk::~ShopRpcSyncDataAsk() {
  // @@protoc_insertion_point(destructor:ShopRpcSyncDataAsk)
  SharedDtor();
}

void ShopRpcSyncDataAsk::SharedDtor() {
}

void ShopRpcSyncDataAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopRpcSyncDataAsk::descriptor() {
  protobuf_ShopRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ShopRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShopRpcSyncDataAsk& ShopRpcSyncDataAsk::default_instance() {
  protobuf_ShopRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShopRpcSyncDataAsk* ShopRpcSyncDataAsk::New(::google::protobuf::Arena* arena) const {
  ShopRpcSyncDataAsk* n = new ShopRpcSyncDataAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShopRpcSyncDataAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:ShopRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShopRpcSyncDataAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ShopRpcSyncDataAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ShopRpcSyncDataAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShopRpcSyncDataAsk)
  return false;
#undef DO_
}

void ShopRpcSyncDataAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShopRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ShopRpcSyncDataAsk)
}

::google::protobuf::uint8* ShopRpcSyncDataAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ShopRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShopRpcSyncDataAsk)
  return target;
}

size_t ShopRpcSyncDataAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShopRpcSyncDataAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopRpcSyncDataAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ShopRpcSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const ShopRpcSyncDataAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShopRpcSyncDataAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ShopRpcSyncDataAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ShopRpcSyncDataAsk)
    MergeFrom(*source);
  }
}

void ShopRpcSyncDataAsk::MergeFrom(const ShopRpcSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShopRpcSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ShopRpcSyncDataAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ShopRpcSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopRpcSyncDataAsk::CopyFrom(const ShopRpcSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShopRpcSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShopRpcSyncDataAsk::IsInitialized() const {
  return true;
}

void ShopRpcSyncDataAsk::Swap(ShopRpcSyncDataAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShopRpcSyncDataAsk::InternalSwap(ShopRpcSyncDataAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShopRpcSyncDataAsk::GetMetadata() const {
  protobuf_ShopRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ShopRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShopRpcSyncDataAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShopRpcSyncDataReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShopRpcSyncDataReply::ShopRpcSyncDataReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ShopRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShopRpcSyncDataReply)
}
ShopRpcSyncDataReply::ShopRpcSyncDataReply(const ShopRpcSyncDataReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ShopRpcSyncDataReply)
}

void ShopRpcSyncDataReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

ShopRpcSyncDataReply::~ShopRpcSyncDataReply() {
  // @@protoc_insertion_point(destructor:ShopRpcSyncDataReply)
  SharedDtor();
}

void ShopRpcSyncDataReply::SharedDtor() {
}

void ShopRpcSyncDataReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopRpcSyncDataReply::descriptor() {
  protobuf_ShopRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ShopRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShopRpcSyncDataReply& ShopRpcSyncDataReply::default_instance() {
  protobuf_ShopRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShopRpcSyncDataReply* ShopRpcSyncDataReply::New(::google::protobuf::Arena* arena) const {
  ShopRpcSyncDataReply* n = new ShopRpcSyncDataReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShopRpcSyncDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ShopRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShopRpcSyncDataReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ShopRpcSyncDataReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShopRpcSyncDataReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShopRpcSyncDataReply)
  return false;
#undef DO_
}

void ShopRpcSyncDataReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShopRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ShopRpcSyncDataReply)
}

::google::protobuf::uint8* ShopRpcSyncDataReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ShopRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShopRpcSyncDataReply)
  return target;
}

size_t ShopRpcSyncDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShopRpcSyncDataReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopRpcSyncDataReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ShopRpcSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ShopRpcSyncDataReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShopRpcSyncDataReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ShopRpcSyncDataReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ShopRpcSyncDataReply)
    MergeFrom(*source);
  }
}

void ShopRpcSyncDataReply::MergeFrom(const ShopRpcSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShopRpcSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void ShopRpcSyncDataReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ShopRpcSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopRpcSyncDataReply::CopyFrom(const ShopRpcSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShopRpcSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShopRpcSyncDataReply::IsInitialized() const {
  return true;
}

void ShopRpcSyncDataReply::Swap(ShopRpcSyncDataReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShopRpcSyncDataReply::InternalSwap(ShopRpcSyncDataReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShopRpcSyncDataReply::GetMetadata() const {
  protobuf_ShopRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ShopRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShopRpcSyncDataReply

// optional sint32 Result = 1 [default = -9999];
bool ShopRpcSyncDataReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShopRpcSyncDataReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void ShopRpcSyncDataReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShopRpcSyncDataReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 ShopRpcSyncDataReply::result() const {
  // @@protoc_insertion_point(field_get:ShopRpcSyncDataReply.Result)
  return result_;
}
void ShopRpcSyncDataReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ShopRpcSyncDataReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShopRpcBuyAsk::kShopTypeFieldNumber;
const int ShopRpcBuyAsk::kItemIdFieldNumber;
const int ShopRpcBuyAsk::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShopRpcBuyAsk::ShopRpcBuyAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ShopRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShopRpcBuyAsk)
}
ShopRpcBuyAsk::ShopRpcBuyAsk(const ShopRpcBuyAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pos_, &from.pos_,
    static_cast<size_t>(reinterpret_cast<char*>(&itemid_) -
    reinterpret_cast<char*>(&pos_)) + sizeof(itemid_));
  // @@protoc_insertion_point(copy_constructor:ShopRpcBuyAsk)
}

void ShopRpcBuyAsk::SharedCtor() {
  _cached_size_ = 0;
  pos_ = -1;
  shoptype_ = -1;
  itemid_ = -1;
}

ShopRpcBuyAsk::~ShopRpcBuyAsk() {
  // @@protoc_insertion_point(destructor:ShopRpcBuyAsk)
  SharedDtor();
}

void ShopRpcBuyAsk::SharedDtor() {
}

void ShopRpcBuyAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopRpcBuyAsk::descriptor() {
  protobuf_ShopRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ShopRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShopRpcBuyAsk& ShopRpcBuyAsk::default_instance() {
  protobuf_ShopRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShopRpcBuyAsk* ShopRpcBuyAsk::New(::google::protobuf::Arena* arena) const {
  ShopRpcBuyAsk* n = new ShopRpcBuyAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShopRpcBuyAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:ShopRpcBuyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    pos_ = -1;
    shoptype_ = -1;
    itemid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShopRpcBuyAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ShopRpcBuyAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 ShopType = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_shoptype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &shoptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ItemId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShopRpcBuyAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShopRpcBuyAsk)
  return false;
#undef DO_
}

void ShopRpcBuyAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShopRpcBuyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ShopType = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->shoptype(), output);
  }

  // optional sint32 ItemId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->itemid(), output);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->pos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ShopRpcBuyAsk)
}

::google::protobuf::uint8* ShopRpcBuyAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ShopRpcBuyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ShopType = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->shoptype(), target);
  }

  // optional sint32 ItemId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->itemid(), target);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->pos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShopRpcBuyAsk)
  return target;
}

size_t ShopRpcBuyAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShopRpcBuyAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 Pos = 3 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 ShopType = 1 [default = -1];
    if (has_shoptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->shoptype());
    }

    // optional sint32 ItemId = 2 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopRpcBuyAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ShopRpcBuyAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const ShopRpcBuyAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShopRpcBuyAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ShopRpcBuyAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ShopRpcBuyAsk)
    MergeFrom(*source);
  }
}

void ShopRpcBuyAsk::MergeFrom(const ShopRpcBuyAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShopRpcBuyAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000002u) {
      shoptype_ = from.shoptype_;
    }
    if (cached_has_bits & 0x00000004u) {
      itemid_ = from.itemid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShopRpcBuyAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ShopRpcBuyAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopRpcBuyAsk::CopyFrom(const ShopRpcBuyAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShopRpcBuyAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShopRpcBuyAsk::IsInitialized() const {
  return true;
}

void ShopRpcBuyAsk::Swap(ShopRpcBuyAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShopRpcBuyAsk::InternalSwap(ShopRpcBuyAsk* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(shoptype_, other->shoptype_);
  swap(itemid_, other->itemid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShopRpcBuyAsk::GetMetadata() const {
  protobuf_ShopRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ShopRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShopRpcBuyAsk

// optional sint32 ShopType = 1 [default = -1];
bool ShopRpcBuyAsk::has_shoptype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShopRpcBuyAsk::set_has_shoptype() {
  _has_bits_[0] |= 0x00000002u;
}
void ShopRpcBuyAsk::clear_has_shoptype() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShopRpcBuyAsk::clear_shoptype() {
  shoptype_ = -1;
  clear_has_shoptype();
}
::google::protobuf::int32 ShopRpcBuyAsk::shoptype() const {
  // @@protoc_insertion_point(field_get:ShopRpcBuyAsk.ShopType)
  return shoptype_;
}
void ShopRpcBuyAsk::set_shoptype(::google::protobuf::int32 value) {
  set_has_shoptype();
  shoptype_ = value;
  // @@protoc_insertion_point(field_set:ShopRpcBuyAsk.ShopType)
}

// optional sint32 ItemId = 2 [default = -1];
bool ShopRpcBuyAsk::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ShopRpcBuyAsk::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
void ShopRpcBuyAsk::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
void ShopRpcBuyAsk::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
::google::protobuf::int32 ShopRpcBuyAsk::itemid() const {
  // @@protoc_insertion_point(field_get:ShopRpcBuyAsk.ItemId)
  return itemid_;
}
void ShopRpcBuyAsk::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:ShopRpcBuyAsk.ItemId)
}

// optional sint32 Pos = 3 [default = -1];
bool ShopRpcBuyAsk::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShopRpcBuyAsk::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
void ShopRpcBuyAsk::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShopRpcBuyAsk::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 ShopRpcBuyAsk::pos() const {
  // @@protoc_insertion_point(field_get:ShopRpcBuyAsk.Pos)
  return pos_;
}
void ShopRpcBuyAsk::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:ShopRpcBuyAsk.Pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShopRpcBuyReply::kResultFieldNumber;
const int ShopRpcBuyReply::kShopTypeFieldNumber;
const int ShopRpcBuyReply::kItemIdFieldNumber;
const int ShopRpcBuyReply::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShopRpcBuyReply::ShopRpcBuyReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ShopRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShopRpcBuyReply)
}
ShopRpcBuyReply::ShopRpcBuyReply(const ShopRpcBuyReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&result_)) + sizeof(pos_));
  // @@protoc_insertion_point(copy_constructor:ShopRpcBuyReply)
}

void ShopRpcBuyReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  shoptype_ = -1;
  itemid_ = -1;
  pos_ = -1;
}

ShopRpcBuyReply::~ShopRpcBuyReply() {
  // @@protoc_insertion_point(destructor:ShopRpcBuyReply)
  SharedDtor();
}

void ShopRpcBuyReply::SharedDtor() {
}

void ShopRpcBuyReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopRpcBuyReply::descriptor() {
  protobuf_ShopRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ShopRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShopRpcBuyReply& ShopRpcBuyReply::default_instance() {
  protobuf_ShopRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShopRpcBuyReply* ShopRpcBuyReply::New(::google::protobuf::Arena* arena) const {
  ShopRpcBuyReply* n = new ShopRpcBuyReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShopRpcBuyReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ShopRpcBuyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    result_ = -9999;
    shoptype_ = -1;
    itemid_ = -1;
    pos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShopRpcBuyReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ShopRpcBuyReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ShopType = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_shoptype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &shoptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ItemId = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShopRpcBuyReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShopRpcBuyReply)
  return false;
#undef DO_
}

void ShopRpcBuyReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShopRpcBuyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 ShopType = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->shoptype(), output);
  }

  // optional sint32 ItemId = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->itemid(), output);
  }

  // optional sint32 Pos = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->pos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ShopRpcBuyReply)
}

::google::protobuf::uint8* ShopRpcBuyReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ShopRpcBuyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 ShopType = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->shoptype(), target);
  }

  // optional sint32 ItemId = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->itemid(), target);
  }

  // optional sint32 Pos = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->pos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShopRpcBuyReply)
  return target;
}

size_t ShopRpcBuyReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShopRpcBuyReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 ShopType = 2 [default = -1];
    if (has_shoptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->shoptype());
    }

    // optional sint32 ItemId = 3 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemid());
    }

    // optional sint32 Pos = 4 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopRpcBuyReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ShopRpcBuyReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ShopRpcBuyReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShopRpcBuyReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ShopRpcBuyReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ShopRpcBuyReply)
    MergeFrom(*source);
  }
}

void ShopRpcBuyReply::MergeFrom(const ShopRpcBuyReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShopRpcBuyReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      shoptype_ = from.shoptype_;
    }
    if (cached_has_bits & 0x00000004u) {
      itemid_ = from.itemid_;
    }
    if (cached_has_bits & 0x00000008u) {
      pos_ = from.pos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShopRpcBuyReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ShopRpcBuyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopRpcBuyReply::CopyFrom(const ShopRpcBuyReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShopRpcBuyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShopRpcBuyReply::IsInitialized() const {
  return true;
}

void ShopRpcBuyReply::Swap(ShopRpcBuyReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShopRpcBuyReply::InternalSwap(ShopRpcBuyReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(shoptype_, other->shoptype_);
  swap(itemid_, other->itemid_);
  swap(pos_, other->pos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShopRpcBuyReply::GetMetadata() const {
  protobuf_ShopRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ShopRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShopRpcBuyReply

// optional sint32 Result = 1 [default = -9999];
bool ShopRpcBuyReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShopRpcBuyReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void ShopRpcBuyReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShopRpcBuyReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 ShopRpcBuyReply::result() const {
  // @@protoc_insertion_point(field_get:ShopRpcBuyReply.Result)
  return result_;
}
void ShopRpcBuyReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ShopRpcBuyReply.Result)
}

// optional sint32 ShopType = 2 [default = -1];
bool ShopRpcBuyReply::has_shoptype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShopRpcBuyReply::set_has_shoptype() {
  _has_bits_[0] |= 0x00000002u;
}
void ShopRpcBuyReply::clear_has_shoptype() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShopRpcBuyReply::clear_shoptype() {
  shoptype_ = -1;
  clear_has_shoptype();
}
::google::protobuf::int32 ShopRpcBuyReply::shoptype() const {
  // @@protoc_insertion_point(field_get:ShopRpcBuyReply.ShopType)
  return shoptype_;
}
void ShopRpcBuyReply::set_shoptype(::google::protobuf::int32 value) {
  set_has_shoptype();
  shoptype_ = value;
  // @@protoc_insertion_point(field_set:ShopRpcBuyReply.ShopType)
}

// optional sint32 ItemId = 3 [default = -1];
bool ShopRpcBuyReply::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ShopRpcBuyReply::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
void ShopRpcBuyReply::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
void ShopRpcBuyReply::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
::google::protobuf::int32 ShopRpcBuyReply::itemid() const {
  // @@protoc_insertion_point(field_get:ShopRpcBuyReply.ItemId)
  return itemid_;
}
void ShopRpcBuyReply::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:ShopRpcBuyReply.ItemId)
}

// optional sint32 Pos = 4 [default = -1];
bool ShopRpcBuyReply::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ShopRpcBuyReply::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
void ShopRpcBuyReply::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
void ShopRpcBuyReply::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 ShopRpcBuyReply::pos() const {
  // @@protoc_insertion_point(field_get:ShopRpcBuyReply.Pos)
  return pos_;
}
void ShopRpcBuyReply::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:ShopRpcBuyReply.Pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShopRpcRefreshItemAsk::kShopTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShopRpcRefreshItemAsk::ShopRpcRefreshItemAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ShopRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShopRpcRefreshItemAsk)
}
ShopRpcRefreshItemAsk::ShopRpcRefreshItemAsk(const ShopRpcRefreshItemAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  shoptype_ = from.shoptype_;
  // @@protoc_insertion_point(copy_constructor:ShopRpcRefreshItemAsk)
}

void ShopRpcRefreshItemAsk::SharedCtor() {
  _cached_size_ = 0;
  shoptype_ = -1;
}

ShopRpcRefreshItemAsk::~ShopRpcRefreshItemAsk() {
  // @@protoc_insertion_point(destructor:ShopRpcRefreshItemAsk)
  SharedDtor();
}

void ShopRpcRefreshItemAsk::SharedDtor() {
}

void ShopRpcRefreshItemAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopRpcRefreshItemAsk::descriptor() {
  protobuf_ShopRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ShopRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShopRpcRefreshItemAsk& ShopRpcRefreshItemAsk::default_instance() {
  protobuf_ShopRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShopRpcRefreshItemAsk* ShopRpcRefreshItemAsk::New(::google::protobuf::Arena* arena) const {
  ShopRpcRefreshItemAsk* n = new ShopRpcRefreshItemAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShopRpcRefreshItemAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:ShopRpcRefreshItemAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shoptype_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShopRpcRefreshItemAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ShopRpcRefreshItemAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 ShopType = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_shoptype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &shoptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShopRpcRefreshItemAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShopRpcRefreshItemAsk)
  return false;
#undef DO_
}

void ShopRpcRefreshItemAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShopRpcRefreshItemAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ShopType = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->shoptype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ShopRpcRefreshItemAsk)
}

::google::protobuf::uint8* ShopRpcRefreshItemAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ShopRpcRefreshItemAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ShopType = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->shoptype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShopRpcRefreshItemAsk)
  return target;
}

size_t ShopRpcRefreshItemAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShopRpcRefreshItemAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 ShopType = 2 [default = -1];
  if (has_shoptype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->shoptype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopRpcRefreshItemAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ShopRpcRefreshItemAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const ShopRpcRefreshItemAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShopRpcRefreshItemAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ShopRpcRefreshItemAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ShopRpcRefreshItemAsk)
    MergeFrom(*source);
  }
}

void ShopRpcRefreshItemAsk::MergeFrom(const ShopRpcRefreshItemAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShopRpcRefreshItemAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_shoptype()) {
    set_shoptype(from.shoptype());
  }
}

void ShopRpcRefreshItemAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ShopRpcRefreshItemAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopRpcRefreshItemAsk::CopyFrom(const ShopRpcRefreshItemAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShopRpcRefreshItemAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShopRpcRefreshItemAsk::IsInitialized() const {
  return true;
}

void ShopRpcRefreshItemAsk::Swap(ShopRpcRefreshItemAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShopRpcRefreshItemAsk::InternalSwap(ShopRpcRefreshItemAsk* other) {
  using std::swap;
  swap(shoptype_, other->shoptype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShopRpcRefreshItemAsk::GetMetadata() const {
  protobuf_ShopRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ShopRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShopRpcRefreshItemAsk

// optional sint32 ShopType = 2 [default = -1];
bool ShopRpcRefreshItemAsk::has_shoptype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShopRpcRefreshItemAsk::set_has_shoptype() {
  _has_bits_[0] |= 0x00000001u;
}
void ShopRpcRefreshItemAsk::clear_has_shoptype() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShopRpcRefreshItemAsk::clear_shoptype() {
  shoptype_ = -1;
  clear_has_shoptype();
}
::google::protobuf::int32 ShopRpcRefreshItemAsk::shoptype() const {
  // @@protoc_insertion_point(field_get:ShopRpcRefreshItemAsk.ShopType)
  return shoptype_;
}
void ShopRpcRefreshItemAsk::set_shoptype(::google::protobuf::int32 value) {
  set_has_shoptype();
  shoptype_ = value;
  // @@protoc_insertion_point(field_set:ShopRpcRefreshItemAsk.ShopType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShopRpcRefreshItemReply::kResultFieldNumber;
const int ShopRpcRefreshItemReply::kShopTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShopRpcRefreshItemReply::ShopRpcRefreshItemReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ShopRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ShopRpcRefreshItemReply)
}
ShopRpcRefreshItemReply::ShopRpcRefreshItemReply(const ShopRpcRefreshItemReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&shoptype_) -
    reinterpret_cast<char*>(&result_)) + sizeof(shoptype_));
  // @@protoc_insertion_point(copy_constructor:ShopRpcRefreshItemReply)
}

void ShopRpcRefreshItemReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  shoptype_ = -1;
}

ShopRpcRefreshItemReply::~ShopRpcRefreshItemReply() {
  // @@protoc_insertion_point(destructor:ShopRpcRefreshItemReply)
  SharedDtor();
}

void ShopRpcRefreshItemReply::SharedDtor() {
}

void ShopRpcRefreshItemReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopRpcRefreshItemReply::descriptor() {
  protobuf_ShopRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ShopRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShopRpcRefreshItemReply& ShopRpcRefreshItemReply::default_instance() {
  protobuf_ShopRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShopRpcRefreshItemReply* ShopRpcRefreshItemReply::New(::google::protobuf::Arena* arena) const {
  ShopRpcRefreshItemReply* n = new ShopRpcRefreshItemReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShopRpcRefreshItemReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ShopRpcRefreshItemReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    result_ = -9999;
    shoptype_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShopRpcRefreshItemReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ShopRpcRefreshItemReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ShopType = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_shoptype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &shoptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ShopRpcRefreshItemReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ShopRpcRefreshItemReply)
  return false;
#undef DO_
}

void ShopRpcRefreshItemReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ShopRpcRefreshItemReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 ShopType = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->shoptype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ShopRpcRefreshItemReply)
}

::google::protobuf::uint8* ShopRpcRefreshItemReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ShopRpcRefreshItemReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 ShopType = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->shoptype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShopRpcRefreshItemReply)
  return target;
}

size_t ShopRpcRefreshItemReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShopRpcRefreshItemReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 ShopType = 2 [default = -1];
    if (has_shoptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->shoptype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopRpcRefreshItemReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ShopRpcRefreshItemReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ShopRpcRefreshItemReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShopRpcRefreshItemReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ShopRpcRefreshItemReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ShopRpcRefreshItemReply)
    MergeFrom(*source);
  }
}

void ShopRpcRefreshItemReply::MergeFrom(const ShopRpcRefreshItemReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ShopRpcRefreshItemReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      shoptype_ = from.shoptype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShopRpcRefreshItemReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ShopRpcRefreshItemReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopRpcRefreshItemReply::CopyFrom(const ShopRpcRefreshItemReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShopRpcRefreshItemReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShopRpcRefreshItemReply::IsInitialized() const {
  return true;
}

void ShopRpcRefreshItemReply::Swap(ShopRpcRefreshItemReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShopRpcRefreshItemReply::InternalSwap(ShopRpcRefreshItemReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(shoptype_, other->shoptype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShopRpcRefreshItemReply::GetMetadata() const {
  protobuf_ShopRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ShopRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShopRpcRefreshItemReply

// optional sint32 Result = 1 [default = -9999];
bool ShopRpcRefreshItemReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShopRpcRefreshItemReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void ShopRpcRefreshItemReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShopRpcRefreshItemReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 ShopRpcRefreshItemReply::result() const {
  // @@protoc_insertion_point(field_get:ShopRpcRefreshItemReply.Result)
  return result_;
}
void ShopRpcRefreshItemReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ShopRpcRefreshItemReply.Result)
}

// optional sint32 ShopType = 2 [default = -1];
bool ShopRpcRefreshItemReply::has_shoptype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShopRpcRefreshItemReply::set_has_shoptype() {
  _has_bits_[0] |= 0x00000002u;
}
void ShopRpcRefreshItemReply::clear_has_shoptype() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShopRpcRefreshItemReply::clear_shoptype() {
  shoptype_ = -1;
  clear_has_shoptype();
}
::google::protobuf::int32 ShopRpcRefreshItemReply::shoptype() const {
  // @@protoc_insertion_point(field_get:ShopRpcRefreshItemReply.ShopType)
  return shoptype_;
}
void ShopRpcRefreshItemReply::set_shoptype(::google::protobuf::int32 value) {
  set_has_shoptype();
  shoptype_ = value;
  // @@protoc_insertion_point(field_set:ShopRpcRefreshItemReply.ShopType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
