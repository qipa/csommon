// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GuildRpc.proto

#ifndef PROTOBUF_GuildRpc_2eproto__INCLUDED
#define PROTOBUF_GuildRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)
class GuildRpcApplyGuildAsk;
class GuildRpcApplyGuildAskDefaultTypeInternal;
extern GuildRpcApplyGuildAskDefaultTypeInternal _GuildRpcApplyGuildAsk_default_instance_;
class GuildRpcApplyGuildHandleAsk;
class GuildRpcApplyGuildHandleAskDefaultTypeInternal;
extern GuildRpcApplyGuildHandleAskDefaultTypeInternal _GuildRpcApplyGuildHandleAsk_default_instance_;
class GuildRpcApplyGuildHandleReply;
class GuildRpcApplyGuildHandleReplyDefaultTypeInternal;
extern GuildRpcApplyGuildHandleReplyDefaultTypeInternal _GuildRpcApplyGuildHandleReply_default_instance_;
class GuildRpcApplyGuildReply;
class GuildRpcApplyGuildReplyDefaultTypeInternal;
extern GuildRpcApplyGuildReplyDefaultTypeInternal _GuildRpcApplyGuildReply_default_instance_;
class GuildRpcAppointDutyAsk;
class GuildRpcAppointDutyAskDefaultTypeInternal;
extern GuildRpcAppointDutyAskDefaultTypeInternal _GuildRpcAppointDutyAsk_default_instance_;
class GuildRpcAppointDutyReply;
class GuildRpcAppointDutyReplyDefaultTypeInternal;
extern GuildRpcAppointDutyReplyDefaultTypeInternal _GuildRpcAppointDutyReply_default_instance_;
class GuildRpcBeInvitedHandleAsk;
class GuildRpcBeInvitedHandleAskDefaultTypeInternal;
extern GuildRpcBeInvitedHandleAskDefaultTypeInternal _GuildRpcBeInvitedHandleAsk_default_instance_;
class GuildRpcBeInvitedHandleReply;
class GuildRpcBeInvitedHandleReplyDefaultTypeInternal;
extern GuildRpcBeInvitedHandleReplyDefaultTypeInternal _GuildRpcBeInvitedHandleReply_default_instance_;
class GuildRpcBeInvitedNoticeNotify;
class GuildRpcBeInvitedNoticeNotifyDefaultTypeInternal;
extern GuildRpcBeInvitedNoticeNotifyDefaultTypeInternal _GuildRpcBeInvitedNoticeNotify_default_instance_;
class GuildRpcBreakUpAsk;
class GuildRpcBreakUpAskDefaultTypeInternal;
extern GuildRpcBreakUpAskDefaultTypeInternal _GuildRpcBreakUpAsk_default_instance_;
class GuildRpcBreakUpReply;
class GuildRpcBreakUpReplyDefaultTypeInternal;
extern GuildRpcBreakUpReplyDefaultTypeInternal _GuildRpcBreakUpReply_default_instance_;
class GuildRpcChangeAnnouncementAsk;
class GuildRpcChangeAnnouncementAskDefaultTypeInternal;
extern GuildRpcChangeAnnouncementAskDefaultTypeInternal _GuildRpcChangeAnnouncementAsk_default_instance_;
class GuildRpcChangeAnnouncementReply;
class GuildRpcChangeAnnouncementReplyDefaultTypeInternal;
extern GuildRpcChangeAnnouncementReplyDefaultTypeInternal _GuildRpcChangeAnnouncementReply_default_instance_;
class GuildRpcChangeGuildNameAsk;
class GuildRpcChangeGuildNameAskDefaultTypeInternal;
extern GuildRpcChangeGuildNameAskDefaultTypeInternal _GuildRpcChangeGuildNameAsk_default_instance_;
class GuildRpcChangeGuildNameReply;
class GuildRpcChangeGuildNameReplyDefaultTypeInternal;
extern GuildRpcChangeGuildNameReplyDefaultTypeInternal _GuildRpcChangeGuildNameReply_default_instance_;
class GuildRpcCreateGuildAsk;
class GuildRpcCreateGuildAskDefaultTypeInternal;
extern GuildRpcCreateGuildAskDefaultTypeInternal _GuildRpcCreateGuildAsk_default_instance_;
class GuildRpcCreateGuildDungeonAsk;
class GuildRpcCreateGuildDungeonAskDefaultTypeInternal;
extern GuildRpcCreateGuildDungeonAskDefaultTypeInternal _GuildRpcCreateGuildDungeonAsk_default_instance_;
class GuildRpcCreateGuildDungeonReply;
class GuildRpcCreateGuildDungeonReplyDefaultTypeInternal;
extern GuildRpcCreateGuildDungeonReplyDefaultTypeInternal _GuildRpcCreateGuildDungeonReply_default_instance_;
class GuildRpcCreateGuildReply;
class GuildRpcCreateGuildReplyDefaultTypeInternal;
extern GuildRpcCreateGuildReplyDefaultTypeInternal _GuildRpcCreateGuildReply_default_instance_;
class GuildRpcCreateGuildWarAsk;
class GuildRpcCreateGuildWarAskDefaultTypeInternal;
extern GuildRpcCreateGuildWarAskDefaultTypeInternal _GuildRpcCreateGuildWarAsk_default_instance_;
class GuildRpcCreateGuildWarReply;
class GuildRpcCreateGuildWarReplyDefaultTypeInternal;
extern GuildRpcCreateGuildWarReplyDefaultTypeInternal _GuildRpcCreateGuildWarReply_default_instance_;
class GuildRpcEnterGuildDungeonAsk;
class GuildRpcEnterGuildDungeonAskDefaultTypeInternal;
extern GuildRpcEnterGuildDungeonAskDefaultTypeInternal _GuildRpcEnterGuildDungeonAsk_default_instance_;
class GuildRpcEnterGuildDungeonReply;
class GuildRpcEnterGuildDungeonReplyDefaultTypeInternal;
extern GuildRpcEnterGuildDungeonReplyDefaultTypeInternal _GuildRpcEnterGuildDungeonReply_default_instance_;
class GuildRpcEnterGuildWarAsk;
class GuildRpcEnterGuildWarAskDefaultTypeInternal;
extern GuildRpcEnterGuildWarAskDefaultTypeInternal _GuildRpcEnterGuildWarAsk_default_instance_;
class GuildRpcEnterGuildWarReply;
class GuildRpcEnterGuildWarReplyDefaultTypeInternal;
extern GuildRpcEnterGuildWarReplyDefaultTypeInternal _GuildRpcEnterGuildWarReply_default_instance_;
class GuildRpcExitGuildAsk;
class GuildRpcExitGuildAskDefaultTypeInternal;
extern GuildRpcExitGuildAskDefaultTypeInternal _GuildRpcExitGuildAsk_default_instance_;
class GuildRpcExitGuildReply;
class GuildRpcExitGuildReplyDefaultTypeInternal;
extern GuildRpcExitGuildReplyDefaultTypeInternal _GuildRpcExitGuildReply_default_instance_;
class GuildRpcGuildScienceLvUpAsk;
class GuildRpcGuildScienceLvUpAskDefaultTypeInternal;
extern GuildRpcGuildScienceLvUpAskDefaultTypeInternal _GuildRpcGuildScienceLvUpAsk_default_instance_;
class GuildRpcGuildScienceLvUpReply;
class GuildRpcGuildScienceLvUpReplyDefaultTypeInternal;
extern GuildRpcGuildScienceLvUpReplyDefaultTypeInternal _GuildRpcGuildScienceLvUpReply_default_instance_;
class GuildRpcHallLvUpAsk;
class GuildRpcHallLvUpAskDefaultTypeInternal;
extern GuildRpcHallLvUpAskDefaultTypeInternal _GuildRpcHallLvUpAsk_default_instance_;
class GuildRpcHallLvUpReply;
class GuildRpcHallLvUpReplyDefaultTypeInternal;
extern GuildRpcHallLvUpReplyDefaultTypeInternal _GuildRpcHallLvUpReply_default_instance_;
class GuildRpcHouseLvUpAsk;
class GuildRpcHouseLvUpAskDefaultTypeInternal;
extern GuildRpcHouseLvUpAskDefaultTypeInternal _GuildRpcHouseLvUpAsk_default_instance_;
class GuildRpcHouseLvUpReply;
class GuildRpcHouseLvUpReplyDefaultTypeInternal;
extern GuildRpcHouseLvUpReplyDefaultTypeInternal _GuildRpcHouseLvUpReply_default_instance_;
class GuildRpcInviteToJoinAsk;
class GuildRpcInviteToJoinAskDefaultTypeInternal;
extern GuildRpcInviteToJoinAskDefaultTypeInternal _GuildRpcInviteToJoinAsk_default_instance_;
class GuildRpcInviteToJoinReply;
class GuildRpcInviteToJoinReplyDefaultTypeInternal;
extern GuildRpcInviteToJoinReplyDefaultTypeInternal _GuildRpcInviteToJoinReply_default_instance_;
class GuildRpcKickoutAsk;
class GuildRpcKickoutAskDefaultTypeInternal;
extern GuildRpcKickoutAskDefaultTypeInternal _GuildRpcKickoutAsk_default_instance_;
class GuildRpcKickoutReply;
class GuildRpcKickoutReplyDefaultTypeInternal;
extern GuildRpcKickoutReplyDefaultTypeInternal _GuildRpcKickoutReply_default_instance_;
class GuildRpcKongfuHallLvUpAsk;
class GuildRpcKongfuHallLvUpAskDefaultTypeInternal;
extern GuildRpcKongfuHallLvUpAskDefaultTypeInternal _GuildRpcKongfuHallLvUpAsk_default_instance_;
class GuildRpcKongfuHallLvUpReply;
class GuildRpcKongfuHallLvUpReplyDefaultTypeInternal;
extern GuildRpcKongfuHallLvUpReplyDefaultTypeInternal _GuildRpcKongfuHallLvUpReply_default_instance_;
class GuildRpcOpenScienceAttrAsk;
class GuildRpcOpenScienceAttrAskDefaultTypeInternal;
extern GuildRpcOpenScienceAttrAskDefaultTypeInternal _GuildRpcOpenScienceAttrAsk_default_instance_;
class GuildRpcOpenScienceAttrReply;
class GuildRpcOpenScienceAttrReplyDefaultTypeInternal;
extern GuildRpcOpenScienceAttrReplyDefaultTypeInternal _GuildRpcOpenScienceAttrReply_default_instance_;
class GuildRpcQuickApplyAsk;
class GuildRpcQuickApplyAskDefaultTypeInternal;
extern GuildRpcQuickApplyAskDefaultTypeInternal _GuildRpcQuickApplyAsk_default_instance_;
class GuildRpcQuickApplyReply;
class GuildRpcQuickApplyReplyDefaultTypeInternal;
extern GuildRpcQuickApplyReplyDefaultTypeInternal _GuildRpcQuickApplyReply_default_instance_;
class GuildRpcReqGuildListAsk;
class GuildRpcReqGuildListAskDefaultTypeInternal;
extern GuildRpcReqGuildListAskDefaultTypeInternal _GuildRpcReqGuildListAsk_default_instance_;
class GuildRpcReqGuildListReply;
class GuildRpcReqGuildListReplyDefaultTypeInternal;
extern GuildRpcReqGuildListReplyDefaultTypeInternal _GuildRpcReqGuildListReply_default_instance_;
class GuildRpcResignDutyAsk;
class GuildRpcResignDutyAskDefaultTypeInternal;
extern GuildRpcResignDutyAskDefaultTypeInternal _GuildRpcResignDutyAsk_default_instance_;
class GuildRpcResignDutyReply;
class GuildRpcResignDutyReplyDefaultTypeInternal;
extern GuildRpcResignDutyReplyDefaultTypeInternal _GuildRpcResignDutyReply_default_instance_;
class GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify;
class GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotifyDefaultTypeInternal;
extern GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotifyDefaultTypeInternal _GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify_default_instance_;
class GuildRpcStoreroomLvUpAsk;
class GuildRpcStoreroomLvUpAskDefaultTypeInternal;
extern GuildRpcStoreroomLvUpAskDefaultTypeInternal _GuildRpcStoreroomLvUpAsk_default_instance_;
class GuildRpcStoreroomLvUpReply;
class GuildRpcStoreroomLvUpReplyDefaultTypeInternal;
extern GuildRpcStoreroomLvUpReplyDefaultTypeInternal _GuildRpcStoreroomLvUpReply_default_instance_;
class GuildRpcSyncDataAsk;
class GuildRpcSyncDataAskDefaultTypeInternal;
extern GuildRpcSyncDataAskDefaultTypeInternal _GuildRpcSyncDataAsk_default_instance_;
class GuildRpcSyncDataReply;
class GuildRpcSyncDataReplyDefaultTypeInternal;
extern GuildRpcSyncDataReplyDefaultTypeInternal _GuildRpcSyncDataReply_default_instance_;
class GuildRpcSyncMyTeamDataNotify;
class GuildRpcSyncMyTeamDataNotifyDefaultTypeInternal;
extern GuildRpcSyncMyTeamDataNotifyDefaultTypeInternal _GuildRpcSyncMyTeamDataNotify_default_instance_;
class GuildRpcSyncNoticeOfAddApplyListNotify;
class GuildRpcSyncNoticeOfAddApplyListNotifyDefaultTypeInternal;
extern GuildRpcSyncNoticeOfAddApplyListNotifyDefaultTypeInternal _GuildRpcSyncNoticeOfAddApplyListNotify_default_instance_;
class GuildRpcSyncNoticeOfAddEventNotify;
class GuildRpcSyncNoticeOfAddEventNotifyDefaultTypeInternal;
extern GuildRpcSyncNoticeOfAddEventNotifyDefaultTypeInternal _GuildRpcSyncNoticeOfAddEventNotify_default_instance_;
class GuildRpcSyncNoticeOfAddMemberNotify;
class GuildRpcSyncNoticeOfAddMemberNotifyDefaultTypeInternal;
extern GuildRpcSyncNoticeOfAddMemberNotifyDefaultTypeInternal _GuildRpcSyncNoticeOfAddMemberNotify_default_instance_;
class GuildRpcSyncNoticeOfBreakupNotify;
class GuildRpcSyncNoticeOfBreakupNotifyDefaultTypeInternal;
extern GuildRpcSyncNoticeOfBreakupNotifyDefaultTypeInternal _GuildRpcSyncNoticeOfBreakupNotify_default_instance_;
class GuildRpcSyncNoticeOfChangeAnnouncementNotify;
class GuildRpcSyncNoticeOfChangeAnnouncementNotifyDefaultTypeInternal;
extern GuildRpcSyncNoticeOfChangeAnnouncementNotifyDefaultTypeInternal _GuildRpcSyncNoticeOfChangeAnnouncementNotify_default_instance_;
class GuildRpcSyncNoticeOfDelApplyListNotify;
class GuildRpcSyncNoticeOfDelApplyListNotifyDefaultTypeInternal;
extern GuildRpcSyncNoticeOfDelApplyListNotifyDefaultTypeInternal _GuildRpcSyncNoticeOfDelApplyListNotify_default_instance_;
class GuildRpcSyncNoticeOfDelMemberNotify;
class GuildRpcSyncNoticeOfDelMemberNotifyDefaultTypeInternal;
extern GuildRpcSyncNoticeOfDelMemberNotifyDefaultTypeInternal _GuildRpcSyncNoticeOfDelMemberNotify_default_instance_;
class GuildRpcSyncNoticeOfGuildBaseDataNotify;
class GuildRpcSyncNoticeOfGuildBaseDataNotifyDefaultTypeInternal;
extern GuildRpcSyncNoticeOfGuildBaseDataNotifyDefaultTypeInternal _GuildRpcSyncNoticeOfGuildBaseDataNotify_default_instance_;
class GuildRpcSyncNoticeOfGuildMemberChangeNotify;
class GuildRpcSyncNoticeOfGuildMemberChangeNotifyDefaultTypeInternal;
extern GuildRpcSyncNoticeOfGuildMemberChangeNotifyDefaultTypeInternal _GuildRpcSyncNoticeOfGuildMemberChangeNotify_default_instance_;
class GuildRpcSyncNoticeOfHallLvUpNotify;
class GuildRpcSyncNoticeOfHallLvUpNotifyDefaultTypeInternal;
extern GuildRpcSyncNoticeOfHallLvUpNotifyDefaultTypeInternal _GuildRpcSyncNoticeOfHallLvUpNotify_default_instance_;
class GuildRpcSyncNoticeOfHouseLvUpNotify;
class GuildRpcSyncNoticeOfHouseLvUpNotifyDefaultTypeInternal;
extern GuildRpcSyncNoticeOfHouseLvUpNotifyDefaultTypeInternal _GuildRpcSyncNoticeOfHouseLvUpNotify_default_instance_;
class GuildRpcSyncNoticeOfKongfuHallLvUpNotify;
class GuildRpcSyncNoticeOfKongfuHallLvUpNotifyDefaultTypeInternal;
extern GuildRpcSyncNoticeOfKongfuHallLvUpNotifyDefaultTypeInternal _GuildRpcSyncNoticeOfKongfuHallLvUpNotify_default_instance_;
class GuildRpcSyncNoticeOfOpenGuildWarNotify;
class GuildRpcSyncNoticeOfOpenGuildWarNotifyDefaultTypeInternal;
extern GuildRpcSyncNoticeOfOpenGuildWarNotifyDefaultTypeInternal _GuildRpcSyncNoticeOfOpenGuildWarNotify_default_instance_;
class GuildRpcSyncNoticeOfStorerommLvUpNotify;
class GuildRpcSyncNoticeOfStorerommLvUpNotifyDefaultTypeInternal;
extern GuildRpcSyncNoticeOfStorerommLvUpNotifyDefaultTypeInternal _GuildRpcSyncNoticeOfStorerommLvUpNotify_default_instance_;

namespace protobuf_GuildRpc_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_GuildRpc_2eproto

// ===================================================================

class GuildRpcSyncDataAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcSyncDataAsk) */ {
 public:
  GuildRpcSyncDataAsk();
  virtual ~GuildRpcSyncDataAsk();

  GuildRpcSyncDataAsk(const GuildRpcSyncDataAsk& from);

  inline GuildRpcSyncDataAsk& operator=(const GuildRpcSyncDataAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcSyncDataAsk(GuildRpcSyncDataAsk&& from) noexcept
    : GuildRpcSyncDataAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcSyncDataAsk& operator=(GuildRpcSyncDataAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcSyncDataAsk& default_instance();

  static inline const GuildRpcSyncDataAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcSyncDataAsk*>(
               &_GuildRpcSyncDataAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GuildRpcSyncDataAsk* other);
  friend void swap(GuildRpcSyncDataAsk& a, GuildRpcSyncDataAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcSyncDataAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcSyncDataAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcSyncDataAsk& from);
  void MergeFrom(const GuildRpcSyncDataAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcSyncDataAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GuildRpcSyncDataAsk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcSyncDataReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcSyncDataReply) */ {
 public:
  GuildRpcSyncDataReply();
  virtual ~GuildRpcSyncDataReply();

  GuildRpcSyncDataReply(const GuildRpcSyncDataReply& from);

  inline GuildRpcSyncDataReply& operator=(const GuildRpcSyncDataReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcSyncDataReply(GuildRpcSyncDataReply&& from) noexcept
    : GuildRpcSyncDataReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcSyncDataReply& operator=(GuildRpcSyncDataReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcSyncDataReply& default_instance();

  static inline const GuildRpcSyncDataReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcSyncDataReply*>(
               &_GuildRpcSyncDataReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GuildRpcSyncDataReply* other);
  friend void swap(GuildRpcSyncDataReply& a, GuildRpcSyncDataReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcSyncDataReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcSyncDataReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcSyncDataReply& from);
  void MergeFrom(const GuildRpcSyncDataReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcSyncDataReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GuildInfoObj GuildData = 2;
  bool has_guilddata() const;
  void clear_guilddata();
  static const int kGuildDataFieldNumber = 2;
  const ::GuildInfoObj& guilddata() const;
  ::GuildInfoObj* mutable_guilddata();
  ::GuildInfoObj* release_guilddata();
  void set_allocated_guilddata(::GuildInfoObj* guilddata);

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcSyncDataReply)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_guilddata();
  void clear_has_guilddata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::GuildInfoObj* guilddata_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcCreateGuildAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcCreateGuildAsk) */ {
 public:
  GuildRpcCreateGuildAsk();
  virtual ~GuildRpcCreateGuildAsk();

  GuildRpcCreateGuildAsk(const GuildRpcCreateGuildAsk& from);

  inline GuildRpcCreateGuildAsk& operator=(const GuildRpcCreateGuildAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcCreateGuildAsk(GuildRpcCreateGuildAsk&& from) noexcept
    : GuildRpcCreateGuildAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcCreateGuildAsk& operator=(GuildRpcCreateGuildAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcCreateGuildAsk& default_instance();

  static inline const GuildRpcCreateGuildAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcCreateGuildAsk*>(
               &_GuildRpcCreateGuildAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GuildRpcCreateGuildAsk* other);
  friend void swap(GuildRpcCreateGuildAsk& a, GuildRpcCreateGuildAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcCreateGuildAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcCreateGuildAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcCreateGuildAsk& from);
  void MergeFrom(const GuildRpcCreateGuildAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcCreateGuildAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string GuildName = 1;
  bool has_guildname() const;
  void clear_guildname();
  static const int kGuildNameFieldNumber = 1;
  const ::std::string& guildname() const;
  void set_guildname(const ::std::string& value);
  #if LANG_CXX11
  void set_guildname(::std::string&& value);
  #endif
  void set_guildname(const char* value);
  void set_guildname(const char* value, size_t size);
  ::std::string* mutable_guildname();
  ::std::string* release_guildname();
  void set_allocated_guildname(::std::string* guildname);

  // optional string Announcement = 2;
  bool has_announcement() const;
  void clear_announcement();
  static const int kAnnouncementFieldNumber = 2;
  const ::std::string& announcement() const;
  void set_announcement(const ::std::string& value);
  #if LANG_CXX11
  void set_announcement(::std::string&& value);
  #endif
  void set_announcement(const char* value);
  void set_announcement(const char* value, size_t size);
  ::std::string* mutable_announcement();
  ::std::string* release_announcement();
  void set_allocated_announcement(::std::string* announcement);

  // @@protoc_insertion_point(class_scope:GuildRpcCreateGuildAsk)
 private:
  void set_has_guildname();
  void clear_has_guildname();
  void set_has_announcement();
  void clear_has_announcement();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr guildname_;
  ::google::protobuf::internal::ArenaStringPtr announcement_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcCreateGuildReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcCreateGuildReply) */ {
 public:
  GuildRpcCreateGuildReply();
  virtual ~GuildRpcCreateGuildReply();

  GuildRpcCreateGuildReply(const GuildRpcCreateGuildReply& from);

  inline GuildRpcCreateGuildReply& operator=(const GuildRpcCreateGuildReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcCreateGuildReply(GuildRpcCreateGuildReply&& from) noexcept
    : GuildRpcCreateGuildReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcCreateGuildReply& operator=(GuildRpcCreateGuildReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcCreateGuildReply& default_instance();

  static inline const GuildRpcCreateGuildReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcCreateGuildReply*>(
               &_GuildRpcCreateGuildReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(GuildRpcCreateGuildReply* other);
  friend void swap(GuildRpcCreateGuildReply& a, GuildRpcCreateGuildReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcCreateGuildReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcCreateGuildReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcCreateGuildReply& from);
  void MergeFrom(const GuildRpcCreateGuildReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcCreateGuildReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GuildInfoObj GuildData = 2;
  bool has_guilddata() const;
  void clear_guilddata();
  static const int kGuildDataFieldNumber = 2;
  const ::GuildInfoObj& guilddata() const;
  ::GuildInfoObj* mutable_guilddata();
  ::GuildInfoObj* release_guilddata();
  void set_allocated_guilddata(::GuildInfoObj* guilddata);

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcCreateGuildReply)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_guilddata();
  void clear_has_guilddata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::GuildInfoObj* guilddata_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcApplyGuildAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcApplyGuildAsk) */ {
 public:
  GuildRpcApplyGuildAsk();
  virtual ~GuildRpcApplyGuildAsk();

  GuildRpcApplyGuildAsk(const GuildRpcApplyGuildAsk& from);

  inline GuildRpcApplyGuildAsk& operator=(const GuildRpcApplyGuildAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcApplyGuildAsk(GuildRpcApplyGuildAsk&& from) noexcept
    : GuildRpcApplyGuildAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcApplyGuildAsk& operator=(GuildRpcApplyGuildAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcApplyGuildAsk& default_instance();

  static inline const GuildRpcApplyGuildAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcApplyGuildAsk*>(
               &_GuildRpcApplyGuildAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(GuildRpcApplyGuildAsk* other);
  friend void swap(GuildRpcApplyGuildAsk& a, GuildRpcApplyGuildAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcApplyGuildAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcApplyGuildAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcApplyGuildAsk& from);
  void MergeFrom(const GuildRpcApplyGuildAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcApplyGuildAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Oper = 2 [default = 0];
  bool has_oper() const;
  void clear_oper();
  static const int kOperFieldNumber = 2;
  ::google::protobuf::int32 oper() const;
  void set_oper(::google::protobuf::int32 value);

  // optional sint32 Guild = 1 [default = -1];
  bool has_guild() const;
  void clear_guild();
  static const int kGuildFieldNumber = 1;
  ::google::protobuf::int32 guild() const;
  void set_guild(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcApplyGuildAsk)
 private:
  void set_has_guild();
  void clear_has_guild();
  void set_has_oper();
  void clear_has_oper();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 oper_;
  ::google::protobuf::int32 guild_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcApplyGuildReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcApplyGuildReply) */ {
 public:
  GuildRpcApplyGuildReply();
  virtual ~GuildRpcApplyGuildReply();

  GuildRpcApplyGuildReply(const GuildRpcApplyGuildReply& from);

  inline GuildRpcApplyGuildReply& operator=(const GuildRpcApplyGuildReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcApplyGuildReply(GuildRpcApplyGuildReply&& from) noexcept
    : GuildRpcApplyGuildReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcApplyGuildReply& operator=(GuildRpcApplyGuildReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcApplyGuildReply& default_instance();

  static inline const GuildRpcApplyGuildReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcApplyGuildReply*>(
               &_GuildRpcApplyGuildReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(GuildRpcApplyGuildReply* other);
  friend void swap(GuildRpcApplyGuildReply& a, GuildRpcApplyGuildReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcApplyGuildReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcApplyGuildReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcApplyGuildReply& from);
  void MergeFrom(const GuildRpcApplyGuildReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcApplyGuildReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcApplyGuildReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcQuickApplyAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcQuickApplyAsk) */ {
 public:
  GuildRpcQuickApplyAsk();
  virtual ~GuildRpcQuickApplyAsk();

  GuildRpcQuickApplyAsk(const GuildRpcQuickApplyAsk& from);

  inline GuildRpcQuickApplyAsk& operator=(const GuildRpcQuickApplyAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcQuickApplyAsk(GuildRpcQuickApplyAsk&& from) noexcept
    : GuildRpcQuickApplyAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcQuickApplyAsk& operator=(GuildRpcQuickApplyAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcQuickApplyAsk& default_instance();

  static inline const GuildRpcQuickApplyAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcQuickApplyAsk*>(
               &_GuildRpcQuickApplyAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(GuildRpcQuickApplyAsk* other);
  friend void swap(GuildRpcQuickApplyAsk& a, GuildRpcQuickApplyAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcQuickApplyAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcQuickApplyAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcQuickApplyAsk& from);
  void MergeFrom(const GuildRpcQuickApplyAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcQuickApplyAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GuildRpcQuickApplyAsk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcQuickApplyReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcQuickApplyReply) */ {
 public:
  GuildRpcQuickApplyReply();
  virtual ~GuildRpcQuickApplyReply();

  GuildRpcQuickApplyReply(const GuildRpcQuickApplyReply& from);

  inline GuildRpcQuickApplyReply& operator=(const GuildRpcQuickApplyReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcQuickApplyReply(GuildRpcQuickApplyReply&& from) noexcept
    : GuildRpcQuickApplyReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcQuickApplyReply& operator=(GuildRpcQuickApplyReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcQuickApplyReply& default_instance();

  static inline const GuildRpcQuickApplyReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcQuickApplyReply*>(
               &_GuildRpcQuickApplyReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(GuildRpcQuickApplyReply* other);
  friend void swap(GuildRpcQuickApplyReply& a, GuildRpcQuickApplyReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcQuickApplyReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcQuickApplyReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcQuickApplyReply& from);
  void MergeFrom(const GuildRpcQuickApplyReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcQuickApplyReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcQuickApplyReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcChangeGuildNameAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcChangeGuildNameAsk) */ {
 public:
  GuildRpcChangeGuildNameAsk();
  virtual ~GuildRpcChangeGuildNameAsk();

  GuildRpcChangeGuildNameAsk(const GuildRpcChangeGuildNameAsk& from);

  inline GuildRpcChangeGuildNameAsk& operator=(const GuildRpcChangeGuildNameAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcChangeGuildNameAsk(GuildRpcChangeGuildNameAsk&& from) noexcept
    : GuildRpcChangeGuildNameAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcChangeGuildNameAsk& operator=(GuildRpcChangeGuildNameAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcChangeGuildNameAsk& default_instance();

  static inline const GuildRpcChangeGuildNameAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcChangeGuildNameAsk*>(
               &_GuildRpcChangeGuildNameAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(GuildRpcChangeGuildNameAsk* other);
  friend void swap(GuildRpcChangeGuildNameAsk& a, GuildRpcChangeGuildNameAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcChangeGuildNameAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcChangeGuildNameAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcChangeGuildNameAsk& from);
  void MergeFrom(const GuildRpcChangeGuildNameAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcChangeGuildNameAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string GuildName = 1;
  bool has_guildname() const;
  void clear_guildname();
  static const int kGuildNameFieldNumber = 1;
  const ::std::string& guildname() const;
  void set_guildname(const ::std::string& value);
  #if LANG_CXX11
  void set_guildname(::std::string&& value);
  #endif
  void set_guildname(const char* value);
  void set_guildname(const char* value, size_t size);
  ::std::string* mutable_guildname();
  ::std::string* release_guildname();
  void set_allocated_guildname(::std::string* guildname);

  // @@protoc_insertion_point(class_scope:GuildRpcChangeGuildNameAsk)
 private:
  void set_has_guildname();
  void clear_has_guildname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr guildname_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcChangeGuildNameReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcChangeGuildNameReply) */ {
 public:
  GuildRpcChangeGuildNameReply();
  virtual ~GuildRpcChangeGuildNameReply();

  GuildRpcChangeGuildNameReply(const GuildRpcChangeGuildNameReply& from);

  inline GuildRpcChangeGuildNameReply& operator=(const GuildRpcChangeGuildNameReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcChangeGuildNameReply(GuildRpcChangeGuildNameReply&& from) noexcept
    : GuildRpcChangeGuildNameReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcChangeGuildNameReply& operator=(GuildRpcChangeGuildNameReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcChangeGuildNameReply& default_instance();

  static inline const GuildRpcChangeGuildNameReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcChangeGuildNameReply*>(
               &_GuildRpcChangeGuildNameReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GuildRpcChangeGuildNameReply* other);
  friend void swap(GuildRpcChangeGuildNameReply& a, GuildRpcChangeGuildNameReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcChangeGuildNameReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcChangeGuildNameReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcChangeGuildNameReply& from);
  void MergeFrom(const GuildRpcChangeGuildNameReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcChangeGuildNameReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcChangeGuildNameReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcChangeAnnouncementAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcChangeAnnouncementAsk) */ {
 public:
  GuildRpcChangeAnnouncementAsk();
  virtual ~GuildRpcChangeAnnouncementAsk();

  GuildRpcChangeAnnouncementAsk(const GuildRpcChangeAnnouncementAsk& from);

  inline GuildRpcChangeAnnouncementAsk& operator=(const GuildRpcChangeAnnouncementAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcChangeAnnouncementAsk(GuildRpcChangeAnnouncementAsk&& from) noexcept
    : GuildRpcChangeAnnouncementAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcChangeAnnouncementAsk& operator=(GuildRpcChangeAnnouncementAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcChangeAnnouncementAsk& default_instance();

  static inline const GuildRpcChangeAnnouncementAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcChangeAnnouncementAsk*>(
               &_GuildRpcChangeAnnouncementAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(GuildRpcChangeAnnouncementAsk* other);
  friend void swap(GuildRpcChangeAnnouncementAsk& a, GuildRpcChangeAnnouncementAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcChangeAnnouncementAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcChangeAnnouncementAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcChangeAnnouncementAsk& from);
  void MergeFrom(const GuildRpcChangeAnnouncementAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcChangeAnnouncementAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Announcement = 1;
  bool has_announcement() const;
  void clear_announcement();
  static const int kAnnouncementFieldNumber = 1;
  const ::std::string& announcement() const;
  void set_announcement(const ::std::string& value);
  #if LANG_CXX11
  void set_announcement(::std::string&& value);
  #endif
  void set_announcement(const char* value);
  void set_announcement(const char* value, size_t size);
  ::std::string* mutable_announcement();
  ::std::string* release_announcement();
  void set_allocated_announcement(::std::string* announcement);

  // @@protoc_insertion_point(class_scope:GuildRpcChangeAnnouncementAsk)
 private:
  void set_has_announcement();
  void clear_has_announcement();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr announcement_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcChangeAnnouncementReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcChangeAnnouncementReply) */ {
 public:
  GuildRpcChangeAnnouncementReply();
  virtual ~GuildRpcChangeAnnouncementReply();

  GuildRpcChangeAnnouncementReply(const GuildRpcChangeAnnouncementReply& from);

  inline GuildRpcChangeAnnouncementReply& operator=(const GuildRpcChangeAnnouncementReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcChangeAnnouncementReply(GuildRpcChangeAnnouncementReply&& from) noexcept
    : GuildRpcChangeAnnouncementReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcChangeAnnouncementReply& operator=(GuildRpcChangeAnnouncementReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcChangeAnnouncementReply& default_instance();

  static inline const GuildRpcChangeAnnouncementReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcChangeAnnouncementReply*>(
               &_GuildRpcChangeAnnouncementReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(GuildRpcChangeAnnouncementReply* other);
  friend void swap(GuildRpcChangeAnnouncementReply& a, GuildRpcChangeAnnouncementReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcChangeAnnouncementReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcChangeAnnouncementReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcChangeAnnouncementReply& from);
  void MergeFrom(const GuildRpcChangeAnnouncementReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcChangeAnnouncementReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcChangeAnnouncementReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcReqGuildListAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcReqGuildListAsk) */ {
 public:
  GuildRpcReqGuildListAsk();
  virtual ~GuildRpcReqGuildListAsk();

  GuildRpcReqGuildListAsk(const GuildRpcReqGuildListAsk& from);

  inline GuildRpcReqGuildListAsk& operator=(const GuildRpcReqGuildListAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcReqGuildListAsk(GuildRpcReqGuildListAsk&& from) noexcept
    : GuildRpcReqGuildListAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcReqGuildListAsk& operator=(GuildRpcReqGuildListAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcReqGuildListAsk& default_instance();

  static inline const GuildRpcReqGuildListAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcReqGuildListAsk*>(
               &_GuildRpcReqGuildListAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(GuildRpcReqGuildListAsk* other);
  friend void swap(GuildRpcReqGuildListAsk& a, GuildRpcReqGuildListAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcReqGuildListAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcReqGuildListAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcReqGuildListAsk& from);
  void MergeFrom(const GuildRpcReqGuildListAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcReqGuildListAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GuildRpcReqGuildListAsk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcReqGuildListReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcReqGuildListReply) */ {
 public:
  GuildRpcReqGuildListReply();
  virtual ~GuildRpcReqGuildListReply();

  GuildRpcReqGuildListReply(const GuildRpcReqGuildListReply& from);

  inline GuildRpcReqGuildListReply& operator=(const GuildRpcReqGuildListReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcReqGuildListReply(GuildRpcReqGuildListReply&& from) noexcept
    : GuildRpcReqGuildListReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcReqGuildListReply& operator=(GuildRpcReqGuildListReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcReqGuildListReply& default_instance();

  static inline const GuildRpcReqGuildListReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcReqGuildListReply*>(
               &_GuildRpcReqGuildListReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(GuildRpcReqGuildListReply* other);
  friend void swap(GuildRpcReqGuildListReply& a, GuildRpcReqGuildListReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcReqGuildListReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcReqGuildListReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcReqGuildListReply& from);
  void MergeFrom(const GuildRpcReqGuildListReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcReqGuildListReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GuildListObj GuildList = 2;
  int guildlist_size() const;
  void clear_guildlist();
  static const int kGuildListFieldNumber = 2;
  const ::GuildListObj& guildlist(int index) const;
  ::GuildListObj* mutable_guildlist(int index);
  ::GuildListObj* add_guildlist();
  ::google::protobuf::RepeatedPtrField< ::GuildListObj >*
      mutable_guildlist();
  const ::google::protobuf::RepeatedPtrField< ::GuildListObj >&
      guildlist() const;

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcReqGuildListReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GuildListObj > guildlist_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcAppointDutyAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcAppointDutyAsk) */ {
 public:
  GuildRpcAppointDutyAsk();
  virtual ~GuildRpcAppointDutyAsk();

  GuildRpcAppointDutyAsk(const GuildRpcAppointDutyAsk& from);

  inline GuildRpcAppointDutyAsk& operator=(const GuildRpcAppointDutyAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcAppointDutyAsk(GuildRpcAppointDutyAsk&& from) noexcept
    : GuildRpcAppointDutyAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcAppointDutyAsk& operator=(GuildRpcAppointDutyAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcAppointDutyAsk& default_instance();

  static inline const GuildRpcAppointDutyAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcAppointDutyAsk*>(
               &_GuildRpcAppointDutyAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(GuildRpcAppointDutyAsk* other);
  friend void swap(GuildRpcAppointDutyAsk& a, GuildRpcAppointDutyAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcAppointDutyAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcAppointDutyAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcAppointDutyAsk& from);
  void MergeFrom(const GuildRpcAppointDutyAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcAppointDutyAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Duty = 2 [default = -1];
  bool has_duty() const;
  void clear_duty();
  static const int kDutyFieldNumber = 2;
  ::google::protobuf::int32 duty() const;
  void set_duty(::google::protobuf::int32 value);

  // optional sint64 UserId = 1 [default = -1];
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GuildRpcAppointDutyAsk)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_duty();
  void clear_has_duty();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 duty_;
  ::google::protobuf::int64 userid_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcAppointDutyReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcAppointDutyReply) */ {
 public:
  GuildRpcAppointDutyReply();
  virtual ~GuildRpcAppointDutyReply();

  GuildRpcAppointDutyReply(const GuildRpcAppointDutyReply& from);

  inline GuildRpcAppointDutyReply& operator=(const GuildRpcAppointDutyReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcAppointDutyReply(GuildRpcAppointDutyReply&& from) noexcept
    : GuildRpcAppointDutyReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcAppointDutyReply& operator=(GuildRpcAppointDutyReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcAppointDutyReply& default_instance();

  static inline const GuildRpcAppointDutyReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcAppointDutyReply*>(
               &_GuildRpcAppointDutyReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(GuildRpcAppointDutyReply* other);
  friend void swap(GuildRpcAppointDutyReply& a, GuildRpcAppointDutyReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcAppointDutyReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcAppointDutyReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcAppointDutyReply& from);
  void MergeFrom(const GuildRpcAppointDutyReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcAppointDutyReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcAppointDutyReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcKickoutAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcKickoutAsk) */ {
 public:
  GuildRpcKickoutAsk();
  virtual ~GuildRpcKickoutAsk();

  GuildRpcKickoutAsk(const GuildRpcKickoutAsk& from);

  inline GuildRpcKickoutAsk& operator=(const GuildRpcKickoutAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcKickoutAsk(GuildRpcKickoutAsk&& from) noexcept
    : GuildRpcKickoutAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcKickoutAsk& operator=(GuildRpcKickoutAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcKickoutAsk& default_instance();

  static inline const GuildRpcKickoutAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcKickoutAsk*>(
               &_GuildRpcKickoutAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(GuildRpcKickoutAsk* other);
  friend void swap(GuildRpcKickoutAsk& a, GuildRpcKickoutAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcKickoutAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcKickoutAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcKickoutAsk& from);
  void MergeFrom(const GuildRpcKickoutAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcKickoutAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 UserId = 1 [default = -1];
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GuildRpcKickoutAsk)
 private:
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 userid_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcKickoutReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcKickoutReply) */ {
 public:
  GuildRpcKickoutReply();
  virtual ~GuildRpcKickoutReply();

  GuildRpcKickoutReply(const GuildRpcKickoutReply& from);

  inline GuildRpcKickoutReply& operator=(const GuildRpcKickoutReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcKickoutReply(GuildRpcKickoutReply&& from) noexcept
    : GuildRpcKickoutReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcKickoutReply& operator=(GuildRpcKickoutReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcKickoutReply& default_instance();

  static inline const GuildRpcKickoutReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcKickoutReply*>(
               &_GuildRpcKickoutReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(GuildRpcKickoutReply* other);
  friend void swap(GuildRpcKickoutReply& a, GuildRpcKickoutReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcKickoutReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcKickoutReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcKickoutReply& from);
  void MergeFrom(const GuildRpcKickoutReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcKickoutReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcKickoutReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcExitGuildAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcExitGuildAsk) */ {
 public:
  GuildRpcExitGuildAsk();
  virtual ~GuildRpcExitGuildAsk();

  GuildRpcExitGuildAsk(const GuildRpcExitGuildAsk& from);

  inline GuildRpcExitGuildAsk& operator=(const GuildRpcExitGuildAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcExitGuildAsk(GuildRpcExitGuildAsk&& from) noexcept
    : GuildRpcExitGuildAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcExitGuildAsk& operator=(GuildRpcExitGuildAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcExitGuildAsk& default_instance();

  static inline const GuildRpcExitGuildAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcExitGuildAsk*>(
               &_GuildRpcExitGuildAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(GuildRpcExitGuildAsk* other);
  friend void swap(GuildRpcExitGuildAsk& a, GuildRpcExitGuildAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcExitGuildAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcExitGuildAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcExitGuildAsk& from);
  void MergeFrom(const GuildRpcExitGuildAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcExitGuildAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GuildRpcExitGuildAsk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcExitGuildReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcExitGuildReply) */ {
 public:
  GuildRpcExitGuildReply();
  virtual ~GuildRpcExitGuildReply();

  GuildRpcExitGuildReply(const GuildRpcExitGuildReply& from);

  inline GuildRpcExitGuildReply& operator=(const GuildRpcExitGuildReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcExitGuildReply(GuildRpcExitGuildReply&& from) noexcept
    : GuildRpcExitGuildReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcExitGuildReply& operator=(GuildRpcExitGuildReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcExitGuildReply& default_instance();

  static inline const GuildRpcExitGuildReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcExitGuildReply*>(
               &_GuildRpcExitGuildReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(GuildRpcExitGuildReply* other);
  friend void swap(GuildRpcExitGuildReply& a, GuildRpcExitGuildReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcExitGuildReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcExitGuildReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcExitGuildReply& from);
  void MergeFrom(const GuildRpcExitGuildReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcExitGuildReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcExitGuildReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcBreakUpAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcBreakUpAsk) */ {
 public:
  GuildRpcBreakUpAsk();
  virtual ~GuildRpcBreakUpAsk();

  GuildRpcBreakUpAsk(const GuildRpcBreakUpAsk& from);

  inline GuildRpcBreakUpAsk& operator=(const GuildRpcBreakUpAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcBreakUpAsk(GuildRpcBreakUpAsk&& from) noexcept
    : GuildRpcBreakUpAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcBreakUpAsk& operator=(GuildRpcBreakUpAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcBreakUpAsk& default_instance();

  static inline const GuildRpcBreakUpAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcBreakUpAsk*>(
               &_GuildRpcBreakUpAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(GuildRpcBreakUpAsk* other);
  friend void swap(GuildRpcBreakUpAsk& a, GuildRpcBreakUpAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcBreakUpAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcBreakUpAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcBreakUpAsk& from);
  void MergeFrom(const GuildRpcBreakUpAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcBreakUpAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GuildRpcBreakUpAsk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcBreakUpReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcBreakUpReply) */ {
 public:
  GuildRpcBreakUpReply();
  virtual ~GuildRpcBreakUpReply();

  GuildRpcBreakUpReply(const GuildRpcBreakUpReply& from);

  inline GuildRpcBreakUpReply& operator=(const GuildRpcBreakUpReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcBreakUpReply(GuildRpcBreakUpReply&& from) noexcept
    : GuildRpcBreakUpReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcBreakUpReply& operator=(GuildRpcBreakUpReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcBreakUpReply& default_instance();

  static inline const GuildRpcBreakUpReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcBreakUpReply*>(
               &_GuildRpcBreakUpReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(GuildRpcBreakUpReply* other);
  friend void swap(GuildRpcBreakUpReply& a, GuildRpcBreakUpReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcBreakUpReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcBreakUpReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcBreakUpReply& from);
  void MergeFrom(const GuildRpcBreakUpReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcBreakUpReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcBreakUpReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcInviteToJoinAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcInviteToJoinAsk) */ {
 public:
  GuildRpcInviteToJoinAsk();
  virtual ~GuildRpcInviteToJoinAsk();

  GuildRpcInviteToJoinAsk(const GuildRpcInviteToJoinAsk& from);

  inline GuildRpcInviteToJoinAsk& operator=(const GuildRpcInviteToJoinAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcInviteToJoinAsk(GuildRpcInviteToJoinAsk&& from) noexcept
    : GuildRpcInviteToJoinAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcInviteToJoinAsk& operator=(GuildRpcInviteToJoinAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcInviteToJoinAsk& default_instance();

  static inline const GuildRpcInviteToJoinAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcInviteToJoinAsk*>(
               &_GuildRpcInviteToJoinAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(GuildRpcInviteToJoinAsk* other);
  friend void swap(GuildRpcInviteToJoinAsk& a, GuildRpcInviteToJoinAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcInviteToJoinAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcInviteToJoinAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcInviteToJoinAsk& from);
  void MergeFrom(const GuildRpcInviteToJoinAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcInviteToJoinAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 UserId = 1 [default = -1];
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GuildRpcInviteToJoinAsk)
 private:
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 userid_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcInviteToJoinReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcInviteToJoinReply) */ {
 public:
  GuildRpcInviteToJoinReply();
  virtual ~GuildRpcInviteToJoinReply();

  GuildRpcInviteToJoinReply(const GuildRpcInviteToJoinReply& from);

  inline GuildRpcInviteToJoinReply& operator=(const GuildRpcInviteToJoinReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcInviteToJoinReply(GuildRpcInviteToJoinReply&& from) noexcept
    : GuildRpcInviteToJoinReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcInviteToJoinReply& operator=(GuildRpcInviteToJoinReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcInviteToJoinReply& default_instance();

  static inline const GuildRpcInviteToJoinReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcInviteToJoinReply*>(
               &_GuildRpcInviteToJoinReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(GuildRpcInviteToJoinReply* other);
  friend void swap(GuildRpcInviteToJoinReply& a, GuildRpcInviteToJoinReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcInviteToJoinReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcInviteToJoinReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcInviteToJoinReply& from);
  void MergeFrom(const GuildRpcInviteToJoinReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcInviteToJoinReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcInviteToJoinReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcBeInvitedNoticeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcBeInvitedNoticeNotify) */ {
 public:
  GuildRpcBeInvitedNoticeNotify();
  virtual ~GuildRpcBeInvitedNoticeNotify();

  GuildRpcBeInvitedNoticeNotify(const GuildRpcBeInvitedNoticeNotify& from);

  inline GuildRpcBeInvitedNoticeNotify& operator=(const GuildRpcBeInvitedNoticeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcBeInvitedNoticeNotify(GuildRpcBeInvitedNoticeNotify&& from) noexcept
    : GuildRpcBeInvitedNoticeNotify() {
    *this = ::std::move(from);
  }

  inline GuildRpcBeInvitedNoticeNotify& operator=(GuildRpcBeInvitedNoticeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcBeInvitedNoticeNotify& default_instance();

  static inline const GuildRpcBeInvitedNoticeNotify* internal_default_instance() {
    return reinterpret_cast<const GuildRpcBeInvitedNoticeNotify*>(
               &_GuildRpcBeInvitedNoticeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(GuildRpcBeInvitedNoticeNotify* other);
  friend void swap(GuildRpcBeInvitedNoticeNotify& a, GuildRpcBeInvitedNoticeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcBeInvitedNoticeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcBeInvitedNoticeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcBeInvitedNoticeNotify& from);
  void MergeFrom(const GuildRpcBeInvitedNoticeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcBeInvitedNoticeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string GuildName = 3;
  bool has_guildname() const;
  void clear_guildname();
  static const int kGuildNameFieldNumber = 3;
  const ::std::string& guildname() const;
  void set_guildname(const ::std::string& value);
  #if LANG_CXX11
  void set_guildname(::std::string&& value);
  #endif
  void set_guildname(const char* value);
  void set_guildname(const char* value, size_t size);
  ::std::string* mutable_guildname();
  ::std::string* release_guildname();
  void set_allocated_guildname(::std::string* guildname);

  // optional sint32 Guild = 2 [default = -1];
  bool has_guild() const;
  void clear_guild();
  static const int kGuildFieldNumber = 2;
  ::google::protobuf::int32 guild() const;
  void set_guild(::google::protobuf::int32 value);

  // optional sint64 UserId = 1 [default = -1];
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GuildRpcBeInvitedNoticeNotify)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_guild();
  void clear_has_guild();
  void set_has_guildname();
  void clear_has_guildname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr guildname_;
  ::google::protobuf::int32 guild_;
  ::google::protobuf::int64 userid_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcBeInvitedHandleAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcBeInvitedHandleAsk) */ {
 public:
  GuildRpcBeInvitedHandleAsk();
  virtual ~GuildRpcBeInvitedHandleAsk();

  GuildRpcBeInvitedHandleAsk(const GuildRpcBeInvitedHandleAsk& from);

  inline GuildRpcBeInvitedHandleAsk& operator=(const GuildRpcBeInvitedHandleAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcBeInvitedHandleAsk(GuildRpcBeInvitedHandleAsk&& from) noexcept
    : GuildRpcBeInvitedHandleAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcBeInvitedHandleAsk& operator=(GuildRpcBeInvitedHandleAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcBeInvitedHandleAsk& default_instance();

  static inline const GuildRpcBeInvitedHandleAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcBeInvitedHandleAsk*>(
               &_GuildRpcBeInvitedHandleAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(GuildRpcBeInvitedHandleAsk* other);
  friend void swap(GuildRpcBeInvitedHandleAsk& a, GuildRpcBeInvitedHandleAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcBeInvitedHandleAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcBeInvitedHandleAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcBeInvitedHandleAsk& from);
  void MergeFrom(const GuildRpcBeInvitedHandleAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcBeInvitedHandleAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Oper = 3 [default = 0];
  bool has_oper() const;
  void clear_oper();
  static const int kOperFieldNumber = 3;
  ::google::protobuf::int32 oper() const;
  void set_oper(::google::protobuf::int32 value);

  // optional sint32 Guild = 1 [default = -1];
  bool has_guild() const;
  void clear_guild();
  static const int kGuildFieldNumber = 1;
  ::google::protobuf::int32 guild() const;
  void set_guild(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcBeInvitedHandleAsk)
 private:
  void set_has_guild();
  void clear_has_guild();
  void set_has_oper();
  void clear_has_oper();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 oper_;
  ::google::protobuf::int32 guild_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcBeInvitedHandleReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcBeInvitedHandleReply) */ {
 public:
  GuildRpcBeInvitedHandleReply();
  virtual ~GuildRpcBeInvitedHandleReply();

  GuildRpcBeInvitedHandleReply(const GuildRpcBeInvitedHandleReply& from);

  inline GuildRpcBeInvitedHandleReply& operator=(const GuildRpcBeInvitedHandleReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcBeInvitedHandleReply(GuildRpcBeInvitedHandleReply&& from) noexcept
    : GuildRpcBeInvitedHandleReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcBeInvitedHandleReply& operator=(GuildRpcBeInvitedHandleReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcBeInvitedHandleReply& default_instance();

  static inline const GuildRpcBeInvitedHandleReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcBeInvitedHandleReply*>(
               &_GuildRpcBeInvitedHandleReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(GuildRpcBeInvitedHandleReply* other);
  friend void swap(GuildRpcBeInvitedHandleReply& a, GuildRpcBeInvitedHandleReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcBeInvitedHandleReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcBeInvitedHandleReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcBeInvitedHandleReply& from);
  void MergeFrom(const GuildRpcBeInvitedHandleReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcBeInvitedHandleReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcBeInvitedHandleReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcResignDutyAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcResignDutyAsk) */ {
 public:
  GuildRpcResignDutyAsk();
  virtual ~GuildRpcResignDutyAsk();

  GuildRpcResignDutyAsk(const GuildRpcResignDutyAsk& from);

  inline GuildRpcResignDutyAsk& operator=(const GuildRpcResignDutyAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcResignDutyAsk(GuildRpcResignDutyAsk&& from) noexcept
    : GuildRpcResignDutyAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcResignDutyAsk& operator=(GuildRpcResignDutyAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcResignDutyAsk& default_instance();

  static inline const GuildRpcResignDutyAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcResignDutyAsk*>(
               &_GuildRpcResignDutyAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(GuildRpcResignDutyAsk* other);
  friend void swap(GuildRpcResignDutyAsk& a, GuildRpcResignDutyAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcResignDutyAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcResignDutyAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcResignDutyAsk& from);
  void MergeFrom(const GuildRpcResignDutyAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcResignDutyAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GuildRpcResignDutyAsk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcResignDutyReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcResignDutyReply) */ {
 public:
  GuildRpcResignDutyReply();
  virtual ~GuildRpcResignDutyReply();

  GuildRpcResignDutyReply(const GuildRpcResignDutyReply& from);

  inline GuildRpcResignDutyReply& operator=(const GuildRpcResignDutyReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcResignDutyReply(GuildRpcResignDutyReply&& from) noexcept
    : GuildRpcResignDutyReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcResignDutyReply& operator=(GuildRpcResignDutyReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcResignDutyReply& default_instance();

  static inline const GuildRpcResignDutyReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcResignDutyReply*>(
               &_GuildRpcResignDutyReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(GuildRpcResignDutyReply* other);
  friend void swap(GuildRpcResignDutyReply& a, GuildRpcResignDutyReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcResignDutyReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcResignDutyReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcResignDutyReply& from);
  void MergeFrom(const GuildRpcResignDutyReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcResignDutyReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcResignDutyReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcSyncMyTeamDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcSyncMyTeamDataNotify) */ {
 public:
  GuildRpcSyncMyTeamDataNotify();
  virtual ~GuildRpcSyncMyTeamDataNotify();

  GuildRpcSyncMyTeamDataNotify(const GuildRpcSyncMyTeamDataNotify& from);

  inline GuildRpcSyncMyTeamDataNotify& operator=(const GuildRpcSyncMyTeamDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcSyncMyTeamDataNotify(GuildRpcSyncMyTeamDataNotify&& from) noexcept
    : GuildRpcSyncMyTeamDataNotify() {
    *this = ::std::move(from);
  }

  inline GuildRpcSyncMyTeamDataNotify& operator=(GuildRpcSyncMyTeamDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcSyncMyTeamDataNotify& default_instance();

  static inline const GuildRpcSyncMyTeamDataNotify* internal_default_instance() {
    return reinterpret_cast<const GuildRpcSyncMyTeamDataNotify*>(
               &_GuildRpcSyncMyTeamDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(GuildRpcSyncMyTeamDataNotify* other);
  friend void swap(GuildRpcSyncMyTeamDataNotify& a, GuildRpcSyncMyTeamDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcSyncMyTeamDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcSyncMyTeamDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcSyncMyTeamDataNotify& from);
  void MergeFrom(const GuildRpcSyncMyTeamDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcSyncMyTeamDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GuildInfoObj GuildData = 1;
  bool has_guilddata() const;
  void clear_guilddata();
  static const int kGuildDataFieldNumber = 1;
  const ::GuildInfoObj& guilddata() const;
  ::GuildInfoObj* mutable_guilddata();
  ::GuildInfoObj* release_guilddata();
  void set_allocated_guilddata(::GuildInfoObj* guilddata);

  // @@protoc_insertion_point(class_scope:GuildRpcSyncMyTeamDataNotify)
 private:
  void set_has_guilddata();
  void clear_has_guilddata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::GuildInfoObj* guilddata_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcSyncNoticeOfGuildBaseDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcSyncNoticeOfGuildBaseDataNotify) */ {
 public:
  GuildRpcSyncNoticeOfGuildBaseDataNotify();
  virtual ~GuildRpcSyncNoticeOfGuildBaseDataNotify();

  GuildRpcSyncNoticeOfGuildBaseDataNotify(const GuildRpcSyncNoticeOfGuildBaseDataNotify& from);

  inline GuildRpcSyncNoticeOfGuildBaseDataNotify& operator=(const GuildRpcSyncNoticeOfGuildBaseDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcSyncNoticeOfGuildBaseDataNotify(GuildRpcSyncNoticeOfGuildBaseDataNotify&& from) noexcept
    : GuildRpcSyncNoticeOfGuildBaseDataNotify() {
    *this = ::std::move(from);
  }

  inline GuildRpcSyncNoticeOfGuildBaseDataNotify& operator=(GuildRpcSyncNoticeOfGuildBaseDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcSyncNoticeOfGuildBaseDataNotify& default_instance();

  static inline const GuildRpcSyncNoticeOfGuildBaseDataNotify* internal_default_instance() {
    return reinterpret_cast<const GuildRpcSyncNoticeOfGuildBaseDataNotify*>(
               &_GuildRpcSyncNoticeOfGuildBaseDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(GuildRpcSyncNoticeOfGuildBaseDataNotify* other);
  friend void swap(GuildRpcSyncNoticeOfGuildBaseDataNotify& a, GuildRpcSyncNoticeOfGuildBaseDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcSyncNoticeOfGuildBaseDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcSyncNoticeOfGuildBaseDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcSyncNoticeOfGuildBaseDataNotify& from);
  void MergeFrom(const GuildRpcSyncNoticeOfGuildBaseDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcSyncNoticeOfGuildBaseDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string GuildName = 1;
  bool has_guildname() const;
  void clear_guildname();
  static const int kGuildNameFieldNumber = 1;
  const ::std::string& guildname() const;
  void set_guildname(const ::std::string& value);
  #if LANG_CXX11
  void set_guildname(::std::string&& value);
  #endif
  void set_guildname(const char* value);
  void set_guildname(const char* value, size_t size);
  ::std::string* mutable_guildname();
  ::std::string* release_guildname();
  void set_allocated_guildname(::std::string* guildname);

  // optional string CaptainName = 4;
  bool has_captainname() const;
  void clear_captainname();
  static const int kCaptainNameFieldNumber = 4;
  const ::std::string& captainname() const;
  void set_captainname(const ::std::string& value);
  #if LANG_CXX11
  void set_captainname(::std::string&& value);
  #endif
  void set_captainname(const char* value);
  void set_captainname(const char* value, size_t size);
  ::std::string* mutable_captainname();
  ::std::string* release_captainname();
  void set_allocated_captainname(::std::string* captainname);

  // optional sint32 LeagueMatchesRank = 7 [default = -1];
  bool has_leaguematchesrank() const;
  void clear_leaguematchesrank();
  static const int kLeagueMatchesRankFieldNumber = 7;
  ::google::protobuf::int32 leaguematchesrank() const;
  void set_leaguematchesrank(::google::protobuf::int32 value);

  // optional sint64 CaptainId = 3 [default = -1];
  bool has_captainid() const;
  void clear_captainid();
  static const int kCaptainIdFieldNumber = 3;
  ::google::protobuf::int64 captainid() const;
  void set_captainid(::google::protobuf::int64 value);

  // optional sint32 Level = 2 [default = 1];
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional sint32 Funds = 5 [default = -1];
  bool has_funds() const;
  void clear_funds();
  static const int kFundsFieldNumber = 5;
  ::google::protobuf::int32 funds() const;
  void set_funds(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcSyncNoticeOfGuildBaseDataNotify)
 private:
  void set_has_guildname();
  void clear_has_guildname();
  void set_has_level();
  void clear_has_level();
  void set_has_captainid();
  void clear_has_captainid();
  void set_has_captainname();
  void clear_has_captainname();
  void set_has_funds();
  void clear_has_funds();
  void set_has_leaguematchesrank();
  void clear_has_leaguematchesrank();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr guildname_;
  ::google::protobuf::internal::ArenaStringPtr captainname_;
  ::google::protobuf::int32 leaguematchesrank_;
  ::google::protobuf::int64 captainid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 funds_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcSyncNoticeOfGuildMemberChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcSyncNoticeOfGuildMemberChangeNotify) */ {
 public:
  GuildRpcSyncNoticeOfGuildMemberChangeNotify();
  virtual ~GuildRpcSyncNoticeOfGuildMemberChangeNotify();

  GuildRpcSyncNoticeOfGuildMemberChangeNotify(const GuildRpcSyncNoticeOfGuildMemberChangeNotify& from);

  inline GuildRpcSyncNoticeOfGuildMemberChangeNotify& operator=(const GuildRpcSyncNoticeOfGuildMemberChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcSyncNoticeOfGuildMemberChangeNotify(GuildRpcSyncNoticeOfGuildMemberChangeNotify&& from) noexcept
    : GuildRpcSyncNoticeOfGuildMemberChangeNotify() {
    *this = ::std::move(from);
  }

  inline GuildRpcSyncNoticeOfGuildMemberChangeNotify& operator=(GuildRpcSyncNoticeOfGuildMemberChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcSyncNoticeOfGuildMemberChangeNotify& default_instance();

  static inline const GuildRpcSyncNoticeOfGuildMemberChangeNotify* internal_default_instance() {
    return reinterpret_cast<const GuildRpcSyncNoticeOfGuildMemberChangeNotify*>(
               &_GuildRpcSyncNoticeOfGuildMemberChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(GuildRpcSyncNoticeOfGuildMemberChangeNotify* other);
  friend void swap(GuildRpcSyncNoticeOfGuildMemberChangeNotify& a, GuildRpcSyncNoticeOfGuildMemberChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcSyncNoticeOfGuildMemberChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcSyncNoticeOfGuildMemberChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcSyncNoticeOfGuildMemberChangeNotify& from);
  void MergeFrom(const GuildRpcSyncNoticeOfGuildMemberChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcSyncNoticeOfGuildMemberChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GuildMemberObj GuildMember = 5;
  bool has_guildmember() const;
  void clear_guildmember();
  static const int kGuildMemberFieldNumber = 5;
  const ::GuildMemberObj& guildmember() const;
  ::GuildMemberObj* mutable_guildmember();
  ::GuildMemberObj* release_guildmember();
  void set_allocated_guildmember(::GuildMemberObj* guildmember);

  // @@protoc_insertion_point(class_scope:GuildRpcSyncNoticeOfGuildMemberChangeNotify)
 private:
  void set_has_guildmember();
  void clear_has_guildmember();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::GuildMemberObj* guildmember_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcSyncNoticeOfAddMemberNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcSyncNoticeOfAddMemberNotify) */ {
 public:
  GuildRpcSyncNoticeOfAddMemberNotify();
  virtual ~GuildRpcSyncNoticeOfAddMemberNotify();

  GuildRpcSyncNoticeOfAddMemberNotify(const GuildRpcSyncNoticeOfAddMemberNotify& from);

  inline GuildRpcSyncNoticeOfAddMemberNotify& operator=(const GuildRpcSyncNoticeOfAddMemberNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcSyncNoticeOfAddMemberNotify(GuildRpcSyncNoticeOfAddMemberNotify&& from) noexcept
    : GuildRpcSyncNoticeOfAddMemberNotify() {
    *this = ::std::move(from);
  }

  inline GuildRpcSyncNoticeOfAddMemberNotify& operator=(GuildRpcSyncNoticeOfAddMemberNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcSyncNoticeOfAddMemberNotify& default_instance();

  static inline const GuildRpcSyncNoticeOfAddMemberNotify* internal_default_instance() {
    return reinterpret_cast<const GuildRpcSyncNoticeOfAddMemberNotify*>(
               &_GuildRpcSyncNoticeOfAddMemberNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(GuildRpcSyncNoticeOfAddMemberNotify* other);
  friend void swap(GuildRpcSyncNoticeOfAddMemberNotify& a, GuildRpcSyncNoticeOfAddMemberNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcSyncNoticeOfAddMemberNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcSyncNoticeOfAddMemberNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcSyncNoticeOfAddMemberNotify& from);
  void MergeFrom(const GuildRpcSyncNoticeOfAddMemberNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcSyncNoticeOfAddMemberNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GuildMemberObj GuildMember = 1;
  bool has_guildmember() const;
  void clear_guildmember();
  static const int kGuildMemberFieldNumber = 1;
  const ::GuildMemberObj& guildmember() const;
  ::GuildMemberObj* mutable_guildmember();
  ::GuildMemberObj* release_guildmember();
  void set_allocated_guildmember(::GuildMemberObj* guildmember);

  // @@protoc_insertion_point(class_scope:GuildRpcSyncNoticeOfAddMemberNotify)
 private:
  void set_has_guildmember();
  void clear_has_guildmember();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::GuildMemberObj* guildmember_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcSyncNoticeOfDelMemberNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcSyncNoticeOfDelMemberNotify) */ {
 public:
  GuildRpcSyncNoticeOfDelMemberNotify();
  virtual ~GuildRpcSyncNoticeOfDelMemberNotify();

  GuildRpcSyncNoticeOfDelMemberNotify(const GuildRpcSyncNoticeOfDelMemberNotify& from);

  inline GuildRpcSyncNoticeOfDelMemberNotify& operator=(const GuildRpcSyncNoticeOfDelMemberNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcSyncNoticeOfDelMemberNotify(GuildRpcSyncNoticeOfDelMemberNotify&& from) noexcept
    : GuildRpcSyncNoticeOfDelMemberNotify() {
    *this = ::std::move(from);
  }

  inline GuildRpcSyncNoticeOfDelMemberNotify& operator=(GuildRpcSyncNoticeOfDelMemberNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcSyncNoticeOfDelMemberNotify& default_instance();

  static inline const GuildRpcSyncNoticeOfDelMemberNotify* internal_default_instance() {
    return reinterpret_cast<const GuildRpcSyncNoticeOfDelMemberNotify*>(
               &_GuildRpcSyncNoticeOfDelMemberNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(GuildRpcSyncNoticeOfDelMemberNotify* other);
  friend void swap(GuildRpcSyncNoticeOfDelMemberNotify& a, GuildRpcSyncNoticeOfDelMemberNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcSyncNoticeOfDelMemberNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcSyncNoticeOfDelMemberNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcSyncNoticeOfDelMemberNotify& from);
  void MergeFrom(const GuildRpcSyncNoticeOfDelMemberNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcSyncNoticeOfDelMemberNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 UserId = 1 [default = -1];
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GuildRpcSyncNoticeOfDelMemberNotify)
 private:
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 userid_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcSyncNoticeOfAddEventNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcSyncNoticeOfAddEventNotify) */ {
 public:
  GuildRpcSyncNoticeOfAddEventNotify();
  virtual ~GuildRpcSyncNoticeOfAddEventNotify();

  GuildRpcSyncNoticeOfAddEventNotify(const GuildRpcSyncNoticeOfAddEventNotify& from);

  inline GuildRpcSyncNoticeOfAddEventNotify& operator=(const GuildRpcSyncNoticeOfAddEventNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcSyncNoticeOfAddEventNotify(GuildRpcSyncNoticeOfAddEventNotify&& from) noexcept
    : GuildRpcSyncNoticeOfAddEventNotify() {
    *this = ::std::move(from);
  }

  inline GuildRpcSyncNoticeOfAddEventNotify& operator=(GuildRpcSyncNoticeOfAddEventNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcSyncNoticeOfAddEventNotify& default_instance();

  static inline const GuildRpcSyncNoticeOfAddEventNotify* internal_default_instance() {
    return reinterpret_cast<const GuildRpcSyncNoticeOfAddEventNotify*>(
               &_GuildRpcSyncNoticeOfAddEventNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(GuildRpcSyncNoticeOfAddEventNotify* other);
  friend void swap(GuildRpcSyncNoticeOfAddEventNotify& a, GuildRpcSyncNoticeOfAddEventNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcSyncNoticeOfAddEventNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcSyncNoticeOfAddEventNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcSyncNoticeOfAddEventNotify& from);
  void MergeFrom(const GuildRpcSyncNoticeOfAddEventNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcSyncNoticeOfAddEventNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Param1 = 3;
  bool has_param1() const;
  void clear_param1();
  static const int kParam1FieldNumber = 3;
  const ::std::string& param1() const;
  void set_param1(const ::std::string& value);
  #if LANG_CXX11
  void set_param1(::std::string&& value);
  #endif
  void set_param1(const char* value);
  void set_param1(const char* value, size_t size);
  ::std::string* mutable_param1();
  ::std::string* release_param1();
  void set_allocated_param1(::std::string* param1);

  // optional string Param2 = 5;
  bool has_param2() const;
  void clear_param2();
  static const int kParam2FieldNumber = 5;
  const ::std::string& param2() const;
  void set_param2(const ::std::string& value);
  #if LANG_CXX11
  void set_param2(::std::string&& value);
  #endif
  void set_param2(const char* value);
  void set_param2(const char* value, size_t size);
  ::std::string* mutable_param2();
  ::std::string* release_param2();
  void set_allocated_param2(::std::string* param2);

  // optional sint32 EventId = 2 [default = -1];
  bool has_eventid() const;
  void clear_eventid();
  static const int kEventIdFieldNumber = 2;
  ::google::protobuf::int32 eventid() const;
  void set_eventid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcSyncNoticeOfAddEventNotify)
 private:
  void set_has_eventid();
  void clear_has_eventid();
  void set_has_param1();
  void clear_has_param1();
  void set_has_param2();
  void clear_has_param2();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr param1_;
  ::google::protobuf::internal::ArenaStringPtr param2_;
  ::google::protobuf::int32 eventid_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcSyncNoticeOfAddApplyListNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcSyncNoticeOfAddApplyListNotify) */ {
 public:
  GuildRpcSyncNoticeOfAddApplyListNotify();
  virtual ~GuildRpcSyncNoticeOfAddApplyListNotify();

  GuildRpcSyncNoticeOfAddApplyListNotify(const GuildRpcSyncNoticeOfAddApplyListNotify& from);

  inline GuildRpcSyncNoticeOfAddApplyListNotify& operator=(const GuildRpcSyncNoticeOfAddApplyListNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcSyncNoticeOfAddApplyListNotify(GuildRpcSyncNoticeOfAddApplyListNotify&& from) noexcept
    : GuildRpcSyncNoticeOfAddApplyListNotify() {
    *this = ::std::move(from);
  }

  inline GuildRpcSyncNoticeOfAddApplyListNotify& operator=(GuildRpcSyncNoticeOfAddApplyListNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcSyncNoticeOfAddApplyListNotify& default_instance();

  static inline const GuildRpcSyncNoticeOfAddApplyListNotify* internal_default_instance() {
    return reinterpret_cast<const GuildRpcSyncNoticeOfAddApplyListNotify*>(
               &_GuildRpcSyncNoticeOfAddApplyListNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(GuildRpcSyncNoticeOfAddApplyListNotify* other);
  friend void swap(GuildRpcSyncNoticeOfAddApplyListNotify& a, GuildRpcSyncNoticeOfAddApplyListNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcSyncNoticeOfAddApplyListNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcSyncNoticeOfAddApplyListNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcSyncNoticeOfAddApplyListNotify& from);
  void MergeFrom(const GuildRpcSyncNoticeOfAddApplyListNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcSyncNoticeOfAddApplyListNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ApplyListRoleInfoObj ApplyPlayer = 2;
  bool has_applyplayer() const;
  void clear_applyplayer();
  static const int kApplyPlayerFieldNumber = 2;
  const ::ApplyListRoleInfoObj& applyplayer() const;
  ::ApplyListRoleInfoObj* mutable_applyplayer();
  ::ApplyListRoleInfoObj* release_applyplayer();
  void set_allocated_applyplayer(::ApplyListRoleInfoObj* applyplayer);

  // @@protoc_insertion_point(class_scope:GuildRpcSyncNoticeOfAddApplyListNotify)
 private:
  void set_has_applyplayer();
  void clear_has_applyplayer();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ApplyListRoleInfoObj* applyplayer_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcSyncNoticeOfDelApplyListNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcSyncNoticeOfDelApplyListNotify) */ {
 public:
  GuildRpcSyncNoticeOfDelApplyListNotify();
  virtual ~GuildRpcSyncNoticeOfDelApplyListNotify();

  GuildRpcSyncNoticeOfDelApplyListNotify(const GuildRpcSyncNoticeOfDelApplyListNotify& from);

  inline GuildRpcSyncNoticeOfDelApplyListNotify& operator=(const GuildRpcSyncNoticeOfDelApplyListNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcSyncNoticeOfDelApplyListNotify(GuildRpcSyncNoticeOfDelApplyListNotify&& from) noexcept
    : GuildRpcSyncNoticeOfDelApplyListNotify() {
    *this = ::std::move(from);
  }

  inline GuildRpcSyncNoticeOfDelApplyListNotify& operator=(GuildRpcSyncNoticeOfDelApplyListNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcSyncNoticeOfDelApplyListNotify& default_instance();

  static inline const GuildRpcSyncNoticeOfDelApplyListNotify* internal_default_instance() {
    return reinterpret_cast<const GuildRpcSyncNoticeOfDelApplyListNotify*>(
               &_GuildRpcSyncNoticeOfDelApplyListNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(GuildRpcSyncNoticeOfDelApplyListNotify* other);
  friend void swap(GuildRpcSyncNoticeOfDelApplyListNotify& a, GuildRpcSyncNoticeOfDelApplyListNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcSyncNoticeOfDelApplyListNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcSyncNoticeOfDelApplyListNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcSyncNoticeOfDelApplyListNotify& from);
  void MergeFrom(const GuildRpcSyncNoticeOfDelApplyListNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcSyncNoticeOfDelApplyListNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 UserId = 1 [default = -1];
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GuildRpcSyncNoticeOfDelApplyListNotify)
 private:
  void set_has_userid();
  void clear_has_userid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 userid_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcSyncNoticeOfChangeAnnouncementNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcSyncNoticeOfChangeAnnouncementNotify) */ {
 public:
  GuildRpcSyncNoticeOfChangeAnnouncementNotify();
  virtual ~GuildRpcSyncNoticeOfChangeAnnouncementNotify();

  GuildRpcSyncNoticeOfChangeAnnouncementNotify(const GuildRpcSyncNoticeOfChangeAnnouncementNotify& from);

  inline GuildRpcSyncNoticeOfChangeAnnouncementNotify& operator=(const GuildRpcSyncNoticeOfChangeAnnouncementNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcSyncNoticeOfChangeAnnouncementNotify(GuildRpcSyncNoticeOfChangeAnnouncementNotify&& from) noexcept
    : GuildRpcSyncNoticeOfChangeAnnouncementNotify() {
    *this = ::std::move(from);
  }

  inline GuildRpcSyncNoticeOfChangeAnnouncementNotify& operator=(GuildRpcSyncNoticeOfChangeAnnouncementNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcSyncNoticeOfChangeAnnouncementNotify& default_instance();

  static inline const GuildRpcSyncNoticeOfChangeAnnouncementNotify* internal_default_instance() {
    return reinterpret_cast<const GuildRpcSyncNoticeOfChangeAnnouncementNotify*>(
               &_GuildRpcSyncNoticeOfChangeAnnouncementNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(GuildRpcSyncNoticeOfChangeAnnouncementNotify* other);
  friend void swap(GuildRpcSyncNoticeOfChangeAnnouncementNotify& a, GuildRpcSyncNoticeOfChangeAnnouncementNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcSyncNoticeOfChangeAnnouncementNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcSyncNoticeOfChangeAnnouncementNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcSyncNoticeOfChangeAnnouncementNotify& from);
  void MergeFrom(const GuildRpcSyncNoticeOfChangeAnnouncementNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcSyncNoticeOfChangeAnnouncementNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Announcement = 1;
  bool has_announcement() const;
  void clear_announcement();
  static const int kAnnouncementFieldNumber = 1;
  const ::std::string& announcement() const;
  void set_announcement(const ::std::string& value);
  #if LANG_CXX11
  void set_announcement(::std::string&& value);
  #endif
  void set_announcement(const char* value);
  void set_announcement(const char* value, size_t size);
  ::std::string* mutable_announcement();
  ::std::string* release_announcement();
  void set_allocated_announcement(::std::string* announcement);

  // @@protoc_insertion_point(class_scope:GuildRpcSyncNoticeOfChangeAnnouncementNotify)
 private:
  void set_has_announcement();
  void clear_has_announcement();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr announcement_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcSyncNoticeOfBreakupNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcSyncNoticeOfBreakupNotify) */ {
 public:
  GuildRpcSyncNoticeOfBreakupNotify();
  virtual ~GuildRpcSyncNoticeOfBreakupNotify();

  GuildRpcSyncNoticeOfBreakupNotify(const GuildRpcSyncNoticeOfBreakupNotify& from);

  inline GuildRpcSyncNoticeOfBreakupNotify& operator=(const GuildRpcSyncNoticeOfBreakupNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcSyncNoticeOfBreakupNotify(GuildRpcSyncNoticeOfBreakupNotify&& from) noexcept
    : GuildRpcSyncNoticeOfBreakupNotify() {
    *this = ::std::move(from);
  }

  inline GuildRpcSyncNoticeOfBreakupNotify& operator=(GuildRpcSyncNoticeOfBreakupNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcSyncNoticeOfBreakupNotify& default_instance();

  static inline const GuildRpcSyncNoticeOfBreakupNotify* internal_default_instance() {
    return reinterpret_cast<const GuildRpcSyncNoticeOfBreakupNotify*>(
               &_GuildRpcSyncNoticeOfBreakupNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(GuildRpcSyncNoticeOfBreakupNotify* other);
  friend void swap(GuildRpcSyncNoticeOfBreakupNotify& a, GuildRpcSyncNoticeOfBreakupNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcSyncNoticeOfBreakupNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcSyncNoticeOfBreakupNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcSyncNoticeOfBreakupNotify& from);
  void MergeFrom(const GuildRpcSyncNoticeOfBreakupNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcSyncNoticeOfBreakupNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GuildRpcSyncNoticeOfBreakupNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcHallLvUpAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcHallLvUpAsk) */ {
 public:
  GuildRpcHallLvUpAsk();
  virtual ~GuildRpcHallLvUpAsk();

  GuildRpcHallLvUpAsk(const GuildRpcHallLvUpAsk& from);

  inline GuildRpcHallLvUpAsk& operator=(const GuildRpcHallLvUpAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcHallLvUpAsk(GuildRpcHallLvUpAsk&& from) noexcept
    : GuildRpcHallLvUpAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcHallLvUpAsk& operator=(GuildRpcHallLvUpAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcHallLvUpAsk& default_instance();

  static inline const GuildRpcHallLvUpAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcHallLvUpAsk*>(
               &_GuildRpcHallLvUpAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(GuildRpcHallLvUpAsk* other);
  friend void swap(GuildRpcHallLvUpAsk& a, GuildRpcHallLvUpAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcHallLvUpAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcHallLvUpAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcHallLvUpAsk& from);
  void MergeFrom(const GuildRpcHallLvUpAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcHallLvUpAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GuildRpcHallLvUpAsk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcHallLvUpReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcHallLvUpReply) */ {
 public:
  GuildRpcHallLvUpReply();
  virtual ~GuildRpcHallLvUpReply();

  GuildRpcHallLvUpReply(const GuildRpcHallLvUpReply& from);

  inline GuildRpcHallLvUpReply& operator=(const GuildRpcHallLvUpReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcHallLvUpReply(GuildRpcHallLvUpReply&& from) noexcept
    : GuildRpcHallLvUpReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcHallLvUpReply& operator=(GuildRpcHallLvUpReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcHallLvUpReply& default_instance();

  static inline const GuildRpcHallLvUpReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcHallLvUpReply*>(
               &_GuildRpcHallLvUpReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(GuildRpcHallLvUpReply* other);
  friend void swap(GuildRpcHallLvUpReply& a, GuildRpcHallLvUpReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcHallLvUpReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcHallLvUpReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcHallLvUpReply& from);
  void MergeFrom(const GuildRpcHallLvUpReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcHallLvUpReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcHallLvUpReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcHouseLvUpAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcHouseLvUpAsk) */ {
 public:
  GuildRpcHouseLvUpAsk();
  virtual ~GuildRpcHouseLvUpAsk();

  GuildRpcHouseLvUpAsk(const GuildRpcHouseLvUpAsk& from);

  inline GuildRpcHouseLvUpAsk& operator=(const GuildRpcHouseLvUpAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcHouseLvUpAsk(GuildRpcHouseLvUpAsk&& from) noexcept
    : GuildRpcHouseLvUpAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcHouseLvUpAsk& operator=(GuildRpcHouseLvUpAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcHouseLvUpAsk& default_instance();

  static inline const GuildRpcHouseLvUpAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcHouseLvUpAsk*>(
               &_GuildRpcHouseLvUpAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(GuildRpcHouseLvUpAsk* other);
  friend void swap(GuildRpcHouseLvUpAsk& a, GuildRpcHouseLvUpAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcHouseLvUpAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcHouseLvUpAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcHouseLvUpAsk& from);
  void MergeFrom(const GuildRpcHouseLvUpAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcHouseLvUpAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GuildRpcHouseLvUpAsk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcHouseLvUpReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcHouseLvUpReply) */ {
 public:
  GuildRpcHouseLvUpReply();
  virtual ~GuildRpcHouseLvUpReply();

  GuildRpcHouseLvUpReply(const GuildRpcHouseLvUpReply& from);

  inline GuildRpcHouseLvUpReply& operator=(const GuildRpcHouseLvUpReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcHouseLvUpReply(GuildRpcHouseLvUpReply&& from) noexcept
    : GuildRpcHouseLvUpReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcHouseLvUpReply& operator=(GuildRpcHouseLvUpReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcHouseLvUpReply& default_instance();

  static inline const GuildRpcHouseLvUpReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcHouseLvUpReply*>(
               &_GuildRpcHouseLvUpReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(GuildRpcHouseLvUpReply* other);
  friend void swap(GuildRpcHouseLvUpReply& a, GuildRpcHouseLvUpReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcHouseLvUpReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcHouseLvUpReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcHouseLvUpReply& from);
  void MergeFrom(const GuildRpcHouseLvUpReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcHouseLvUpReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcHouseLvUpReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcStoreroomLvUpAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcStoreroomLvUpAsk) */ {
 public:
  GuildRpcStoreroomLvUpAsk();
  virtual ~GuildRpcStoreroomLvUpAsk();

  GuildRpcStoreroomLvUpAsk(const GuildRpcStoreroomLvUpAsk& from);

  inline GuildRpcStoreroomLvUpAsk& operator=(const GuildRpcStoreroomLvUpAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcStoreroomLvUpAsk(GuildRpcStoreroomLvUpAsk&& from) noexcept
    : GuildRpcStoreroomLvUpAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcStoreroomLvUpAsk& operator=(GuildRpcStoreroomLvUpAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcStoreroomLvUpAsk& default_instance();

  static inline const GuildRpcStoreroomLvUpAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcStoreroomLvUpAsk*>(
               &_GuildRpcStoreroomLvUpAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(GuildRpcStoreroomLvUpAsk* other);
  friend void swap(GuildRpcStoreroomLvUpAsk& a, GuildRpcStoreroomLvUpAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcStoreroomLvUpAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcStoreroomLvUpAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcStoreroomLvUpAsk& from);
  void MergeFrom(const GuildRpcStoreroomLvUpAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcStoreroomLvUpAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GuildRpcStoreroomLvUpAsk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcStoreroomLvUpReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcStoreroomLvUpReply) */ {
 public:
  GuildRpcStoreroomLvUpReply();
  virtual ~GuildRpcStoreroomLvUpReply();

  GuildRpcStoreroomLvUpReply(const GuildRpcStoreroomLvUpReply& from);

  inline GuildRpcStoreroomLvUpReply& operator=(const GuildRpcStoreroomLvUpReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcStoreroomLvUpReply(GuildRpcStoreroomLvUpReply&& from) noexcept
    : GuildRpcStoreroomLvUpReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcStoreroomLvUpReply& operator=(GuildRpcStoreroomLvUpReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcStoreroomLvUpReply& default_instance();

  static inline const GuildRpcStoreroomLvUpReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcStoreroomLvUpReply*>(
               &_GuildRpcStoreroomLvUpReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(GuildRpcStoreroomLvUpReply* other);
  friend void swap(GuildRpcStoreroomLvUpReply& a, GuildRpcStoreroomLvUpReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcStoreroomLvUpReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcStoreroomLvUpReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcStoreroomLvUpReply& from);
  void MergeFrom(const GuildRpcStoreroomLvUpReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcStoreroomLvUpReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcStoreroomLvUpReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcKongfuHallLvUpAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcKongfuHallLvUpAsk) */ {
 public:
  GuildRpcKongfuHallLvUpAsk();
  virtual ~GuildRpcKongfuHallLvUpAsk();

  GuildRpcKongfuHallLvUpAsk(const GuildRpcKongfuHallLvUpAsk& from);

  inline GuildRpcKongfuHallLvUpAsk& operator=(const GuildRpcKongfuHallLvUpAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcKongfuHallLvUpAsk(GuildRpcKongfuHallLvUpAsk&& from) noexcept
    : GuildRpcKongfuHallLvUpAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcKongfuHallLvUpAsk& operator=(GuildRpcKongfuHallLvUpAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcKongfuHallLvUpAsk& default_instance();

  static inline const GuildRpcKongfuHallLvUpAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcKongfuHallLvUpAsk*>(
               &_GuildRpcKongfuHallLvUpAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(GuildRpcKongfuHallLvUpAsk* other);
  friend void swap(GuildRpcKongfuHallLvUpAsk& a, GuildRpcKongfuHallLvUpAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcKongfuHallLvUpAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcKongfuHallLvUpAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcKongfuHallLvUpAsk& from);
  void MergeFrom(const GuildRpcKongfuHallLvUpAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcKongfuHallLvUpAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GuildRpcKongfuHallLvUpAsk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcKongfuHallLvUpReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcKongfuHallLvUpReply) */ {
 public:
  GuildRpcKongfuHallLvUpReply();
  virtual ~GuildRpcKongfuHallLvUpReply();

  GuildRpcKongfuHallLvUpReply(const GuildRpcKongfuHallLvUpReply& from);

  inline GuildRpcKongfuHallLvUpReply& operator=(const GuildRpcKongfuHallLvUpReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcKongfuHallLvUpReply(GuildRpcKongfuHallLvUpReply&& from) noexcept
    : GuildRpcKongfuHallLvUpReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcKongfuHallLvUpReply& operator=(GuildRpcKongfuHallLvUpReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcKongfuHallLvUpReply& default_instance();

  static inline const GuildRpcKongfuHallLvUpReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcKongfuHallLvUpReply*>(
               &_GuildRpcKongfuHallLvUpReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(GuildRpcKongfuHallLvUpReply* other);
  friend void swap(GuildRpcKongfuHallLvUpReply& a, GuildRpcKongfuHallLvUpReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcKongfuHallLvUpReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcKongfuHallLvUpReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcKongfuHallLvUpReply& from);
  void MergeFrom(const GuildRpcKongfuHallLvUpReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcKongfuHallLvUpReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcKongfuHallLvUpReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcSyncNoticeOfHallLvUpNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcSyncNoticeOfHallLvUpNotify) */ {
 public:
  GuildRpcSyncNoticeOfHallLvUpNotify();
  virtual ~GuildRpcSyncNoticeOfHallLvUpNotify();

  GuildRpcSyncNoticeOfHallLvUpNotify(const GuildRpcSyncNoticeOfHallLvUpNotify& from);

  inline GuildRpcSyncNoticeOfHallLvUpNotify& operator=(const GuildRpcSyncNoticeOfHallLvUpNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcSyncNoticeOfHallLvUpNotify(GuildRpcSyncNoticeOfHallLvUpNotify&& from) noexcept
    : GuildRpcSyncNoticeOfHallLvUpNotify() {
    *this = ::std::move(from);
  }

  inline GuildRpcSyncNoticeOfHallLvUpNotify& operator=(GuildRpcSyncNoticeOfHallLvUpNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcSyncNoticeOfHallLvUpNotify& default_instance();

  static inline const GuildRpcSyncNoticeOfHallLvUpNotify* internal_default_instance() {
    return reinterpret_cast<const GuildRpcSyncNoticeOfHallLvUpNotify*>(
               &_GuildRpcSyncNoticeOfHallLvUpNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(GuildRpcSyncNoticeOfHallLvUpNotify* other);
  friend void swap(GuildRpcSyncNoticeOfHallLvUpNotify& a, GuildRpcSyncNoticeOfHallLvUpNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcSyncNoticeOfHallLvUpNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcSyncNoticeOfHallLvUpNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcSyncNoticeOfHallLvUpNotify& from);
  void MergeFrom(const GuildRpcSyncNoticeOfHallLvUpNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcSyncNoticeOfHallLvUpNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Lv = 1 [default = -1];
  bool has_lv() const;
  void clear_lv();
  static const int kLvFieldNumber = 1;
  ::google::protobuf::int32 lv() const;
  void set_lv(::google::protobuf::int32 value);

  // optional sint32 Time = 2 [default = -1];
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcSyncNoticeOfHallLvUpNotify)
 private:
  void set_has_lv();
  void clear_has_lv();
  void set_has_time();
  void clear_has_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 time_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcSyncNoticeOfHouseLvUpNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcSyncNoticeOfHouseLvUpNotify) */ {
 public:
  GuildRpcSyncNoticeOfHouseLvUpNotify();
  virtual ~GuildRpcSyncNoticeOfHouseLvUpNotify();

  GuildRpcSyncNoticeOfHouseLvUpNotify(const GuildRpcSyncNoticeOfHouseLvUpNotify& from);

  inline GuildRpcSyncNoticeOfHouseLvUpNotify& operator=(const GuildRpcSyncNoticeOfHouseLvUpNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcSyncNoticeOfHouseLvUpNotify(GuildRpcSyncNoticeOfHouseLvUpNotify&& from) noexcept
    : GuildRpcSyncNoticeOfHouseLvUpNotify() {
    *this = ::std::move(from);
  }

  inline GuildRpcSyncNoticeOfHouseLvUpNotify& operator=(GuildRpcSyncNoticeOfHouseLvUpNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcSyncNoticeOfHouseLvUpNotify& default_instance();

  static inline const GuildRpcSyncNoticeOfHouseLvUpNotify* internal_default_instance() {
    return reinterpret_cast<const GuildRpcSyncNoticeOfHouseLvUpNotify*>(
               &_GuildRpcSyncNoticeOfHouseLvUpNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(GuildRpcSyncNoticeOfHouseLvUpNotify* other);
  friend void swap(GuildRpcSyncNoticeOfHouseLvUpNotify& a, GuildRpcSyncNoticeOfHouseLvUpNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcSyncNoticeOfHouseLvUpNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcSyncNoticeOfHouseLvUpNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcSyncNoticeOfHouseLvUpNotify& from);
  void MergeFrom(const GuildRpcSyncNoticeOfHouseLvUpNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcSyncNoticeOfHouseLvUpNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Lv = 1 [default = -1];
  bool has_lv() const;
  void clear_lv();
  static const int kLvFieldNumber = 1;
  ::google::protobuf::int32 lv() const;
  void set_lv(::google::protobuf::int32 value);

  // optional sint32 Time = 2 [default = -1];
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcSyncNoticeOfHouseLvUpNotify)
 private:
  void set_has_lv();
  void clear_has_lv();
  void set_has_time();
  void clear_has_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 time_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcSyncNoticeOfStorerommLvUpNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcSyncNoticeOfStorerommLvUpNotify) */ {
 public:
  GuildRpcSyncNoticeOfStorerommLvUpNotify();
  virtual ~GuildRpcSyncNoticeOfStorerommLvUpNotify();

  GuildRpcSyncNoticeOfStorerommLvUpNotify(const GuildRpcSyncNoticeOfStorerommLvUpNotify& from);

  inline GuildRpcSyncNoticeOfStorerommLvUpNotify& operator=(const GuildRpcSyncNoticeOfStorerommLvUpNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcSyncNoticeOfStorerommLvUpNotify(GuildRpcSyncNoticeOfStorerommLvUpNotify&& from) noexcept
    : GuildRpcSyncNoticeOfStorerommLvUpNotify() {
    *this = ::std::move(from);
  }

  inline GuildRpcSyncNoticeOfStorerommLvUpNotify& operator=(GuildRpcSyncNoticeOfStorerommLvUpNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcSyncNoticeOfStorerommLvUpNotify& default_instance();

  static inline const GuildRpcSyncNoticeOfStorerommLvUpNotify* internal_default_instance() {
    return reinterpret_cast<const GuildRpcSyncNoticeOfStorerommLvUpNotify*>(
               &_GuildRpcSyncNoticeOfStorerommLvUpNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(GuildRpcSyncNoticeOfStorerommLvUpNotify* other);
  friend void swap(GuildRpcSyncNoticeOfStorerommLvUpNotify& a, GuildRpcSyncNoticeOfStorerommLvUpNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcSyncNoticeOfStorerommLvUpNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcSyncNoticeOfStorerommLvUpNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcSyncNoticeOfStorerommLvUpNotify& from);
  void MergeFrom(const GuildRpcSyncNoticeOfStorerommLvUpNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcSyncNoticeOfStorerommLvUpNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Lv = 1 [default = -1];
  bool has_lv() const;
  void clear_lv();
  static const int kLvFieldNumber = 1;
  ::google::protobuf::int32 lv() const;
  void set_lv(::google::protobuf::int32 value);

  // optional sint32 Time = 2 [default = -1];
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcSyncNoticeOfStorerommLvUpNotify)
 private:
  void set_has_lv();
  void clear_has_lv();
  void set_has_time();
  void clear_has_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 time_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcSyncNoticeOfKongfuHallLvUpNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcSyncNoticeOfKongfuHallLvUpNotify) */ {
 public:
  GuildRpcSyncNoticeOfKongfuHallLvUpNotify();
  virtual ~GuildRpcSyncNoticeOfKongfuHallLvUpNotify();

  GuildRpcSyncNoticeOfKongfuHallLvUpNotify(const GuildRpcSyncNoticeOfKongfuHallLvUpNotify& from);

  inline GuildRpcSyncNoticeOfKongfuHallLvUpNotify& operator=(const GuildRpcSyncNoticeOfKongfuHallLvUpNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcSyncNoticeOfKongfuHallLvUpNotify(GuildRpcSyncNoticeOfKongfuHallLvUpNotify&& from) noexcept
    : GuildRpcSyncNoticeOfKongfuHallLvUpNotify() {
    *this = ::std::move(from);
  }

  inline GuildRpcSyncNoticeOfKongfuHallLvUpNotify& operator=(GuildRpcSyncNoticeOfKongfuHallLvUpNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcSyncNoticeOfKongfuHallLvUpNotify& default_instance();

  static inline const GuildRpcSyncNoticeOfKongfuHallLvUpNotify* internal_default_instance() {
    return reinterpret_cast<const GuildRpcSyncNoticeOfKongfuHallLvUpNotify*>(
               &_GuildRpcSyncNoticeOfKongfuHallLvUpNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(GuildRpcSyncNoticeOfKongfuHallLvUpNotify* other);
  friend void swap(GuildRpcSyncNoticeOfKongfuHallLvUpNotify& a, GuildRpcSyncNoticeOfKongfuHallLvUpNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcSyncNoticeOfKongfuHallLvUpNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcSyncNoticeOfKongfuHallLvUpNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcSyncNoticeOfKongfuHallLvUpNotify& from);
  void MergeFrom(const GuildRpcSyncNoticeOfKongfuHallLvUpNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcSyncNoticeOfKongfuHallLvUpNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Lv = 1 [default = -1];
  bool has_lv() const;
  void clear_lv();
  static const int kLvFieldNumber = 1;
  ::google::protobuf::int32 lv() const;
  void set_lv(::google::protobuf::int32 value);

  // optional sint32 Time = 2 [default = -1];
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcSyncNoticeOfKongfuHallLvUpNotify)
 private:
  void set_has_lv();
  void clear_has_lv();
  void set_has_time();
  void clear_has_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 time_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcApplyGuildHandleAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcApplyGuildHandleAsk) */ {
 public:
  GuildRpcApplyGuildHandleAsk();
  virtual ~GuildRpcApplyGuildHandleAsk();

  GuildRpcApplyGuildHandleAsk(const GuildRpcApplyGuildHandleAsk& from);

  inline GuildRpcApplyGuildHandleAsk& operator=(const GuildRpcApplyGuildHandleAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcApplyGuildHandleAsk(GuildRpcApplyGuildHandleAsk&& from) noexcept
    : GuildRpcApplyGuildHandleAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcApplyGuildHandleAsk& operator=(GuildRpcApplyGuildHandleAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcApplyGuildHandleAsk& default_instance();

  static inline const GuildRpcApplyGuildHandleAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcApplyGuildHandleAsk*>(
               &_GuildRpcApplyGuildHandleAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(GuildRpcApplyGuildHandleAsk* other);
  friend void swap(GuildRpcApplyGuildHandleAsk& a, GuildRpcApplyGuildHandleAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcApplyGuildHandleAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcApplyGuildHandleAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcApplyGuildHandleAsk& from);
  void MergeFrom(const GuildRpcApplyGuildHandleAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcApplyGuildHandleAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Oper = 2 [default = 0];
  bool has_oper() const;
  void clear_oper();
  static const int kOperFieldNumber = 2;
  ::google::protobuf::int32 oper() const;
  void set_oper(::google::protobuf::int32 value);

  // optional sint64 UserId = 1 [default = -1];
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GuildRpcApplyGuildHandleAsk)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_oper();
  void clear_has_oper();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 oper_;
  ::google::protobuf::int64 userid_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcApplyGuildHandleReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcApplyGuildHandleReply) */ {
 public:
  GuildRpcApplyGuildHandleReply();
  virtual ~GuildRpcApplyGuildHandleReply();

  GuildRpcApplyGuildHandleReply(const GuildRpcApplyGuildHandleReply& from);

  inline GuildRpcApplyGuildHandleReply& operator=(const GuildRpcApplyGuildHandleReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcApplyGuildHandleReply(GuildRpcApplyGuildHandleReply&& from) noexcept
    : GuildRpcApplyGuildHandleReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcApplyGuildHandleReply& operator=(GuildRpcApplyGuildHandleReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcApplyGuildHandleReply& default_instance();

  static inline const GuildRpcApplyGuildHandleReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcApplyGuildHandleReply*>(
               &_GuildRpcApplyGuildHandleReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(GuildRpcApplyGuildHandleReply* other);
  friend void swap(GuildRpcApplyGuildHandleReply& a, GuildRpcApplyGuildHandleReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcApplyGuildHandleReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcApplyGuildHandleReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcApplyGuildHandleReply& from);
  void MergeFrom(const GuildRpcApplyGuildHandleReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcApplyGuildHandleReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcApplyGuildHandleReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcCreateGuildDungeonAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcCreateGuildDungeonAsk) */ {
 public:
  GuildRpcCreateGuildDungeonAsk();
  virtual ~GuildRpcCreateGuildDungeonAsk();

  GuildRpcCreateGuildDungeonAsk(const GuildRpcCreateGuildDungeonAsk& from);

  inline GuildRpcCreateGuildDungeonAsk& operator=(const GuildRpcCreateGuildDungeonAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcCreateGuildDungeonAsk(GuildRpcCreateGuildDungeonAsk&& from) noexcept
    : GuildRpcCreateGuildDungeonAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcCreateGuildDungeonAsk& operator=(GuildRpcCreateGuildDungeonAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcCreateGuildDungeonAsk& default_instance();

  static inline const GuildRpcCreateGuildDungeonAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcCreateGuildDungeonAsk*>(
               &_GuildRpcCreateGuildDungeonAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(GuildRpcCreateGuildDungeonAsk* other);
  friend void swap(GuildRpcCreateGuildDungeonAsk& a, GuildRpcCreateGuildDungeonAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcCreateGuildDungeonAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcCreateGuildDungeonAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcCreateGuildDungeonAsk& from);
  void MergeFrom(const GuildRpcCreateGuildDungeonAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcCreateGuildDungeonAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 DungeonNum = 2 [default = -1];
  bool has_dungeonnum() const;
  void clear_dungeonnum();
  static const int kDungeonNumFieldNumber = 2;
  ::google::protobuf::int32 dungeonnum() const;
  void set_dungeonnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcCreateGuildDungeonAsk)
 private:
  void set_has_dungeonnum();
  void clear_has_dungeonnum();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 dungeonnum_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcCreateGuildDungeonReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcCreateGuildDungeonReply) */ {
 public:
  GuildRpcCreateGuildDungeonReply();
  virtual ~GuildRpcCreateGuildDungeonReply();

  GuildRpcCreateGuildDungeonReply(const GuildRpcCreateGuildDungeonReply& from);

  inline GuildRpcCreateGuildDungeonReply& operator=(const GuildRpcCreateGuildDungeonReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcCreateGuildDungeonReply(GuildRpcCreateGuildDungeonReply&& from) noexcept
    : GuildRpcCreateGuildDungeonReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcCreateGuildDungeonReply& operator=(GuildRpcCreateGuildDungeonReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcCreateGuildDungeonReply& default_instance();

  static inline const GuildRpcCreateGuildDungeonReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcCreateGuildDungeonReply*>(
               &_GuildRpcCreateGuildDungeonReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(GuildRpcCreateGuildDungeonReply* other);
  friend void swap(GuildRpcCreateGuildDungeonReply& a, GuildRpcCreateGuildDungeonReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcCreateGuildDungeonReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcCreateGuildDungeonReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcCreateGuildDungeonReply& from);
  void MergeFrom(const GuildRpcCreateGuildDungeonReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcCreateGuildDungeonReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional sint32 DungeonNum = 4 [default = -1];
  bool has_dungeonnum() const;
  void clear_dungeonnum();
  static const int kDungeonNumFieldNumber = 4;
  ::google::protobuf::int32 dungeonnum() const;
  void set_dungeonnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcCreateGuildDungeonReply)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_dungeonnum();
  void clear_has_dungeonnum();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 dungeonnum_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcEnterGuildDungeonAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcEnterGuildDungeonAsk) */ {
 public:
  GuildRpcEnterGuildDungeonAsk();
  virtual ~GuildRpcEnterGuildDungeonAsk();

  GuildRpcEnterGuildDungeonAsk(const GuildRpcEnterGuildDungeonAsk& from);

  inline GuildRpcEnterGuildDungeonAsk& operator=(const GuildRpcEnterGuildDungeonAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcEnterGuildDungeonAsk(GuildRpcEnterGuildDungeonAsk&& from) noexcept
    : GuildRpcEnterGuildDungeonAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcEnterGuildDungeonAsk& operator=(GuildRpcEnterGuildDungeonAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcEnterGuildDungeonAsk& default_instance();

  static inline const GuildRpcEnterGuildDungeonAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcEnterGuildDungeonAsk*>(
               &_GuildRpcEnterGuildDungeonAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(GuildRpcEnterGuildDungeonAsk* other);
  friend void swap(GuildRpcEnterGuildDungeonAsk& a, GuildRpcEnterGuildDungeonAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcEnterGuildDungeonAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcEnterGuildDungeonAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcEnterGuildDungeonAsk& from);
  void MergeFrom(const GuildRpcEnterGuildDungeonAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcEnterGuildDungeonAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Index = 1 [default = -1];
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcEnterGuildDungeonAsk)
 private:
  void set_has_index();
  void clear_has_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 index_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcEnterGuildDungeonReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcEnterGuildDungeonReply) */ {
 public:
  GuildRpcEnterGuildDungeonReply();
  virtual ~GuildRpcEnterGuildDungeonReply();

  GuildRpcEnterGuildDungeonReply(const GuildRpcEnterGuildDungeonReply& from);

  inline GuildRpcEnterGuildDungeonReply& operator=(const GuildRpcEnterGuildDungeonReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcEnterGuildDungeonReply(GuildRpcEnterGuildDungeonReply&& from) noexcept
    : GuildRpcEnterGuildDungeonReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcEnterGuildDungeonReply& operator=(GuildRpcEnterGuildDungeonReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcEnterGuildDungeonReply& default_instance();

  static inline const GuildRpcEnterGuildDungeonReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcEnterGuildDungeonReply*>(
               &_GuildRpcEnterGuildDungeonReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(GuildRpcEnterGuildDungeonReply* other);
  friend void swap(GuildRpcEnterGuildDungeonReply& a, GuildRpcEnterGuildDungeonReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcEnterGuildDungeonReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcEnterGuildDungeonReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcEnterGuildDungeonReply& from);
  void MergeFrom(const GuildRpcEnterGuildDungeonReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcEnterGuildDungeonReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcEnterGuildDungeonReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify) */ {
 public:
  GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify();
  virtual ~GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify();

  GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify(const GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify& from);

  inline GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify& operator=(const GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify(GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify&& from) noexcept
    : GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify() {
    *this = ::std::move(from);
  }

  inline GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify& operator=(GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify& default_instance();

  static inline const GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify* internal_default_instance() {
    return reinterpret_cast<const GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify*>(
               &_GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify* other);
  friend void swap(GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify& a, GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify& from);
  void MergeFrom(const GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GuildDungeonObj DungeonList = 1;
  int dungeonlist_size() const;
  void clear_dungeonlist();
  static const int kDungeonListFieldNumber = 1;
  const ::GuildDungeonObj& dungeonlist(int index) const;
  ::GuildDungeonObj* mutable_dungeonlist(int index);
  ::GuildDungeonObj* add_dungeonlist();
  ::google::protobuf::RepeatedPtrField< ::GuildDungeonObj >*
      mutable_dungeonlist();
  const ::google::protobuf::RepeatedPtrField< ::GuildDungeonObj >&
      dungeonlist() const;

  // @@protoc_insertion_point(class_scope:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GuildDungeonObj > dungeonlist_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcCreateGuildWarAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcCreateGuildWarAsk) */ {
 public:
  GuildRpcCreateGuildWarAsk();
  virtual ~GuildRpcCreateGuildWarAsk();

  GuildRpcCreateGuildWarAsk(const GuildRpcCreateGuildWarAsk& from);

  inline GuildRpcCreateGuildWarAsk& operator=(const GuildRpcCreateGuildWarAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcCreateGuildWarAsk(GuildRpcCreateGuildWarAsk&& from) noexcept
    : GuildRpcCreateGuildWarAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcCreateGuildWarAsk& operator=(GuildRpcCreateGuildWarAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcCreateGuildWarAsk& default_instance();

  static inline const GuildRpcCreateGuildWarAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcCreateGuildWarAsk*>(
               &_GuildRpcCreateGuildWarAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(GuildRpcCreateGuildWarAsk* other);
  friend void swap(GuildRpcCreateGuildWarAsk& a, GuildRpcCreateGuildWarAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcCreateGuildWarAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcCreateGuildWarAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcCreateGuildWarAsk& from);
  void MergeFrom(const GuildRpcCreateGuildWarAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcCreateGuildWarAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Guild = 1 [default = -1];
  bool has_guild() const;
  void clear_guild();
  static const int kGuildFieldNumber = 1;
  ::google::protobuf::int32 guild() const;
  void set_guild(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcCreateGuildWarAsk)
 private:
  void set_has_guild();
  void clear_has_guild();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 guild_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcCreateGuildWarReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcCreateGuildWarReply) */ {
 public:
  GuildRpcCreateGuildWarReply();
  virtual ~GuildRpcCreateGuildWarReply();

  GuildRpcCreateGuildWarReply(const GuildRpcCreateGuildWarReply& from);

  inline GuildRpcCreateGuildWarReply& operator=(const GuildRpcCreateGuildWarReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcCreateGuildWarReply(GuildRpcCreateGuildWarReply&& from) noexcept
    : GuildRpcCreateGuildWarReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcCreateGuildWarReply& operator=(GuildRpcCreateGuildWarReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcCreateGuildWarReply& default_instance();

  static inline const GuildRpcCreateGuildWarReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcCreateGuildWarReply*>(
               &_GuildRpcCreateGuildWarReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(GuildRpcCreateGuildWarReply* other);
  friend void swap(GuildRpcCreateGuildWarReply& a, GuildRpcCreateGuildWarReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcCreateGuildWarReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcCreateGuildWarReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcCreateGuildWarReply& from);
  void MergeFrom(const GuildRpcCreateGuildWarReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcCreateGuildWarReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcCreateGuildWarReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcSyncNoticeOfOpenGuildWarNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcSyncNoticeOfOpenGuildWarNotify) */ {
 public:
  GuildRpcSyncNoticeOfOpenGuildWarNotify();
  virtual ~GuildRpcSyncNoticeOfOpenGuildWarNotify();

  GuildRpcSyncNoticeOfOpenGuildWarNotify(const GuildRpcSyncNoticeOfOpenGuildWarNotify& from);

  inline GuildRpcSyncNoticeOfOpenGuildWarNotify& operator=(const GuildRpcSyncNoticeOfOpenGuildWarNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcSyncNoticeOfOpenGuildWarNotify(GuildRpcSyncNoticeOfOpenGuildWarNotify&& from) noexcept
    : GuildRpcSyncNoticeOfOpenGuildWarNotify() {
    *this = ::std::move(from);
  }

  inline GuildRpcSyncNoticeOfOpenGuildWarNotify& operator=(GuildRpcSyncNoticeOfOpenGuildWarNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcSyncNoticeOfOpenGuildWarNotify& default_instance();

  static inline const GuildRpcSyncNoticeOfOpenGuildWarNotify* internal_default_instance() {
    return reinterpret_cast<const GuildRpcSyncNoticeOfOpenGuildWarNotify*>(
               &_GuildRpcSyncNoticeOfOpenGuildWarNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(GuildRpcSyncNoticeOfOpenGuildWarNotify* other);
  friend void swap(GuildRpcSyncNoticeOfOpenGuildWarNotify& a, GuildRpcSyncNoticeOfOpenGuildWarNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcSyncNoticeOfOpenGuildWarNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcSyncNoticeOfOpenGuildWarNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcSyncNoticeOfOpenGuildWarNotify& from);
  void MergeFrom(const GuildRpcSyncNoticeOfOpenGuildWarNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcSyncNoticeOfOpenGuildWarNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GuildWarObj GuildWar = 2;
  bool has_guildwar() const;
  void clear_guildwar();
  static const int kGuildWarFieldNumber = 2;
  const ::GuildWarObj& guildwar() const;
  ::GuildWarObj* mutable_guildwar();
  ::GuildWarObj* release_guildwar();
  void set_allocated_guildwar(::GuildWarObj* guildwar);

  // @@protoc_insertion_point(class_scope:GuildRpcSyncNoticeOfOpenGuildWarNotify)
 private:
  void set_has_guildwar();
  void clear_has_guildwar();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::GuildWarObj* guildwar_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcEnterGuildWarAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcEnterGuildWarAsk) */ {
 public:
  GuildRpcEnterGuildWarAsk();
  virtual ~GuildRpcEnterGuildWarAsk();

  GuildRpcEnterGuildWarAsk(const GuildRpcEnterGuildWarAsk& from);

  inline GuildRpcEnterGuildWarAsk& operator=(const GuildRpcEnterGuildWarAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcEnterGuildWarAsk(GuildRpcEnterGuildWarAsk&& from) noexcept
    : GuildRpcEnterGuildWarAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcEnterGuildWarAsk& operator=(GuildRpcEnterGuildWarAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcEnterGuildWarAsk& default_instance();

  static inline const GuildRpcEnterGuildWarAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcEnterGuildWarAsk*>(
               &_GuildRpcEnterGuildWarAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(GuildRpcEnterGuildWarAsk* other);
  friend void swap(GuildRpcEnterGuildWarAsk& a, GuildRpcEnterGuildWarAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcEnterGuildWarAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcEnterGuildWarAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcEnterGuildWarAsk& from);
  void MergeFrom(const GuildRpcEnterGuildWarAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcEnterGuildWarAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GuildRpcEnterGuildWarAsk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcEnterGuildWarReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcEnterGuildWarReply) */ {
 public:
  GuildRpcEnterGuildWarReply();
  virtual ~GuildRpcEnterGuildWarReply();

  GuildRpcEnterGuildWarReply(const GuildRpcEnterGuildWarReply& from);

  inline GuildRpcEnterGuildWarReply& operator=(const GuildRpcEnterGuildWarReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcEnterGuildWarReply(GuildRpcEnterGuildWarReply&& from) noexcept
    : GuildRpcEnterGuildWarReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcEnterGuildWarReply& operator=(GuildRpcEnterGuildWarReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcEnterGuildWarReply& default_instance();

  static inline const GuildRpcEnterGuildWarReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcEnterGuildWarReply*>(
               &_GuildRpcEnterGuildWarReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(GuildRpcEnterGuildWarReply* other);
  friend void swap(GuildRpcEnterGuildWarReply& a, GuildRpcEnterGuildWarReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcEnterGuildWarReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcEnterGuildWarReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcEnterGuildWarReply& from);
  void MergeFrom(const GuildRpcEnterGuildWarReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcEnterGuildWarReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcEnterGuildWarReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcOpenScienceAttrAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcOpenScienceAttrAsk) */ {
 public:
  GuildRpcOpenScienceAttrAsk();
  virtual ~GuildRpcOpenScienceAttrAsk();

  GuildRpcOpenScienceAttrAsk(const GuildRpcOpenScienceAttrAsk& from);

  inline GuildRpcOpenScienceAttrAsk& operator=(const GuildRpcOpenScienceAttrAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcOpenScienceAttrAsk(GuildRpcOpenScienceAttrAsk&& from) noexcept
    : GuildRpcOpenScienceAttrAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcOpenScienceAttrAsk& operator=(GuildRpcOpenScienceAttrAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcOpenScienceAttrAsk& default_instance();

  static inline const GuildRpcOpenScienceAttrAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcOpenScienceAttrAsk*>(
               &_GuildRpcOpenScienceAttrAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(GuildRpcOpenScienceAttrAsk* other);
  friend void swap(GuildRpcOpenScienceAttrAsk& a, GuildRpcOpenScienceAttrAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcOpenScienceAttrAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcOpenScienceAttrAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcOpenScienceAttrAsk& from);
  void MergeFrom(const GuildRpcOpenScienceAttrAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcOpenScienceAttrAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 ScienceId = 1 [default = -1];
  bool has_scienceid() const;
  void clear_scienceid();
  static const int kScienceIdFieldNumber = 1;
  ::google::protobuf::int32 scienceid() const;
  void set_scienceid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcOpenScienceAttrAsk)
 private:
  void set_has_scienceid();
  void clear_has_scienceid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 scienceid_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcOpenScienceAttrReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcOpenScienceAttrReply) */ {
 public:
  GuildRpcOpenScienceAttrReply();
  virtual ~GuildRpcOpenScienceAttrReply();

  GuildRpcOpenScienceAttrReply(const GuildRpcOpenScienceAttrReply& from);

  inline GuildRpcOpenScienceAttrReply& operator=(const GuildRpcOpenScienceAttrReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcOpenScienceAttrReply(GuildRpcOpenScienceAttrReply&& from) noexcept
    : GuildRpcOpenScienceAttrReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcOpenScienceAttrReply& operator=(GuildRpcOpenScienceAttrReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcOpenScienceAttrReply& default_instance();

  static inline const GuildRpcOpenScienceAttrReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcOpenScienceAttrReply*>(
               &_GuildRpcOpenScienceAttrReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(GuildRpcOpenScienceAttrReply* other);
  friend void swap(GuildRpcOpenScienceAttrReply& a, GuildRpcOpenScienceAttrReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcOpenScienceAttrReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcOpenScienceAttrReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcOpenScienceAttrReply& from);
  void MergeFrom(const GuildRpcOpenScienceAttrReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcOpenScienceAttrReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcOpenScienceAttrReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcGuildScienceLvUpAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcGuildScienceLvUpAsk) */ {
 public:
  GuildRpcGuildScienceLvUpAsk();
  virtual ~GuildRpcGuildScienceLvUpAsk();

  GuildRpcGuildScienceLvUpAsk(const GuildRpcGuildScienceLvUpAsk& from);

  inline GuildRpcGuildScienceLvUpAsk& operator=(const GuildRpcGuildScienceLvUpAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcGuildScienceLvUpAsk(GuildRpcGuildScienceLvUpAsk&& from) noexcept
    : GuildRpcGuildScienceLvUpAsk() {
    *this = ::std::move(from);
  }

  inline GuildRpcGuildScienceLvUpAsk& operator=(GuildRpcGuildScienceLvUpAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcGuildScienceLvUpAsk& default_instance();

  static inline const GuildRpcGuildScienceLvUpAsk* internal_default_instance() {
    return reinterpret_cast<const GuildRpcGuildScienceLvUpAsk*>(
               &_GuildRpcGuildScienceLvUpAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(GuildRpcGuildScienceLvUpAsk* other);
  friend void swap(GuildRpcGuildScienceLvUpAsk& a, GuildRpcGuildScienceLvUpAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcGuildScienceLvUpAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcGuildScienceLvUpAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcGuildScienceLvUpAsk& from);
  void MergeFrom(const GuildRpcGuildScienceLvUpAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcGuildScienceLvUpAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool IsKeyUpLv = 3 [default = false];
  bool has_iskeyuplv() const;
  void clear_iskeyuplv();
  static const int kIsKeyUpLvFieldNumber = 3;
  bool iskeyuplv() const;
  void set_iskeyuplv(bool value);

  // optional sint32 ScienceId = 2 [default = -1];
  bool has_scienceid() const;
  void clear_scienceid();
  static const int kScienceIdFieldNumber = 2;
  ::google::protobuf::int32 scienceid() const;
  void set_scienceid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcGuildScienceLvUpAsk)
 private:
  void set_has_scienceid();
  void clear_has_scienceid();
  void set_has_iskeyuplv();
  void clear_has_iskeyuplv();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool iskeyuplv_;
  ::google::protobuf::int32 scienceid_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildRpcGuildScienceLvUpReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildRpcGuildScienceLvUpReply) */ {
 public:
  GuildRpcGuildScienceLvUpReply();
  virtual ~GuildRpcGuildScienceLvUpReply();

  GuildRpcGuildScienceLvUpReply(const GuildRpcGuildScienceLvUpReply& from);

  inline GuildRpcGuildScienceLvUpReply& operator=(const GuildRpcGuildScienceLvUpReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildRpcGuildScienceLvUpReply(GuildRpcGuildScienceLvUpReply&& from) noexcept
    : GuildRpcGuildScienceLvUpReply() {
    *this = ::std::move(from);
  }

  inline GuildRpcGuildScienceLvUpReply& operator=(GuildRpcGuildScienceLvUpReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildRpcGuildScienceLvUpReply& default_instance();

  static inline const GuildRpcGuildScienceLvUpReply* internal_default_instance() {
    return reinterpret_cast<const GuildRpcGuildScienceLvUpReply*>(
               &_GuildRpcGuildScienceLvUpReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(GuildRpcGuildScienceLvUpReply* other);
  friend void swap(GuildRpcGuildScienceLvUpReply& a, GuildRpcGuildScienceLvUpReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildRpcGuildScienceLvUpReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildRpcGuildScienceLvUpReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildRpcGuildScienceLvUpReply& from);
  void MergeFrom(const GuildRpcGuildScienceLvUpReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildRpcGuildScienceLvUpReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildRpcGuildScienceLvUpReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_GuildRpc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GuildRpcSyncDataAsk

// -------------------------------------------------------------------

// GuildRpcSyncDataReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcSyncDataReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildRpcSyncDataReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildRpcSyncDataReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildRpcSyncDataReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcSyncDataReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncDataReply.Result)
  return result_;
}
inline void GuildRpcSyncDataReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncDataReply.Result)
}

// optional .GuildInfoObj GuildData = 2;
inline bool GuildRpcSyncDataReply::has_guilddata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcSyncDataReply::set_has_guilddata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcSyncDataReply::clear_has_guilddata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcSyncDataReply::clear_guilddata() {
  if (guilddata_ != NULL) guilddata_->::GuildInfoObj::Clear();
  clear_has_guilddata();
}
inline const ::GuildInfoObj& GuildRpcSyncDataReply::guilddata() const {
  const ::GuildInfoObj* p = guilddata_;
  // @@protoc_insertion_point(field_get:GuildRpcSyncDataReply.GuildData)
  return p != NULL ? *p : *reinterpret_cast<const ::GuildInfoObj*>(
      &::_GuildInfoObj_default_instance_);
}
inline ::GuildInfoObj* GuildRpcSyncDataReply::mutable_guilddata() {
  set_has_guilddata();
  if (guilddata_ == NULL) {
    guilddata_ = new ::GuildInfoObj;
  }
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncDataReply.GuildData)
  return guilddata_;
}
inline ::GuildInfoObj* GuildRpcSyncDataReply::release_guilddata() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncDataReply.GuildData)
  clear_has_guilddata();
  ::GuildInfoObj* temp = guilddata_;
  guilddata_ = NULL;
  return temp;
}
inline void GuildRpcSyncDataReply::set_allocated_guilddata(::GuildInfoObj* guilddata) {
  delete guilddata_;
  guilddata_ = guilddata;
  if (guilddata) {
    set_has_guilddata();
  } else {
    clear_has_guilddata();
  }
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncDataReply.GuildData)
}

// -------------------------------------------------------------------

// GuildRpcCreateGuildAsk

// optional string GuildName = 1;
inline bool GuildRpcCreateGuildAsk::has_guildname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcCreateGuildAsk::set_has_guildname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcCreateGuildAsk::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcCreateGuildAsk::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guildname();
}
inline const ::std::string& GuildRpcCreateGuildAsk::guildname() const {
  // @@protoc_insertion_point(field_get:GuildRpcCreateGuildAsk.GuildName)
  return guildname_.GetNoArena();
}
inline void GuildRpcCreateGuildAsk::set_guildname(const ::std::string& value) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildRpcCreateGuildAsk.GuildName)
}
#if LANG_CXX11
inline void GuildRpcCreateGuildAsk::set_guildname(::std::string&& value) {
  set_has_guildname();
  guildname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildRpcCreateGuildAsk.GuildName)
}
#endif
inline void GuildRpcCreateGuildAsk::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildRpcCreateGuildAsk.GuildName)
}
inline void GuildRpcCreateGuildAsk::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildRpcCreateGuildAsk.GuildName)
}
inline ::std::string* GuildRpcCreateGuildAsk::mutable_guildname() {
  set_has_guildname();
  // @@protoc_insertion_point(field_mutable:GuildRpcCreateGuildAsk.GuildName)
  return guildname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildRpcCreateGuildAsk::release_guildname() {
  // @@protoc_insertion_point(field_release:GuildRpcCreateGuildAsk.GuildName)
  clear_has_guildname();
  return guildname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildRpcCreateGuildAsk::set_allocated_guildname(::std::string* guildname) {
  if (guildname != NULL) {
    set_has_guildname();
  } else {
    clear_has_guildname();
  }
  guildname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:GuildRpcCreateGuildAsk.GuildName)
}

// optional string Announcement = 2;
inline bool GuildRpcCreateGuildAsk::has_announcement() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildRpcCreateGuildAsk::set_has_announcement() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildRpcCreateGuildAsk::clear_has_announcement() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildRpcCreateGuildAsk::clear_announcement() {
  announcement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_announcement();
}
inline const ::std::string& GuildRpcCreateGuildAsk::announcement() const {
  // @@protoc_insertion_point(field_get:GuildRpcCreateGuildAsk.Announcement)
  return announcement_.GetNoArena();
}
inline void GuildRpcCreateGuildAsk::set_announcement(const ::std::string& value) {
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildRpcCreateGuildAsk.Announcement)
}
#if LANG_CXX11
inline void GuildRpcCreateGuildAsk::set_announcement(::std::string&& value) {
  set_has_announcement();
  announcement_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildRpcCreateGuildAsk.Announcement)
}
#endif
inline void GuildRpcCreateGuildAsk::set_announcement(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildRpcCreateGuildAsk.Announcement)
}
inline void GuildRpcCreateGuildAsk::set_announcement(const char* value, size_t size) {
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildRpcCreateGuildAsk.Announcement)
}
inline ::std::string* GuildRpcCreateGuildAsk::mutable_announcement() {
  set_has_announcement();
  // @@protoc_insertion_point(field_mutable:GuildRpcCreateGuildAsk.Announcement)
  return announcement_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildRpcCreateGuildAsk::release_announcement() {
  // @@protoc_insertion_point(field_release:GuildRpcCreateGuildAsk.Announcement)
  clear_has_announcement();
  return announcement_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildRpcCreateGuildAsk::set_allocated_announcement(::std::string* announcement) {
  if (announcement != NULL) {
    set_has_announcement();
  } else {
    clear_has_announcement();
  }
  announcement_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), announcement);
  // @@protoc_insertion_point(field_set_allocated:GuildRpcCreateGuildAsk.Announcement)
}

// -------------------------------------------------------------------

// GuildRpcCreateGuildReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcCreateGuildReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildRpcCreateGuildReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildRpcCreateGuildReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildRpcCreateGuildReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcCreateGuildReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcCreateGuildReply.Result)
  return result_;
}
inline void GuildRpcCreateGuildReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcCreateGuildReply.Result)
}

// optional .GuildInfoObj GuildData = 2;
inline bool GuildRpcCreateGuildReply::has_guilddata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcCreateGuildReply::set_has_guilddata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcCreateGuildReply::clear_has_guilddata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcCreateGuildReply::clear_guilddata() {
  if (guilddata_ != NULL) guilddata_->::GuildInfoObj::Clear();
  clear_has_guilddata();
}
inline const ::GuildInfoObj& GuildRpcCreateGuildReply::guilddata() const {
  const ::GuildInfoObj* p = guilddata_;
  // @@protoc_insertion_point(field_get:GuildRpcCreateGuildReply.GuildData)
  return p != NULL ? *p : *reinterpret_cast<const ::GuildInfoObj*>(
      &::_GuildInfoObj_default_instance_);
}
inline ::GuildInfoObj* GuildRpcCreateGuildReply::mutable_guilddata() {
  set_has_guilddata();
  if (guilddata_ == NULL) {
    guilddata_ = new ::GuildInfoObj;
  }
  // @@protoc_insertion_point(field_mutable:GuildRpcCreateGuildReply.GuildData)
  return guilddata_;
}
inline ::GuildInfoObj* GuildRpcCreateGuildReply::release_guilddata() {
  // @@protoc_insertion_point(field_release:GuildRpcCreateGuildReply.GuildData)
  clear_has_guilddata();
  ::GuildInfoObj* temp = guilddata_;
  guilddata_ = NULL;
  return temp;
}
inline void GuildRpcCreateGuildReply::set_allocated_guilddata(::GuildInfoObj* guilddata) {
  delete guilddata_;
  guilddata_ = guilddata;
  if (guilddata) {
    set_has_guilddata();
  } else {
    clear_has_guilddata();
  }
  // @@protoc_insertion_point(field_set_allocated:GuildRpcCreateGuildReply.GuildData)
}

// -------------------------------------------------------------------

// GuildRpcApplyGuildAsk

// optional sint32 Guild = 1 [default = -1];
inline bool GuildRpcApplyGuildAsk::has_guild() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildRpcApplyGuildAsk::set_has_guild() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildRpcApplyGuildAsk::clear_has_guild() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildRpcApplyGuildAsk::clear_guild() {
  guild_ = -1;
  clear_has_guild();
}
inline ::google::protobuf::int32 GuildRpcApplyGuildAsk::guild() const {
  // @@protoc_insertion_point(field_get:GuildRpcApplyGuildAsk.Guild)
  return guild_;
}
inline void GuildRpcApplyGuildAsk::set_guild(::google::protobuf::int32 value) {
  set_has_guild();
  guild_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcApplyGuildAsk.Guild)
}

// optional sint32 Oper = 2 [default = 0];
inline bool GuildRpcApplyGuildAsk::has_oper() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcApplyGuildAsk::set_has_oper() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcApplyGuildAsk::clear_has_oper() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcApplyGuildAsk::clear_oper() {
  oper_ = 0;
  clear_has_oper();
}
inline ::google::protobuf::int32 GuildRpcApplyGuildAsk::oper() const {
  // @@protoc_insertion_point(field_get:GuildRpcApplyGuildAsk.Oper)
  return oper_;
}
inline void GuildRpcApplyGuildAsk::set_oper(::google::protobuf::int32 value) {
  set_has_oper();
  oper_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcApplyGuildAsk.Oper)
}

// -------------------------------------------------------------------

// GuildRpcApplyGuildReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcApplyGuildReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcApplyGuildReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcApplyGuildReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcApplyGuildReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcApplyGuildReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcApplyGuildReply.Result)
  return result_;
}
inline void GuildRpcApplyGuildReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcApplyGuildReply.Result)
}

// -------------------------------------------------------------------

// GuildRpcQuickApplyAsk

// -------------------------------------------------------------------

// GuildRpcQuickApplyReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcQuickApplyReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcQuickApplyReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcQuickApplyReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcQuickApplyReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcQuickApplyReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcQuickApplyReply.Result)
  return result_;
}
inline void GuildRpcQuickApplyReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcQuickApplyReply.Result)
}

// -------------------------------------------------------------------

// GuildRpcChangeGuildNameAsk

// optional string GuildName = 1;
inline bool GuildRpcChangeGuildNameAsk::has_guildname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcChangeGuildNameAsk::set_has_guildname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcChangeGuildNameAsk::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcChangeGuildNameAsk::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guildname();
}
inline const ::std::string& GuildRpcChangeGuildNameAsk::guildname() const {
  // @@protoc_insertion_point(field_get:GuildRpcChangeGuildNameAsk.GuildName)
  return guildname_.GetNoArena();
}
inline void GuildRpcChangeGuildNameAsk::set_guildname(const ::std::string& value) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildRpcChangeGuildNameAsk.GuildName)
}
#if LANG_CXX11
inline void GuildRpcChangeGuildNameAsk::set_guildname(::std::string&& value) {
  set_has_guildname();
  guildname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildRpcChangeGuildNameAsk.GuildName)
}
#endif
inline void GuildRpcChangeGuildNameAsk::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildRpcChangeGuildNameAsk.GuildName)
}
inline void GuildRpcChangeGuildNameAsk::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildRpcChangeGuildNameAsk.GuildName)
}
inline ::std::string* GuildRpcChangeGuildNameAsk::mutable_guildname() {
  set_has_guildname();
  // @@protoc_insertion_point(field_mutable:GuildRpcChangeGuildNameAsk.GuildName)
  return guildname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildRpcChangeGuildNameAsk::release_guildname() {
  // @@protoc_insertion_point(field_release:GuildRpcChangeGuildNameAsk.GuildName)
  clear_has_guildname();
  return guildname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildRpcChangeGuildNameAsk::set_allocated_guildname(::std::string* guildname) {
  if (guildname != NULL) {
    set_has_guildname();
  } else {
    clear_has_guildname();
  }
  guildname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:GuildRpcChangeGuildNameAsk.GuildName)
}

// -------------------------------------------------------------------

// GuildRpcChangeGuildNameReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcChangeGuildNameReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcChangeGuildNameReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcChangeGuildNameReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcChangeGuildNameReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcChangeGuildNameReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcChangeGuildNameReply.Result)
  return result_;
}
inline void GuildRpcChangeGuildNameReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcChangeGuildNameReply.Result)
}

// -------------------------------------------------------------------

// GuildRpcChangeAnnouncementAsk

// optional string Announcement = 1;
inline bool GuildRpcChangeAnnouncementAsk::has_announcement() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcChangeAnnouncementAsk::set_has_announcement() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcChangeAnnouncementAsk::clear_has_announcement() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcChangeAnnouncementAsk::clear_announcement() {
  announcement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_announcement();
}
inline const ::std::string& GuildRpcChangeAnnouncementAsk::announcement() const {
  // @@protoc_insertion_point(field_get:GuildRpcChangeAnnouncementAsk.Announcement)
  return announcement_.GetNoArena();
}
inline void GuildRpcChangeAnnouncementAsk::set_announcement(const ::std::string& value) {
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildRpcChangeAnnouncementAsk.Announcement)
}
#if LANG_CXX11
inline void GuildRpcChangeAnnouncementAsk::set_announcement(::std::string&& value) {
  set_has_announcement();
  announcement_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildRpcChangeAnnouncementAsk.Announcement)
}
#endif
inline void GuildRpcChangeAnnouncementAsk::set_announcement(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildRpcChangeAnnouncementAsk.Announcement)
}
inline void GuildRpcChangeAnnouncementAsk::set_announcement(const char* value, size_t size) {
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildRpcChangeAnnouncementAsk.Announcement)
}
inline ::std::string* GuildRpcChangeAnnouncementAsk::mutable_announcement() {
  set_has_announcement();
  // @@protoc_insertion_point(field_mutable:GuildRpcChangeAnnouncementAsk.Announcement)
  return announcement_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildRpcChangeAnnouncementAsk::release_announcement() {
  // @@protoc_insertion_point(field_release:GuildRpcChangeAnnouncementAsk.Announcement)
  clear_has_announcement();
  return announcement_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildRpcChangeAnnouncementAsk::set_allocated_announcement(::std::string* announcement) {
  if (announcement != NULL) {
    set_has_announcement();
  } else {
    clear_has_announcement();
  }
  announcement_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), announcement);
  // @@protoc_insertion_point(field_set_allocated:GuildRpcChangeAnnouncementAsk.Announcement)
}

// -------------------------------------------------------------------

// GuildRpcChangeAnnouncementReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcChangeAnnouncementReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcChangeAnnouncementReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcChangeAnnouncementReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcChangeAnnouncementReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcChangeAnnouncementReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcChangeAnnouncementReply.Result)
  return result_;
}
inline void GuildRpcChangeAnnouncementReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcChangeAnnouncementReply.Result)
}

// -------------------------------------------------------------------

// GuildRpcReqGuildListAsk

// -------------------------------------------------------------------

// GuildRpcReqGuildListReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcReqGuildListReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcReqGuildListReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcReqGuildListReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcReqGuildListReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcReqGuildListReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcReqGuildListReply.Result)
  return result_;
}
inline void GuildRpcReqGuildListReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcReqGuildListReply.Result)
}

// repeated .GuildListObj GuildList = 2;
inline int GuildRpcReqGuildListReply::guildlist_size() const {
  return guildlist_.size();
}
inline void GuildRpcReqGuildListReply::clear_guildlist() {
  guildlist_.Clear();
}
inline const ::GuildListObj& GuildRpcReqGuildListReply::guildlist(int index) const {
  // @@protoc_insertion_point(field_get:GuildRpcReqGuildListReply.GuildList)
  return guildlist_.Get(index);
}
inline ::GuildListObj* GuildRpcReqGuildListReply::mutable_guildlist(int index) {
  // @@protoc_insertion_point(field_mutable:GuildRpcReqGuildListReply.GuildList)
  return guildlist_.Mutable(index);
}
inline ::GuildListObj* GuildRpcReqGuildListReply::add_guildlist() {
  // @@protoc_insertion_point(field_add:GuildRpcReqGuildListReply.GuildList)
  return guildlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::GuildListObj >*
GuildRpcReqGuildListReply::mutable_guildlist() {
  // @@protoc_insertion_point(field_mutable_list:GuildRpcReqGuildListReply.GuildList)
  return &guildlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::GuildListObj >&
GuildRpcReqGuildListReply::guildlist() const {
  // @@protoc_insertion_point(field_list:GuildRpcReqGuildListReply.GuildList)
  return guildlist_;
}

// -------------------------------------------------------------------

// GuildRpcAppointDutyAsk

// optional sint64 UserId = 1 [default = -1];
inline bool GuildRpcAppointDutyAsk::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildRpcAppointDutyAsk::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildRpcAppointDutyAsk::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildRpcAppointDutyAsk::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
inline ::google::protobuf::int64 GuildRpcAppointDutyAsk::userid() const {
  // @@protoc_insertion_point(field_get:GuildRpcAppointDutyAsk.UserId)
  return userid_;
}
inline void GuildRpcAppointDutyAsk::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcAppointDutyAsk.UserId)
}

// optional sint32 Duty = 2 [default = -1];
inline bool GuildRpcAppointDutyAsk::has_duty() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcAppointDutyAsk::set_has_duty() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcAppointDutyAsk::clear_has_duty() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcAppointDutyAsk::clear_duty() {
  duty_ = -1;
  clear_has_duty();
}
inline ::google::protobuf::int32 GuildRpcAppointDutyAsk::duty() const {
  // @@protoc_insertion_point(field_get:GuildRpcAppointDutyAsk.Duty)
  return duty_;
}
inline void GuildRpcAppointDutyAsk::set_duty(::google::protobuf::int32 value) {
  set_has_duty();
  duty_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcAppointDutyAsk.Duty)
}

// -------------------------------------------------------------------

// GuildRpcAppointDutyReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcAppointDutyReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcAppointDutyReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcAppointDutyReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcAppointDutyReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcAppointDutyReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcAppointDutyReply.Result)
  return result_;
}
inline void GuildRpcAppointDutyReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcAppointDutyReply.Result)
}

// -------------------------------------------------------------------

// GuildRpcKickoutAsk

// optional sint64 UserId = 1 [default = -1];
inline bool GuildRpcKickoutAsk::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcKickoutAsk::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcKickoutAsk::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcKickoutAsk::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
inline ::google::protobuf::int64 GuildRpcKickoutAsk::userid() const {
  // @@protoc_insertion_point(field_get:GuildRpcKickoutAsk.UserId)
  return userid_;
}
inline void GuildRpcKickoutAsk::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcKickoutAsk.UserId)
}

// -------------------------------------------------------------------

// GuildRpcKickoutReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcKickoutReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcKickoutReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcKickoutReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcKickoutReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcKickoutReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcKickoutReply.Result)
  return result_;
}
inline void GuildRpcKickoutReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcKickoutReply.Result)
}

// -------------------------------------------------------------------

// GuildRpcExitGuildAsk

// -------------------------------------------------------------------

// GuildRpcExitGuildReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcExitGuildReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcExitGuildReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcExitGuildReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcExitGuildReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcExitGuildReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcExitGuildReply.Result)
  return result_;
}
inline void GuildRpcExitGuildReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcExitGuildReply.Result)
}

// -------------------------------------------------------------------

// GuildRpcBreakUpAsk

// -------------------------------------------------------------------

// GuildRpcBreakUpReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcBreakUpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcBreakUpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcBreakUpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcBreakUpReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcBreakUpReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcBreakUpReply.Result)
  return result_;
}
inline void GuildRpcBreakUpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcBreakUpReply.Result)
}

// -------------------------------------------------------------------

// GuildRpcInviteToJoinAsk

// optional sint64 UserId = 1 [default = -1];
inline bool GuildRpcInviteToJoinAsk::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcInviteToJoinAsk::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcInviteToJoinAsk::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcInviteToJoinAsk::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
inline ::google::protobuf::int64 GuildRpcInviteToJoinAsk::userid() const {
  // @@protoc_insertion_point(field_get:GuildRpcInviteToJoinAsk.UserId)
  return userid_;
}
inline void GuildRpcInviteToJoinAsk::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcInviteToJoinAsk.UserId)
}

// -------------------------------------------------------------------

// GuildRpcInviteToJoinReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcInviteToJoinReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcInviteToJoinReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcInviteToJoinReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcInviteToJoinReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcInviteToJoinReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcInviteToJoinReply.Result)
  return result_;
}
inline void GuildRpcInviteToJoinReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcInviteToJoinReply.Result)
}

// -------------------------------------------------------------------

// GuildRpcBeInvitedNoticeNotify

// optional sint64 UserId = 1 [default = -1];
inline bool GuildRpcBeInvitedNoticeNotify::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildRpcBeInvitedNoticeNotify::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildRpcBeInvitedNoticeNotify::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildRpcBeInvitedNoticeNotify::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
inline ::google::protobuf::int64 GuildRpcBeInvitedNoticeNotify::userid() const {
  // @@protoc_insertion_point(field_get:GuildRpcBeInvitedNoticeNotify.UserId)
  return userid_;
}
inline void GuildRpcBeInvitedNoticeNotify::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcBeInvitedNoticeNotify.UserId)
}

// optional sint32 Guild = 2 [default = -1];
inline bool GuildRpcBeInvitedNoticeNotify::has_guild() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildRpcBeInvitedNoticeNotify::set_has_guild() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildRpcBeInvitedNoticeNotify::clear_has_guild() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildRpcBeInvitedNoticeNotify::clear_guild() {
  guild_ = -1;
  clear_has_guild();
}
inline ::google::protobuf::int32 GuildRpcBeInvitedNoticeNotify::guild() const {
  // @@protoc_insertion_point(field_get:GuildRpcBeInvitedNoticeNotify.Guild)
  return guild_;
}
inline void GuildRpcBeInvitedNoticeNotify::set_guild(::google::protobuf::int32 value) {
  set_has_guild();
  guild_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcBeInvitedNoticeNotify.Guild)
}

// optional string GuildName = 3;
inline bool GuildRpcBeInvitedNoticeNotify::has_guildname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcBeInvitedNoticeNotify::set_has_guildname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcBeInvitedNoticeNotify::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcBeInvitedNoticeNotify::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guildname();
}
inline const ::std::string& GuildRpcBeInvitedNoticeNotify::guildname() const {
  // @@protoc_insertion_point(field_get:GuildRpcBeInvitedNoticeNotify.GuildName)
  return guildname_.GetNoArena();
}
inline void GuildRpcBeInvitedNoticeNotify::set_guildname(const ::std::string& value) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildRpcBeInvitedNoticeNotify.GuildName)
}
#if LANG_CXX11
inline void GuildRpcBeInvitedNoticeNotify::set_guildname(::std::string&& value) {
  set_has_guildname();
  guildname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildRpcBeInvitedNoticeNotify.GuildName)
}
#endif
inline void GuildRpcBeInvitedNoticeNotify::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildRpcBeInvitedNoticeNotify.GuildName)
}
inline void GuildRpcBeInvitedNoticeNotify::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildRpcBeInvitedNoticeNotify.GuildName)
}
inline ::std::string* GuildRpcBeInvitedNoticeNotify::mutable_guildname() {
  set_has_guildname();
  // @@protoc_insertion_point(field_mutable:GuildRpcBeInvitedNoticeNotify.GuildName)
  return guildname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildRpcBeInvitedNoticeNotify::release_guildname() {
  // @@protoc_insertion_point(field_release:GuildRpcBeInvitedNoticeNotify.GuildName)
  clear_has_guildname();
  return guildname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildRpcBeInvitedNoticeNotify::set_allocated_guildname(::std::string* guildname) {
  if (guildname != NULL) {
    set_has_guildname();
  } else {
    clear_has_guildname();
  }
  guildname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:GuildRpcBeInvitedNoticeNotify.GuildName)
}

// -------------------------------------------------------------------

// GuildRpcBeInvitedHandleAsk

// optional sint32 Guild = 1 [default = -1];
inline bool GuildRpcBeInvitedHandleAsk::has_guild() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildRpcBeInvitedHandleAsk::set_has_guild() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildRpcBeInvitedHandleAsk::clear_has_guild() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildRpcBeInvitedHandleAsk::clear_guild() {
  guild_ = -1;
  clear_has_guild();
}
inline ::google::protobuf::int32 GuildRpcBeInvitedHandleAsk::guild() const {
  // @@protoc_insertion_point(field_get:GuildRpcBeInvitedHandleAsk.Guild)
  return guild_;
}
inline void GuildRpcBeInvitedHandleAsk::set_guild(::google::protobuf::int32 value) {
  set_has_guild();
  guild_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcBeInvitedHandleAsk.Guild)
}

// optional sint32 Oper = 3 [default = 0];
inline bool GuildRpcBeInvitedHandleAsk::has_oper() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcBeInvitedHandleAsk::set_has_oper() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcBeInvitedHandleAsk::clear_has_oper() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcBeInvitedHandleAsk::clear_oper() {
  oper_ = 0;
  clear_has_oper();
}
inline ::google::protobuf::int32 GuildRpcBeInvitedHandleAsk::oper() const {
  // @@protoc_insertion_point(field_get:GuildRpcBeInvitedHandleAsk.Oper)
  return oper_;
}
inline void GuildRpcBeInvitedHandleAsk::set_oper(::google::protobuf::int32 value) {
  set_has_oper();
  oper_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcBeInvitedHandleAsk.Oper)
}

// -------------------------------------------------------------------

// GuildRpcBeInvitedHandleReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcBeInvitedHandleReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcBeInvitedHandleReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcBeInvitedHandleReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcBeInvitedHandleReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcBeInvitedHandleReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcBeInvitedHandleReply.Result)
  return result_;
}
inline void GuildRpcBeInvitedHandleReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcBeInvitedHandleReply.Result)
}

// -------------------------------------------------------------------

// GuildRpcResignDutyAsk

// -------------------------------------------------------------------

// GuildRpcResignDutyReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcResignDutyReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcResignDutyReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcResignDutyReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcResignDutyReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcResignDutyReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcResignDutyReply.Result)
  return result_;
}
inline void GuildRpcResignDutyReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcResignDutyReply.Result)
}

// -------------------------------------------------------------------

// GuildRpcSyncMyTeamDataNotify

// optional .GuildInfoObj GuildData = 1;
inline bool GuildRpcSyncMyTeamDataNotify::has_guilddata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcSyncMyTeamDataNotify::set_has_guilddata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcSyncMyTeamDataNotify::clear_has_guilddata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcSyncMyTeamDataNotify::clear_guilddata() {
  if (guilddata_ != NULL) guilddata_->::GuildInfoObj::Clear();
  clear_has_guilddata();
}
inline const ::GuildInfoObj& GuildRpcSyncMyTeamDataNotify::guilddata() const {
  const ::GuildInfoObj* p = guilddata_;
  // @@protoc_insertion_point(field_get:GuildRpcSyncMyTeamDataNotify.GuildData)
  return p != NULL ? *p : *reinterpret_cast<const ::GuildInfoObj*>(
      &::_GuildInfoObj_default_instance_);
}
inline ::GuildInfoObj* GuildRpcSyncMyTeamDataNotify::mutable_guilddata() {
  set_has_guilddata();
  if (guilddata_ == NULL) {
    guilddata_ = new ::GuildInfoObj;
  }
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncMyTeamDataNotify.GuildData)
  return guilddata_;
}
inline ::GuildInfoObj* GuildRpcSyncMyTeamDataNotify::release_guilddata() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncMyTeamDataNotify.GuildData)
  clear_has_guilddata();
  ::GuildInfoObj* temp = guilddata_;
  guilddata_ = NULL;
  return temp;
}
inline void GuildRpcSyncMyTeamDataNotify::set_allocated_guilddata(::GuildInfoObj* guilddata) {
  delete guilddata_;
  guilddata_ = guilddata;
  if (guilddata) {
    set_has_guilddata();
  } else {
    clear_has_guilddata();
  }
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncMyTeamDataNotify.GuildData)
}

// -------------------------------------------------------------------

// GuildRpcSyncNoticeOfGuildBaseDataNotify

// optional string GuildName = 1;
inline bool GuildRpcSyncNoticeOfGuildBaseDataNotify::has_guildname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_has_guildname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guildname();
}
inline const ::std::string& GuildRpcSyncNoticeOfGuildBaseDataNotify::guildname() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfGuildBaseDataNotify.GuildName)
  return guildname_.GetNoArena();
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_guildname(const ::std::string& value) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfGuildBaseDataNotify.GuildName)
}
#if LANG_CXX11
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_guildname(::std::string&& value) {
  set_has_guildname();
  guildname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildRpcSyncNoticeOfGuildBaseDataNotify.GuildName)
}
#endif
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildRpcSyncNoticeOfGuildBaseDataNotify.GuildName)
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildRpcSyncNoticeOfGuildBaseDataNotify.GuildName)
}
inline ::std::string* GuildRpcSyncNoticeOfGuildBaseDataNotify::mutable_guildname() {
  set_has_guildname();
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncNoticeOfGuildBaseDataNotify.GuildName)
  return guildname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildRpcSyncNoticeOfGuildBaseDataNotify::release_guildname() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncNoticeOfGuildBaseDataNotify.GuildName)
  clear_has_guildname();
  return guildname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_allocated_guildname(::std::string* guildname) {
  if (guildname != NULL) {
    set_has_guildname();
  } else {
    clear_has_guildname();
  }
  guildname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncNoticeOfGuildBaseDataNotify.GuildName)
}

// optional sint32 Level = 2 [default = 1];
inline bool GuildRpcSyncNoticeOfGuildBaseDataNotify::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_level() {
  level_ = 1;
  clear_has_level();
}
inline ::google::protobuf::int32 GuildRpcSyncNoticeOfGuildBaseDataNotify::level() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfGuildBaseDataNotify.Level)
  return level_;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfGuildBaseDataNotify.Level)
}

// optional sint64 CaptainId = 3 [default = -1];
inline bool GuildRpcSyncNoticeOfGuildBaseDataNotify::has_captainid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_has_captainid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_has_captainid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_captainid() {
  captainid_ = GOOGLE_LONGLONG(-1);
  clear_has_captainid();
}
inline ::google::protobuf::int64 GuildRpcSyncNoticeOfGuildBaseDataNotify::captainid() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainId)
  return captainid_;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_captainid(::google::protobuf::int64 value) {
  set_has_captainid();
  captainid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainId)
}

// optional string CaptainName = 4;
inline bool GuildRpcSyncNoticeOfGuildBaseDataNotify::has_captainname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_has_captainname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_has_captainname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_captainname() {
  captainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_captainname();
}
inline const ::std::string& GuildRpcSyncNoticeOfGuildBaseDataNotify::captainname() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainName)
  return captainname_.GetNoArena();
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_captainname(const ::std::string& value) {
  set_has_captainname();
  captainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainName)
}
#if LANG_CXX11
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_captainname(::std::string&& value) {
  set_has_captainname();
  captainname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainName)
}
#endif
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_captainname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_captainname();
  captainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainName)
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_captainname(const char* value, size_t size) {
  set_has_captainname();
  captainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainName)
}
inline ::std::string* GuildRpcSyncNoticeOfGuildBaseDataNotify::mutable_captainname() {
  set_has_captainname();
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainName)
  return captainname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildRpcSyncNoticeOfGuildBaseDataNotify::release_captainname() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainName)
  clear_has_captainname();
  return captainname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_allocated_captainname(::std::string* captainname) {
  if (captainname != NULL) {
    set_has_captainname();
  } else {
    clear_has_captainname();
  }
  captainname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), captainname);
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainName)
}

// optional sint32 Funds = 5 [default = -1];
inline bool GuildRpcSyncNoticeOfGuildBaseDataNotify::has_funds() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_has_funds() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_has_funds() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_funds() {
  funds_ = -1;
  clear_has_funds();
}
inline ::google::protobuf::int32 GuildRpcSyncNoticeOfGuildBaseDataNotify::funds() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfGuildBaseDataNotify.Funds)
  return funds_;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_funds(::google::protobuf::int32 value) {
  set_has_funds();
  funds_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfGuildBaseDataNotify.Funds)
}

// optional sint32 LeagueMatchesRank = 7 [default = -1];
inline bool GuildRpcSyncNoticeOfGuildBaseDataNotify::has_leaguematchesrank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_has_leaguematchesrank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_has_leaguematchesrank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_leaguematchesrank() {
  leaguematchesrank_ = -1;
  clear_has_leaguematchesrank();
}
inline ::google::protobuf::int32 GuildRpcSyncNoticeOfGuildBaseDataNotify::leaguematchesrank() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfGuildBaseDataNotify.LeagueMatchesRank)
  return leaguematchesrank_;
}
inline void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_leaguematchesrank(::google::protobuf::int32 value) {
  set_has_leaguematchesrank();
  leaguematchesrank_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfGuildBaseDataNotify.LeagueMatchesRank)
}

// -------------------------------------------------------------------

// GuildRpcSyncNoticeOfGuildMemberChangeNotify

// optional .GuildMemberObj GuildMember = 5;
inline bool GuildRpcSyncNoticeOfGuildMemberChangeNotify::has_guildmember() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcSyncNoticeOfGuildMemberChangeNotify::set_has_guildmember() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcSyncNoticeOfGuildMemberChangeNotify::clear_has_guildmember() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcSyncNoticeOfGuildMemberChangeNotify::clear_guildmember() {
  if (guildmember_ != NULL) guildmember_->::GuildMemberObj::Clear();
  clear_has_guildmember();
}
inline const ::GuildMemberObj& GuildRpcSyncNoticeOfGuildMemberChangeNotify::guildmember() const {
  const ::GuildMemberObj* p = guildmember_;
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfGuildMemberChangeNotify.GuildMember)
  return p != NULL ? *p : *reinterpret_cast<const ::GuildMemberObj*>(
      &::_GuildMemberObj_default_instance_);
}
inline ::GuildMemberObj* GuildRpcSyncNoticeOfGuildMemberChangeNotify::mutable_guildmember() {
  set_has_guildmember();
  if (guildmember_ == NULL) {
    guildmember_ = new ::GuildMemberObj;
  }
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncNoticeOfGuildMemberChangeNotify.GuildMember)
  return guildmember_;
}
inline ::GuildMemberObj* GuildRpcSyncNoticeOfGuildMemberChangeNotify::release_guildmember() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncNoticeOfGuildMemberChangeNotify.GuildMember)
  clear_has_guildmember();
  ::GuildMemberObj* temp = guildmember_;
  guildmember_ = NULL;
  return temp;
}
inline void GuildRpcSyncNoticeOfGuildMemberChangeNotify::set_allocated_guildmember(::GuildMemberObj* guildmember) {
  delete guildmember_;
  guildmember_ = guildmember;
  if (guildmember) {
    set_has_guildmember();
  } else {
    clear_has_guildmember();
  }
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncNoticeOfGuildMemberChangeNotify.GuildMember)
}

// -------------------------------------------------------------------

// GuildRpcSyncNoticeOfAddMemberNotify

// optional .GuildMemberObj GuildMember = 1;
inline bool GuildRpcSyncNoticeOfAddMemberNotify::has_guildmember() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcSyncNoticeOfAddMemberNotify::set_has_guildmember() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcSyncNoticeOfAddMemberNotify::clear_has_guildmember() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcSyncNoticeOfAddMemberNotify::clear_guildmember() {
  if (guildmember_ != NULL) guildmember_->::GuildMemberObj::Clear();
  clear_has_guildmember();
}
inline const ::GuildMemberObj& GuildRpcSyncNoticeOfAddMemberNotify::guildmember() const {
  const ::GuildMemberObj* p = guildmember_;
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfAddMemberNotify.GuildMember)
  return p != NULL ? *p : *reinterpret_cast<const ::GuildMemberObj*>(
      &::_GuildMemberObj_default_instance_);
}
inline ::GuildMemberObj* GuildRpcSyncNoticeOfAddMemberNotify::mutable_guildmember() {
  set_has_guildmember();
  if (guildmember_ == NULL) {
    guildmember_ = new ::GuildMemberObj;
  }
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncNoticeOfAddMemberNotify.GuildMember)
  return guildmember_;
}
inline ::GuildMemberObj* GuildRpcSyncNoticeOfAddMemberNotify::release_guildmember() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncNoticeOfAddMemberNotify.GuildMember)
  clear_has_guildmember();
  ::GuildMemberObj* temp = guildmember_;
  guildmember_ = NULL;
  return temp;
}
inline void GuildRpcSyncNoticeOfAddMemberNotify::set_allocated_guildmember(::GuildMemberObj* guildmember) {
  delete guildmember_;
  guildmember_ = guildmember;
  if (guildmember) {
    set_has_guildmember();
  } else {
    clear_has_guildmember();
  }
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncNoticeOfAddMemberNotify.GuildMember)
}

// -------------------------------------------------------------------

// GuildRpcSyncNoticeOfDelMemberNotify

// optional sint64 UserId = 1 [default = -1];
inline bool GuildRpcSyncNoticeOfDelMemberNotify::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcSyncNoticeOfDelMemberNotify::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcSyncNoticeOfDelMemberNotify::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcSyncNoticeOfDelMemberNotify::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
inline ::google::protobuf::int64 GuildRpcSyncNoticeOfDelMemberNotify::userid() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfDelMemberNotify.UserId)
  return userid_;
}
inline void GuildRpcSyncNoticeOfDelMemberNotify::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfDelMemberNotify.UserId)
}

// -------------------------------------------------------------------

// GuildRpcSyncNoticeOfAddEventNotify

// optional sint32 EventId = 2 [default = -1];
inline bool GuildRpcSyncNoticeOfAddEventNotify::has_eventid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildRpcSyncNoticeOfAddEventNotify::set_has_eventid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildRpcSyncNoticeOfAddEventNotify::clear_has_eventid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildRpcSyncNoticeOfAddEventNotify::clear_eventid() {
  eventid_ = -1;
  clear_has_eventid();
}
inline ::google::protobuf::int32 GuildRpcSyncNoticeOfAddEventNotify::eventid() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfAddEventNotify.EventId)
  return eventid_;
}
inline void GuildRpcSyncNoticeOfAddEventNotify::set_eventid(::google::protobuf::int32 value) {
  set_has_eventid();
  eventid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfAddEventNotify.EventId)
}

// optional string Param1 = 3;
inline bool GuildRpcSyncNoticeOfAddEventNotify::has_param1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcSyncNoticeOfAddEventNotify::set_has_param1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcSyncNoticeOfAddEventNotify::clear_has_param1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcSyncNoticeOfAddEventNotify::clear_param1() {
  param1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param1();
}
inline const ::std::string& GuildRpcSyncNoticeOfAddEventNotify::param1() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfAddEventNotify.Param1)
  return param1_.GetNoArena();
}
inline void GuildRpcSyncNoticeOfAddEventNotify::set_param1(const ::std::string& value) {
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfAddEventNotify.Param1)
}
#if LANG_CXX11
inline void GuildRpcSyncNoticeOfAddEventNotify::set_param1(::std::string&& value) {
  set_has_param1();
  param1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildRpcSyncNoticeOfAddEventNotify.Param1)
}
#endif
inline void GuildRpcSyncNoticeOfAddEventNotify::set_param1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildRpcSyncNoticeOfAddEventNotify.Param1)
}
inline void GuildRpcSyncNoticeOfAddEventNotify::set_param1(const char* value, size_t size) {
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildRpcSyncNoticeOfAddEventNotify.Param1)
}
inline ::std::string* GuildRpcSyncNoticeOfAddEventNotify::mutable_param1() {
  set_has_param1();
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncNoticeOfAddEventNotify.Param1)
  return param1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildRpcSyncNoticeOfAddEventNotify::release_param1() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncNoticeOfAddEventNotify.Param1)
  clear_has_param1();
  return param1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildRpcSyncNoticeOfAddEventNotify::set_allocated_param1(::std::string* param1) {
  if (param1 != NULL) {
    set_has_param1();
  } else {
    clear_has_param1();
  }
  param1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param1);
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncNoticeOfAddEventNotify.Param1)
}

// optional string Param2 = 5;
inline bool GuildRpcSyncNoticeOfAddEventNotify::has_param2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildRpcSyncNoticeOfAddEventNotify::set_has_param2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildRpcSyncNoticeOfAddEventNotify::clear_has_param2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildRpcSyncNoticeOfAddEventNotify::clear_param2() {
  param2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param2();
}
inline const ::std::string& GuildRpcSyncNoticeOfAddEventNotify::param2() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfAddEventNotify.Param2)
  return param2_.GetNoArena();
}
inline void GuildRpcSyncNoticeOfAddEventNotify::set_param2(const ::std::string& value) {
  set_has_param2();
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfAddEventNotify.Param2)
}
#if LANG_CXX11
inline void GuildRpcSyncNoticeOfAddEventNotify::set_param2(::std::string&& value) {
  set_has_param2();
  param2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildRpcSyncNoticeOfAddEventNotify.Param2)
}
#endif
inline void GuildRpcSyncNoticeOfAddEventNotify::set_param2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_param2();
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildRpcSyncNoticeOfAddEventNotify.Param2)
}
inline void GuildRpcSyncNoticeOfAddEventNotify::set_param2(const char* value, size_t size) {
  set_has_param2();
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildRpcSyncNoticeOfAddEventNotify.Param2)
}
inline ::std::string* GuildRpcSyncNoticeOfAddEventNotify::mutable_param2() {
  set_has_param2();
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncNoticeOfAddEventNotify.Param2)
  return param2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildRpcSyncNoticeOfAddEventNotify::release_param2() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncNoticeOfAddEventNotify.Param2)
  clear_has_param2();
  return param2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildRpcSyncNoticeOfAddEventNotify::set_allocated_param2(::std::string* param2) {
  if (param2 != NULL) {
    set_has_param2();
  } else {
    clear_has_param2();
  }
  param2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param2);
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncNoticeOfAddEventNotify.Param2)
}

// -------------------------------------------------------------------

// GuildRpcSyncNoticeOfAddApplyListNotify

// optional .ApplyListRoleInfoObj ApplyPlayer = 2;
inline bool GuildRpcSyncNoticeOfAddApplyListNotify::has_applyplayer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcSyncNoticeOfAddApplyListNotify::set_has_applyplayer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcSyncNoticeOfAddApplyListNotify::clear_has_applyplayer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcSyncNoticeOfAddApplyListNotify::clear_applyplayer() {
  if (applyplayer_ != NULL) applyplayer_->::ApplyListRoleInfoObj::Clear();
  clear_has_applyplayer();
}
inline const ::ApplyListRoleInfoObj& GuildRpcSyncNoticeOfAddApplyListNotify::applyplayer() const {
  const ::ApplyListRoleInfoObj* p = applyplayer_;
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfAddApplyListNotify.ApplyPlayer)
  return p != NULL ? *p : *reinterpret_cast<const ::ApplyListRoleInfoObj*>(
      &::_ApplyListRoleInfoObj_default_instance_);
}
inline ::ApplyListRoleInfoObj* GuildRpcSyncNoticeOfAddApplyListNotify::mutable_applyplayer() {
  set_has_applyplayer();
  if (applyplayer_ == NULL) {
    applyplayer_ = new ::ApplyListRoleInfoObj;
  }
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncNoticeOfAddApplyListNotify.ApplyPlayer)
  return applyplayer_;
}
inline ::ApplyListRoleInfoObj* GuildRpcSyncNoticeOfAddApplyListNotify::release_applyplayer() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncNoticeOfAddApplyListNotify.ApplyPlayer)
  clear_has_applyplayer();
  ::ApplyListRoleInfoObj* temp = applyplayer_;
  applyplayer_ = NULL;
  return temp;
}
inline void GuildRpcSyncNoticeOfAddApplyListNotify::set_allocated_applyplayer(::ApplyListRoleInfoObj* applyplayer) {
  delete applyplayer_;
  applyplayer_ = applyplayer;
  if (applyplayer) {
    set_has_applyplayer();
  } else {
    clear_has_applyplayer();
  }
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncNoticeOfAddApplyListNotify.ApplyPlayer)
}

// -------------------------------------------------------------------

// GuildRpcSyncNoticeOfDelApplyListNotify

// optional sint64 UserId = 1 [default = -1];
inline bool GuildRpcSyncNoticeOfDelApplyListNotify::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcSyncNoticeOfDelApplyListNotify::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcSyncNoticeOfDelApplyListNotify::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcSyncNoticeOfDelApplyListNotify::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
inline ::google::protobuf::int64 GuildRpcSyncNoticeOfDelApplyListNotify::userid() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfDelApplyListNotify.UserId)
  return userid_;
}
inline void GuildRpcSyncNoticeOfDelApplyListNotify::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfDelApplyListNotify.UserId)
}

// -------------------------------------------------------------------

// GuildRpcSyncNoticeOfChangeAnnouncementNotify

// optional string Announcement = 1;
inline bool GuildRpcSyncNoticeOfChangeAnnouncementNotify::has_announcement() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcSyncNoticeOfChangeAnnouncementNotify::set_has_announcement() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcSyncNoticeOfChangeAnnouncementNotify::clear_has_announcement() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcSyncNoticeOfChangeAnnouncementNotify::clear_announcement() {
  announcement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_announcement();
}
inline const ::std::string& GuildRpcSyncNoticeOfChangeAnnouncementNotify::announcement() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfChangeAnnouncementNotify.Announcement)
  return announcement_.GetNoArena();
}
inline void GuildRpcSyncNoticeOfChangeAnnouncementNotify::set_announcement(const ::std::string& value) {
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfChangeAnnouncementNotify.Announcement)
}
#if LANG_CXX11
inline void GuildRpcSyncNoticeOfChangeAnnouncementNotify::set_announcement(::std::string&& value) {
  set_has_announcement();
  announcement_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildRpcSyncNoticeOfChangeAnnouncementNotify.Announcement)
}
#endif
inline void GuildRpcSyncNoticeOfChangeAnnouncementNotify::set_announcement(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildRpcSyncNoticeOfChangeAnnouncementNotify.Announcement)
}
inline void GuildRpcSyncNoticeOfChangeAnnouncementNotify::set_announcement(const char* value, size_t size) {
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildRpcSyncNoticeOfChangeAnnouncementNotify.Announcement)
}
inline ::std::string* GuildRpcSyncNoticeOfChangeAnnouncementNotify::mutable_announcement() {
  set_has_announcement();
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncNoticeOfChangeAnnouncementNotify.Announcement)
  return announcement_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildRpcSyncNoticeOfChangeAnnouncementNotify::release_announcement() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncNoticeOfChangeAnnouncementNotify.Announcement)
  clear_has_announcement();
  return announcement_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildRpcSyncNoticeOfChangeAnnouncementNotify::set_allocated_announcement(::std::string* announcement) {
  if (announcement != NULL) {
    set_has_announcement();
  } else {
    clear_has_announcement();
  }
  announcement_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), announcement);
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncNoticeOfChangeAnnouncementNotify.Announcement)
}

// -------------------------------------------------------------------

// GuildRpcSyncNoticeOfBreakupNotify

// -------------------------------------------------------------------

// GuildRpcHallLvUpAsk

// -------------------------------------------------------------------

// GuildRpcHallLvUpReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcHallLvUpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcHallLvUpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcHallLvUpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcHallLvUpReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcHallLvUpReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcHallLvUpReply.Result)
  return result_;
}
inline void GuildRpcHallLvUpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcHallLvUpReply.Result)
}

// -------------------------------------------------------------------

// GuildRpcHouseLvUpAsk

// -------------------------------------------------------------------

// GuildRpcHouseLvUpReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcHouseLvUpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcHouseLvUpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcHouseLvUpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcHouseLvUpReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcHouseLvUpReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcHouseLvUpReply.Result)
  return result_;
}
inline void GuildRpcHouseLvUpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcHouseLvUpReply.Result)
}

// -------------------------------------------------------------------

// GuildRpcStoreroomLvUpAsk

// -------------------------------------------------------------------

// GuildRpcStoreroomLvUpReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcStoreroomLvUpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcStoreroomLvUpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcStoreroomLvUpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcStoreroomLvUpReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcStoreroomLvUpReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcStoreroomLvUpReply.Result)
  return result_;
}
inline void GuildRpcStoreroomLvUpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcStoreroomLvUpReply.Result)
}

// -------------------------------------------------------------------

// GuildRpcKongfuHallLvUpAsk

// -------------------------------------------------------------------

// GuildRpcKongfuHallLvUpReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcKongfuHallLvUpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcKongfuHallLvUpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcKongfuHallLvUpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcKongfuHallLvUpReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcKongfuHallLvUpReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcKongfuHallLvUpReply.Result)
  return result_;
}
inline void GuildRpcKongfuHallLvUpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcKongfuHallLvUpReply.Result)
}

// -------------------------------------------------------------------

// GuildRpcSyncNoticeOfHallLvUpNotify

// optional sint32 Lv = 1 [default = -1];
inline bool GuildRpcSyncNoticeOfHallLvUpNotify::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcSyncNoticeOfHallLvUpNotify::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcSyncNoticeOfHallLvUpNotify::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcSyncNoticeOfHallLvUpNotify::clear_lv() {
  lv_ = -1;
  clear_has_lv();
}
inline ::google::protobuf::int32 GuildRpcSyncNoticeOfHallLvUpNotify::lv() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfHallLvUpNotify.Lv)
  return lv_;
}
inline void GuildRpcSyncNoticeOfHallLvUpNotify::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfHallLvUpNotify.Lv)
}

// optional sint32 Time = 2 [default = -1];
inline bool GuildRpcSyncNoticeOfHallLvUpNotify::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildRpcSyncNoticeOfHallLvUpNotify::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildRpcSyncNoticeOfHallLvUpNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildRpcSyncNoticeOfHallLvUpNotify::clear_time() {
  time_ = -1;
  clear_has_time();
}
inline ::google::protobuf::int32 GuildRpcSyncNoticeOfHallLvUpNotify::time() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfHallLvUpNotify.Time)
  return time_;
}
inline void GuildRpcSyncNoticeOfHallLvUpNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfHallLvUpNotify.Time)
}

// -------------------------------------------------------------------

// GuildRpcSyncNoticeOfHouseLvUpNotify

// optional sint32 Lv = 1 [default = -1];
inline bool GuildRpcSyncNoticeOfHouseLvUpNotify::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcSyncNoticeOfHouseLvUpNotify::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcSyncNoticeOfHouseLvUpNotify::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcSyncNoticeOfHouseLvUpNotify::clear_lv() {
  lv_ = -1;
  clear_has_lv();
}
inline ::google::protobuf::int32 GuildRpcSyncNoticeOfHouseLvUpNotify::lv() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfHouseLvUpNotify.Lv)
  return lv_;
}
inline void GuildRpcSyncNoticeOfHouseLvUpNotify::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfHouseLvUpNotify.Lv)
}

// optional sint32 Time = 2 [default = -1];
inline bool GuildRpcSyncNoticeOfHouseLvUpNotify::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildRpcSyncNoticeOfHouseLvUpNotify::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildRpcSyncNoticeOfHouseLvUpNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildRpcSyncNoticeOfHouseLvUpNotify::clear_time() {
  time_ = -1;
  clear_has_time();
}
inline ::google::protobuf::int32 GuildRpcSyncNoticeOfHouseLvUpNotify::time() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfHouseLvUpNotify.Time)
  return time_;
}
inline void GuildRpcSyncNoticeOfHouseLvUpNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfHouseLvUpNotify.Time)
}

// -------------------------------------------------------------------

// GuildRpcSyncNoticeOfStorerommLvUpNotify

// optional sint32 Lv = 1 [default = -1];
inline bool GuildRpcSyncNoticeOfStorerommLvUpNotify::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcSyncNoticeOfStorerommLvUpNotify::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcSyncNoticeOfStorerommLvUpNotify::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcSyncNoticeOfStorerommLvUpNotify::clear_lv() {
  lv_ = -1;
  clear_has_lv();
}
inline ::google::protobuf::int32 GuildRpcSyncNoticeOfStorerommLvUpNotify::lv() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfStorerommLvUpNotify.Lv)
  return lv_;
}
inline void GuildRpcSyncNoticeOfStorerommLvUpNotify::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfStorerommLvUpNotify.Lv)
}

// optional sint32 Time = 2 [default = -1];
inline bool GuildRpcSyncNoticeOfStorerommLvUpNotify::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildRpcSyncNoticeOfStorerommLvUpNotify::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildRpcSyncNoticeOfStorerommLvUpNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildRpcSyncNoticeOfStorerommLvUpNotify::clear_time() {
  time_ = -1;
  clear_has_time();
}
inline ::google::protobuf::int32 GuildRpcSyncNoticeOfStorerommLvUpNotify::time() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfStorerommLvUpNotify.Time)
  return time_;
}
inline void GuildRpcSyncNoticeOfStorerommLvUpNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfStorerommLvUpNotify.Time)
}

// -------------------------------------------------------------------

// GuildRpcSyncNoticeOfKongfuHallLvUpNotify

// optional sint32 Lv = 1 [default = -1];
inline bool GuildRpcSyncNoticeOfKongfuHallLvUpNotify::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::clear_lv() {
  lv_ = -1;
  clear_has_lv();
}
inline ::google::protobuf::int32 GuildRpcSyncNoticeOfKongfuHallLvUpNotify::lv() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfKongfuHallLvUpNotify.Lv)
  return lv_;
}
inline void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfKongfuHallLvUpNotify.Lv)
}

// optional sint32 Time = 2 [default = -1];
inline bool GuildRpcSyncNoticeOfKongfuHallLvUpNotify::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::clear_time() {
  time_ = -1;
  clear_has_time();
}
inline ::google::protobuf::int32 GuildRpcSyncNoticeOfKongfuHallLvUpNotify::time() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfKongfuHallLvUpNotify.Time)
  return time_;
}
inline void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfKongfuHallLvUpNotify.Time)
}

// -------------------------------------------------------------------

// GuildRpcApplyGuildHandleAsk

// optional sint64 UserId = 1 [default = -1];
inline bool GuildRpcApplyGuildHandleAsk::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildRpcApplyGuildHandleAsk::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildRpcApplyGuildHandleAsk::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildRpcApplyGuildHandleAsk::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
inline ::google::protobuf::int64 GuildRpcApplyGuildHandleAsk::userid() const {
  // @@protoc_insertion_point(field_get:GuildRpcApplyGuildHandleAsk.UserId)
  return userid_;
}
inline void GuildRpcApplyGuildHandleAsk::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcApplyGuildHandleAsk.UserId)
}

// optional sint32 Oper = 2 [default = 0];
inline bool GuildRpcApplyGuildHandleAsk::has_oper() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcApplyGuildHandleAsk::set_has_oper() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcApplyGuildHandleAsk::clear_has_oper() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcApplyGuildHandleAsk::clear_oper() {
  oper_ = 0;
  clear_has_oper();
}
inline ::google::protobuf::int32 GuildRpcApplyGuildHandleAsk::oper() const {
  // @@protoc_insertion_point(field_get:GuildRpcApplyGuildHandleAsk.Oper)
  return oper_;
}
inline void GuildRpcApplyGuildHandleAsk::set_oper(::google::protobuf::int32 value) {
  set_has_oper();
  oper_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcApplyGuildHandleAsk.Oper)
}

// -------------------------------------------------------------------

// GuildRpcApplyGuildHandleReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcApplyGuildHandleReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcApplyGuildHandleReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcApplyGuildHandleReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcApplyGuildHandleReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcApplyGuildHandleReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcApplyGuildHandleReply.Result)
  return result_;
}
inline void GuildRpcApplyGuildHandleReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcApplyGuildHandleReply.Result)
}

// -------------------------------------------------------------------

// GuildRpcCreateGuildDungeonAsk

// optional sint32 DungeonNum = 2 [default = -1];
inline bool GuildRpcCreateGuildDungeonAsk::has_dungeonnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcCreateGuildDungeonAsk::set_has_dungeonnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcCreateGuildDungeonAsk::clear_has_dungeonnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcCreateGuildDungeonAsk::clear_dungeonnum() {
  dungeonnum_ = -1;
  clear_has_dungeonnum();
}
inline ::google::protobuf::int32 GuildRpcCreateGuildDungeonAsk::dungeonnum() const {
  // @@protoc_insertion_point(field_get:GuildRpcCreateGuildDungeonAsk.DungeonNum)
  return dungeonnum_;
}
inline void GuildRpcCreateGuildDungeonAsk::set_dungeonnum(::google::protobuf::int32 value) {
  set_has_dungeonnum();
  dungeonnum_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcCreateGuildDungeonAsk.DungeonNum)
}

// -------------------------------------------------------------------

// GuildRpcCreateGuildDungeonReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcCreateGuildDungeonReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcCreateGuildDungeonReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcCreateGuildDungeonReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcCreateGuildDungeonReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcCreateGuildDungeonReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcCreateGuildDungeonReply.Result)
  return result_;
}
inline void GuildRpcCreateGuildDungeonReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcCreateGuildDungeonReply.Result)
}

// optional sint32 DungeonNum = 4 [default = -1];
inline bool GuildRpcCreateGuildDungeonReply::has_dungeonnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildRpcCreateGuildDungeonReply::set_has_dungeonnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildRpcCreateGuildDungeonReply::clear_has_dungeonnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildRpcCreateGuildDungeonReply::clear_dungeonnum() {
  dungeonnum_ = -1;
  clear_has_dungeonnum();
}
inline ::google::protobuf::int32 GuildRpcCreateGuildDungeonReply::dungeonnum() const {
  // @@protoc_insertion_point(field_get:GuildRpcCreateGuildDungeonReply.DungeonNum)
  return dungeonnum_;
}
inline void GuildRpcCreateGuildDungeonReply::set_dungeonnum(::google::protobuf::int32 value) {
  set_has_dungeonnum();
  dungeonnum_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcCreateGuildDungeonReply.DungeonNum)
}

// -------------------------------------------------------------------

// GuildRpcEnterGuildDungeonAsk

// optional sint32 Index = 1 [default = -1];
inline bool GuildRpcEnterGuildDungeonAsk::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcEnterGuildDungeonAsk::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcEnterGuildDungeonAsk::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcEnterGuildDungeonAsk::clear_index() {
  index_ = -1;
  clear_has_index();
}
inline ::google::protobuf::int32 GuildRpcEnterGuildDungeonAsk::index() const {
  // @@protoc_insertion_point(field_get:GuildRpcEnterGuildDungeonAsk.Index)
  return index_;
}
inline void GuildRpcEnterGuildDungeonAsk::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcEnterGuildDungeonAsk.Index)
}

// -------------------------------------------------------------------

// GuildRpcEnterGuildDungeonReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcEnterGuildDungeonReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcEnterGuildDungeonReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcEnterGuildDungeonReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcEnterGuildDungeonReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcEnterGuildDungeonReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcEnterGuildDungeonReply.Result)
  return result_;
}
inline void GuildRpcEnterGuildDungeonReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcEnterGuildDungeonReply.Result)
}

// -------------------------------------------------------------------

// GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify

// repeated .GuildDungeonObj DungeonList = 1;
inline int GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::dungeonlist_size() const {
  return dungeonlist_.size();
}
inline void GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::clear_dungeonlist() {
  dungeonlist_.Clear();
}
inline const ::GuildDungeonObj& GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::dungeonlist(int index) const {
  // @@protoc_insertion_point(field_get:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify.DungeonList)
  return dungeonlist_.Get(index);
}
inline ::GuildDungeonObj* GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::mutable_dungeonlist(int index) {
  // @@protoc_insertion_point(field_mutable:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify.DungeonList)
  return dungeonlist_.Mutable(index);
}
inline ::GuildDungeonObj* GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::add_dungeonlist() {
  // @@protoc_insertion_point(field_add:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify.DungeonList)
  return dungeonlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::GuildDungeonObj >*
GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::mutable_dungeonlist() {
  // @@protoc_insertion_point(field_mutable_list:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify.DungeonList)
  return &dungeonlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::GuildDungeonObj >&
GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::dungeonlist() const {
  // @@protoc_insertion_point(field_list:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify.DungeonList)
  return dungeonlist_;
}

// -------------------------------------------------------------------

// GuildRpcCreateGuildWarAsk

// optional sint32 Guild = 1 [default = -1];
inline bool GuildRpcCreateGuildWarAsk::has_guild() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcCreateGuildWarAsk::set_has_guild() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcCreateGuildWarAsk::clear_has_guild() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcCreateGuildWarAsk::clear_guild() {
  guild_ = -1;
  clear_has_guild();
}
inline ::google::protobuf::int32 GuildRpcCreateGuildWarAsk::guild() const {
  // @@protoc_insertion_point(field_get:GuildRpcCreateGuildWarAsk.Guild)
  return guild_;
}
inline void GuildRpcCreateGuildWarAsk::set_guild(::google::protobuf::int32 value) {
  set_has_guild();
  guild_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcCreateGuildWarAsk.Guild)
}

// -------------------------------------------------------------------

// GuildRpcCreateGuildWarReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcCreateGuildWarReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcCreateGuildWarReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcCreateGuildWarReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcCreateGuildWarReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcCreateGuildWarReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcCreateGuildWarReply.Result)
  return result_;
}
inline void GuildRpcCreateGuildWarReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcCreateGuildWarReply.Result)
}

// -------------------------------------------------------------------

// GuildRpcSyncNoticeOfOpenGuildWarNotify

// optional .GuildWarObj GuildWar = 2;
inline bool GuildRpcSyncNoticeOfOpenGuildWarNotify::has_guildwar() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcSyncNoticeOfOpenGuildWarNotify::set_has_guildwar() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcSyncNoticeOfOpenGuildWarNotify::clear_has_guildwar() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcSyncNoticeOfOpenGuildWarNotify::clear_guildwar() {
  if (guildwar_ != NULL) guildwar_->::GuildWarObj::Clear();
  clear_has_guildwar();
}
inline const ::GuildWarObj& GuildRpcSyncNoticeOfOpenGuildWarNotify::guildwar() const {
  const ::GuildWarObj* p = guildwar_;
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfOpenGuildWarNotify.GuildWar)
  return p != NULL ? *p : *reinterpret_cast<const ::GuildWarObj*>(
      &::_GuildWarObj_default_instance_);
}
inline ::GuildWarObj* GuildRpcSyncNoticeOfOpenGuildWarNotify::mutable_guildwar() {
  set_has_guildwar();
  if (guildwar_ == NULL) {
    guildwar_ = new ::GuildWarObj;
  }
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncNoticeOfOpenGuildWarNotify.GuildWar)
  return guildwar_;
}
inline ::GuildWarObj* GuildRpcSyncNoticeOfOpenGuildWarNotify::release_guildwar() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncNoticeOfOpenGuildWarNotify.GuildWar)
  clear_has_guildwar();
  ::GuildWarObj* temp = guildwar_;
  guildwar_ = NULL;
  return temp;
}
inline void GuildRpcSyncNoticeOfOpenGuildWarNotify::set_allocated_guildwar(::GuildWarObj* guildwar) {
  delete guildwar_;
  guildwar_ = guildwar;
  if (guildwar) {
    set_has_guildwar();
  } else {
    clear_has_guildwar();
  }
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncNoticeOfOpenGuildWarNotify.GuildWar)
}

// -------------------------------------------------------------------

// GuildRpcEnterGuildWarAsk

// -------------------------------------------------------------------

// GuildRpcEnterGuildWarReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcEnterGuildWarReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcEnterGuildWarReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcEnterGuildWarReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcEnterGuildWarReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcEnterGuildWarReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcEnterGuildWarReply.Result)
  return result_;
}
inline void GuildRpcEnterGuildWarReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcEnterGuildWarReply.Result)
}

// -------------------------------------------------------------------

// GuildRpcOpenScienceAttrAsk

// optional sint32 ScienceId = 1 [default = -1];
inline bool GuildRpcOpenScienceAttrAsk::has_scienceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcOpenScienceAttrAsk::set_has_scienceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcOpenScienceAttrAsk::clear_has_scienceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcOpenScienceAttrAsk::clear_scienceid() {
  scienceid_ = -1;
  clear_has_scienceid();
}
inline ::google::protobuf::int32 GuildRpcOpenScienceAttrAsk::scienceid() const {
  // @@protoc_insertion_point(field_get:GuildRpcOpenScienceAttrAsk.ScienceId)
  return scienceid_;
}
inline void GuildRpcOpenScienceAttrAsk::set_scienceid(::google::protobuf::int32 value) {
  set_has_scienceid();
  scienceid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcOpenScienceAttrAsk.ScienceId)
}

// -------------------------------------------------------------------

// GuildRpcOpenScienceAttrReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcOpenScienceAttrReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcOpenScienceAttrReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcOpenScienceAttrReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcOpenScienceAttrReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcOpenScienceAttrReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcOpenScienceAttrReply.Result)
  return result_;
}
inline void GuildRpcOpenScienceAttrReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcOpenScienceAttrReply.Result)
}

// -------------------------------------------------------------------

// GuildRpcGuildScienceLvUpAsk

// optional sint32 ScienceId = 2 [default = -1];
inline bool GuildRpcGuildScienceLvUpAsk::has_scienceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildRpcGuildScienceLvUpAsk::set_has_scienceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildRpcGuildScienceLvUpAsk::clear_has_scienceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildRpcGuildScienceLvUpAsk::clear_scienceid() {
  scienceid_ = -1;
  clear_has_scienceid();
}
inline ::google::protobuf::int32 GuildRpcGuildScienceLvUpAsk::scienceid() const {
  // @@protoc_insertion_point(field_get:GuildRpcGuildScienceLvUpAsk.ScienceId)
  return scienceid_;
}
inline void GuildRpcGuildScienceLvUpAsk::set_scienceid(::google::protobuf::int32 value) {
  set_has_scienceid();
  scienceid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcGuildScienceLvUpAsk.ScienceId)
}

// optional bool IsKeyUpLv = 3 [default = false];
inline bool GuildRpcGuildScienceLvUpAsk::has_iskeyuplv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcGuildScienceLvUpAsk::set_has_iskeyuplv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcGuildScienceLvUpAsk::clear_has_iskeyuplv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcGuildScienceLvUpAsk::clear_iskeyuplv() {
  iskeyuplv_ = false;
  clear_has_iskeyuplv();
}
inline bool GuildRpcGuildScienceLvUpAsk::iskeyuplv() const {
  // @@protoc_insertion_point(field_get:GuildRpcGuildScienceLvUpAsk.IsKeyUpLv)
  return iskeyuplv_;
}
inline void GuildRpcGuildScienceLvUpAsk::set_iskeyuplv(bool value) {
  set_has_iskeyuplv();
  iskeyuplv_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcGuildScienceLvUpAsk.IsKeyUpLv)
}

// -------------------------------------------------------------------

// GuildRpcGuildScienceLvUpReply

// optional sint32 Result = 1 [default = -9999];
inline bool GuildRpcGuildScienceLvUpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildRpcGuildScienceLvUpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildRpcGuildScienceLvUpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildRpcGuildScienceLvUpReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 GuildRpcGuildScienceLvUpReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcGuildScienceLvUpReply.Result)
  return result_;
}
inline void GuildRpcGuildScienceLvUpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcGuildScienceLvUpReply.Result)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GuildRpc_2eproto__INCLUDED
