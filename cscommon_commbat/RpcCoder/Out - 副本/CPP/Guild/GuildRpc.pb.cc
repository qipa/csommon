// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GuildRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "GuildRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class GuildRpcSyncDataAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcSyncDataAsk>
     _instance;
} _GuildRpcSyncDataAsk_default_instance_;
class GuildRpcSyncDataReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcSyncDataReply>
     _instance;
} _GuildRpcSyncDataReply_default_instance_;
class GuildRpcCreateGuildAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcCreateGuildAsk>
     _instance;
} _GuildRpcCreateGuildAsk_default_instance_;
class GuildRpcCreateGuildReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcCreateGuildReply>
     _instance;
} _GuildRpcCreateGuildReply_default_instance_;
class GuildRpcApplyGuildAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcApplyGuildAsk>
     _instance;
} _GuildRpcApplyGuildAsk_default_instance_;
class GuildRpcApplyGuildReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcApplyGuildReply>
     _instance;
} _GuildRpcApplyGuildReply_default_instance_;
class GuildRpcQuickApplyAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcQuickApplyAsk>
     _instance;
} _GuildRpcQuickApplyAsk_default_instance_;
class GuildRpcQuickApplyReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcQuickApplyReply>
     _instance;
} _GuildRpcQuickApplyReply_default_instance_;
class GuildRpcChangeGuildNameAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcChangeGuildNameAsk>
     _instance;
} _GuildRpcChangeGuildNameAsk_default_instance_;
class GuildRpcChangeGuildNameReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcChangeGuildNameReply>
     _instance;
} _GuildRpcChangeGuildNameReply_default_instance_;
class GuildRpcChangeAnnouncementAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcChangeAnnouncementAsk>
     _instance;
} _GuildRpcChangeAnnouncementAsk_default_instance_;
class GuildRpcChangeAnnouncementReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcChangeAnnouncementReply>
     _instance;
} _GuildRpcChangeAnnouncementReply_default_instance_;
class GuildRpcReqGuildListAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcReqGuildListAsk>
     _instance;
} _GuildRpcReqGuildListAsk_default_instance_;
class GuildRpcReqGuildListReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcReqGuildListReply>
     _instance;
} _GuildRpcReqGuildListReply_default_instance_;
class GuildRpcAppointDutyAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcAppointDutyAsk>
     _instance;
} _GuildRpcAppointDutyAsk_default_instance_;
class GuildRpcAppointDutyReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcAppointDutyReply>
     _instance;
} _GuildRpcAppointDutyReply_default_instance_;
class GuildRpcKickoutAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcKickoutAsk>
     _instance;
} _GuildRpcKickoutAsk_default_instance_;
class GuildRpcKickoutReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcKickoutReply>
     _instance;
} _GuildRpcKickoutReply_default_instance_;
class GuildRpcExitGuildAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcExitGuildAsk>
     _instance;
} _GuildRpcExitGuildAsk_default_instance_;
class GuildRpcExitGuildReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcExitGuildReply>
     _instance;
} _GuildRpcExitGuildReply_default_instance_;
class GuildRpcBreakUpAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcBreakUpAsk>
     _instance;
} _GuildRpcBreakUpAsk_default_instance_;
class GuildRpcBreakUpReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcBreakUpReply>
     _instance;
} _GuildRpcBreakUpReply_default_instance_;
class GuildRpcInviteToJoinAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcInviteToJoinAsk>
     _instance;
} _GuildRpcInviteToJoinAsk_default_instance_;
class GuildRpcInviteToJoinReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcInviteToJoinReply>
     _instance;
} _GuildRpcInviteToJoinReply_default_instance_;
class GuildRpcBeInvitedNoticeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcBeInvitedNoticeNotify>
     _instance;
} _GuildRpcBeInvitedNoticeNotify_default_instance_;
class GuildRpcBeInvitedHandleAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcBeInvitedHandleAsk>
     _instance;
} _GuildRpcBeInvitedHandleAsk_default_instance_;
class GuildRpcBeInvitedHandleReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcBeInvitedHandleReply>
     _instance;
} _GuildRpcBeInvitedHandleReply_default_instance_;
class GuildRpcResignDutyAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcResignDutyAsk>
     _instance;
} _GuildRpcResignDutyAsk_default_instance_;
class GuildRpcResignDutyReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcResignDutyReply>
     _instance;
} _GuildRpcResignDutyReply_default_instance_;
class GuildRpcSyncMyTeamDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcSyncMyTeamDataNotify>
     _instance;
} _GuildRpcSyncMyTeamDataNotify_default_instance_;
class GuildRpcSyncNoticeOfGuildBaseDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcSyncNoticeOfGuildBaseDataNotify>
     _instance;
} _GuildRpcSyncNoticeOfGuildBaseDataNotify_default_instance_;
class GuildRpcSyncNoticeOfGuildMemberChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcSyncNoticeOfGuildMemberChangeNotify>
     _instance;
} _GuildRpcSyncNoticeOfGuildMemberChangeNotify_default_instance_;
class GuildRpcSyncNoticeOfAddMemberNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcSyncNoticeOfAddMemberNotify>
     _instance;
} _GuildRpcSyncNoticeOfAddMemberNotify_default_instance_;
class GuildRpcSyncNoticeOfDelMemberNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcSyncNoticeOfDelMemberNotify>
     _instance;
} _GuildRpcSyncNoticeOfDelMemberNotify_default_instance_;
class GuildRpcSyncNoticeOfAddEventNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcSyncNoticeOfAddEventNotify>
     _instance;
} _GuildRpcSyncNoticeOfAddEventNotify_default_instance_;
class GuildRpcSyncNoticeOfAddApplyListNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcSyncNoticeOfAddApplyListNotify>
     _instance;
} _GuildRpcSyncNoticeOfAddApplyListNotify_default_instance_;
class GuildRpcSyncNoticeOfDelApplyListNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcSyncNoticeOfDelApplyListNotify>
     _instance;
} _GuildRpcSyncNoticeOfDelApplyListNotify_default_instance_;
class GuildRpcSyncNoticeOfChangeAnnouncementNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcSyncNoticeOfChangeAnnouncementNotify>
     _instance;
} _GuildRpcSyncNoticeOfChangeAnnouncementNotify_default_instance_;
class GuildRpcSyncNoticeOfBreakupNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcSyncNoticeOfBreakupNotify>
     _instance;
} _GuildRpcSyncNoticeOfBreakupNotify_default_instance_;
class GuildRpcHallLvUpAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcHallLvUpAsk>
     _instance;
} _GuildRpcHallLvUpAsk_default_instance_;
class GuildRpcHallLvUpReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcHallLvUpReply>
     _instance;
} _GuildRpcHallLvUpReply_default_instance_;
class GuildRpcHouseLvUpAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcHouseLvUpAsk>
     _instance;
} _GuildRpcHouseLvUpAsk_default_instance_;
class GuildRpcHouseLvUpReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcHouseLvUpReply>
     _instance;
} _GuildRpcHouseLvUpReply_default_instance_;
class GuildRpcStoreroomLvUpAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcStoreroomLvUpAsk>
     _instance;
} _GuildRpcStoreroomLvUpAsk_default_instance_;
class GuildRpcStoreroomLvUpReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcStoreroomLvUpReply>
     _instance;
} _GuildRpcStoreroomLvUpReply_default_instance_;
class GuildRpcKongfuHallLvUpAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcKongfuHallLvUpAsk>
     _instance;
} _GuildRpcKongfuHallLvUpAsk_default_instance_;
class GuildRpcKongfuHallLvUpReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcKongfuHallLvUpReply>
     _instance;
} _GuildRpcKongfuHallLvUpReply_default_instance_;
class GuildRpcSyncNoticeOfHallLvUpNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcSyncNoticeOfHallLvUpNotify>
     _instance;
} _GuildRpcSyncNoticeOfHallLvUpNotify_default_instance_;
class GuildRpcSyncNoticeOfHouseLvUpNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcSyncNoticeOfHouseLvUpNotify>
     _instance;
} _GuildRpcSyncNoticeOfHouseLvUpNotify_default_instance_;
class GuildRpcSyncNoticeOfStorerommLvUpNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcSyncNoticeOfStorerommLvUpNotify>
     _instance;
} _GuildRpcSyncNoticeOfStorerommLvUpNotify_default_instance_;
class GuildRpcSyncNoticeOfKongfuHallLvUpNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcSyncNoticeOfKongfuHallLvUpNotify>
     _instance;
} _GuildRpcSyncNoticeOfKongfuHallLvUpNotify_default_instance_;
class GuildRpcApplyGuildHandleAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcApplyGuildHandleAsk>
     _instance;
} _GuildRpcApplyGuildHandleAsk_default_instance_;
class GuildRpcApplyGuildHandleReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcApplyGuildHandleReply>
     _instance;
} _GuildRpcApplyGuildHandleReply_default_instance_;
class GuildRpcCreateGuildDungeonAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcCreateGuildDungeonAsk>
     _instance;
} _GuildRpcCreateGuildDungeonAsk_default_instance_;
class GuildRpcCreateGuildDungeonReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcCreateGuildDungeonReply>
     _instance;
} _GuildRpcCreateGuildDungeonReply_default_instance_;
class GuildRpcEnterGuildDungeonAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcEnterGuildDungeonAsk>
     _instance;
} _GuildRpcEnterGuildDungeonAsk_default_instance_;
class GuildRpcEnterGuildDungeonReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcEnterGuildDungeonReply>
     _instance;
} _GuildRpcEnterGuildDungeonReply_default_instance_;
class GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify>
     _instance;
} _GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify_default_instance_;
class GuildRpcCreateGuildWarAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcCreateGuildWarAsk>
     _instance;
} _GuildRpcCreateGuildWarAsk_default_instance_;
class GuildRpcCreateGuildWarReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcCreateGuildWarReply>
     _instance;
} _GuildRpcCreateGuildWarReply_default_instance_;
class GuildRpcSyncNoticeOfOpenGuildWarNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcSyncNoticeOfOpenGuildWarNotify>
     _instance;
} _GuildRpcSyncNoticeOfOpenGuildWarNotify_default_instance_;
class GuildRpcEnterGuildWarAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcEnterGuildWarAsk>
     _instance;
} _GuildRpcEnterGuildWarAsk_default_instance_;
class GuildRpcEnterGuildWarReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcEnterGuildWarReply>
     _instance;
} _GuildRpcEnterGuildWarReply_default_instance_;
class GuildRpcOpenScienceAttrAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcOpenScienceAttrAsk>
     _instance;
} _GuildRpcOpenScienceAttrAsk_default_instance_;
class GuildRpcOpenScienceAttrReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcOpenScienceAttrReply>
     _instance;
} _GuildRpcOpenScienceAttrReply_default_instance_;
class GuildRpcGuildScienceLvUpAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcGuildScienceLvUpAsk>
     _instance;
} _GuildRpcGuildScienceLvUpAsk_default_instance_;
class GuildRpcGuildScienceLvUpReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildRpcGuildScienceLvUpReply>
     _instance;
} _GuildRpcGuildScienceLvUpReply_default_instance_;

namespace protobuf_GuildRpc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[67];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncDataAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncDataAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncDataReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncDataReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncDataReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncDataReply, guilddata_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildAsk, guildname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildAsk, announcement_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildReply, guilddata_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcApplyGuildAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcApplyGuildAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcApplyGuildAsk, guild_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcApplyGuildAsk, oper_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcApplyGuildReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcApplyGuildReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcApplyGuildReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcQuickApplyAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcQuickApplyAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcQuickApplyReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcQuickApplyReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcQuickApplyReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcChangeGuildNameAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcChangeGuildNameAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcChangeGuildNameAsk, guildname_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcChangeGuildNameReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcChangeGuildNameReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcChangeGuildNameReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcChangeAnnouncementAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcChangeAnnouncementAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcChangeAnnouncementAsk, announcement_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcChangeAnnouncementReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcChangeAnnouncementReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcChangeAnnouncementReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcReqGuildListAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcReqGuildListAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcReqGuildListReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcReqGuildListReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcReqGuildListReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcReqGuildListReply, guildlist_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcAppointDutyAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcAppointDutyAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcAppointDutyAsk, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcAppointDutyAsk, duty_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcAppointDutyReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcAppointDutyReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcAppointDutyReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcKickoutAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcKickoutAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcKickoutAsk, userid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcKickoutReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcKickoutReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcKickoutReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcExitGuildAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcExitGuildAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcExitGuildReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcExitGuildReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcExitGuildReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcBreakUpAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcBreakUpAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcBreakUpReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcBreakUpReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcBreakUpReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcInviteToJoinAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcInviteToJoinAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcInviteToJoinAsk, userid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcInviteToJoinReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcInviteToJoinReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcInviteToJoinReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcBeInvitedNoticeNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcBeInvitedNoticeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcBeInvitedNoticeNotify, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcBeInvitedNoticeNotify, guild_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcBeInvitedNoticeNotify, guildname_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcBeInvitedHandleAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcBeInvitedHandleAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcBeInvitedHandleAsk, guild_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcBeInvitedHandleAsk, oper_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcBeInvitedHandleReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcBeInvitedHandleReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcBeInvitedHandleReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcResignDutyAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcResignDutyAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcResignDutyReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcResignDutyReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcResignDutyReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncMyTeamDataNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncMyTeamDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncMyTeamDataNotify, guilddata_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfGuildBaseDataNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfGuildBaseDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfGuildBaseDataNotify, guildname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfGuildBaseDataNotify, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfGuildBaseDataNotify, captainid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfGuildBaseDataNotify, captainname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfGuildBaseDataNotify, funds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfGuildBaseDataNotify, leaguematchesrank_),
  0,
  4,
  3,
  1,
  5,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfGuildMemberChangeNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfGuildMemberChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfGuildMemberChangeNotify, guildmember_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfAddMemberNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfAddMemberNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfAddMemberNotify, guildmember_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfDelMemberNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfDelMemberNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfDelMemberNotify, userid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfAddEventNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfAddEventNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfAddEventNotify, eventid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfAddEventNotify, param1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfAddEventNotify, param2_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfAddApplyListNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfAddApplyListNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfAddApplyListNotify, applyplayer_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfDelApplyListNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfDelApplyListNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfDelApplyListNotify, userid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfChangeAnnouncementNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfChangeAnnouncementNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfChangeAnnouncementNotify, announcement_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfBreakupNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfBreakupNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcHallLvUpAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcHallLvUpAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcHallLvUpReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcHallLvUpReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcHallLvUpReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcHouseLvUpAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcHouseLvUpAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcHouseLvUpReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcHouseLvUpReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcHouseLvUpReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcStoreroomLvUpAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcStoreroomLvUpAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcStoreroomLvUpReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcStoreroomLvUpReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcStoreroomLvUpReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcKongfuHallLvUpAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcKongfuHallLvUpAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcKongfuHallLvUpReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcKongfuHallLvUpReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcKongfuHallLvUpReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfHallLvUpNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfHallLvUpNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfHallLvUpNotify, lv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfHallLvUpNotify, time_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfHouseLvUpNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfHouseLvUpNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfHouseLvUpNotify, lv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfHouseLvUpNotify, time_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfStorerommLvUpNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfStorerommLvUpNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfStorerommLvUpNotify, lv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfStorerommLvUpNotify, time_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfKongfuHallLvUpNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfKongfuHallLvUpNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfKongfuHallLvUpNotify, lv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfKongfuHallLvUpNotify, time_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcApplyGuildHandleAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcApplyGuildHandleAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcApplyGuildHandleAsk, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcApplyGuildHandleAsk, oper_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcApplyGuildHandleReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcApplyGuildHandleReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcApplyGuildHandleReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildDungeonAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildDungeonAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildDungeonAsk, dungeonnum_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildDungeonReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildDungeonReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildDungeonReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildDungeonReply, dungeonnum_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcEnterGuildDungeonAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcEnterGuildDungeonAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcEnterGuildDungeonAsk, index_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcEnterGuildDungeonReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcEnterGuildDungeonReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcEnterGuildDungeonReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify, dungeonlist_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildWarAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildWarAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildWarAsk, guild_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildWarReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildWarReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcCreateGuildWarReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfOpenGuildWarNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfOpenGuildWarNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcSyncNoticeOfOpenGuildWarNotify, guildwar_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcEnterGuildWarAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcEnterGuildWarAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcEnterGuildWarReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcEnterGuildWarReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcEnterGuildWarReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcOpenScienceAttrAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcOpenScienceAttrAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcOpenScienceAttrAsk, scienceid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcOpenScienceAttrReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcOpenScienceAttrReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcOpenScienceAttrReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcGuildScienceLvUpAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcGuildScienceLvUpAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcGuildScienceLvUpAsk, scienceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcGuildScienceLvUpAsk, iskeyuplv_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcGuildScienceLvUpReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcGuildScienceLvUpReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildRpcGuildScienceLvUpReply, result_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(GuildRpcSyncDataAsk)},
  { 5, 12, sizeof(GuildRpcSyncDataReply)},
  { 14, 21, sizeof(GuildRpcCreateGuildAsk)},
  { 23, 30, sizeof(GuildRpcCreateGuildReply)},
  { 32, 39, sizeof(GuildRpcApplyGuildAsk)},
  { 41, 47, sizeof(GuildRpcApplyGuildReply)},
  { 48, 53, sizeof(GuildRpcQuickApplyAsk)},
  { 53, 59, sizeof(GuildRpcQuickApplyReply)},
  { 60, 66, sizeof(GuildRpcChangeGuildNameAsk)},
  { 67, 73, sizeof(GuildRpcChangeGuildNameReply)},
  { 74, 80, sizeof(GuildRpcChangeAnnouncementAsk)},
  { 81, 87, sizeof(GuildRpcChangeAnnouncementReply)},
  { 88, 93, sizeof(GuildRpcReqGuildListAsk)},
  { 93, 100, sizeof(GuildRpcReqGuildListReply)},
  { 102, 109, sizeof(GuildRpcAppointDutyAsk)},
  { 111, 117, sizeof(GuildRpcAppointDutyReply)},
  { 118, 124, sizeof(GuildRpcKickoutAsk)},
  { 125, 131, sizeof(GuildRpcKickoutReply)},
  { 132, 137, sizeof(GuildRpcExitGuildAsk)},
  { 137, 143, sizeof(GuildRpcExitGuildReply)},
  { 144, 149, sizeof(GuildRpcBreakUpAsk)},
  { 149, 155, sizeof(GuildRpcBreakUpReply)},
  { 156, 162, sizeof(GuildRpcInviteToJoinAsk)},
  { 163, 169, sizeof(GuildRpcInviteToJoinReply)},
  { 170, 178, sizeof(GuildRpcBeInvitedNoticeNotify)},
  { 181, 188, sizeof(GuildRpcBeInvitedHandleAsk)},
  { 190, 196, sizeof(GuildRpcBeInvitedHandleReply)},
  { 197, 202, sizeof(GuildRpcResignDutyAsk)},
  { 202, 208, sizeof(GuildRpcResignDutyReply)},
  { 209, 215, sizeof(GuildRpcSyncMyTeamDataNotify)},
  { 216, 227, sizeof(GuildRpcSyncNoticeOfGuildBaseDataNotify)},
  { 233, 239, sizeof(GuildRpcSyncNoticeOfGuildMemberChangeNotify)},
  { 240, 246, sizeof(GuildRpcSyncNoticeOfAddMemberNotify)},
  { 247, 253, sizeof(GuildRpcSyncNoticeOfDelMemberNotify)},
  { 254, 262, sizeof(GuildRpcSyncNoticeOfAddEventNotify)},
  { 265, 271, sizeof(GuildRpcSyncNoticeOfAddApplyListNotify)},
  { 272, 278, sizeof(GuildRpcSyncNoticeOfDelApplyListNotify)},
  { 279, 285, sizeof(GuildRpcSyncNoticeOfChangeAnnouncementNotify)},
  { 286, 291, sizeof(GuildRpcSyncNoticeOfBreakupNotify)},
  { 291, 296, sizeof(GuildRpcHallLvUpAsk)},
  { 296, 302, sizeof(GuildRpcHallLvUpReply)},
  { 303, 308, sizeof(GuildRpcHouseLvUpAsk)},
  { 308, 314, sizeof(GuildRpcHouseLvUpReply)},
  { 315, 320, sizeof(GuildRpcStoreroomLvUpAsk)},
  { 320, 326, sizeof(GuildRpcStoreroomLvUpReply)},
  { 327, 332, sizeof(GuildRpcKongfuHallLvUpAsk)},
  { 332, 338, sizeof(GuildRpcKongfuHallLvUpReply)},
  { 339, 346, sizeof(GuildRpcSyncNoticeOfHallLvUpNotify)},
  { 348, 355, sizeof(GuildRpcSyncNoticeOfHouseLvUpNotify)},
  { 357, 364, sizeof(GuildRpcSyncNoticeOfStorerommLvUpNotify)},
  { 366, 373, sizeof(GuildRpcSyncNoticeOfKongfuHallLvUpNotify)},
  { 375, 382, sizeof(GuildRpcApplyGuildHandleAsk)},
  { 384, 390, sizeof(GuildRpcApplyGuildHandleReply)},
  { 391, 397, sizeof(GuildRpcCreateGuildDungeonAsk)},
  { 398, 405, sizeof(GuildRpcCreateGuildDungeonReply)},
  { 407, 413, sizeof(GuildRpcEnterGuildDungeonAsk)},
  { 414, 420, sizeof(GuildRpcEnterGuildDungeonReply)},
  { 421, 427, sizeof(GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify)},
  { 428, 434, sizeof(GuildRpcCreateGuildWarAsk)},
  { 435, 441, sizeof(GuildRpcCreateGuildWarReply)},
  { 442, 448, sizeof(GuildRpcSyncNoticeOfOpenGuildWarNotify)},
  { 449, 454, sizeof(GuildRpcEnterGuildWarAsk)},
  { 454, 460, sizeof(GuildRpcEnterGuildWarReply)},
  { 461, 467, sizeof(GuildRpcOpenScienceAttrAsk)},
  { 468, 474, sizeof(GuildRpcOpenScienceAttrReply)},
  { 475, 482, sizeof(GuildRpcGuildScienceLvUpAsk)},
  { 484, 490, sizeof(GuildRpcGuildScienceLvUpReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcSyncDataAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcSyncDataReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcCreateGuildAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcCreateGuildReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcApplyGuildAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcApplyGuildReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcQuickApplyAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcQuickApplyReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcChangeGuildNameAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcChangeGuildNameReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcChangeAnnouncementAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcChangeAnnouncementReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcReqGuildListAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcReqGuildListReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcAppointDutyAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcAppointDutyReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcKickoutAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcKickoutReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcExitGuildAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcExitGuildReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcBreakUpAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcBreakUpReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcInviteToJoinAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcInviteToJoinReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcBeInvitedNoticeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcBeInvitedHandleAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcBeInvitedHandleReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcResignDutyAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcResignDutyReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcSyncMyTeamDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcSyncNoticeOfGuildBaseDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcSyncNoticeOfGuildMemberChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcSyncNoticeOfAddMemberNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcSyncNoticeOfDelMemberNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcSyncNoticeOfAddEventNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcSyncNoticeOfAddApplyListNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcSyncNoticeOfDelApplyListNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcSyncNoticeOfChangeAnnouncementNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcSyncNoticeOfBreakupNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcHallLvUpAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcHallLvUpReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcHouseLvUpAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcHouseLvUpReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcStoreroomLvUpAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcStoreroomLvUpReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcKongfuHallLvUpAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcKongfuHallLvUpReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcSyncNoticeOfHallLvUpNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcSyncNoticeOfHouseLvUpNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcSyncNoticeOfStorerommLvUpNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcSyncNoticeOfKongfuHallLvUpNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcApplyGuildHandleAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcApplyGuildHandleReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcCreateGuildDungeonAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcCreateGuildDungeonReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcEnterGuildDungeonAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcEnterGuildDungeonReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcCreateGuildWarAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcCreateGuildWarReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcSyncNoticeOfOpenGuildWarNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcEnterGuildWarAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcEnterGuildWarReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcOpenScienceAttrAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcOpenScienceAttrReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcGuildScienceLvUpAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildRpcGuildScienceLvUpReply_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "GuildRpc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 67);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _GuildRpcSyncDataAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcSyncDataAsk_default_instance_);_GuildRpcSyncDataReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcSyncDataReply_default_instance_);_GuildRpcCreateGuildAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcCreateGuildAsk_default_instance_);_GuildRpcCreateGuildReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcCreateGuildReply_default_instance_);_GuildRpcApplyGuildAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcApplyGuildAsk_default_instance_);_GuildRpcApplyGuildReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcApplyGuildReply_default_instance_);_GuildRpcQuickApplyAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcQuickApplyAsk_default_instance_);_GuildRpcQuickApplyReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcQuickApplyReply_default_instance_);_GuildRpcChangeGuildNameAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcChangeGuildNameAsk_default_instance_);_GuildRpcChangeGuildNameReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcChangeGuildNameReply_default_instance_);_GuildRpcChangeAnnouncementAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcChangeAnnouncementAsk_default_instance_);_GuildRpcChangeAnnouncementReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcChangeAnnouncementReply_default_instance_);_GuildRpcReqGuildListAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcReqGuildListAsk_default_instance_);_GuildRpcReqGuildListReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcReqGuildListReply_default_instance_);_GuildRpcAppointDutyAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcAppointDutyAsk_default_instance_);_GuildRpcAppointDutyReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcAppointDutyReply_default_instance_);_GuildRpcKickoutAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcKickoutAsk_default_instance_);_GuildRpcKickoutReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcKickoutReply_default_instance_);_GuildRpcExitGuildAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcExitGuildAsk_default_instance_);_GuildRpcExitGuildReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcExitGuildReply_default_instance_);_GuildRpcBreakUpAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcBreakUpAsk_default_instance_);_GuildRpcBreakUpReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcBreakUpReply_default_instance_);_GuildRpcInviteToJoinAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcInviteToJoinAsk_default_instance_);_GuildRpcInviteToJoinReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcInviteToJoinReply_default_instance_);_GuildRpcBeInvitedNoticeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcBeInvitedNoticeNotify_default_instance_);_GuildRpcBeInvitedHandleAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcBeInvitedHandleAsk_default_instance_);_GuildRpcBeInvitedHandleReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcBeInvitedHandleReply_default_instance_);_GuildRpcResignDutyAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcResignDutyAsk_default_instance_);_GuildRpcResignDutyReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcResignDutyReply_default_instance_);_GuildRpcSyncMyTeamDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcSyncMyTeamDataNotify_default_instance_);_GuildRpcSyncNoticeOfGuildBaseDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcSyncNoticeOfGuildBaseDataNotify_default_instance_);_GuildRpcSyncNoticeOfGuildMemberChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcSyncNoticeOfGuildMemberChangeNotify_default_instance_);_GuildRpcSyncNoticeOfAddMemberNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcSyncNoticeOfAddMemberNotify_default_instance_);_GuildRpcSyncNoticeOfDelMemberNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcSyncNoticeOfDelMemberNotify_default_instance_);_GuildRpcSyncNoticeOfAddEventNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcSyncNoticeOfAddEventNotify_default_instance_);_GuildRpcSyncNoticeOfAddApplyListNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcSyncNoticeOfAddApplyListNotify_default_instance_);_GuildRpcSyncNoticeOfDelApplyListNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcSyncNoticeOfDelApplyListNotify_default_instance_);_GuildRpcSyncNoticeOfChangeAnnouncementNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcSyncNoticeOfChangeAnnouncementNotify_default_instance_);_GuildRpcSyncNoticeOfBreakupNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcSyncNoticeOfBreakupNotify_default_instance_);_GuildRpcHallLvUpAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcHallLvUpAsk_default_instance_);_GuildRpcHallLvUpReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcHallLvUpReply_default_instance_);_GuildRpcHouseLvUpAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcHouseLvUpAsk_default_instance_);_GuildRpcHouseLvUpReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcHouseLvUpReply_default_instance_);_GuildRpcStoreroomLvUpAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcStoreroomLvUpAsk_default_instance_);_GuildRpcStoreroomLvUpReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcStoreroomLvUpReply_default_instance_);_GuildRpcKongfuHallLvUpAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcKongfuHallLvUpAsk_default_instance_);_GuildRpcKongfuHallLvUpReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcKongfuHallLvUpReply_default_instance_);_GuildRpcSyncNoticeOfHallLvUpNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcSyncNoticeOfHallLvUpNotify_default_instance_);_GuildRpcSyncNoticeOfHouseLvUpNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcSyncNoticeOfHouseLvUpNotify_default_instance_);_GuildRpcSyncNoticeOfStorerommLvUpNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcSyncNoticeOfStorerommLvUpNotify_default_instance_);_GuildRpcSyncNoticeOfKongfuHallLvUpNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcSyncNoticeOfKongfuHallLvUpNotify_default_instance_);_GuildRpcApplyGuildHandleAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcApplyGuildHandleAsk_default_instance_);_GuildRpcApplyGuildHandleReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcApplyGuildHandleReply_default_instance_);_GuildRpcCreateGuildDungeonAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcCreateGuildDungeonAsk_default_instance_);_GuildRpcCreateGuildDungeonReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcCreateGuildDungeonReply_default_instance_);_GuildRpcEnterGuildDungeonAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcEnterGuildDungeonAsk_default_instance_);_GuildRpcEnterGuildDungeonReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcEnterGuildDungeonReply_default_instance_);_GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify_default_instance_);_GuildRpcCreateGuildWarAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcCreateGuildWarAsk_default_instance_);_GuildRpcCreateGuildWarReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcCreateGuildWarReply_default_instance_);_GuildRpcSyncNoticeOfOpenGuildWarNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcSyncNoticeOfOpenGuildWarNotify_default_instance_);_GuildRpcEnterGuildWarAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcEnterGuildWarAsk_default_instance_);_GuildRpcEnterGuildWarReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcEnterGuildWarReply_default_instance_);_GuildRpcOpenScienceAttrAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcOpenScienceAttrAsk_default_instance_);_GuildRpcOpenScienceAttrReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcOpenScienceAttrReply_default_instance_);_GuildRpcGuildScienceLvUpAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcGuildScienceLvUpAsk_default_instance_);_GuildRpcGuildScienceLvUpReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildRpcGuildScienceLvUpReply_default_instance_);_GuildRpcSyncDataReply_default_instance_._instance.get_mutable()->guilddata_ = const_cast< ::GuildInfoObj*>(
      ::GuildInfoObj::internal_default_instance());
  _GuildRpcCreateGuildReply_default_instance_._instance.get_mutable()->guilddata_ = const_cast< ::GuildInfoObj*>(
      ::GuildInfoObj::internal_default_instance());
  _GuildRpcSyncMyTeamDataNotify_default_instance_._instance.get_mutable()->guilddata_ = const_cast< ::GuildInfoObj*>(
      ::GuildInfoObj::internal_default_instance());
  _GuildRpcSyncNoticeOfGuildMemberChangeNotify_default_instance_._instance.get_mutable()->guildmember_ = const_cast< ::GuildMemberObj*>(
      ::GuildMemberObj::internal_default_instance());
  _GuildRpcSyncNoticeOfAddMemberNotify_default_instance_._instance.get_mutable()->guildmember_ = const_cast< ::GuildMemberObj*>(
      ::GuildMemberObj::internal_default_instance());
  _GuildRpcSyncNoticeOfAddApplyListNotify_default_instance_._instance.get_mutable()->applyplayer_ = const_cast< ::ApplyListRoleInfoObj*>(
      ::ApplyListRoleInfoObj::internal_default_instance());
  _GuildRpcSyncNoticeOfOpenGuildWarNotify_default_instance_._instance.get_mutable()->guildwar_ = const_cast< ::GuildWarObj*>(
      ::GuildWarObj::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016GuildRpc.proto\032\022PublicStruct.proto\"\025\n\023"
      "GuildRpcSyncDataAsk\"P\n\025GuildRpcSyncDataR"
      "eply\022\025\n\006Result\030\001 \001(\021:\005-9999\022 \n\tGuildData"
      "\030\002 \001(\0132\r.GuildInfoObj\"A\n\026GuildRpcCreateG"
      "uildAsk\022\021\n\tGuildName\030\001 \001(\t\022\024\n\014Announceme"
      "nt\030\002 \001(\t\"S\n\030GuildRpcCreateGuildReply\022\025\n\006"
      "Result\030\001 \001(\021:\005-9999\022 \n\tGuildData\030\002 \001(\0132\r"
      ".GuildInfoObj\";\n\025GuildRpcApplyGuildAsk\022\021"
      "\n\005Guild\030\001 \001(\021:\002-1\022\017\n\004Oper\030\002 \001(\021:\0010\"0\n\027Gu"
      "ildRpcApplyGuildReply\022\025\n\006Result\030\001 \001(\021:\005-"
      "9999\"\027\n\025GuildRpcQuickApplyAsk\"0\n\027GuildRp"
      "cQuickApplyReply\022\025\n\006Result\030\001 \001(\021:\005-9999\""
      "/\n\032GuildRpcChangeGuildNameAsk\022\021\n\tGuildNa"
      "me\030\001 \001(\t\"5\n\034GuildRpcChangeGuildNameReply"
      "\022\025\n\006Result\030\001 \001(\021:\005-9999\"5\n\035GuildRpcChang"
      "eAnnouncementAsk\022\024\n\014Announcement\030\001 \001(\t\"8"
      "\n\037GuildRpcChangeAnnouncementReply\022\025\n\006Res"
      "ult\030\001 \001(\021:\005-9999\"\031\n\027GuildRpcReqGuildList"
      "Ask\"T\n\031GuildRpcReqGuildListReply\022\025\n\006Resu"
      "lt\030\001 \001(\021:\005-9999\022 \n\tGuildList\030\002 \003(\0132\r.Gui"
      "ldListObj\">\n\026GuildRpcAppointDutyAsk\022\022\n\006U"
      "serId\030\001 \001(\022:\002-1\022\020\n\004Duty\030\002 \001(\021:\002-1\"1\n\030Gui"
      "ldRpcAppointDutyReply\022\025\n\006Result\030\001 \001(\021:\005-"
      "9999\"(\n\022GuildRpcKickoutAsk\022\022\n\006UserId\030\001 \001"
      "(\022:\002-1\"-\n\024GuildRpcKickoutReply\022\025\n\006Result"
      "\030\001 \001(\021:\005-9999\"\026\n\024GuildRpcExitGuildAsk\"/\n"
      "\026GuildRpcExitGuildReply\022\025\n\006Result\030\001 \001(\021:"
      "\005-9999\"\024\n\022GuildRpcBreakUpAsk\"-\n\024GuildRpc"
      "BreakUpReply\022\025\n\006Result\030\001 \001(\021:\005-9999\"-\n\027G"
      "uildRpcInviteToJoinAsk\022\022\n\006UserId\030\001 \001(\022:\002"
      "-1\"2\n\031GuildRpcInviteToJoinReply\022\025\n\006Resul"
      "t\030\001 \001(\021:\005-9999\"Y\n\035GuildRpcBeInvitedNotic"
      "eNotify\022\022\n\006UserId\030\001 \001(\022:\002-1\022\021\n\005Guild\030\002 \001"
      "(\021:\002-1\022\021\n\tGuildName\030\003 \001(\t\"@\n\032GuildRpcBeI"
      "nvitedHandleAsk\022\021\n\005Guild\030\001 \001(\021:\002-1\022\017\n\004Op"
      "er\030\003 \001(\021:\0010\"5\n\034GuildRpcBeInvitedHandleRe"
      "ply\022\025\n\006Result\030\001 \001(\021:\005-9999\"\027\n\025GuildRpcRe"
      "signDutyAsk\"0\n\027GuildRpcResignDutyReply\022\025"
      "\n\006Result\030\001 \001(\021:\005-9999\"@\n\034GuildRpcSyncMyT"
      "eamDataNotify\022 \n\tGuildData\030\001 \001(\0132\r.Guild"
      "InfoObj\"\254\001\n\'GuildRpcSyncNoticeOfGuildBas"
      "eDataNotify\022\021\n\tGuildName\030\001 \001(\t\022\020\n\005Level\030"
      "\002 \001(\021:\0011\022\025\n\tCaptainId\030\003 \001(\022:\002-1\022\023\n\013Capta"
      "inName\030\004 \001(\t\022\021\n\005Funds\030\005 \001(\021:\002-1\022\035\n\021Leagu"
      "eMatchesRank\030\007 \001(\021:\002-1\"S\n+GuildRpcSyncNo"
      "ticeOfGuildMemberChangeNotify\022$\n\013GuildMe"
      "mber\030\005 \001(\0132\017.GuildMemberObj\"K\n#GuildRpcS"
      "yncNoticeOfAddMemberNotify\022$\n\013GuildMembe"
      "r\030\001 \001(\0132\017.GuildMemberObj\"9\n#GuildRpcSync"
      "NoticeOfDelMemberNotify\022\022\n\006UserId\030\001 \001(\022:"
      "\002-1\"Y\n\"GuildRpcSyncNoticeOfAddEventNotif"
      "y\022\023\n\007EventId\030\002 \001(\021:\002-1\022\016\n\006Param1\030\003 \001(\t\022\016"
      "\n\006Param2\030\005 \001(\t\"T\n&GuildRpcSyncNoticeOfAd"
      "dApplyListNotify\022*\n\013ApplyPlayer\030\002 \001(\0132\025."
      "ApplyListRoleInfoObj\"<\n&GuildRpcSyncNoti"
      "ceOfDelApplyListNotify\022\022\n\006UserId\030\001 \001(\022:\002"
      "-1\"D\n,GuildRpcSyncNoticeOfChangeAnnounce"
      "mentNotify\022\024\n\014Announcement\030\001 \001(\t\"#\n!Guil"
      "dRpcSyncNoticeOfBreakupNotify\"\025\n\023GuildRp"
      "cHallLvUpAsk\".\n\025GuildRpcHallLvUpReply\022\025\n"
      "\006Result\030\001 \001(\021:\005-9999\"\026\n\024GuildRpcHouseLvU"
      "pAsk\"/\n\026GuildRpcHouseLvUpReply\022\025\n\006Result"
      "\030\001 \001(\021:\005-9999\"\032\n\030GuildRpcStoreroomLvUpAs"
      "k\"3\n\032GuildRpcStoreroomLvUpReply\022\025\n\006Resul"
      "t\030\001 \001(\021:\005-9999\"\033\n\031GuildRpcKongfuHallLvUp"
      "Ask\"4\n\033GuildRpcKongfuHallLvUpReply\022\025\n\006Re"
      "sult\030\001 \001(\021:\005-9999\"F\n\"GuildRpcSyncNoticeO"
      "fHallLvUpNotify\022\016\n\002Lv\030\001 \001(\021:\002-1\022\020\n\004Time\030"
      "\002 \001(\021:\002-1\"G\n#GuildRpcSyncNoticeOfHouseLv"
      "UpNotify\022\016\n\002Lv\030\001 \001(\021:\002-1\022\020\n\004Time\030\002 \001(\021:\002"
      "-1\"K\n\'GuildRpcSyncNoticeOfStorerommLvUpN"
      "otify\022\016\n\002Lv\030\001 \001(\021:\002-1\022\020\n\004Time\030\002 \001(\021:\002-1\""
      "L\n(GuildRpcSyncNoticeOfKongfuHallLvUpNot"
      "ify\022\016\n\002Lv\030\001 \001(\021:\002-1\022\020\n\004Time\030\002 \001(\021:\002-1\"B\n"
      "\033GuildRpcApplyGuildHandleAsk\022\022\n\006UserId\030\001"
      " \001(\022:\002-1\022\017\n\004Oper\030\002 \001(\021:\0010\"6\n\035GuildRpcApp"
      "lyGuildHandleReply\022\025\n\006Result\030\001 \001(\021:\005-999"
      "9\"7\n\035GuildRpcCreateGuildDungeonAsk\022\026\n\nDu"
      "ngeonNum\030\002 \001(\021:\002-1\"P\n\037GuildRpcCreateGuil"
      "dDungeonReply\022\025\n\006Result\030\001 \001(\021:\005-9999\022\026\n\n"
      "DungeonNum\030\004 \001(\021:\002-1\"1\n\034GuildRpcEnterGui"
      "ldDungeonAsk\022\021\n\005Index\030\001 \001(\021:\002-1\"7\n\036Guild"
      "RpcEnterGuildDungeonReply\022\025\n\006Result\030\001 \001("
      "\021:\005-9999\"X\n/GuildRpcRpcSyncNoticeOfCreat"
      "eGuildDungeonNotify\022%\n\013DungeonList\030\001 \003(\013"
      "2\020.GuildDungeonObj\".\n\031GuildRpcCreateGuil"
      "dWarAsk\022\021\n\005Guild\030\001 \001(\021:\002-1\"4\n\033GuildRpcCr"
      "eateGuildWarReply\022\025\n\006Result\030\001 \001(\021:\005-9999"
      "\"H\n&GuildRpcSyncNoticeOfOpenGuildWarNoti"
      "fy\022\036\n\010GuildWar\030\002 \001(\0132\014.GuildWarObj\"\032\n\030Gu"
      "ildRpcEnterGuildWarAsk\"3\n\032GuildRpcEnterG"
      "uildWarReply\022\025\n\006Result\030\001 \001(\021:\005-9999\"3\n\032G"
      "uildRpcOpenScienceAttrAsk\022\025\n\tScienceId\030\001"
      " \001(\021:\002-1\"5\n\034GuildRpcOpenScienceAttrReply"
      "\022\025\n\006Result\030\001 \001(\021:\005-9999\"N\n\033GuildRpcGuild"
      "ScienceLvUpAsk\022\025\n\tScienceId\030\002 \001(\021:\002-1\022\030\n"
      "\tIsKeyUpLv\030\003 \001(\010:\005false\"6\n\035GuildRpcGuild"
      "ScienceLvUpReply\022\025\n\006Result\030\001 \001(\021:\005-9999"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3919);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GuildRpc.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_GuildRpc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcSyncDataAsk::GuildRpcSyncDataAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcSyncDataAsk)
}
GuildRpcSyncDataAsk::GuildRpcSyncDataAsk(const GuildRpcSyncDataAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GuildRpcSyncDataAsk)
}

void GuildRpcSyncDataAsk::SharedCtor() {
  _cached_size_ = 0;
}

GuildRpcSyncDataAsk::~GuildRpcSyncDataAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcSyncDataAsk)
  SharedDtor();
}

void GuildRpcSyncDataAsk::SharedDtor() {
}

void GuildRpcSyncDataAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcSyncDataAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcSyncDataAsk& GuildRpcSyncDataAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcSyncDataAsk* GuildRpcSyncDataAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcSyncDataAsk* n = new GuildRpcSyncDataAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcSyncDataAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcSyncDataAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcSyncDataAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcSyncDataAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcSyncDataAsk)
  return false;
#undef DO_
}

void GuildRpcSyncDataAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcSyncDataAsk)
}

::google::protobuf::uint8* GuildRpcSyncDataAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcSyncDataAsk)
  return target;
}

size_t GuildRpcSyncDataAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcSyncDataAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcSyncDataAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcSyncDataAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcSyncDataAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcSyncDataAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcSyncDataAsk)
    MergeFrom(*source);
  }
}

void GuildRpcSyncDataAsk::MergeFrom(const GuildRpcSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GuildRpcSyncDataAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcSyncDataAsk::CopyFrom(const GuildRpcSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcSyncDataAsk::IsInitialized() const {
  return true;
}

void GuildRpcSyncDataAsk::Swap(GuildRpcSyncDataAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcSyncDataAsk::InternalSwap(GuildRpcSyncDataAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcSyncDataAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcSyncDataAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcSyncDataReply::kResultFieldNumber;
const int GuildRpcSyncDataReply::kGuildDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcSyncDataReply::GuildRpcSyncDataReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcSyncDataReply)
}
GuildRpcSyncDataReply::GuildRpcSyncDataReply(const GuildRpcSyncDataReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_guilddata()) {
    guilddata_ = new ::GuildInfoObj(*from.guilddata_);
  } else {
    guilddata_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcSyncDataReply)
}

void GuildRpcSyncDataReply::SharedCtor() {
  _cached_size_ = 0;
  guilddata_ = NULL;
  result_ = -9999;
}

GuildRpcSyncDataReply::~GuildRpcSyncDataReply() {
  // @@protoc_insertion_point(destructor:GuildRpcSyncDataReply)
  SharedDtor();
}

void GuildRpcSyncDataReply::SharedDtor() {
  if (this != internal_default_instance()) delete guilddata_;
}

void GuildRpcSyncDataReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcSyncDataReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcSyncDataReply& GuildRpcSyncDataReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcSyncDataReply* GuildRpcSyncDataReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcSyncDataReply* n = new GuildRpcSyncDataReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcSyncDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(guilddata_ != NULL);
      guilddata_->::GuildInfoObj::Clear();
    }
    result_ = -9999;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcSyncDataReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcSyncDataReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .GuildInfoObj GuildData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_guilddata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcSyncDataReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcSyncDataReply)
  return false;
#undef DO_
}

void GuildRpcSyncDataReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional .GuildInfoObj GuildData = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->guilddata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcSyncDataReply)
}

::google::protobuf::uint8* GuildRpcSyncDataReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional .GuildInfoObj GuildData = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->guilddata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcSyncDataReply)
  return target;
}

size_t GuildRpcSyncDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcSyncDataReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .GuildInfoObj GuildData = 2;
    if (has_guilddata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->guilddata_);
    }

    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcSyncDataReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcSyncDataReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcSyncDataReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcSyncDataReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcSyncDataReply)
    MergeFrom(*source);
  }
}

void GuildRpcSyncDataReply::MergeFrom(const GuildRpcSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_guilddata()->::GuildInfoObj::MergeFrom(from.guilddata());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildRpcSyncDataReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcSyncDataReply::CopyFrom(const GuildRpcSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcSyncDataReply::IsInitialized() const {
  return true;
}

void GuildRpcSyncDataReply::Swap(GuildRpcSyncDataReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcSyncDataReply::InternalSwap(GuildRpcSyncDataReply* other) {
  using std::swap;
  swap(guilddata_, other->guilddata_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcSyncDataReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcSyncDataReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcSyncDataReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildRpcSyncDataReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildRpcSyncDataReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildRpcSyncDataReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcSyncDataReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncDataReply.Result)
  return result_;
}
void GuildRpcSyncDataReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncDataReply.Result)
}

// optional .GuildInfoObj GuildData = 2;
bool GuildRpcSyncDataReply::has_guilddata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcSyncDataReply::set_has_guilddata() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcSyncDataReply::clear_has_guilddata() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcSyncDataReply::clear_guilddata() {
  if (guilddata_ != NULL) guilddata_->::GuildInfoObj::Clear();
  clear_has_guilddata();
}
const ::GuildInfoObj& GuildRpcSyncDataReply::guilddata() const {
  const ::GuildInfoObj* p = guilddata_;
  // @@protoc_insertion_point(field_get:GuildRpcSyncDataReply.GuildData)
  return p != NULL ? *p : *reinterpret_cast<const ::GuildInfoObj*>(
      &::_GuildInfoObj_default_instance_);
}
::GuildInfoObj* GuildRpcSyncDataReply::mutable_guilddata() {
  set_has_guilddata();
  if (guilddata_ == NULL) {
    guilddata_ = new ::GuildInfoObj;
  }
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncDataReply.GuildData)
  return guilddata_;
}
::GuildInfoObj* GuildRpcSyncDataReply::release_guilddata() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncDataReply.GuildData)
  clear_has_guilddata();
  ::GuildInfoObj* temp = guilddata_;
  guilddata_ = NULL;
  return temp;
}
void GuildRpcSyncDataReply::set_allocated_guilddata(::GuildInfoObj* guilddata) {
  delete guilddata_;
  guilddata_ = guilddata;
  if (guilddata) {
    set_has_guilddata();
  } else {
    clear_has_guilddata();
  }
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncDataReply.GuildData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcCreateGuildAsk::kGuildNameFieldNumber;
const int GuildRpcCreateGuildAsk::kAnnouncementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcCreateGuildAsk::GuildRpcCreateGuildAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcCreateGuildAsk)
}
GuildRpcCreateGuildAsk::GuildRpcCreateGuildAsk(const GuildRpcCreateGuildAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guildname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guildname()) {
    guildname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guildname_);
  }
  announcement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_announcement()) {
    announcement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.announcement_);
  }
  // @@protoc_insertion_point(copy_constructor:GuildRpcCreateGuildAsk)
}

void GuildRpcCreateGuildAsk::SharedCtor() {
  _cached_size_ = 0;
  guildname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  announcement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GuildRpcCreateGuildAsk::~GuildRpcCreateGuildAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcCreateGuildAsk)
  SharedDtor();
}

void GuildRpcCreateGuildAsk::SharedDtor() {
  guildname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  announcement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GuildRpcCreateGuildAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcCreateGuildAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcCreateGuildAsk& GuildRpcCreateGuildAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcCreateGuildAsk* GuildRpcCreateGuildAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcCreateGuildAsk* n = new GuildRpcCreateGuildAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcCreateGuildAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcCreateGuildAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!guildname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*guildname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!announcement_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*announcement_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcCreateGuildAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcCreateGuildAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string GuildName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guildname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guildname().data(), static_cast<int>(this->guildname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildRpcCreateGuildAsk.GuildName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Announcement = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_announcement()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->announcement().data(), static_cast<int>(this->announcement().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildRpcCreateGuildAsk.Announcement");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcCreateGuildAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcCreateGuildAsk)
  return false;
#undef DO_
}

void GuildRpcCreateGuildAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcCreateGuildAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string GuildName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guildname().data(), static_cast<int>(this->guildname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildRpcCreateGuildAsk.GuildName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guildname(), output);
  }

  // optional string Announcement = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->announcement().data(), static_cast<int>(this->announcement().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildRpcCreateGuildAsk.Announcement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->announcement(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcCreateGuildAsk)
}

::google::protobuf::uint8* GuildRpcCreateGuildAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcCreateGuildAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string GuildName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guildname().data(), static_cast<int>(this->guildname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildRpcCreateGuildAsk.GuildName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guildname(), target);
  }

  // optional string Announcement = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->announcement().data(), static_cast<int>(this->announcement().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildRpcCreateGuildAsk.Announcement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->announcement(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcCreateGuildAsk)
  return target;
}

size_t GuildRpcCreateGuildAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcCreateGuildAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string GuildName = 1;
    if (has_guildname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guildname());
    }

    // optional string Announcement = 2;
    if (has_announcement()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->announcement());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcCreateGuildAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcCreateGuildAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcCreateGuildAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcCreateGuildAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcCreateGuildAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcCreateGuildAsk)
    MergeFrom(*source);
  }
}

void GuildRpcCreateGuildAsk::MergeFrom(const GuildRpcCreateGuildAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcCreateGuildAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_guildname();
      guildname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guildname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_announcement();
      announcement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.announcement_);
    }
  }
}

void GuildRpcCreateGuildAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcCreateGuildAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcCreateGuildAsk::CopyFrom(const GuildRpcCreateGuildAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcCreateGuildAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcCreateGuildAsk::IsInitialized() const {
  return true;
}

void GuildRpcCreateGuildAsk::Swap(GuildRpcCreateGuildAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcCreateGuildAsk::InternalSwap(GuildRpcCreateGuildAsk* other) {
  using std::swap;
  guildname_.Swap(&other->guildname_);
  announcement_.Swap(&other->announcement_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcCreateGuildAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcCreateGuildAsk

// optional string GuildName = 1;
bool GuildRpcCreateGuildAsk::has_guildname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcCreateGuildAsk::set_has_guildname() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcCreateGuildAsk::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcCreateGuildAsk::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guildname();
}
const ::std::string& GuildRpcCreateGuildAsk::guildname() const {
  // @@protoc_insertion_point(field_get:GuildRpcCreateGuildAsk.GuildName)
  return guildname_.GetNoArena();
}
void GuildRpcCreateGuildAsk::set_guildname(const ::std::string& value) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildRpcCreateGuildAsk.GuildName)
}
#if LANG_CXX11
void GuildRpcCreateGuildAsk::set_guildname(::std::string&& value) {
  set_has_guildname();
  guildname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildRpcCreateGuildAsk.GuildName)
}
#endif
void GuildRpcCreateGuildAsk::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildRpcCreateGuildAsk.GuildName)
}
void GuildRpcCreateGuildAsk::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildRpcCreateGuildAsk.GuildName)
}
::std::string* GuildRpcCreateGuildAsk::mutable_guildname() {
  set_has_guildname();
  // @@protoc_insertion_point(field_mutable:GuildRpcCreateGuildAsk.GuildName)
  return guildname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildRpcCreateGuildAsk::release_guildname() {
  // @@protoc_insertion_point(field_release:GuildRpcCreateGuildAsk.GuildName)
  clear_has_guildname();
  return guildname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildRpcCreateGuildAsk::set_allocated_guildname(::std::string* guildname) {
  if (guildname != NULL) {
    set_has_guildname();
  } else {
    clear_has_guildname();
  }
  guildname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:GuildRpcCreateGuildAsk.GuildName)
}

// optional string Announcement = 2;
bool GuildRpcCreateGuildAsk::has_announcement() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildRpcCreateGuildAsk::set_has_announcement() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildRpcCreateGuildAsk::clear_has_announcement() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildRpcCreateGuildAsk::clear_announcement() {
  announcement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_announcement();
}
const ::std::string& GuildRpcCreateGuildAsk::announcement() const {
  // @@protoc_insertion_point(field_get:GuildRpcCreateGuildAsk.Announcement)
  return announcement_.GetNoArena();
}
void GuildRpcCreateGuildAsk::set_announcement(const ::std::string& value) {
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildRpcCreateGuildAsk.Announcement)
}
#if LANG_CXX11
void GuildRpcCreateGuildAsk::set_announcement(::std::string&& value) {
  set_has_announcement();
  announcement_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildRpcCreateGuildAsk.Announcement)
}
#endif
void GuildRpcCreateGuildAsk::set_announcement(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildRpcCreateGuildAsk.Announcement)
}
void GuildRpcCreateGuildAsk::set_announcement(const char* value, size_t size) {
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildRpcCreateGuildAsk.Announcement)
}
::std::string* GuildRpcCreateGuildAsk::mutable_announcement() {
  set_has_announcement();
  // @@protoc_insertion_point(field_mutable:GuildRpcCreateGuildAsk.Announcement)
  return announcement_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildRpcCreateGuildAsk::release_announcement() {
  // @@protoc_insertion_point(field_release:GuildRpcCreateGuildAsk.Announcement)
  clear_has_announcement();
  return announcement_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildRpcCreateGuildAsk::set_allocated_announcement(::std::string* announcement) {
  if (announcement != NULL) {
    set_has_announcement();
  } else {
    clear_has_announcement();
  }
  announcement_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), announcement);
  // @@protoc_insertion_point(field_set_allocated:GuildRpcCreateGuildAsk.Announcement)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcCreateGuildReply::kResultFieldNumber;
const int GuildRpcCreateGuildReply::kGuildDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcCreateGuildReply::GuildRpcCreateGuildReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcCreateGuildReply)
}
GuildRpcCreateGuildReply::GuildRpcCreateGuildReply(const GuildRpcCreateGuildReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_guilddata()) {
    guilddata_ = new ::GuildInfoObj(*from.guilddata_);
  } else {
    guilddata_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcCreateGuildReply)
}

void GuildRpcCreateGuildReply::SharedCtor() {
  _cached_size_ = 0;
  guilddata_ = NULL;
  result_ = -9999;
}

GuildRpcCreateGuildReply::~GuildRpcCreateGuildReply() {
  // @@protoc_insertion_point(destructor:GuildRpcCreateGuildReply)
  SharedDtor();
}

void GuildRpcCreateGuildReply::SharedDtor() {
  if (this != internal_default_instance()) delete guilddata_;
}

void GuildRpcCreateGuildReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcCreateGuildReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcCreateGuildReply& GuildRpcCreateGuildReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcCreateGuildReply* GuildRpcCreateGuildReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcCreateGuildReply* n = new GuildRpcCreateGuildReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcCreateGuildReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcCreateGuildReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(guilddata_ != NULL);
      guilddata_->::GuildInfoObj::Clear();
    }
    result_ = -9999;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcCreateGuildReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcCreateGuildReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .GuildInfoObj GuildData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_guilddata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcCreateGuildReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcCreateGuildReply)
  return false;
#undef DO_
}

void GuildRpcCreateGuildReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcCreateGuildReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional .GuildInfoObj GuildData = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->guilddata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcCreateGuildReply)
}

::google::protobuf::uint8* GuildRpcCreateGuildReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcCreateGuildReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional .GuildInfoObj GuildData = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->guilddata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcCreateGuildReply)
  return target;
}

size_t GuildRpcCreateGuildReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcCreateGuildReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .GuildInfoObj GuildData = 2;
    if (has_guilddata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->guilddata_);
    }

    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcCreateGuildReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcCreateGuildReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcCreateGuildReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcCreateGuildReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcCreateGuildReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcCreateGuildReply)
    MergeFrom(*source);
  }
}

void GuildRpcCreateGuildReply::MergeFrom(const GuildRpcCreateGuildReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcCreateGuildReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_guilddata()->::GuildInfoObj::MergeFrom(from.guilddata());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildRpcCreateGuildReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcCreateGuildReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcCreateGuildReply::CopyFrom(const GuildRpcCreateGuildReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcCreateGuildReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcCreateGuildReply::IsInitialized() const {
  return true;
}

void GuildRpcCreateGuildReply::Swap(GuildRpcCreateGuildReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcCreateGuildReply::InternalSwap(GuildRpcCreateGuildReply* other) {
  using std::swap;
  swap(guilddata_, other->guilddata_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcCreateGuildReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcCreateGuildReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcCreateGuildReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildRpcCreateGuildReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildRpcCreateGuildReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildRpcCreateGuildReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcCreateGuildReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcCreateGuildReply.Result)
  return result_;
}
void GuildRpcCreateGuildReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcCreateGuildReply.Result)
}

// optional .GuildInfoObj GuildData = 2;
bool GuildRpcCreateGuildReply::has_guilddata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcCreateGuildReply::set_has_guilddata() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcCreateGuildReply::clear_has_guilddata() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcCreateGuildReply::clear_guilddata() {
  if (guilddata_ != NULL) guilddata_->::GuildInfoObj::Clear();
  clear_has_guilddata();
}
const ::GuildInfoObj& GuildRpcCreateGuildReply::guilddata() const {
  const ::GuildInfoObj* p = guilddata_;
  // @@protoc_insertion_point(field_get:GuildRpcCreateGuildReply.GuildData)
  return p != NULL ? *p : *reinterpret_cast<const ::GuildInfoObj*>(
      &::_GuildInfoObj_default_instance_);
}
::GuildInfoObj* GuildRpcCreateGuildReply::mutable_guilddata() {
  set_has_guilddata();
  if (guilddata_ == NULL) {
    guilddata_ = new ::GuildInfoObj;
  }
  // @@protoc_insertion_point(field_mutable:GuildRpcCreateGuildReply.GuildData)
  return guilddata_;
}
::GuildInfoObj* GuildRpcCreateGuildReply::release_guilddata() {
  // @@protoc_insertion_point(field_release:GuildRpcCreateGuildReply.GuildData)
  clear_has_guilddata();
  ::GuildInfoObj* temp = guilddata_;
  guilddata_ = NULL;
  return temp;
}
void GuildRpcCreateGuildReply::set_allocated_guilddata(::GuildInfoObj* guilddata) {
  delete guilddata_;
  guilddata_ = guilddata;
  if (guilddata) {
    set_has_guilddata();
  } else {
    clear_has_guilddata();
  }
  // @@protoc_insertion_point(field_set_allocated:GuildRpcCreateGuildReply.GuildData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcApplyGuildAsk::kGuildFieldNumber;
const int GuildRpcApplyGuildAsk::kOperFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcApplyGuildAsk::GuildRpcApplyGuildAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcApplyGuildAsk)
}
GuildRpcApplyGuildAsk::GuildRpcApplyGuildAsk(const GuildRpcApplyGuildAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&oper_, &from.oper_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_) -
    reinterpret_cast<char*>(&oper_)) + sizeof(guild_));
  // @@protoc_insertion_point(copy_constructor:GuildRpcApplyGuildAsk)
}

void GuildRpcApplyGuildAsk::SharedCtor() {
  _cached_size_ = 0;
  oper_ = 0;
  guild_ = -1;
}

GuildRpcApplyGuildAsk::~GuildRpcApplyGuildAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcApplyGuildAsk)
  SharedDtor();
}

void GuildRpcApplyGuildAsk::SharedDtor() {
}

void GuildRpcApplyGuildAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcApplyGuildAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcApplyGuildAsk& GuildRpcApplyGuildAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcApplyGuildAsk* GuildRpcApplyGuildAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcApplyGuildAsk* n = new GuildRpcApplyGuildAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcApplyGuildAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcApplyGuildAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    oper_ = 0;
    guild_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcApplyGuildAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcApplyGuildAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Guild = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_guild();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &guild_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Oper = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_oper();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &oper_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcApplyGuildAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcApplyGuildAsk)
  return false;
#undef DO_
}

void GuildRpcApplyGuildAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcApplyGuildAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Guild = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->guild(), output);
  }

  // optional sint32 Oper = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->oper(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcApplyGuildAsk)
}

::google::protobuf::uint8* GuildRpcApplyGuildAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcApplyGuildAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Guild = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->guild(), target);
  }

  // optional sint32 Oper = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->oper(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcApplyGuildAsk)
  return target;
}

size_t GuildRpcApplyGuildAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcApplyGuildAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Oper = 2 [default = 0];
    if (has_oper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->oper());
    }

    // optional sint32 Guild = 1 [default = -1];
    if (has_guild()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->guild());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcApplyGuildAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcApplyGuildAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcApplyGuildAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcApplyGuildAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcApplyGuildAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcApplyGuildAsk)
    MergeFrom(*source);
  }
}

void GuildRpcApplyGuildAsk::MergeFrom(const GuildRpcApplyGuildAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcApplyGuildAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      oper_ = from.oper_;
    }
    if (cached_has_bits & 0x00000002u) {
      guild_ = from.guild_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildRpcApplyGuildAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcApplyGuildAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcApplyGuildAsk::CopyFrom(const GuildRpcApplyGuildAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcApplyGuildAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcApplyGuildAsk::IsInitialized() const {
  return true;
}

void GuildRpcApplyGuildAsk::Swap(GuildRpcApplyGuildAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcApplyGuildAsk::InternalSwap(GuildRpcApplyGuildAsk* other) {
  using std::swap;
  swap(oper_, other->oper_);
  swap(guild_, other->guild_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcApplyGuildAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcApplyGuildAsk

// optional sint32 Guild = 1 [default = -1];
bool GuildRpcApplyGuildAsk::has_guild() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildRpcApplyGuildAsk::set_has_guild() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildRpcApplyGuildAsk::clear_has_guild() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildRpcApplyGuildAsk::clear_guild() {
  guild_ = -1;
  clear_has_guild();
}
::google::protobuf::int32 GuildRpcApplyGuildAsk::guild() const {
  // @@protoc_insertion_point(field_get:GuildRpcApplyGuildAsk.Guild)
  return guild_;
}
void GuildRpcApplyGuildAsk::set_guild(::google::protobuf::int32 value) {
  set_has_guild();
  guild_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcApplyGuildAsk.Guild)
}

// optional sint32 Oper = 2 [default = 0];
bool GuildRpcApplyGuildAsk::has_oper() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcApplyGuildAsk::set_has_oper() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcApplyGuildAsk::clear_has_oper() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcApplyGuildAsk::clear_oper() {
  oper_ = 0;
  clear_has_oper();
}
::google::protobuf::int32 GuildRpcApplyGuildAsk::oper() const {
  // @@protoc_insertion_point(field_get:GuildRpcApplyGuildAsk.Oper)
  return oper_;
}
void GuildRpcApplyGuildAsk::set_oper(::google::protobuf::int32 value) {
  set_has_oper();
  oper_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcApplyGuildAsk.Oper)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcApplyGuildReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcApplyGuildReply::GuildRpcApplyGuildReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcApplyGuildReply)
}
GuildRpcApplyGuildReply::GuildRpcApplyGuildReply(const GuildRpcApplyGuildReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcApplyGuildReply)
}

void GuildRpcApplyGuildReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcApplyGuildReply::~GuildRpcApplyGuildReply() {
  // @@protoc_insertion_point(destructor:GuildRpcApplyGuildReply)
  SharedDtor();
}

void GuildRpcApplyGuildReply::SharedDtor() {
}

void GuildRpcApplyGuildReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcApplyGuildReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcApplyGuildReply& GuildRpcApplyGuildReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcApplyGuildReply* GuildRpcApplyGuildReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcApplyGuildReply* n = new GuildRpcApplyGuildReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcApplyGuildReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcApplyGuildReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcApplyGuildReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcApplyGuildReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcApplyGuildReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcApplyGuildReply)
  return false;
#undef DO_
}

void GuildRpcApplyGuildReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcApplyGuildReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcApplyGuildReply)
}

::google::protobuf::uint8* GuildRpcApplyGuildReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcApplyGuildReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcApplyGuildReply)
  return target;
}

size_t GuildRpcApplyGuildReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcApplyGuildReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcApplyGuildReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcApplyGuildReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcApplyGuildReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcApplyGuildReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcApplyGuildReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcApplyGuildReply)
    MergeFrom(*source);
  }
}

void GuildRpcApplyGuildReply::MergeFrom(const GuildRpcApplyGuildReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcApplyGuildReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcApplyGuildReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcApplyGuildReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcApplyGuildReply::CopyFrom(const GuildRpcApplyGuildReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcApplyGuildReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcApplyGuildReply::IsInitialized() const {
  return true;
}

void GuildRpcApplyGuildReply::Swap(GuildRpcApplyGuildReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcApplyGuildReply::InternalSwap(GuildRpcApplyGuildReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcApplyGuildReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcApplyGuildReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcApplyGuildReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcApplyGuildReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcApplyGuildReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcApplyGuildReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcApplyGuildReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcApplyGuildReply.Result)
  return result_;
}
void GuildRpcApplyGuildReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcApplyGuildReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcQuickApplyAsk::GuildRpcQuickApplyAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcQuickApplyAsk)
}
GuildRpcQuickApplyAsk::GuildRpcQuickApplyAsk(const GuildRpcQuickApplyAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GuildRpcQuickApplyAsk)
}

void GuildRpcQuickApplyAsk::SharedCtor() {
  _cached_size_ = 0;
}

GuildRpcQuickApplyAsk::~GuildRpcQuickApplyAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcQuickApplyAsk)
  SharedDtor();
}

void GuildRpcQuickApplyAsk::SharedDtor() {
}

void GuildRpcQuickApplyAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcQuickApplyAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcQuickApplyAsk& GuildRpcQuickApplyAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcQuickApplyAsk* GuildRpcQuickApplyAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcQuickApplyAsk* n = new GuildRpcQuickApplyAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcQuickApplyAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcQuickApplyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcQuickApplyAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcQuickApplyAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcQuickApplyAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcQuickApplyAsk)
  return false;
#undef DO_
}

void GuildRpcQuickApplyAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcQuickApplyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcQuickApplyAsk)
}

::google::protobuf::uint8* GuildRpcQuickApplyAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcQuickApplyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcQuickApplyAsk)
  return target;
}

size_t GuildRpcQuickApplyAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcQuickApplyAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcQuickApplyAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcQuickApplyAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcQuickApplyAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcQuickApplyAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcQuickApplyAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcQuickApplyAsk)
    MergeFrom(*source);
  }
}

void GuildRpcQuickApplyAsk::MergeFrom(const GuildRpcQuickApplyAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcQuickApplyAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GuildRpcQuickApplyAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcQuickApplyAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcQuickApplyAsk::CopyFrom(const GuildRpcQuickApplyAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcQuickApplyAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcQuickApplyAsk::IsInitialized() const {
  return true;
}

void GuildRpcQuickApplyAsk::Swap(GuildRpcQuickApplyAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcQuickApplyAsk::InternalSwap(GuildRpcQuickApplyAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcQuickApplyAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcQuickApplyAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcQuickApplyReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcQuickApplyReply::GuildRpcQuickApplyReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcQuickApplyReply)
}
GuildRpcQuickApplyReply::GuildRpcQuickApplyReply(const GuildRpcQuickApplyReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcQuickApplyReply)
}

void GuildRpcQuickApplyReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcQuickApplyReply::~GuildRpcQuickApplyReply() {
  // @@protoc_insertion_point(destructor:GuildRpcQuickApplyReply)
  SharedDtor();
}

void GuildRpcQuickApplyReply::SharedDtor() {
}

void GuildRpcQuickApplyReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcQuickApplyReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcQuickApplyReply& GuildRpcQuickApplyReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcQuickApplyReply* GuildRpcQuickApplyReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcQuickApplyReply* n = new GuildRpcQuickApplyReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcQuickApplyReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcQuickApplyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcQuickApplyReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcQuickApplyReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcQuickApplyReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcQuickApplyReply)
  return false;
#undef DO_
}

void GuildRpcQuickApplyReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcQuickApplyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcQuickApplyReply)
}

::google::protobuf::uint8* GuildRpcQuickApplyReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcQuickApplyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcQuickApplyReply)
  return target;
}

size_t GuildRpcQuickApplyReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcQuickApplyReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcQuickApplyReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcQuickApplyReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcQuickApplyReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcQuickApplyReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcQuickApplyReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcQuickApplyReply)
    MergeFrom(*source);
  }
}

void GuildRpcQuickApplyReply::MergeFrom(const GuildRpcQuickApplyReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcQuickApplyReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcQuickApplyReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcQuickApplyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcQuickApplyReply::CopyFrom(const GuildRpcQuickApplyReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcQuickApplyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcQuickApplyReply::IsInitialized() const {
  return true;
}

void GuildRpcQuickApplyReply::Swap(GuildRpcQuickApplyReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcQuickApplyReply::InternalSwap(GuildRpcQuickApplyReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcQuickApplyReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcQuickApplyReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcQuickApplyReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcQuickApplyReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcQuickApplyReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcQuickApplyReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcQuickApplyReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcQuickApplyReply.Result)
  return result_;
}
void GuildRpcQuickApplyReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcQuickApplyReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcChangeGuildNameAsk::kGuildNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcChangeGuildNameAsk::GuildRpcChangeGuildNameAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcChangeGuildNameAsk)
}
GuildRpcChangeGuildNameAsk::GuildRpcChangeGuildNameAsk(const GuildRpcChangeGuildNameAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guildname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guildname()) {
    guildname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guildname_);
  }
  // @@protoc_insertion_point(copy_constructor:GuildRpcChangeGuildNameAsk)
}

void GuildRpcChangeGuildNameAsk::SharedCtor() {
  _cached_size_ = 0;
  guildname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GuildRpcChangeGuildNameAsk::~GuildRpcChangeGuildNameAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcChangeGuildNameAsk)
  SharedDtor();
}

void GuildRpcChangeGuildNameAsk::SharedDtor() {
  guildname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GuildRpcChangeGuildNameAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcChangeGuildNameAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcChangeGuildNameAsk& GuildRpcChangeGuildNameAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcChangeGuildNameAsk* GuildRpcChangeGuildNameAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcChangeGuildNameAsk* n = new GuildRpcChangeGuildNameAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcChangeGuildNameAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcChangeGuildNameAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_guildname()) {
    GOOGLE_DCHECK(!guildname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*guildname_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcChangeGuildNameAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcChangeGuildNameAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string GuildName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guildname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guildname().data(), static_cast<int>(this->guildname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildRpcChangeGuildNameAsk.GuildName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcChangeGuildNameAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcChangeGuildNameAsk)
  return false;
#undef DO_
}

void GuildRpcChangeGuildNameAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcChangeGuildNameAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string GuildName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guildname().data(), static_cast<int>(this->guildname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildRpcChangeGuildNameAsk.GuildName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guildname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcChangeGuildNameAsk)
}

::google::protobuf::uint8* GuildRpcChangeGuildNameAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcChangeGuildNameAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string GuildName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guildname().data(), static_cast<int>(this->guildname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildRpcChangeGuildNameAsk.GuildName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guildname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcChangeGuildNameAsk)
  return target;
}

size_t GuildRpcChangeGuildNameAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcChangeGuildNameAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string GuildName = 1;
  if (has_guildname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guildname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcChangeGuildNameAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcChangeGuildNameAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcChangeGuildNameAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcChangeGuildNameAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcChangeGuildNameAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcChangeGuildNameAsk)
    MergeFrom(*source);
  }
}

void GuildRpcChangeGuildNameAsk::MergeFrom(const GuildRpcChangeGuildNameAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcChangeGuildNameAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_guildname()) {
    set_has_guildname();
    guildname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guildname_);
  }
}

void GuildRpcChangeGuildNameAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcChangeGuildNameAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcChangeGuildNameAsk::CopyFrom(const GuildRpcChangeGuildNameAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcChangeGuildNameAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcChangeGuildNameAsk::IsInitialized() const {
  return true;
}

void GuildRpcChangeGuildNameAsk::Swap(GuildRpcChangeGuildNameAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcChangeGuildNameAsk::InternalSwap(GuildRpcChangeGuildNameAsk* other) {
  using std::swap;
  guildname_.Swap(&other->guildname_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcChangeGuildNameAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcChangeGuildNameAsk

// optional string GuildName = 1;
bool GuildRpcChangeGuildNameAsk::has_guildname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcChangeGuildNameAsk::set_has_guildname() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcChangeGuildNameAsk::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcChangeGuildNameAsk::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guildname();
}
const ::std::string& GuildRpcChangeGuildNameAsk::guildname() const {
  // @@protoc_insertion_point(field_get:GuildRpcChangeGuildNameAsk.GuildName)
  return guildname_.GetNoArena();
}
void GuildRpcChangeGuildNameAsk::set_guildname(const ::std::string& value) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildRpcChangeGuildNameAsk.GuildName)
}
#if LANG_CXX11
void GuildRpcChangeGuildNameAsk::set_guildname(::std::string&& value) {
  set_has_guildname();
  guildname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildRpcChangeGuildNameAsk.GuildName)
}
#endif
void GuildRpcChangeGuildNameAsk::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildRpcChangeGuildNameAsk.GuildName)
}
void GuildRpcChangeGuildNameAsk::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildRpcChangeGuildNameAsk.GuildName)
}
::std::string* GuildRpcChangeGuildNameAsk::mutable_guildname() {
  set_has_guildname();
  // @@protoc_insertion_point(field_mutable:GuildRpcChangeGuildNameAsk.GuildName)
  return guildname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildRpcChangeGuildNameAsk::release_guildname() {
  // @@protoc_insertion_point(field_release:GuildRpcChangeGuildNameAsk.GuildName)
  clear_has_guildname();
  return guildname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildRpcChangeGuildNameAsk::set_allocated_guildname(::std::string* guildname) {
  if (guildname != NULL) {
    set_has_guildname();
  } else {
    clear_has_guildname();
  }
  guildname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:GuildRpcChangeGuildNameAsk.GuildName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcChangeGuildNameReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcChangeGuildNameReply::GuildRpcChangeGuildNameReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcChangeGuildNameReply)
}
GuildRpcChangeGuildNameReply::GuildRpcChangeGuildNameReply(const GuildRpcChangeGuildNameReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcChangeGuildNameReply)
}

void GuildRpcChangeGuildNameReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcChangeGuildNameReply::~GuildRpcChangeGuildNameReply() {
  // @@protoc_insertion_point(destructor:GuildRpcChangeGuildNameReply)
  SharedDtor();
}

void GuildRpcChangeGuildNameReply::SharedDtor() {
}

void GuildRpcChangeGuildNameReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcChangeGuildNameReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcChangeGuildNameReply& GuildRpcChangeGuildNameReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcChangeGuildNameReply* GuildRpcChangeGuildNameReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcChangeGuildNameReply* n = new GuildRpcChangeGuildNameReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcChangeGuildNameReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcChangeGuildNameReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcChangeGuildNameReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcChangeGuildNameReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcChangeGuildNameReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcChangeGuildNameReply)
  return false;
#undef DO_
}

void GuildRpcChangeGuildNameReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcChangeGuildNameReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcChangeGuildNameReply)
}

::google::protobuf::uint8* GuildRpcChangeGuildNameReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcChangeGuildNameReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcChangeGuildNameReply)
  return target;
}

size_t GuildRpcChangeGuildNameReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcChangeGuildNameReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcChangeGuildNameReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcChangeGuildNameReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcChangeGuildNameReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcChangeGuildNameReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcChangeGuildNameReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcChangeGuildNameReply)
    MergeFrom(*source);
  }
}

void GuildRpcChangeGuildNameReply::MergeFrom(const GuildRpcChangeGuildNameReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcChangeGuildNameReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcChangeGuildNameReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcChangeGuildNameReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcChangeGuildNameReply::CopyFrom(const GuildRpcChangeGuildNameReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcChangeGuildNameReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcChangeGuildNameReply::IsInitialized() const {
  return true;
}

void GuildRpcChangeGuildNameReply::Swap(GuildRpcChangeGuildNameReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcChangeGuildNameReply::InternalSwap(GuildRpcChangeGuildNameReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcChangeGuildNameReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcChangeGuildNameReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcChangeGuildNameReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcChangeGuildNameReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcChangeGuildNameReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcChangeGuildNameReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcChangeGuildNameReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcChangeGuildNameReply.Result)
  return result_;
}
void GuildRpcChangeGuildNameReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcChangeGuildNameReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcChangeAnnouncementAsk::kAnnouncementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcChangeAnnouncementAsk::GuildRpcChangeAnnouncementAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcChangeAnnouncementAsk)
}
GuildRpcChangeAnnouncementAsk::GuildRpcChangeAnnouncementAsk(const GuildRpcChangeAnnouncementAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  announcement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_announcement()) {
    announcement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.announcement_);
  }
  // @@protoc_insertion_point(copy_constructor:GuildRpcChangeAnnouncementAsk)
}

void GuildRpcChangeAnnouncementAsk::SharedCtor() {
  _cached_size_ = 0;
  announcement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GuildRpcChangeAnnouncementAsk::~GuildRpcChangeAnnouncementAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcChangeAnnouncementAsk)
  SharedDtor();
}

void GuildRpcChangeAnnouncementAsk::SharedDtor() {
  announcement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GuildRpcChangeAnnouncementAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcChangeAnnouncementAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcChangeAnnouncementAsk& GuildRpcChangeAnnouncementAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcChangeAnnouncementAsk* GuildRpcChangeAnnouncementAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcChangeAnnouncementAsk* n = new GuildRpcChangeAnnouncementAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcChangeAnnouncementAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcChangeAnnouncementAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_announcement()) {
    GOOGLE_DCHECK(!announcement_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*announcement_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcChangeAnnouncementAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcChangeAnnouncementAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Announcement = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_announcement()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->announcement().data(), static_cast<int>(this->announcement().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildRpcChangeAnnouncementAsk.Announcement");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcChangeAnnouncementAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcChangeAnnouncementAsk)
  return false;
#undef DO_
}

void GuildRpcChangeAnnouncementAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcChangeAnnouncementAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Announcement = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->announcement().data(), static_cast<int>(this->announcement().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildRpcChangeAnnouncementAsk.Announcement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->announcement(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcChangeAnnouncementAsk)
}

::google::protobuf::uint8* GuildRpcChangeAnnouncementAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcChangeAnnouncementAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Announcement = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->announcement().data(), static_cast<int>(this->announcement().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildRpcChangeAnnouncementAsk.Announcement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->announcement(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcChangeAnnouncementAsk)
  return target;
}

size_t GuildRpcChangeAnnouncementAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcChangeAnnouncementAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string Announcement = 1;
  if (has_announcement()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->announcement());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcChangeAnnouncementAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcChangeAnnouncementAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcChangeAnnouncementAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcChangeAnnouncementAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcChangeAnnouncementAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcChangeAnnouncementAsk)
    MergeFrom(*source);
  }
}

void GuildRpcChangeAnnouncementAsk::MergeFrom(const GuildRpcChangeAnnouncementAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcChangeAnnouncementAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_announcement()) {
    set_has_announcement();
    announcement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.announcement_);
  }
}

void GuildRpcChangeAnnouncementAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcChangeAnnouncementAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcChangeAnnouncementAsk::CopyFrom(const GuildRpcChangeAnnouncementAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcChangeAnnouncementAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcChangeAnnouncementAsk::IsInitialized() const {
  return true;
}

void GuildRpcChangeAnnouncementAsk::Swap(GuildRpcChangeAnnouncementAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcChangeAnnouncementAsk::InternalSwap(GuildRpcChangeAnnouncementAsk* other) {
  using std::swap;
  announcement_.Swap(&other->announcement_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcChangeAnnouncementAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcChangeAnnouncementAsk

// optional string Announcement = 1;
bool GuildRpcChangeAnnouncementAsk::has_announcement() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcChangeAnnouncementAsk::set_has_announcement() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcChangeAnnouncementAsk::clear_has_announcement() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcChangeAnnouncementAsk::clear_announcement() {
  announcement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_announcement();
}
const ::std::string& GuildRpcChangeAnnouncementAsk::announcement() const {
  // @@protoc_insertion_point(field_get:GuildRpcChangeAnnouncementAsk.Announcement)
  return announcement_.GetNoArena();
}
void GuildRpcChangeAnnouncementAsk::set_announcement(const ::std::string& value) {
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildRpcChangeAnnouncementAsk.Announcement)
}
#if LANG_CXX11
void GuildRpcChangeAnnouncementAsk::set_announcement(::std::string&& value) {
  set_has_announcement();
  announcement_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildRpcChangeAnnouncementAsk.Announcement)
}
#endif
void GuildRpcChangeAnnouncementAsk::set_announcement(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildRpcChangeAnnouncementAsk.Announcement)
}
void GuildRpcChangeAnnouncementAsk::set_announcement(const char* value, size_t size) {
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildRpcChangeAnnouncementAsk.Announcement)
}
::std::string* GuildRpcChangeAnnouncementAsk::mutable_announcement() {
  set_has_announcement();
  // @@protoc_insertion_point(field_mutable:GuildRpcChangeAnnouncementAsk.Announcement)
  return announcement_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildRpcChangeAnnouncementAsk::release_announcement() {
  // @@protoc_insertion_point(field_release:GuildRpcChangeAnnouncementAsk.Announcement)
  clear_has_announcement();
  return announcement_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildRpcChangeAnnouncementAsk::set_allocated_announcement(::std::string* announcement) {
  if (announcement != NULL) {
    set_has_announcement();
  } else {
    clear_has_announcement();
  }
  announcement_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), announcement);
  // @@protoc_insertion_point(field_set_allocated:GuildRpcChangeAnnouncementAsk.Announcement)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcChangeAnnouncementReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcChangeAnnouncementReply::GuildRpcChangeAnnouncementReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcChangeAnnouncementReply)
}
GuildRpcChangeAnnouncementReply::GuildRpcChangeAnnouncementReply(const GuildRpcChangeAnnouncementReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcChangeAnnouncementReply)
}

void GuildRpcChangeAnnouncementReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcChangeAnnouncementReply::~GuildRpcChangeAnnouncementReply() {
  // @@protoc_insertion_point(destructor:GuildRpcChangeAnnouncementReply)
  SharedDtor();
}

void GuildRpcChangeAnnouncementReply::SharedDtor() {
}

void GuildRpcChangeAnnouncementReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcChangeAnnouncementReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcChangeAnnouncementReply& GuildRpcChangeAnnouncementReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcChangeAnnouncementReply* GuildRpcChangeAnnouncementReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcChangeAnnouncementReply* n = new GuildRpcChangeAnnouncementReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcChangeAnnouncementReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcChangeAnnouncementReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcChangeAnnouncementReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcChangeAnnouncementReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcChangeAnnouncementReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcChangeAnnouncementReply)
  return false;
#undef DO_
}

void GuildRpcChangeAnnouncementReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcChangeAnnouncementReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcChangeAnnouncementReply)
}

::google::protobuf::uint8* GuildRpcChangeAnnouncementReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcChangeAnnouncementReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcChangeAnnouncementReply)
  return target;
}

size_t GuildRpcChangeAnnouncementReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcChangeAnnouncementReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcChangeAnnouncementReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcChangeAnnouncementReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcChangeAnnouncementReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcChangeAnnouncementReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcChangeAnnouncementReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcChangeAnnouncementReply)
    MergeFrom(*source);
  }
}

void GuildRpcChangeAnnouncementReply::MergeFrom(const GuildRpcChangeAnnouncementReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcChangeAnnouncementReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcChangeAnnouncementReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcChangeAnnouncementReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcChangeAnnouncementReply::CopyFrom(const GuildRpcChangeAnnouncementReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcChangeAnnouncementReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcChangeAnnouncementReply::IsInitialized() const {
  return true;
}

void GuildRpcChangeAnnouncementReply::Swap(GuildRpcChangeAnnouncementReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcChangeAnnouncementReply::InternalSwap(GuildRpcChangeAnnouncementReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcChangeAnnouncementReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcChangeAnnouncementReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcChangeAnnouncementReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcChangeAnnouncementReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcChangeAnnouncementReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcChangeAnnouncementReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcChangeAnnouncementReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcChangeAnnouncementReply.Result)
  return result_;
}
void GuildRpcChangeAnnouncementReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcChangeAnnouncementReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcReqGuildListAsk::GuildRpcReqGuildListAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcReqGuildListAsk)
}
GuildRpcReqGuildListAsk::GuildRpcReqGuildListAsk(const GuildRpcReqGuildListAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GuildRpcReqGuildListAsk)
}

void GuildRpcReqGuildListAsk::SharedCtor() {
  _cached_size_ = 0;
}

GuildRpcReqGuildListAsk::~GuildRpcReqGuildListAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcReqGuildListAsk)
  SharedDtor();
}

void GuildRpcReqGuildListAsk::SharedDtor() {
}

void GuildRpcReqGuildListAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcReqGuildListAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcReqGuildListAsk& GuildRpcReqGuildListAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcReqGuildListAsk* GuildRpcReqGuildListAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcReqGuildListAsk* n = new GuildRpcReqGuildListAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcReqGuildListAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcReqGuildListAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcReqGuildListAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcReqGuildListAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcReqGuildListAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcReqGuildListAsk)
  return false;
#undef DO_
}

void GuildRpcReqGuildListAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcReqGuildListAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcReqGuildListAsk)
}

::google::protobuf::uint8* GuildRpcReqGuildListAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcReqGuildListAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcReqGuildListAsk)
  return target;
}

size_t GuildRpcReqGuildListAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcReqGuildListAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcReqGuildListAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcReqGuildListAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcReqGuildListAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcReqGuildListAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcReqGuildListAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcReqGuildListAsk)
    MergeFrom(*source);
  }
}

void GuildRpcReqGuildListAsk::MergeFrom(const GuildRpcReqGuildListAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcReqGuildListAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GuildRpcReqGuildListAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcReqGuildListAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcReqGuildListAsk::CopyFrom(const GuildRpcReqGuildListAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcReqGuildListAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcReqGuildListAsk::IsInitialized() const {
  return true;
}

void GuildRpcReqGuildListAsk::Swap(GuildRpcReqGuildListAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcReqGuildListAsk::InternalSwap(GuildRpcReqGuildListAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcReqGuildListAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcReqGuildListAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcReqGuildListReply::kResultFieldNumber;
const int GuildRpcReqGuildListReply::kGuildListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcReqGuildListReply::GuildRpcReqGuildListReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcReqGuildListReply)
}
GuildRpcReqGuildListReply::GuildRpcReqGuildListReply(const GuildRpcReqGuildListReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      guildlist_(from.guildlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcReqGuildListReply)
}

void GuildRpcReqGuildListReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcReqGuildListReply::~GuildRpcReqGuildListReply() {
  // @@protoc_insertion_point(destructor:GuildRpcReqGuildListReply)
  SharedDtor();
}

void GuildRpcReqGuildListReply::SharedDtor() {
}

void GuildRpcReqGuildListReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcReqGuildListReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcReqGuildListReply& GuildRpcReqGuildListReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcReqGuildListReply* GuildRpcReqGuildListReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcReqGuildListReply* n = new GuildRpcReqGuildListReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcReqGuildListReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcReqGuildListReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guildlist_.Clear();
  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcReqGuildListReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcReqGuildListReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GuildListObj GuildList = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_guildlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcReqGuildListReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcReqGuildListReply)
  return false;
#undef DO_
}

void GuildRpcReqGuildListReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcReqGuildListReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // repeated .GuildListObj GuildList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->guildlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->guildlist(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcReqGuildListReply)
}

::google::protobuf::uint8* GuildRpcReqGuildListReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcReqGuildListReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // repeated .GuildListObj GuildList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->guildlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->guildlist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcReqGuildListReply)
  return target;
}

size_t GuildRpcReqGuildListReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcReqGuildListReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .GuildListObj GuildList = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->guildlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->guildlist(static_cast<int>(i)));
    }
  }

  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcReqGuildListReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcReqGuildListReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcReqGuildListReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcReqGuildListReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcReqGuildListReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcReqGuildListReply)
    MergeFrom(*source);
  }
}

void GuildRpcReqGuildListReply::MergeFrom(const GuildRpcReqGuildListReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcReqGuildListReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  guildlist_.MergeFrom(from.guildlist_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcReqGuildListReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcReqGuildListReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcReqGuildListReply::CopyFrom(const GuildRpcReqGuildListReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcReqGuildListReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcReqGuildListReply::IsInitialized() const {
  return true;
}

void GuildRpcReqGuildListReply::Swap(GuildRpcReqGuildListReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcReqGuildListReply::InternalSwap(GuildRpcReqGuildListReply* other) {
  using std::swap;
  guildlist_.InternalSwap(&other->guildlist_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcReqGuildListReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcReqGuildListReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcReqGuildListReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcReqGuildListReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcReqGuildListReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcReqGuildListReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcReqGuildListReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcReqGuildListReply.Result)
  return result_;
}
void GuildRpcReqGuildListReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcReqGuildListReply.Result)
}

// repeated .GuildListObj GuildList = 2;
int GuildRpcReqGuildListReply::guildlist_size() const {
  return guildlist_.size();
}
void GuildRpcReqGuildListReply::clear_guildlist() {
  guildlist_.Clear();
}
const ::GuildListObj& GuildRpcReqGuildListReply::guildlist(int index) const {
  // @@protoc_insertion_point(field_get:GuildRpcReqGuildListReply.GuildList)
  return guildlist_.Get(index);
}
::GuildListObj* GuildRpcReqGuildListReply::mutable_guildlist(int index) {
  // @@protoc_insertion_point(field_mutable:GuildRpcReqGuildListReply.GuildList)
  return guildlist_.Mutable(index);
}
::GuildListObj* GuildRpcReqGuildListReply::add_guildlist() {
  // @@protoc_insertion_point(field_add:GuildRpcReqGuildListReply.GuildList)
  return guildlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::GuildListObj >*
GuildRpcReqGuildListReply::mutable_guildlist() {
  // @@protoc_insertion_point(field_mutable_list:GuildRpcReqGuildListReply.GuildList)
  return &guildlist_;
}
const ::google::protobuf::RepeatedPtrField< ::GuildListObj >&
GuildRpcReqGuildListReply::guildlist() const {
  // @@protoc_insertion_point(field_list:GuildRpcReqGuildListReply.GuildList)
  return guildlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcAppointDutyAsk::kUserIdFieldNumber;
const int GuildRpcAppointDutyAsk::kDutyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcAppointDutyAsk::GuildRpcAppointDutyAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcAppointDutyAsk)
}
GuildRpcAppointDutyAsk::GuildRpcAppointDutyAsk(const GuildRpcAppointDutyAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&duty_, &from.duty_,
    static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&duty_)) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:GuildRpcAppointDutyAsk)
}

void GuildRpcAppointDutyAsk::SharedCtor() {
  _cached_size_ = 0;
  duty_ = -1;
  userid_ = GOOGLE_LONGLONG(-1);
}

GuildRpcAppointDutyAsk::~GuildRpcAppointDutyAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcAppointDutyAsk)
  SharedDtor();
}

void GuildRpcAppointDutyAsk::SharedDtor() {
}

void GuildRpcAppointDutyAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcAppointDutyAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcAppointDutyAsk& GuildRpcAppointDutyAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcAppointDutyAsk* GuildRpcAppointDutyAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcAppointDutyAsk* n = new GuildRpcAppointDutyAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcAppointDutyAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcAppointDutyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    duty_ = -1;
    userid_ = GOOGLE_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcAppointDutyAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcAppointDutyAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 UserId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Duty = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_duty();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &duty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcAppointDutyAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcAppointDutyAsk)
  return false;
#undef DO_
}

void GuildRpcAppointDutyAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcAppointDutyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->userid(), output);
  }

  // optional sint32 Duty = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->duty(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcAppointDutyAsk)
}

::google::protobuf::uint8* GuildRpcAppointDutyAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcAppointDutyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->userid(), target);
  }

  // optional sint32 Duty = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->duty(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcAppointDutyAsk)
  return target;
}

size_t GuildRpcAppointDutyAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcAppointDutyAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Duty = 2 [default = -1];
    if (has_duty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->duty());
    }

    // optional sint64 UserId = 1 [default = -1];
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcAppointDutyAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcAppointDutyAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcAppointDutyAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcAppointDutyAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcAppointDutyAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcAppointDutyAsk)
    MergeFrom(*source);
  }
}

void GuildRpcAppointDutyAsk::MergeFrom(const GuildRpcAppointDutyAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcAppointDutyAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      duty_ = from.duty_;
    }
    if (cached_has_bits & 0x00000002u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildRpcAppointDutyAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcAppointDutyAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcAppointDutyAsk::CopyFrom(const GuildRpcAppointDutyAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcAppointDutyAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcAppointDutyAsk::IsInitialized() const {
  return true;
}

void GuildRpcAppointDutyAsk::Swap(GuildRpcAppointDutyAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcAppointDutyAsk::InternalSwap(GuildRpcAppointDutyAsk* other) {
  using std::swap;
  swap(duty_, other->duty_);
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcAppointDutyAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcAppointDutyAsk

// optional sint64 UserId = 1 [default = -1];
bool GuildRpcAppointDutyAsk::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildRpcAppointDutyAsk::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildRpcAppointDutyAsk::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildRpcAppointDutyAsk::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 GuildRpcAppointDutyAsk::userid() const {
  // @@protoc_insertion_point(field_get:GuildRpcAppointDutyAsk.UserId)
  return userid_;
}
void GuildRpcAppointDutyAsk::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcAppointDutyAsk.UserId)
}

// optional sint32 Duty = 2 [default = -1];
bool GuildRpcAppointDutyAsk::has_duty() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcAppointDutyAsk::set_has_duty() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcAppointDutyAsk::clear_has_duty() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcAppointDutyAsk::clear_duty() {
  duty_ = -1;
  clear_has_duty();
}
::google::protobuf::int32 GuildRpcAppointDutyAsk::duty() const {
  // @@protoc_insertion_point(field_get:GuildRpcAppointDutyAsk.Duty)
  return duty_;
}
void GuildRpcAppointDutyAsk::set_duty(::google::protobuf::int32 value) {
  set_has_duty();
  duty_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcAppointDutyAsk.Duty)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcAppointDutyReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcAppointDutyReply::GuildRpcAppointDutyReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcAppointDutyReply)
}
GuildRpcAppointDutyReply::GuildRpcAppointDutyReply(const GuildRpcAppointDutyReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcAppointDutyReply)
}

void GuildRpcAppointDutyReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcAppointDutyReply::~GuildRpcAppointDutyReply() {
  // @@protoc_insertion_point(destructor:GuildRpcAppointDutyReply)
  SharedDtor();
}

void GuildRpcAppointDutyReply::SharedDtor() {
}

void GuildRpcAppointDutyReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcAppointDutyReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcAppointDutyReply& GuildRpcAppointDutyReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcAppointDutyReply* GuildRpcAppointDutyReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcAppointDutyReply* n = new GuildRpcAppointDutyReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcAppointDutyReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcAppointDutyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcAppointDutyReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcAppointDutyReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcAppointDutyReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcAppointDutyReply)
  return false;
#undef DO_
}

void GuildRpcAppointDutyReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcAppointDutyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcAppointDutyReply)
}

::google::protobuf::uint8* GuildRpcAppointDutyReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcAppointDutyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcAppointDutyReply)
  return target;
}

size_t GuildRpcAppointDutyReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcAppointDutyReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcAppointDutyReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcAppointDutyReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcAppointDutyReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcAppointDutyReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcAppointDutyReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcAppointDutyReply)
    MergeFrom(*source);
  }
}

void GuildRpcAppointDutyReply::MergeFrom(const GuildRpcAppointDutyReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcAppointDutyReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcAppointDutyReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcAppointDutyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcAppointDutyReply::CopyFrom(const GuildRpcAppointDutyReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcAppointDutyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcAppointDutyReply::IsInitialized() const {
  return true;
}

void GuildRpcAppointDutyReply::Swap(GuildRpcAppointDutyReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcAppointDutyReply::InternalSwap(GuildRpcAppointDutyReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcAppointDutyReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcAppointDutyReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcAppointDutyReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcAppointDutyReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcAppointDutyReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcAppointDutyReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcAppointDutyReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcAppointDutyReply.Result)
  return result_;
}
void GuildRpcAppointDutyReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcAppointDutyReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcKickoutAsk::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcKickoutAsk::GuildRpcKickoutAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcKickoutAsk)
}
GuildRpcKickoutAsk::GuildRpcKickoutAsk(const GuildRpcKickoutAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcKickoutAsk)
}

void GuildRpcKickoutAsk::SharedCtor() {
  _cached_size_ = 0;
  userid_ = GOOGLE_LONGLONG(-1);
}

GuildRpcKickoutAsk::~GuildRpcKickoutAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcKickoutAsk)
  SharedDtor();
}

void GuildRpcKickoutAsk::SharedDtor() {
}

void GuildRpcKickoutAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcKickoutAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcKickoutAsk& GuildRpcKickoutAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcKickoutAsk* GuildRpcKickoutAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcKickoutAsk* n = new GuildRpcKickoutAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcKickoutAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcKickoutAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = GOOGLE_LONGLONG(-1);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcKickoutAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcKickoutAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 UserId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcKickoutAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcKickoutAsk)
  return false;
#undef DO_
}

void GuildRpcKickoutAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcKickoutAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcKickoutAsk)
}

::google::protobuf::uint8* GuildRpcKickoutAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcKickoutAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcKickoutAsk)
  return target;
}

size_t GuildRpcKickoutAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcKickoutAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint64 UserId = 1 [default = -1];
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcKickoutAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcKickoutAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcKickoutAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcKickoutAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcKickoutAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcKickoutAsk)
    MergeFrom(*source);
  }
}

void GuildRpcKickoutAsk::MergeFrom(const GuildRpcKickoutAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcKickoutAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void GuildRpcKickoutAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcKickoutAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcKickoutAsk::CopyFrom(const GuildRpcKickoutAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcKickoutAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcKickoutAsk::IsInitialized() const {
  return true;
}

void GuildRpcKickoutAsk::Swap(GuildRpcKickoutAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcKickoutAsk::InternalSwap(GuildRpcKickoutAsk* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcKickoutAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcKickoutAsk

// optional sint64 UserId = 1 [default = -1];
bool GuildRpcKickoutAsk::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcKickoutAsk::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcKickoutAsk::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcKickoutAsk::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 GuildRpcKickoutAsk::userid() const {
  // @@protoc_insertion_point(field_get:GuildRpcKickoutAsk.UserId)
  return userid_;
}
void GuildRpcKickoutAsk::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcKickoutAsk.UserId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcKickoutReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcKickoutReply::GuildRpcKickoutReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcKickoutReply)
}
GuildRpcKickoutReply::GuildRpcKickoutReply(const GuildRpcKickoutReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcKickoutReply)
}

void GuildRpcKickoutReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcKickoutReply::~GuildRpcKickoutReply() {
  // @@protoc_insertion_point(destructor:GuildRpcKickoutReply)
  SharedDtor();
}

void GuildRpcKickoutReply::SharedDtor() {
}

void GuildRpcKickoutReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcKickoutReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcKickoutReply& GuildRpcKickoutReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcKickoutReply* GuildRpcKickoutReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcKickoutReply* n = new GuildRpcKickoutReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcKickoutReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcKickoutReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcKickoutReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcKickoutReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcKickoutReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcKickoutReply)
  return false;
#undef DO_
}

void GuildRpcKickoutReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcKickoutReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcKickoutReply)
}

::google::protobuf::uint8* GuildRpcKickoutReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcKickoutReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcKickoutReply)
  return target;
}

size_t GuildRpcKickoutReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcKickoutReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcKickoutReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcKickoutReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcKickoutReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcKickoutReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcKickoutReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcKickoutReply)
    MergeFrom(*source);
  }
}

void GuildRpcKickoutReply::MergeFrom(const GuildRpcKickoutReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcKickoutReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcKickoutReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcKickoutReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcKickoutReply::CopyFrom(const GuildRpcKickoutReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcKickoutReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcKickoutReply::IsInitialized() const {
  return true;
}

void GuildRpcKickoutReply::Swap(GuildRpcKickoutReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcKickoutReply::InternalSwap(GuildRpcKickoutReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcKickoutReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcKickoutReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcKickoutReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcKickoutReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcKickoutReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcKickoutReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcKickoutReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcKickoutReply.Result)
  return result_;
}
void GuildRpcKickoutReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcKickoutReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcExitGuildAsk::GuildRpcExitGuildAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcExitGuildAsk)
}
GuildRpcExitGuildAsk::GuildRpcExitGuildAsk(const GuildRpcExitGuildAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GuildRpcExitGuildAsk)
}

void GuildRpcExitGuildAsk::SharedCtor() {
  _cached_size_ = 0;
}

GuildRpcExitGuildAsk::~GuildRpcExitGuildAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcExitGuildAsk)
  SharedDtor();
}

void GuildRpcExitGuildAsk::SharedDtor() {
}

void GuildRpcExitGuildAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcExitGuildAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcExitGuildAsk& GuildRpcExitGuildAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcExitGuildAsk* GuildRpcExitGuildAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcExitGuildAsk* n = new GuildRpcExitGuildAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcExitGuildAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcExitGuildAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcExitGuildAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcExitGuildAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcExitGuildAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcExitGuildAsk)
  return false;
#undef DO_
}

void GuildRpcExitGuildAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcExitGuildAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcExitGuildAsk)
}

::google::protobuf::uint8* GuildRpcExitGuildAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcExitGuildAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcExitGuildAsk)
  return target;
}

size_t GuildRpcExitGuildAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcExitGuildAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcExitGuildAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcExitGuildAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcExitGuildAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcExitGuildAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcExitGuildAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcExitGuildAsk)
    MergeFrom(*source);
  }
}

void GuildRpcExitGuildAsk::MergeFrom(const GuildRpcExitGuildAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcExitGuildAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GuildRpcExitGuildAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcExitGuildAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcExitGuildAsk::CopyFrom(const GuildRpcExitGuildAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcExitGuildAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcExitGuildAsk::IsInitialized() const {
  return true;
}

void GuildRpcExitGuildAsk::Swap(GuildRpcExitGuildAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcExitGuildAsk::InternalSwap(GuildRpcExitGuildAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcExitGuildAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcExitGuildAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcExitGuildReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcExitGuildReply::GuildRpcExitGuildReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcExitGuildReply)
}
GuildRpcExitGuildReply::GuildRpcExitGuildReply(const GuildRpcExitGuildReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcExitGuildReply)
}

void GuildRpcExitGuildReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcExitGuildReply::~GuildRpcExitGuildReply() {
  // @@protoc_insertion_point(destructor:GuildRpcExitGuildReply)
  SharedDtor();
}

void GuildRpcExitGuildReply::SharedDtor() {
}

void GuildRpcExitGuildReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcExitGuildReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcExitGuildReply& GuildRpcExitGuildReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcExitGuildReply* GuildRpcExitGuildReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcExitGuildReply* n = new GuildRpcExitGuildReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcExitGuildReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcExitGuildReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcExitGuildReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcExitGuildReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcExitGuildReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcExitGuildReply)
  return false;
#undef DO_
}

void GuildRpcExitGuildReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcExitGuildReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcExitGuildReply)
}

::google::protobuf::uint8* GuildRpcExitGuildReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcExitGuildReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcExitGuildReply)
  return target;
}

size_t GuildRpcExitGuildReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcExitGuildReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcExitGuildReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcExitGuildReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcExitGuildReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcExitGuildReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcExitGuildReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcExitGuildReply)
    MergeFrom(*source);
  }
}

void GuildRpcExitGuildReply::MergeFrom(const GuildRpcExitGuildReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcExitGuildReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcExitGuildReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcExitGuildReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcExitGuildReply::CopyFrom(const GuildRpcExitGuildReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcExitGuildReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcExitGuildReply::IsInitialized() const {
  return true;
}

void GuildRpcExitGuildReply::Swap(GuildRpcExitGuildReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcExitGuildReply::InternalSwap(GuildRpcExitGuildReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcExitGuildReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcExitGuildReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcExitGuildReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcExitGuildReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcExitGuildReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcExitGuildReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcExitGuildReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcExitGuildReply.Result)
  return result_;
}
void GuildRpcExitGuildReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcExitGuildReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcBreakUpAsk::GuildRpcBreakUpAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcBreakUpAsk)
}
GuildRpcBreakUpAsk::GuildRpcBreakUpAsk(const GuildRpcBreakUpAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GuildRpcBreakUpAsk)
}

void GuildRpcBreakUpAsk::SharedCtor() {
  _cached_size_ = 0;
}

GuildRpcBreakUpAsk::~GuildRpcBreakUpAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcBreakUpAsk)
  SharedDtor();
}

void GuildRpcBreakUpAsk::SharedDtor() {
}

void GuildRpcBreakUpAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcBreakUpAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcBreakUpAsk& GuildRpcBreakUpAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcBreakUpAsk* GuildRpcBreakUpAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcBreakUpAsk* n = new GuildRpcBreakUpAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcBreakUpAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcBreakUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcBreakUpAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcBreakUpAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcBreakUpAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcBreakUpAsk)
  return false;
#undef DO_
}

void GuildRpcBreakUpAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcBreakUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcBreakUpAsk)
}

::google::protobuf::uint8* GuildRpcBreakUpAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcBreakUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcBreakUpAsk)
  return target;
}

size_t GuildRpcBreakUpAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcBreakUpAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcBreakUpAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcBreakUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcBreakUpAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcBreakUpAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcBreakUpAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcBreakUpAsk)
    MergeFrom(*source);
  }
}

void GuildRpcBreakUpAsk::MergeFrom(const GuildRpcBreakUpAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcBreakUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GuildRpcBreakUpAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcBreakUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcBreakUpAsk::CopyFrom(const GuildRpcBreakUpAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcBreakUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcBreakUpAsk::IsInitialized() const {
  return true;
}

void GuildRpcBreakUpAsk::Swap(GuildRpcBreakUpAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcBreakUpAsk::InternalSwap(GuildRpcBreakUpAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcBreakUpAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcBreakUpAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcBreakUpReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcBreakUpReply::GuildRpcBreakUpReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcBreakUpReply)
}
GuildRpcBreakUpReply::GuildRpcBreakUpReply(const GuildRpcBreakUpReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcBreakUpReply)
}

void GuildRpcBreakUpReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcBreakUpReply::~GuildRpcBreakUpReply() {
  // @@protoc_insertion_point(destructor:GuildRpcBreakUpReply)
  SharedDtor();
}

void GuildRpcBreakUpReply::SharedDtor() {
}

void GuildRpcBreakUpReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcBreakUpReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcBreakUpReply& GuildRpcBreakUpReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcBreakUpReply* GuildRpcBreakUpReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcBreakUpReply* n = new GuildRpcBreakUpReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcBreakUpReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcBreakUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcBreakUpReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcBreakUpReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcBreakUpReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcBreakUpReply)
  return false;
#undef DO_
}

void GuildRpcBreakUpReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcBreakUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcBreakUpReply)
}

::google::protobuf::uint8* GuildRpcBreakUpReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcBreakUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcBreakUpReply)
  return target;
}

size_t GuildRpcBreakUpReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcBreakUpReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcBreakUpReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcBreakUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcBreakUpReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcBreakUpReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcBreakUpReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcBreakUpReply)
    MergeFrom(*source);
  }
}

void GuildRpcBreakUpReply::MergeFrom(const GuildRpcBreakUpReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcBreakUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcBreakUpReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcBreakUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcBreakUpReply::CopyFrom(const GuildRpcBreakUpReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcBreakUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcBreakUpReply::IsInitialized() const {
  return true;
}

void GuildRpcBreakUpReply::Swap(GuildRpcBreakUpReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcBreakUpReply::InternalSwap(GuildRpcBreakUpReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcBreakUpReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcBreakUpReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcBreakUpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcBreakUpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcBreakUpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcBreakUpReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcBreakUpReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcBreakUpReply.Result)
  return result_;
}
void GuildRpcBreakUpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcBreakUpReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcInviteToJoinAsk::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcInviteToJoinAsk::GuildRpcInviteToJoinAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcInviteToJoinAsk)
}
GuildRpcInviteToJoinAsk::GuildRpcInviteToJoinAsk(const GuildRpcInviteToJoinAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcInviteToJoinAsk)
}

void GuildRpcInviteToJoinAsk::SharedCtor() {
  _cached_size_ = 0;
  userid_ = GOOGLE_LONGLONG(-1);
}

GuildRpcInviteToJoinAsk::~GuildRpcInviteToJoinAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcInviteToJoinAsk)
  SharedDtor();
}

void GuildRpcInviteToJoinAsk::SharedDtor() {
}

void GuildRpcInviteToJoinAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcInviteToJoinAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcInviteToJoinAsk& GuildRpcInviteToJoinAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcInviteToJoinAsk* GuildRpcInviteToJoinAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcInviteToJoinAsk* n = new GuildRpcInviteToJoinAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcInviteToJoinAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcInviteToJoinAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = GOOGLE_LONGLONG(-1);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcInviteToJoinAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcInviteToJoinAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 UserId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcInviteToJoinAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcInviteToJoinAsk)
  return false;
#undef DO_
}

void GuildRpcInviteToJoinAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcInviteToJoinAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcInviteToJoinAsk)
}

::google::protobuf::uint8* GuildRpcInviteToJoinAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcInviteToJoinAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcInviteToJoinAsk)
  return target;
}

size_t GuildRpcInviteToJoinAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcInviteToJoinAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint64 UserId = 1 [default = -1];
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcInviteToJoinAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcInviteToJoinAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcInviteToJoinAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcInviteToJoinAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcInviteToJoinAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcInviteToJoinAsk)
    MergeFrom(*source);
  }
}

void GuildRpcInviteToJoinAsk::MergeFrom(const GuildRpcInviteToJoinAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcInviteToJoinAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void GuildRpcInviteToJoinAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcInviteToJoinAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcInviteToJoinAsk::CopyFrom(const GuildRpcInviteToJoinAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcInviteToJoinAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcInviteToJoinAsk::IsInitialized() const {
  return true;
}

void GuildRpcInviteToJoinAsk::Swap(GuildRpcInviteToJoinAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcInviteToJoinAsk::InternalSwap(GuildRpcInviteToJoinAsk* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcInviteToJoinAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcInviteToJoinAsk

// optional sint64 UserId = 1 [default = -1];
bool GuildRpcInviteToJoinAsk::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcInviteToJoinAsk::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcInviteToJoinAsk::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcInviteToJoinAsk::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 GuildRpcInviteToJoinAsk::userid() const {
  // @@protoc_insertion_point(field_get:GuildRpcInviteToJoinAsk.UserId)
  return userid_;
}
void GuildRpcInviteToJoinAsk::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcInviteToJoinAsk.UserId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcInviteToJoinReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcInviteToJoinReply::GuildRpcInviteToJoinReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcInviteToJoinReply)
}
GuildRpcInviteToJoinReply::GuildRpcInviteToJoinReply(const GuildRpcInviteToJoinReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcInviteToJoinReply)
}

void GuildRpcInviteToJoinReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcInviteToJoinReply::~GuildRpcInviteToJoinReply() {
  // @@protoc_insertion_point(destructor:GuildRpcInviteToJoinReply)
  SharedDtor();
}

void GuildRpcInviteToJoinReply::SharedDtor() {
}

void GuildRpcInviteToJoinReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcInviteToJoinReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcInviteToJoinReply& GuildRpcInviteToJoinReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcInviteToJoinReply* GuildRpcInviteToJoinReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcInviteToJoinReply* n = new GuildRpcInviteToJoinReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcInviteToJoinReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcInviteToJoinReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcInviteToJoinReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcInviteToJoinReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcInviteToJoinReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcInviteToJoinReply)
  return false;
#undef DO_
}

void GuildRpcInviteToJoinReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcInviteToJoinReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcInviteToJoinReply)
}

::google::protobuf::uint8* GuildRpcInviteToJoinReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcInviteToJoinReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcInviteToJoinReply)
  return target;
}

size_t GuildRpcInviteToJoinReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcInviteToJoinReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcInviteToJoinReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcInviteToJoinReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcInviteToJoinReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcInviteToJoinReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcInviteToJoinReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcInviteToJoinReply)
    MergeFrom(*source);
  }
}

void GuildRpcInviteToJoinReply::MergeFrom(const GuildRpcInviteToJoinReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcInviteToJoinReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcInviteToJoinReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcInviteToJoinReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcInviteToJoinReply::CopyFrom(const GuildRpcInviteToJoinReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcInviteToJoinReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcInviteToJoinReply::IsInitialized() const {
  return true;
}

void GuildRpcInviteToJoinReply::Swap(GuildRpcInviteToJoinReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcInviteToJoinReply::InternalSwap(GuildRpcInviteToJoinReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcInviteToJoinReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcInviteToJoinReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcInviteToJoinReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcInviteToJoinReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcInviteToJoinReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcInviteToJoinReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcInviteToJoinReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcInviteToJoinReply.Result)
  return result_;
}
void GuildRpcInviteToJoinReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcInviteToJoinReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcBeInvitedNoticeNotify::kUserIdFieldNumber;
const int GuildRpcBeInvitedNoticeNotify::kGuildFieldNumber;
const int GuildRpcBeInvitedNoticeNotify::kGuildNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcBeInvitedNoticeNotify::GuildRpcBeInvitedNoticeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcBeInvitedNoticeNotify)
}
GuildRpcBeInvitedNoticeNotify::GuildRpcBeInvitedNoticeNotify(const GuildRpcBeInvitedNoticeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guildname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guildname()) {
    guildname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guildname_);
  }
  ::memcpy(&guild_, &from.guild_,
    static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&guild_)) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:GuildRpcBeInvitedNoticeNotify)
}

void GuildRpcBeInvitedNoticeNotify::SharedCtor() {
  _cached_size_ = 0;
  guildname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guild_ = -1;
  userid_ = GOOGLE_LONGLONG(-1);
}

GuildRpcBeInvitedNoticeNotify::~GuildRpcBeInvitedNoticeNotify() {
  // @@protoc_insertion_point(destructor:GuildRpcBeInvitedNoticeNotify)
  SharedDtor();
}

void GuildRpcBeInvitedNoticeNotify::SharedDtor() {
  guildname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GuildRpcBeInvitedNoticeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcBeInvitedNoticeNotify::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcBeInvitedNoticeNotify& GuildRpcBeInvitedNoticeNotify::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcBeInvitedNoticeNotify* GuildRpcBeInvitedNoticeNotify::New(::google::protobuf::Arena* arena) const {
  GuildRpcBeInvitedNoticeNotify* n = new GuildRpcBeInvitedNoticeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcBeInvitedNoticeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcBeInvitedNoticeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!guildname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*guildname_.UnsafeRawStringPointer())->clear();
    }
    guild_ = -1;
    userid_ = GOOGLE_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcBeInvitedNoticeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcBeInvitedNoticeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 UserId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Guild = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_guild();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &guild_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string GuildName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guildname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guildname().data(), static_cast<int>(this->guildname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildRpcBeInvitedNoticeNotify.GuildName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcBeInvitedNoticeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcBeInvitedNoticeNotify)
  return false;
#undef DO_
}

void GuildRpcBeInvitedNoticeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcBeInvitedNoticeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->userid(), output);
  }

  // optional sint32 Guild = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->guild(), output);
  }

  // optional string GuildName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guildname().data(), static_cast<int>(this->guildname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildRpcBeInvitedNoticeNotify.GuildName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->guildname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcBeInvitedNoticeNotify)
}

::google::protobuf::uint8* GuildRpcBeInvitedNoticeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcBeInvitedNoticeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->userid(), target);
  }

  // optional sint32 Guild = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->guild(), target);
  }

  // optional string GuildName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guildname().data(), static_cast<int>(this->guildname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildRpcBeInvitedNoticeNotify.GuildName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->guildname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcBeInvitedNoticeNotify)
  return target;
}

size_t GuildRpcBeInvitedNoticeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcBeInvitedNoticeNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string GuildName = 3;
    if (has_guildname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guildname());
    }

    // optional sint32 Guild = 2 [default = -1];
    if (has_guild()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->guild());
    }

    // optional sint64 UserId = 1 [default = -1];
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcBeInvitedNoticeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcBeInvitedNoticeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcBeInvitedNoticeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcBeInvitedNoticeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcBeInvitedNoticeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcBeInvitedNoticeNotify)
    MergeFrom(*source);
  }
}

void GuildRpcBeInvitedNoticeNotify::MergeFrom(const GuildRpcBeInvitedNoticeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcBeInvitedNoticeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_guildname();
      guildname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guildname_);
    }
    if (cached_has_bits & 0x00000002u) {
      guild_ = from.guild_;
    }
    if (cached_has_bits & 0x00000004u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildRpcBeInvitedNoticeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcBeInvitedNoticeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcBeInvitedNoticeNotify::CopyFrom(const GuildRpcBeInvitedNoticeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcBeInvitedNoticeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcBeInvitedNoticeNotify::IsInitialized() const {
  return true;
}

void GuildRpcBeInvitedNoticeNotify::Swap(GuildRpcBeInvitedNoticeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcBeInvitedNoticeNotify::InternalSwap(GuildRpcBeInvitedNoticeNotify* other) {
  using std::swap;
  guildname_.Swap(&other->guildname_);
  swap(guild_, other->guild_);
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcBeInvitedNoticeNotify::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcBeInvitedNoticeNotify

// optional sint64 UserId = 1 [default = -1];
bool GuildRpcBeInvitedNoticeNotify::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GuildRpcBeInvitedNoticeNotify::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
void GuildRpcBeInvitedNoticeNotify::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
void GuildRpcBeInvitedNoticeNotify::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 GuildRpcBeInvitedNoticeNotify::userid() const {
  // @@protoc_insertion_point(field_get:GuildRpcBeInvitedNoticeNotify.UserId)
  return userid_;
}
void GuildRpcBeInvitedNoticeNotify::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcBeInvitedNoticeNotify.UserId)
}

// optional sint32 Guild = 2 [default = -1];
bool GuildRpcBeInvitedNoticeNotify::has_guild() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildRpcBeInvitedNoticeNotify::set_has_guild() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildRpcBeInvitedNoticeNotify::clear_has_guild() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildRpcBeInvitedNoticeNotify::clear_guild() {
  guild_ = -1;
  clear_has_guild();
}
::google::protobuf::int32 GuildRpcBeInvitedNoticeNotify::guild() const {
  // @@protoc_insertion_point(field_get:GuildRpcBeInvitedNoticeNotify.Guild)
  return guild_;
}
void GuildRpcBeInvitedNoticeNotify::set_guild(::google::protobuf::int32 value) {
  set_has_guild();
  guild_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcBeInvitedNoticeNotify.Guild)
}

// optional string GuildName = 3;
bool GuildRpcBeInvitedNoticeNotify::has_guildname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcBeInvitedNoticeNotify::set_has_guildname() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcBeInvitedNoticeNotify::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcBeInvitedNoticeNotify::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guildname();
}
const ::std::string& GuildRpcBeInvitedNoticeNotify::guildname() const {
  // @@protoc_insertion_point(field_get:GuildRpcBeInvitedNoticeNotify.GuildName)
  return guildname_.GetNoArena();
}
void GuildRpcBeInvitedNoticeNotify::set_guildname(const ::std::string& value) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildRpcBeInvitedNoticeNotify.GuildName)
}
#if LANG_CXX11
void GuildRpcBeInvitedNoticeNotify::set_guildname(::std::string&& value) {
  set_has_guildname();
  guildname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildRpcBeInvitedNoticeNotify.GuildName)
}
#endif
void GuildRpcBeInvitedNoticeNotify::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildRpcBeInvitedNoticeNotify.GuildName)
}
void GuildRpcBeInvitedNoticeNotify::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildRpcBeInvitedNoticeNotify.GuildName)
}
::std::string* GuildRpcBeInvitedNoticeNotify::mutable_guildname() {
  set_has_guildname();
  // @@protoc_insertion_point(field_mutable:GuildRpcBeInvitedNoticeNotify.GuildName)
  return guildname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildRpcBeInvitedNoticeNotify::release_guildname() {
  // @@protoc_insertion_point(field_release:GuildRpcBeInvitedNoticeNotify.GuildName)
  clear_has_guildname();
  return guildname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildRpcBeInvitedNoticeNotify::set_allocated_guildname(::std::string* guildname) {
  if (guildname != NULL) {
    set_has_guildname();
  } else {
    clear_has_guildname();
  }
  guildname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:GuildRpcBeInvitedNoticeNotify.GuildName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcBeInvitedHandleAsk::kGuildFieldNumber;
const int GuildRpcBeInvitedHandleAsk::kOperFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcBeInvitedHandleAsk::GuildRpcBeInvitedHandleAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcBeInvitedHandleAsk)
}
GuildRpcBeInvitedHandleAsk::GuildRpcBeInvitedHandleAsk(const GuildRpcBeInvitedHandleAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&oper_, &from.oper_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_) -
    reinterpret_cast<char*>(&oper_)) + sizeof(guild_));
  // @@protoc_insertion_point(copy_constructor:GuildRpcBeInvitedHandleAsk)
}

void GuildRpcBeInvitedHandleAsk::SharedCtor() {
  _cached_size_ = 0;
  oper_ = 0;
  guild_ = -1;
}

GuildRpcBeInvitedHandleAsk::~GuildRpcBeInvitedHandleAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcBeInvitedHandleAsk)
  SharedDtor();
}

void GuildRpcBeInvitedHandleAsk::SharedDtor() {
}

void GuildRpcBeInvitedHandleAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcBeInvitedHandleAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcBeInvitedHandleAsk& GuildRpcBeInvitedHandleAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcBeInvitedHandleAsk* GuildRpcBeInvitedHandleAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcBeInvitedHandleAsk* n = new GuildRpcBeInvitedHandleAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcBeInvitedHandleAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcBeInvitedHandleAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    oper_ = 0;
    guild_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcBeInvitedHandleAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcBeInvitedHandleAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Guild = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_guild();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &guild_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Oper = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_oper();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &oper_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcBeInvitedHandleAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcBeInvitedHandleAsk)
  return false;
#undef DO_
}

void GuildRpcBeInvitedHandleAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcBeInvitedHandleAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Guild = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->guild(), output);
  }

  // optional sint32 Oper = 3 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->oper(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcBeInvitedHandleAsk)
}

::google::protobuf::uint8* GuildRpcBeInvitedHandleAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcBeInvitedHandleAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Guild = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->guild(), target);
  }

  // optional sint32 Oper = 3 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->oper(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcBeInvitedHandleAsk)
  return target;
}

size_t GuildRpcBeInvitedHandleAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcBeInvitedHandleAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Oper = 3 [default = 0];
    if (has_oper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->oper());
    }

    // optional sint32 Guild = 1 [default = -1];
    if (has_guild()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->guild());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcBeInvitedHandleAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcBeInvitedHandleAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcBeInvitedHandleAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcBeInvitedHandleAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcBeInvitedHandleAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcBeInvitedHandleAsk)
    MergeFrom(*source);
  }
}

void GuildRpcBeInvitedHandleAsk::MergeFrom(const GuildRpcBeInvitedHandleAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcBeInvitedHandleAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      oper_ = from.oper_;
    }
    if (cached_has_bits & 0x00000002u) {
      guild_ = from.guild_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildRpcBeInvitedHandleAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcBeInvitedHandleAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcBeInvitedHandleAsk::CopyFrom(const GuildRpcBeInvitedHandleAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcBeInvitedHandleAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcBeInvitedHandleAsk::IsInitialized() const {
  return true;
}

void GuildRpcBeInvitedHandleAsk::Swap(GuildRpcBeInvitedHandleAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcBeInvitedHandleAsk::InternalSwap(GuildRpcBeInvitedHandleAsk* other) {
  using std::swap;
  swap(oper_, other->oper_);
  swap(guild_, other->guild_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcBeInvitedHandleAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcBeInvitedHandleAsk

// optional sint32 Guild = 1 [default = -1];
bool GuildRpcBeInvitedHandleAsk::has_guild() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildRpcBeInvitedHandleAsk::set_has_guild() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildRpcBeInvitedHandleAsk::clear_has_guild() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildRpcBeInvitedHandleAsk::clear_guild() {
  guild_ = -1;
  clear_has_guild();
}
::google::protobuf::int32 GuildRpcBeInvitedHandleAsk::guild() const {
  // @@protoc_insertion_point(field_get:GuildRpcBeInvitedHandleAsk.Guild)
  return guild_;
}
void GuildRpcBeInvitedHandleAsk::set_guild(::google::protobuf::int32 value) {
  set_has_guild();
  guild_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcBeInvitedHandleAsk.Guild)
}

// optional sint32 Oper = 3 [default = 0];
bool GuildRpcBeInvitedHandleAsk::has_oper() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcBeInvitedHandleAsk::set_has_oper() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcBeInvitedHandleAsk::clear_has_oper() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcBeInvitedHandleAsk::clear_oper() {
  oper_ = 0;
  clear_has_oper();
}
::google::protobuf::int32 GuildRpcBeInvitedHandleAsk::oper() const {
  // @@protoc_insertion_point(field_get:GuildRpcBeInvitedHandleAsk.Oper)
  return oper_;
}
void GuildRpcBeInvitedHandleAsk::set_oper(::google::protobuf::int32 value) {
  set_has_oper();
  oper_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcBeInvitedHandleAsk.Oper)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcBeInvitedHandleReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcBeInvitedHandleReply::GuildRpcBeInvitedHandleReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcBeInvitedHandleReply)
}
GuildRpcBeInvitedHandleReply::GuildRpcBeInvitedHandleReply(const GuildRpcBeInvitedHandleReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcBeInvitedHandleReply)
}

void GuildRpcBeInvitedHandleReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcBeInvitedHandleReply::~GuildRpcBeInvitedHandleReply() {
  // @@protoc_insertion_point(destructor:GuildRpcBeInvitedHandleReply)
  SharedDtor();
}

void GuildRpcBeInvitedHandleReply::SharedDtor() {
}

void GuildRpcBeInvitedHandleReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcBeInvitedHandleReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcBeInvitedHandleReply& GuildRpcBeInvitedHandleReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcBeInvitedHandleReply* GuildRpcBeInvitedHandleReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcBeInvitedHandleReply* n = new GuildRpcBeInvitedHandleReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcBeInvitedHandleReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcBeInvitedHandleReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcBeInvitedHandleReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcBeInvitedHandleReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcBeInvitedHandleReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcBeInvitedHandleReply)
  return false;
#undef DO_
}

void GuildRpcBeInvitedHandleReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcBeInvitedHandleReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcBeInvitedHandleReply)
}

::google::protobuf::uint8* GuildRpcBeInvitedHandleReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcBeInvitedHandleReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcBeInvitedHandleReply)
  return target;
}

size_t GuildRpcBeInvitedHandleReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcBeInvitedHandleReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcBeInvitedHandleReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcBeInvitedHandleReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcBeInvitedHandleReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcBeInvitedHandleReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcBeInvitedHandleReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcBeInvitedHandleReply)
    MergeFrom(*source);
  }
}

void GuildRpcBeInvitedHandleReply::MergeFrom(const GuildRpcBeInvitedHandleReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcBeInvitedHandleReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcBeInvitedHandleReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcBeInvitedHandleReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcBeInvitedHandleReply::CopyFrom(const GuildRpcBeInvitedHandleReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcBeInvitedHandleReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcBeInvitedHandleReply::IsInitialized() const {
  return true;
}

void GuildRpcBeInvitedHandleReply::Swap(GuildRpcBeInvitedHandleReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcBeInvitedHandleReply::InternalSwap(GuildRpcBeInvitedHandleReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcBeInvitedHandleReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcBeInvitedHandleReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcBeInvitedHandleReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcBeInvitedHandleReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcBeInvitedHandleReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcBeInvitedHandleReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcBeInvitedHandleReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcBeInvitedHandleReply.Result)
  return result_;
}
void GuildRpcBeInvitedHandleReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcBeInvitedHandleReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcResignDutyAsk::GuildRpcResignDutyAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcResignDutyAsk)
}
GuildRpcResignDutyAsk::GuildRpcResignDutyAsk(const GuildRpcResignDutyAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GuildRpcResignDutyAsk)
}

void GuildRpcResignDutyAsk::SharedCtor() {
  _cached_size_ = 0;
}

GuildRpcResignDutyAsk::~GuildRpcResignDutyAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcResignDutyAsk)
  SharedDtor();
}

void GuildRpcResignDutyAsk::SharedDtor() {
}

void GuildRpcResignDutyAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcResignDutyAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcResignDutyAsk& GuildRpcResignDutyAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcResignDutyAsk* GuildRpcResignDutyAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcResignDutyAsk* n = new GuildRpcResignDutyAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcResignDutyAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcResignDutyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcResignDutyAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcResignDutyAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcResignDutyAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcResignDutyAsk)
  return false;
#undef DO_
}

void GuildRpcResignDutyAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcResignDutyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcResignDutyAsk)
}

::google::protobuf::uint8* GuildRpcResignDutyAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcResignDutyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcResignDutyAsk)
  return target;
}

size_t GuildRpcResignDutyAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcResignDutyAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcResignDutyAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcResignDutyAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcResignDutyAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcResignDutyAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcResignDutyAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcResignDutyAsk)
    MergeFrom(*source);
  }
}

void GuildRpcResignDutyAsk::MergeFrom(const GuildRpcResignDutyAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcResignDutyAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GuildRpcResignDutyAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcResignDutyAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcResignDutyAsk::CopyFrom(const GuildRpcResignDutyAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcResignDutyAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcResignDutyAsk::IsInitialized() const {
  return true;
}

void GuildRpcResignDutyAsk::Swap(GuildRpcResignDutyAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcResignDutyAsk::InternalSwap(GuildRpcResignDutyAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcResignDutyAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcResignDutyAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcResignDutyReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcResignDutyReply::GuildRpcResignDutyReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcResignDutyReply)
}
GuildRpcResignDutyReply::GuildRpcResignDutyReply(const GuildRpcResignDutyReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcResignDutyReply)
}

void GuildRpcResignDutyReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcResignDutyReply::~GuildRpcResignDutyReply() {
  // @@protoc_insertion_point(destructor:GuildRpcResignDutyReply)
  SharedDtor();
}

void GuildRpcResignDutyReply::SharedDtor() {
}

void GuildRpcResignDutyReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcResignDutyReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcResignDutyReply& GuildRpcResignDutyReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcResignDutyReply* GuildRpcResignDutyReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcResignDutyReply* n = new GuildRpcResignDutyReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcResignDutyReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcResignDutyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcResignDutyReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcResignDutyReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcResignDutyReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcResignDutyReply)
  return false;
#undef DO_
}

void GuildRpcResignDutyReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcResignDutyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcResignDutyReply)
}

::google::protobuf::uint8* GuildRpcResignDutyReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcResignDutyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcResignDutyReply)
  return target;
}

size_t GuildRpcResignDutyReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcResignDutyReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcResignDutyReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcResignDutyReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcResignDutyReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcResignDutyReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcResignDutyReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcResignDutyReply)
    MergeFrom(*source);
  }
}

void GuildRpcResignDutyReply::MergeFrom(const GuildRpcResignDutyReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcResignDutyReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcResignDutyReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcResignDutyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcResignDutyReply::CopyFrom(const GuildRpcResignDutyReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcResignDutyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcResignDutyReply::IsInitialized() const {
  return true;
}

void GuildRpcResignDutyReply::Swap(GuildRpcResignDutyReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcResignDutyReply::InternalSwap(GuildRpcResignDutyReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcResignDutyReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcResignDutyReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcResignDutyReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcResignDutyReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcResignDutyReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcResignDutyReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcResignDutyReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcResignDutyReply.Result)
  return result_;
}
void GuildRpcResignDutyReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcResignDutyReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcSyncMyTeamDataNotify::kGuildDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcSyncMyTeamDataNotify::GuildRpcSyncMyTeamDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcSyncMyTeamDataNotify)
}
GuildRpcSyncMyTeamDataNotify::GuildRpcSyncMyTeamDataNotify(const GuildRpcSyncMyTeamDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_guilddata()) {
    guilddata_ = new ::GuildInfoObj(*from.guilddata_);
  } else {
    guilddata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:GuildRpcSyncMyTeamDataNotify)
}

void GuildRpcSyncMyTeamDataNotify::SharedCtor() {
  _cached_size_ = 0;
  guilddata_ = NULL;
}

GuildRpcSyncMyTeamDataNotify::~GuildRpcSyncMyTeamDataNotify() {
  // @@protoc_insertion_point(destructor:GuildRpcSyncMyTeamDataNotify)
  SharedDtor();
}

void GuildRpcSyncMyTeamDataNotify::SharedDtor() {
  if (this != internal_default_instance()) delete guilddata_;
}

void GuildRpcSyncMyTeamDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcSyncMyTeamDataNotify::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcSyncMyTeamDataNotify& GuildRpcSyncMyTeamDataNotify::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcSyncMyTeamDataNotify* GuildRpcSyncMyTeamDataNotify::New(::google::protobuf::Arena* arena) const {
  GuildRpcSyncMyTeamDataNotify* n = new GuildRpcSyncMyTeamDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcSyncMyTeamDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcSyncMyTeamDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_guilddata()) {
    GOOGLE_DCHECK(guilddata_ != NULL);
    guilddata_->::GuildInfoObj::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcSyncMyTeamDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcSyncMyTeamDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .GuildInfoObj GuildData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_guilddata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcSyncMyTeamDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcSyncMyTeamDataNotify)
  return false;
#undef DO_
}

void GuildRpcSyncMyTeamDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcSyncMyTeamDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .GuildInfoObj GuildData = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->guilddata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcSyncMyTeamDataNotify)
}

::google::protobuf::uint8* GuildRpcSyncMyTeamDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcSyncMyTeamDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .GuildInfoObj GuildData = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->guilddata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcSyncMyTeamDataNotify)
  return target;
}

size_t GuildRpcSyncMyTeamDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcSyncMyTeamDataNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .GuildInfoObj GuildData = 1;
  if (has_guilddata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->guilddata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcSyncMyTeamDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcSyncMyTeamDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcSyncMyTeamDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcSyncMyTeamDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcSyncMyTeamDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcSyncMyTeamDataNotify)
    MergeFrom(*source);
  }
}

void GuildRpcSyncMyTeamDataNotify::MergeFrom(const GuildRpcSyncMyTeamDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcSyncMyTeamDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_guilddata()) {
    mutable_guilddata()->::GuildInfoObj::MergeFrom(from.guilddata());
  }
}

void GuildRpcSyncMyTeamDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcSyncMyTeamDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcSyncMyTeamDataNotify::CopyFrom(const GuildRpcSyncMyTeamDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcSyncMyTeamDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcSyncMyTeamDataNotify::IsInitialized() const {
  return true;
}

void GuildRpcSyncMyTeamDataNotify::Swap(GuildRpcSyncMyTeamDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcSyncMyTeamDataNotify::InternalSwap(GuildRpcSyncMyTeamDataNotify* other) {
  using std::swap;
  swap(guilddata_, other->guilddata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcSyncMyTeamDataNotify::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcSyncMyTeamDataNotify

// optional .GuildInfoObj GuildData = 1;
bool GuildRpcSyncMyTeamDataNotify::has_guilddata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcSyncMyTeamDataNotify::set_has_guilddata() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcSyncMyTeamDataNotify::clear_has_guilddata() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcSyncMyTeamDataNotify::clear_guilddata() {
  if (guilddata_ != NULL) guilddata_->::GuildInfoObj::Clear();
  clear_has_guilddata();
}
const ::GuildInfoObj& GuildRpcSyncMyTeamDataNotify::guilddata() const {
  const ::GuildInfoObj* p = guilddata_;
  // @@protoc_insertion_point(field_get:GuildRpcSyncMyTeamDataNotify.GuildData)
  return p != NULL ? *p : *reinterpret_cast<const ::GuildInfoObj*>(
      &::_GuildInfoObj_default_instance_);
}
::GuildInfoObj* GuildRpcSyncMyTeamDataNotify::mutable_guilddata() {
  set_has_guilddata();
  if (guilddata_ == NULL) {
    guilddata_ = new ::GuildInfoObj;
  }
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncMyTeamDataNotify.GuildData)
  return guilddata_;
}
::GuildInfoObj* GuildRpcSyncMyTeamDataNotify::release_guilddata() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncMyTeamDataNotify.GuildData)
  clear_has_guilddata();
  ::GuildInfoObj* temp = guilddata_;
  guilddata_ = NULL;
  return temp;
}
void GuildRpcSyncMyTeamDataNotify::set_allocated_guilddata(::GuildInfoObj* guilddata) {
  delete guilddata_;
  guilddata_ = guilddata;
  if (guilddata) {
    set_has_guilddata();
  } else {
    clear_has_guilddata();
  }
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncMyTeamDataNotify.GuildData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcSyncNoticeOfGuildBaseDataNotify::kGuildNameFieldNumber;
const int GuildRpcSyncNoticeOfGuildBaseDataNotify::kLevelFieldNumber;
const int GuildRpcSyncNoticeOfGuildBaseDataNotify::kCaptainIdFieldNumber;
const int GuildRpcSyncNoticeOfGuildBaseDataNotify::kCaptainNameFieldNumber;
const int GuildRpcSyncNoticeOfGuildBaseDataNotify::kFundsFieldNumber;
const int GuildRpcSyncNoticeOfGuildBaseDataNotify::kLeagueMatchesRankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcSyncNoticeOfGuildBaseDataNotify::GuildRpcSyncNoticeOfGuildBaseDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcSyncNoticeOfGuildBaseDataNotify)
}
GuildRpcSyncNoticeOfGuildBaseDataNotify::GuildRpcSyncNoticeOfGuildBaseDataNotify(const GuildRpcSyncNoticeOfGuildBaseDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guildname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guildname()) {
    guildname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guildname_);
  }
  captainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_captainname()) {
    captainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.captainname_);
  }
  ::memcpy(&leaguematchesrank_, &from.leaguematchesrank_,
    static_cast<size_t>(reinterpret_cast<char*>(&funds_) -
    reinterpret_cast<char*>(&leaguematchesrank_)) + sizeof(funds_));
  // @@protoc_insertion_point(copy_constructor:GuildRpcSyncNoticeOfGuildBaseDataNotify)
}

void GuildRpcSyncNoticeOfGuildBaseDataNotify::SharedCtor() {
  _cached_size_ = 0;
  guildname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  captainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leaguematchesrank_ = -1;
  captainid_ = GOOGLE_LONGLONG(-1);
  level_ = 1;
  funds_ = -1;
}

GuildRpcSyncNoticeOfGuildBaseDataNotify::~GuildRpcSyncNoticeOfGuildBaseDataNotify() {
  // @@protoc_insertion_point(destructor:GuildRpcSyncNoticeOfGuildBaseDataNotify)
  SharedDtor();
}

void GuildRpcSyncNoticeOfGuildBaseDataNotify::SharedDtor() {
  guildname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  captainname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GuildRpcSyncNoticeOfGuildBaseDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcSyncNoticeOfGuildBaseDataNotify::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcSyncNoticeOfGuildBaseDataNotify& GuildRpcSyncNoticeOfGuildBaseDataNotify::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcSyncNoticeOfGuildBaseDataNotify* GuildRpcSyncNoticeOfGuildBaseDataNotify::New(::google::protobuf::Arena* arena) const {
  GuildRpcSyncNoticeOfGuildBaseDataNotify* n = new GuildRpcSyncNoticeOfGuildBaseDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcSyncNoticeOfGuildBaseDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcSyncNoticeOfGuildBaseDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!guildname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*guildname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!captainname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*captainname_.UnsafeRawStringPointer())->clear();
    }
    leaguematchesrank_ = -1;
    captainid_ = GOOGLE_LONGLONG(-1);
    level_ = 1;
    funds_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcSyncNoticeOfGuildBaseDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcSyncNoticeOfGuildBaseDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string GuildName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guildname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guildname().data(), static_cast<int>(this->guildname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildRpcSyncNoticeOfGuildBaseDataNotify.GuildName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Level = 2 [default = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 CaptainId = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_captainid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &captainid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string CaptainName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_captainname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->captainname().data(), static_cast<int>(this->captainname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Funds = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_funds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &funds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 LeagueMatchesRank = 7 [default = -1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_leaguematchesrank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &leaguematchesrank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcSyncNoticeOfGuildBaseDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcSyncNoticeOfGuildBaseDataNotify)
  return false;
#undef DO_
}

void GuildRpcSyncNoticeOfGuildBaseDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcSyncNoticeOfGuildBaseDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string GuildName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guildname().data(), static_cast<int>(this->guildname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildRpcSyncNoticeOfGuildBaseDataNotify.GuildName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guildname(), output);
  }

  // optional sint32 Level = 2 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->level(), output);
  }

  // optional sint64 CaptainId = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(3, this->captainid(), output);
  }

  // optional string CaptainName = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->captainname().data(), static_cast<int>(this->captainname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->captainname(), output);
  }

  // optional sint32 Funds = 5 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->funds(), output);
  }

  // optional sint32 LeagueMatchesRank = 7 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->leaguematchesrank(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcSyncNoticeOfGuildBaseDataNotify)
}

::google::protobuf::uint8* GuildRpcSyncNoticeOfGuildBaseDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcSyncNoticeOfGuildBaseDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string GuildName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guildname().data(), static_cast<int>(this->guildname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildRpcSyncNoticeOfGuildBaseDataNotify.GuildName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guildname(), target);
  }

  // optional sint32 Level = 2 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->level(), target);
  }

  // optional sint64 CaptainId = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(3, this->captainid(), target);
  }

  // optional string CaptainName = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->captainname().data(), static_cast<int>(this->captainname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->captainname(), target);
  }

  // optional sint32 Funds = 5 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->funds(), target);
  }

  // optional sint32 LeagueMatchesRank = 7 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->leaguematchesrank(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcSyncNoticeOfGuildBaseDataNotify)
  return target;
}

size_t GuildRpcSyncNoticeOfGuildBaseDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcSyncNoticeOfGuildBaseDataNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string GuildName = 1;
    if (has_guildname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guildname());
    }

    // optional string CaptainName = 4;
    if (has_captainname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->captainname());
    }

    // optional sint32 LeagueMatchesRank = 7 [default = -1];
    if (has_leaguematchesrank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->leaguematchesrank());
    }

    // optional sint64 CaptainId = 3 [default = -1];
    if (has_captainid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->captainid());
    }

    // optional sint32 Level = 2 [default = 1];
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->level());
    }

    // optional sint32 Funds = 5 [default = -1];
    if (has_funds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->funds());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcSyncNoticeOfGuildBaseDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcSyncNoticeOfGuildBaseDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcSyncNoticeOfGuildBaseDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcSyncNoticeOfGuildBaseDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcSyncNoticeOfGuildBaseDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcSyncNoticeOfGuildBaseDataNotify)
    MergeFrom(*source);
  }
}

void GuildRpcSyncNoticeOfGuildBaseDataNotify::MergeFrom(const GuildRpcSyncNoticeOfGuildBaseDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcSyncNoticeOfGuildBaseDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_guildname();
      guildname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guildname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_captainname();
      captainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.captainname_);
    }
    if (cached_has_bits & 0x00000004u) {
      leaguematchesrank_ = from.leaguematchesrank_;
    }
    if (cached_has_bits & 0x00000008u) {
      captainid_ = from.captainid_;
    }
    if (cached_has_bits & 0x00000010u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000020u) {
      funds_ = from.funds_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildRpcSyncNoticeOfGuildBaseDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcSyncNoticeOfGuildBaseDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcSyncNoticeOfGuildBaseDataNotify::CopyFrom(const GuildRpcSyncNoticeOfGuildBaseDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcSyncNoticeOfGuildBaseDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcSyncNoticeOfGuildBaseDataNotify::IsInitialized() const {
  return true;
}

void GuildRpcSyncNoticeOfGuildBaseDataNotify::Swap(GuildRpcSyncNoticeOfGuildBaseDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::InternalSwap(GuildRpcSyncNoticeOfGuildBaseDataNotify* other) {
  using std::swap;
  guildname_.Swap(&other->guildname_);
  captainname_.Swap(&other->captainname_);
  swap(leaguematchesrank_, other->leaguematchesrank_);
  swap(captainid_, other->captainid_);
  swap(level_, other->level_);
  swap(funds_, other->funds_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcSyncNoticeOfGuildBaseDataNotify::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcSyncNoticeOfGuildBaseDataNotify

// optional string GuildName = 1;
bool GuildRpcSyncNoticeOfGuildBaseDataNotify::has_guildname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_has_guildname() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guildname();
}
const ::std::string& GuildRpcSyncNoticeOfGuildBaseDataNotify::guildname() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfGuildBaseDataNotify.GuildName)
  return guildname_.GetNoArena();
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_guildname(const ::std::string& value) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfGuildBaseDataNotify.GuildName)
}
#if LANG_CXX11
void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_guildname(::std::string&& value) {
  set_has_guildname();
  guildname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildRpcSyncNoticeOfGuildBaseDataNotify.GuildName)
}
#endif
void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildRpcSyncNoticeOfGuildBaseDataNotify.GuildName)
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildRpcSyncNoticeOfGuildBaseDataNotify.GuildName)
}
::std::string* GuildRpcSyncNoticeOfGuildBaseDataNotify::mutable_guildname() {
  set_has_guildname();
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncNoticeOfGuildBaseDataNotify.GuildName)
  return guildname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildRpcSyncNoticeOfGuildBaseDataNotify::release_guildname() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncNoticeOfGuildBaseDataNotify.GuildName)
  clear_has_guildname();
  return guildname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_allocated_guildname(::std::string* guildname) {
  if (guildname != NULL) {
    set_has_guildname();
  } else {
    clear_has_guildname();
  }
  guildname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncNoticeOfGuildBaseDataNotify.GuildName)
}

// optional sint32 Level = 2 [default = 1];
bool GuildRpcSyncNoticeOfGuildBaseDataNotify::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_level() {
  level_ = 1;
  clear_has_level();
}
::google::protobuf::int32 GuildRpcSyncNoticeOfGuildBaseDataNotify::level() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfGuildBaseDataNotify.Level)
  return level_;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfGuildBaseDataNotify.Level)
}

// optional sint64 CaptainId = 3 [default = -1];
bool GuildRpcSyncNoticeOfGuildBaseDataNotify::has_captainid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_has_captainid() {
  _has_bits_[0] |= 0x00000008u;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_has_captainid() {
  _has_bits_[0] &= ~0x00000008u;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_captainid() {
  captainid_ = GOOGLE_LONGLONG(-1);
  clear_has_captainid();
}
::google::protobuf::int64 GuildRpcSyncNoticeOfGuildBaseDataNotify::captainid() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainId)
  return captainid_;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_captainid(::google::protobuf::int64 value) {
  set_has_captainid();
  captainid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainId)
}

// optional string CaptainName = 4;
bool GuildRpcSyncNoticeOfGuildBaseDataNotify::has_captainname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_has_captainname() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_has_captainname() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_captainname() {
  captainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_captainname();
}
const ::std::string& GuildRpcSyncNoticeOfGuildBaseDataNotify::captainname() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainName)
  return captainname_.GetNoArena();
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_captainname(const ::std::string& value) {
  set_has_captainname();
  captainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainName)
}
#if LANG_CXX11
void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_captainname(::std::string&& value) {
  set_has_captainname();
  captainname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainName)
}
#endif
void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_captainname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_captainname();
  captainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainName)
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_captainname(const char* value, size_t size) {
  set_has_captainname();
  captainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainName)
}
::std::string* GuildRpcSyncNoticeOfGuildBaseDataNotify::mutable_captainname() {
  set_has_captainname();
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainName)
  return captainname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildRpcSyncNoticeOfGuildBaseDataNotify::release_captainname() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainName)
  clear_has_captainname();
  return captainname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_allocated_captainname(::std::string* captainname) {
  if (captainname != NULL) {
    set_has_captainname();
  } else {
    clear_has_captainname();
  }
  captainname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), captainname);
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncNoticeOfGuildBaseDataNotify.CaptainName)
}

// optional sint32 Funds = 5 [default = -1];
bool GuildRpcSyncNoticeOfGuildBaseDataNotify::has_funds() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_has_funds() {
  _has_bits_[0] |= 0x00000020u;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_has_funds() {
  _has_bits_[0] &= ~0x00000020u;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_funds() {
  funds_ = -1;
  clear_has_funds();
}
::google::protobuf::int32 GuildRpcSyncNoticeOfGuildBaseDataNotify::funds() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfGuildBaseDataNotify.Funds)
  return funds_;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_funds(::google::protobuf::int32 value) {
  set_has_funds();
  funds_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfGuildBaseDataNotify.Funds)
}

// optional sint32 LeagueMatchesRank = 7 [default = -1];
bool GuildRpcSyncNoticeOfGuildBaseDataNotify::has_leaguematchesrank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_has_leaguematchesrank() {
  _has_bits_[0] |= 0x00000004u;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_has_leaguematchesrank() {
  _has_bits_[0] &= ~0x00000004u;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::clear_leaguematchesrank() {
  leaguematchesrank_ = -1;
  clear_has_leaguematchesrank();
}
::google::protobuf::int32 GuildRpcSyncNoticeOfGuildBaseDataNotify::leaguematchesrank() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfGuildBaseDataNotify.LeagueMatchesRank)
  return leaguematchesrank_;
}
void GuildRpcSyncNoticeOfGuildBaseDataNotify::set_leaguematchesrank(::google::protobuf::int32 value) {
  set_has_leaguematchesrank();
  leaguematchesrank_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfGuildBaseDataNotify.LeagueMatchesRank)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcSyncNoticeOfGuildMemberChangeNotify::kGuildMemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcSyncNoticeOfGuildMemberChangeNotify::GuildRpcSyncNoticeOfGuildMemberChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcSyncNoticeOfGuildMemberChangeNotify)
}
GuildRpcSyncNoticeOfGuildMemberChangeNotify::GuildRpcSyncNoticeOfGuildMemberChangeNotify(const GuildRpcSyncNoticeOfGuildMemberChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_guildmember()) {
    guildmember_ = new ::GuildMemberObj(*from.guildmember_);
  } else {
    guildmember_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:GuildRpcSyncNoticeOfGuildMemberChangeNotify)
}

void GuildRpcSyncNoticeOfGuildMemberChangeNotify::SharedCtor() {
  _cached_size_ = 0;
  guildmember_ = NULL;
}

GuildRpcSyncNoticeOfGuildMemberChangeNotify::~GuildRpcSyncNoticeOfGuildMemberChangeNotify() {
  // @@protoc_insertion_point(destructor:GuildRpcSyncNoticeOfGuildMemberChangeNotify)
  SharedDtor();
}

void GuildRpcSyncNoticeOfGuildMemberChangeNotify::SharedDtor() {
  if (this != internal_default_instance()) delete guildmember_;
}

void GuildRpcSyncNoticeOfGuildMemberChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcSyncNoticeOfGuildMemberChangeNotify::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcSyncNoticeOfGuildMemberChangeNotify& GuildRpcSyncNoticeOfGuildMemberChangeNotify::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcSyncNoticeOfGuildMemberChangeNotify* GuildRpcSyncNoticeOfGuildMemberChangeNotify::New(::google::protobuf::Arena* arena) const {
  GuildRpcSyncNoticeOfGuildMemberChangeNotify* n = new GuildRpcSyncNoticeOfGuildMemberChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcSyncNoticeOfGuildMemberChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcSyncNoticeOfGuildMemberChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_guildmember()) {
    GOOGLE_DCHECK(guildmember_ != NULL);
    guildmember_->::GuildMemberObj::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcSyncNoticeOfGuildMemberChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcSyncNoticeOfGuildMemberChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .GuildMemberObj GuildMember = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_guildmember()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcSyncNoticeOfGuildMemberChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcSyncNoticeOfGuildMemberChangeNotify)
  return false;
#undef DO_
}

void GuildRpcSyncNoticeOfGuildMemberChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcSyncNoticeOfGuildMemberChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .GuildMemberObj GuildMember = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->guildmember_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcSyncNoticeOfGuildMemberChangeNotify)
}

::google::protobuf::uint8* GuildRpcSyncNoticeOfGuildMemberChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcSyncNoticeOfGuildMemberChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .GuildMemberObj GuildMember = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->guildmember_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcSyncNoticeOfGuildMemberChangeNotify)
  return target;
}

size_t GuildRpcSyncNoticeOfGuildMemberChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcSyncNoticeOfGuildMemberChangeNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .GuildMemberObj GuildMember = 5;
  if (has_guildmember()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->guildmember_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcSyncNoticeOfGuildMemberChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcSyncNoticeOfGuildMemberChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcSyncNoticeOfGuildMemberChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcSyncNoticeOfGuildMemberChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcSyncNoticeOfGuildMemberChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcSyncNoticeOfGuildMemberChangeNotify)
    MergeFrom(*source);
  }
}

void GuildRpcSyncNoticeOfGuildMemberChangeNotify::MergeFrom(const GuildRpcSyncNoticeOfGuildMemberChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcSyncNoticeOfGuildMemberChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_guildmember()) {
    mutable_guildmember()->::GuildMemberObj::MergeFrom(from.guildmember());
  }
}

void GuildRpcSyncNoticeOfGuildMemberChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcSyncNoticeOfGuildMemberChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcSyncNoticeOfGuildMemberChangeNotify::CopyFrom(const GuildRpcSyncNoticeOfGuildMemberChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcSyncNoticeOfGuildMemberChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcSyncNoticeOfGuildMemberChangeNotify::IsInitialized() const {
  return true;
}

void GuildRpcSyncNoticeOfGuildMemberChangeNotify::Swap(GuildRpcSyncNoticeOfGuildMemberChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcSyncNoticeOfGuildMemberChangeNotify::InternalSwap(GuildRpcSyncNoticeOfGuildMemberChangeNotify* other) {
  using std::swap;
  swap(guildmember_, other->guildmember_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcSyncNoticeOfGuildMemberChangeNotify::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcSyncNoticeOfGuildMemberChangeNotify

// optional .GuildMemberObj GuildMember = 5;
bool GuildRpcSyncNoticeOfGuildMemberChangeNotify::has_guildmember() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcSyncNoticeOfGuildMemberChangeNotify::set_has_guildmember() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcSyncNoticeOfGuildMemberChangeNotify::clear_has_guildmember() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcSyncNoticeOfGuildMemberChangeNotify::clear_guildmember() {
  if (guildmember_ != NULL) guildmember_->::GuildMemberObj::Clear();
  clear_has_guildmember();
}
const ::GuildMemberObj& GuildRpcSyncNoticeOfGuildMemberChangeNotify::guildmember() const {
  const ::GuildMemberObj* p = guildmember_;
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfGuildMemberChangeNotify.GuildMember)
  return p != NULL ? *p : *reinterpret_cast<const ::GuildMemberObj*>(
      &::_GuildMemberObj_default_instance_);
}
::GuildMemberObj* GuildRpcSyncNoticeOfGuildMemberChangeNotify::mutable_guildmember() {
  set_has_guildmember();
  if (guildmember_ == NULL) {
    guildmember_ = new ::GuildMemberObj;
  }
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncNoticeOfGuildMemberChangeNotify.GuildMember)
  return guildmember_;
}
::GuildMemberObj* GuildRpcSyncNoticeOfGuildMemberChangeNotify::release_guildmember() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncNoticeOfGuildMemberChangeNotify.GuildMember)
  clear_has_guildmember();
  ::GuildMemberObj* temp = guildmember_;
  guildmember_ = NULL;
  return temp;
}
void GuildRpcSyncNoticeOfGuildMemberChangeNotify::set_allocated_guildmember(::GuildMemberObj* guildmember) {
  delete guildmember_;
  guildmember_ = guildmember;
  if (guildmember) {
    set_has_guildmember();
  } else {
    clear_has_guildmember();
  }
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncNoticeOfGuildMemberChangeNotify.GuildMember)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcSyncNoticeOfAddMemberNotify::kGuildMemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcSyncNoticeOfAddMemberNotify::GuildRpcSyncNoticeOfAddMemberNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcSyncNoticeOfAddMemberNotify)
}
GuildRpcSyncNoticeOfAddMemberNotify::GuildRpcSyncNoticeOfAddMemberNotify(const GuildRpcSyncNoticeOfAddMemberNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_guildmember()) {
    guildmember_ = new ::GuildMemberObj(*from.guildmember_);
  } else {
    guildmember_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:GuildRpcSyncNoticeOfAddMemberNotify)
}

void GuildRpcSyncNoticeOfAddMemberNotify::SharedCtor() {
  _cached_size_ = 0;
  guildmember_ = NULL;
}

GuildRpcSyncNoticeOfAddMemberNotify::~GuildRpcSyncNoticeOfAddMemberNotify() {
  // @@protoc_insertion_point(destructor:GuildRpcSyncNoticeOfAddMemberNotify)
  SharedDtor();
}

void GuildRpcSyncNoticeOfAddMemberNotify::SharedDtor() {
  if (this != internal_default_instance()) delete guildmember_;
}

void GuildRpcSyncNoticeOfAddMemberNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcSyncNoticeOfAddMemberNotify::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcSyncNoticeOfAddMemberNotify& GuildRpcSyncNoticeOfAddMemberNotify::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcSyncNoticeOfAddMemberNotify* GuildRpcSyncNoticeOfAddMemberNotify::New(::google::protobuf::Arena* arena) const {
  GuildRpcSyncNoticeOfAddMemberNotify* n = new GuildRpcSyncNoticeOfAddMemberNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcSyncNoticeOfAddMemberNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcSyncNoticeOfAddMemberNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_guildmember()) {
    GOOGLE_DCHECK(guildmember_ != NULL);
    guildmember_->::GuildMemberObj::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcSyncNoticeOfAddMemberNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcSyncNoticeOfAddMemberNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .GuildMemberObj GuildMember = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_guildmember()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcSyncNoticeOfAddMemberNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcSyncNoticeOfAddMemberNotify)
  return false;
#undef DO_
}

void GuildRpcSyncNoticeOfAddMemberNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcSyncNoticeOfAddMemberNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .GuildMemberObj GuildMember = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->guildmember_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcSyncNoticeOfAddMemberNotify)
}

::google::protobuf::uint8* GuildRpcSyncNoticeOfAddMemberNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcSyncNoticeOfAddMemberNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .GuildMemberObj GuildMember = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->guildmember_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcSyncNoticeOfAddMemberNotify)
  return target;
}

size_t GuildRpcSyncNoticeOfAddMemberNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcSyncNoticeOfAddMemberNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .GuildMemberObj GuildMember = 1;
  if (has_guildmember()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->guildmember_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcSyncNoticeOfAddMemberNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcSyncNoticeOfAddMemberNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcSyncNoticeOfAddMemberNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcSyncNoticeOfAddMemberNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcSyncNoticeOfAddMemberNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcSyncNoticeOfAddMemberNotify)
    MergeFrom(*source);
  }
}

void GuildRpcSyncNoticeOfAddMemberNotify::MergeFrom(const GuildRpcSyncNoticeOfAddMemberNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcSyncNoticeOfAddMemberNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_guildmember()) {
    mutable_guildmember()->::GuildMemberObj::MergeFrom(from.guildmember());
  }
}

void GuildRpcSyncNoticeOfAddMemberNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcSyncNoticeOfAddMemberNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcSyncNoticeOfAddMemberNotify::CopyFrom(const GuildRpcSyncNoticeOfAddMemberNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcSyncNoticeOfAddMemberNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcSyncNoticeOfAddMemberNotify::IsInitialized() const {
  return true;
}

void GuildRpcSyncNoticeOfAddMemberNotify::Swap(GuildRpcSyncNoticeOfAddMemberNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcSyncNoticeOfAddMemberNotify::InternalSwap(GuildRpcSyncNoticeOfAddMemberNotify* other) {
  using std::swap;
  swap(guildmember_, other->guildmember_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcSyncNoticeOfAddMemberNotify::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcSyncNoticeOfAddMemberNotify

// optional .GuildMemberObj GuildMember = 1;
bool GuildRpcSyncNoticeOfAddMemberNotify::has_guildmember() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcSyncNoticeOfAddMemberNotify::set_has_guildmember() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcSyncNoticeOfAddMemberNotify::clear_has_guildmember() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcSyncNoticeOfAddMemberNotify::clear_guildmember() {
  if (guildmember_ != NULL) guildmember_->::GuildMemberObj::Clear();
  clear_has_guildmember();
}
const ::GuildMemberObj& GuildRpcSyncNoticeOfAddMemberNotify::guildmember() const {
  const ::GuildMemberObj* p = guildmember_;
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfAddMemberNotify.GuildMember)
  return p != NULL ? *p : *reinterpret_cast<const ::GuildMemberObj*>(
      &::_GuildMemberObj_default_instance_);
}
::GuildMemberObj* GuildRpcSyncNoticeOfAddMemberNotify::mutable_guildmember() {
  set_has_guildmember();
  if (guildmember_ == NULL) {
    guildmember_ = new ::GuildMemberObj;
  }
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncNoticeOfAddMemberNotify.GuildMember)
  return guildmember_;
}
::GuildMemberObj* GuildRpcSyncNoticeOfAddMemberNotify::release_guildmember() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncNoticeOfAddMemberNotify.GuildMember)
  clear_has_guildmember();
  ::GuildMemberObj* temp = guildmember_;
  guildmember_ = NULL;
  return temp;
}
void GuildRpcSyncNoticeOfAddMemberNotify::set_allocated_guildmember(::GuildMemberObj* guildmember) {
  delete guildmember_;
  guildmember_ = guildmember;
  if (guildmember) {
    set_has_guildmember();
  } else {
    clear_has_guildmember();
  }
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncNoticeOfAddMemberNotify.GuildMember)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcSyncNoticeOfDelMemberNotify::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcSyncNoticeOfDelMemberNotify::GuildRpcSyncNoticeOfDelMemberNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcSyncNoticeOfDelMemberNotify)
}
GuildRpcSyncNoticeOfDelMemberNotify::GuildRpcSyncNoticeOfDelMemberNotify(const GuildRpcSyncNoticeOfDelMemberNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcSyncNoticeOfDelMemberNotify)
}

void GuildRpcSyncNoticeOfDelMemberNotify::SharedCtor() {
  _cached_size_ = 0;
  userid_ = GOOGLE_LONGLONG(-1);
}

GuildRpcSyncNoticeOfDelMemberNotify::~GuildRpcSyncNoticeOfDelMemberNotify() {
  // @@protoc_insertion_point(destructor:GuildRpcSyncNoticeOfDelMemberNotify)
  SharedDtor();
}

void GuildRpcSyncNoticeOfDelMemberNotify::SharedDtor() {
}

void GuildRpcSyncNoticeOfDelMemberNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcSyncNoticeOfDelMemberNotify::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcSyncNoticeOfDelMemberNotify& GuildRpcSyncNoticeOfDelMemberNotify::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcSyncNoticeOfDelMemberNotify* GuildRpcSyncNoticeOfDelMemberNotify::New(::google::protobuf::Arena* arena) const {
  GuildRpcSyncNoticeOfDelMemberNotify* n = new GuildRpcSyncNoticeOfDelMemberNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcSyncNoticeOfDelMemberNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcSyncNoticeOfDelMemberNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = GOOGLE_LONGLONG(-1);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcSyncNoticeOfDelMemberNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcSyncNoticeOfDelMemberNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 UserId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcSyncNoticeOfDelMemberNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcSyncNoticeOfDelMemberNotify)
  return false;
#undef DO_
}

void GuildRpcSyncNoticeOfDelMemberNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcSyncNoticeOfDelMemberNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcSyncNoticeOfDelMemberNotify)
}

::google::protobuf::uint8* GuildRpcSyncNoticeOfDelMemberNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcSyncNoticeOfDelMemberNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcSyncNoticeOfDelMemberNotify)
  return target;
}

size_t GuildRpcSyncNoticeOfDelMemberNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcSyncNoticeOfDelMemberNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint64 UserId = 1 [default = -1];
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcSyncNoticeOfDelMemberNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcSyncNoticeOfDelMemberNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcSyncNoticeOfDelMemberNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcSyncNoticeOfDelMemberNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcSyncNoticeOfDelMemberNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcSyncNoticeOfDelMemberNotify)
    MergeFrom(*source);
  }
}

void GuildRpcSyncNoticeOfDelMemberNotify::MergeFrom(const GuildRpcSyncNoticeOfDelMemberNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcSyncNoticeOfDelMemberNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void GuildRpcSyncNoticeOfDelMemberNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcSyncNoticeOfDelMemberNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcSyncNoticeOfDelMemberNotify::CopyFrom(const GuildRpcSyncNoticeOfDelMemberNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcSyncNoticeOfDelMemberNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcSyncNoticeOfDelMemberNotify::IsInitialized() const {
  return true;
}

void GuildRpcSyncNoticeOfDelMemberNotify::Swap(GuildRpcSyncNoticeOfDelMemberNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcSyncNoticeOfDelMemberNotify::InternalSwap(GuildRpcSyncNoticeOfDelMemberNotify* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcSyncNoticeOfDelMemberNotify::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcSyncNoticeOfDelMemberNotify

// optional sint64 UserId = 1 [default = -1];
bool GuildRpcSyncNoticeOfDelMemberNotify::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcSyncNoticeOfDelMemberNotify::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcSyncNoticeOfDelMemberNotify::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcSyncNoticeOfDelMemberNotify::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 GuildRpcSyncNoticeOfDelMemberNotify::userid() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfDelMemberNotify.UserId)
  return userid_;
}
void GuildRpcSyncNoticeOfDelMemberNotify::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfDelMemberNotify.UserId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcSyncNoticeOfAddEventNotify::kEventIdFieldNumber;
const int GuildRpcSyncNoticeOfAddEventNotify::kParam1FieldNumber;
const int GuildRpcSyncNoticeOfAddEventNotify::kParam2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcSyncNoticeOfAddEventNotify::GuildRpcSyncNoticeOfAddEventNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcSyncNoticeOfAddEventNotify)
}
GuildRpcSyncNoticeOfAddEventNotify::GuildRpcSyncNoticeOfAddEventNotify(const GuildRpcSyncNoticeOfAddEventNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  param1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_param1()) {
    param1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param1_);
  }
  param2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_param2()) {
    param2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param2_);
  }
  eventid_ = from.eventid_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcSyncNoticeOfAddEventNotify)
}

void GuildRpcSyncNoticeOfAddEventNotify::SharedCtor() {
  _cached_size_ = 0;
  param1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eventid_ = -1;
}

GuildRpcSyncNoticeOfAddEventNotify::~GuildRpcSyncNoticeOfAddEventNotify() {
  // @@protoc_insertion_point(destructor:GuildRpcSyncNoticeOfAddEventNotify)
  SharedDtor();
}

void GuildRpcSyncNoticeOfAddEventNotify::SharedDtor() {
  param1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GuildRpcSyncNoticeOfAddEventNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcSyncNoticeOfAddEventNotify::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcSyncNoticeOfAddEventNotify& GuildRpcSyncNoticeOfAddEventNotify::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcSyncNoticeOfAddEventNotify* GuildRpcSyncNoticeOfAddEventNotify::New(::google::protobuf::Arena* arena) const {
  GuildRpcSyncNoticeOfAddEventNotify* n = new GuildRpcSyncNoticeOfAddEventNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcSyncNoticeOfAddEventNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcSyncNoticeOfAddEventNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!param1_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*param1_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!param2_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*param2_.UnsafeRawStringPointer())->clear();
    }
    eventid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcSyncNoticeOfAddEventNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcSyncNoticeOfAddEventNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 EventId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_eventid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &eventid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Param1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param1().data(), static_cast<int>(this->param1().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildRpcSyncNoticeOfAddEventNotify.Param1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Param2 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param2().data(), static_cast<int>(this->param2().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildRpcSyncNoticeOfAddEventNotify.Param2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcSyncNoticeOfAddEventNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcSyncNoticeOfAddEventNotify)
  return false;
#undef DO_
}

void GuildRpcSyncNoticeOfAddEventNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcSyncNoticeOfAddEventNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 EventId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->eventid(), output);
  }

  // optional string Param1 = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param1().data(), static_cast<int>(this->param1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildRpcSyncNoticeOfAddEventNotify.Param1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->param1(), output);
  }

  // optional string Param2 = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param2().data(), static_cast<int>(this->param2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildRpcSyncNoticeOfAddEventNotify.Param2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->param2(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcSyncNoticeOfAddEventNotify)
}

::google::protobuf::uint8* GuildRpcSyncNoticeOfAddEventNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcSyncNoticeOfAddEventNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 EventId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->eventid(), target);
  }

  // optional string Param1 = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param1().data(), static_cast<int>(this->param1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildRpcSyncNoticeOfAddEventNotify.Param1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->param1(), target);
  }

  // optional string Param2 = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param2().data(), static_cast<int>(this->param2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildRpcSyncNoticeOfAddEventNotify.Param2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->param2(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcSyncNoticeOfAddEventNotify)
  return target;
}

size_t GuildRpcSyncNoticeOfAddEventNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcSyncNoticeOfAddEventNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string Param1 = 3;
    if (has_param1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param1());
    }

    // optional string Param2 = 5;
    if (has_param2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param2());
    }

    // optional sint32 EventId = 2 [default = -1];
    if (has_eventid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->eventid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcSyncNoticeOfAddEventNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcSyncNoticeOfAddEventNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcSyncNoticeOfAddEventNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcSyncNoticeOfAddEventNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcSyncNoticeOfAddEventNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcSyncNoticeOfAddEventNotify)
    MergeFrom(*source);
  }
}

void GuildRpcSyncNoticeOfAddEventNotify::MergeFrom(const GuildRpcSyncNoticeOfAddEventNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcSyncNoticeOfAddEventNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_param1();
      param1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param1_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_param2();
      param2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param2_);
    }
    if (cached_has_bits & 0x00000004u) {
      eventid_ = from.eventid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildRpcSyncNoticeOfAddEventNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcSyncNoticeOfAddEventNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcSyncNoticeOfAddEventNotify::CopyFrom(const GuildRpcSyncNoticeOfAddEventNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcSyncNoticeOfAddEventNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcSyncNoticeOfAddEventNotify::IsInitialized() const {
  return true;
}

void GuildRpcSyncNoticeOfAddEventNotify::Swap(GuildRpcSyncNoticeOfAddEventNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcSyncNoticeOfAddEventNotify::InternalSwap(GuildRpcSyncNoticeOfAddEventNotify* other) {
  using std::swap;
  param1_.Swap(&other->param1_);
  param2_.Swap(&other->param2_);
  swap(eventid_, other->eventid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcSyncNoticeOfAddEventNotify::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcSyncNoticeOfAddEventNotify

// optional sint32 EventId = 2 [default = -1];
bool GuildRpcSyncNoticeOfAddEventNotify::has_eventid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GuildRpcSyncNoticeOfAddEventNotify::set_has_eventid() {
  _has_bits_[0] |= 0x00000004u;
}
void GuildRpcSyncNoticeOfAddEventNotify::clear_has_eventid() {
  _has_bits_[0] &= ~0x00000004u;
}
void GuildRpcSyncNoticeOfAddEventNotify::clear_eventid() {
  eventid_ = -1;
  clear_has_eventid();
}
::google::protobuf::int32 GuildRpcSyncNoticeOfAddEventNotify::eventid() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfAddEventNotify.EventId)
  return eventid_;
}
void GuildRpcSyncNoticeOfAddEventNotify::set_eventid(::google::protobuf::int32 value) {
  set_has_eventid();
  eventid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfAddEventNotify.EventId)
}

// optional string Param1 = 3;
bool GuildRpcSyncNoticeOfAddEventNotify::has_param1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcSyncNoticeOfAddEventNotify::set_has_param1() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcSyncNoticeOfAddEventNotify::clear_has_param1() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcSyncNoticeOfAddEventNotify::clear_param1() {
  param1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param1();
}
const ::std::string& GuildRpcSyncNoticeOfAddEventNotify::param1() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfAddEventNotify.Param1)
  return param1_.GetNoArena();
}
void GuildRpcSyncNoticeOfAddEventNotify::set_param1(const ::std::string& value) {
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfAddEventNotify.Param1)
}
#if LANG_CXX11
void GuildRpcSyncNoticeOfAddEventNotify::set_param1(::std::string&& value) {
  set_has_param1();
  param1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildRpcSyncNoticeOfAddEventNotify.Param1)
}
#endif
void GuildRpcSyncNoticeOfAddEventNotify::set_param1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildRpcSyncNoticeOfAddEventNotify.Param1)
}
void GuildRpcSyncNoticeOfAddEventNotify::set_param1(const char* value, size_t size) {
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildRpcSyncNoticeOfAddEventNotify.Param1)
}
::std::string* GuildRpcSyncNoticeOfAddEventNotify::mutable_param1() {
  set_has_param1();
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncNoticeOfAddEventNotify.Param1)
  return param1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildRpcSyncNoticeOfAddEventNotify::release_param1() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncNoticeOfAddEventNotify.Param1)
  clear_has_param1();
  return param1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildRpcSyncNoticeOfAddEventNotify::set_allocated_param1(::std::string* param1) {
  if (param1 != NULL) {
    set_has_param1();
  } else {
    clear_has_param1();
  }
  param1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param1);
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncNoticeOfAddEventNotify.Param1)
}

// optional string Param2 = 5;
bool GuildRpcSyncNoticeOfAddEventNotify::has_param2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildRpcSyncNoticeOfAddEventNotify::set_has_param2() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildRpcSyncNoticeOfAddEventNotify::clear_has_param2() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildRpcSyncNoticeOfAddEventNotify::clear_param2() {
  param2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param2();
}
const ::std::string& GuildRpcSyncNoticeOfAddEventNotify::param2() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfAddEventNotify.Param2)
  return param2_.GetNoArena();
}
void GuildRpcSyncNoticeOfAddEventNotify::set_param2(const ::std::string& value) {
  set_has_param2();
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfAddEventNotify.Param2)
}
#if LANG_CXX11
void GuildRpcSyncNoticeOfAddEventNotify::set_param2(::std::string&& value) {
  set_has_param2();
  param2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildRpcSyncNoticeOfAddEventNotify.Param2)
}
#endif
void GuildRpcSyncNoticeOfAddEventNotify::set_param2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_param2();
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildRpcSyncNoticeOfAddEventNotify.Param2)
}
void GuildRpcSyncNoticeOfAddEventNotify::set_param2(const char* value, size_t size) {
  set_has_param2();
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildRpcSyncNoticeOfAddEventNotify.Param2)
}
::std::string* GuildRpcSyncNoticeOfAddEventNotify::mutable_param2() {
  set_has_param2();
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncNoticeOfAddEventNotify.Param2)
  return param2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildRpcSyncNoticeOfAddEventNotify::release_param2() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncNoticeOfAddEventNotify.Param2)
  clear_has_param2();
  return param2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildRpcSyncNoticeOfAddEventNotify::set_allocated_param2(::std::string* param2) {
  if (param2 != NULL) {
    set_has_param2();
  } else {
    clear_has_param2();
  }
  param2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param2);
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncNoticeOfAddEventNotify.Param2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcSyncNoticeOfAddApplyListNotify::kApplyPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcSyncNoticeOfAddApplyListNotify::GuildRpcSyncNoticeOfAddApplyListNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcSyncNoticeOfAddApplyListNotify)
}
GuildRpcSyncNoticeOfAddApplyListNotify::GuildRpcSyncNoticeOfAddApplyListNotify(const GuildRpcSyncNoticeOfAddApplyListNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_applyplayer()) {
    applyplayer_ = new ::ApplyListRoleInfoObj(*from.applyplayer_);
  } else {
    applyplayer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:GuildRpcSyncNoticeOfAddApplyListNotify)
}

void GuildRpcSyncNoticeOfAddApplyListNotify::SharedCtor() {
  _cached_size_ = 0;
  applyplayer_ = NULL;
}

GuildRpcSyncNoticeOfAddApplyListNotify::~GuildRpcSyncNoticeOfAddApplyListNotify() {
  // @@protoc_insertion_point(destructor:GuildRpcSyncNoticeOfAddApplyListNotify)
  SharedDtor();
}

void GuildRpcSyncNoticeOfAddApplyListNotify::SharedDtor() {
  if (this != internal_default_instance()) delete applyplayer_;
}

void GuildRpcSyncNoticeOfAddApplyListNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcSyncNoticeOfAddApplyListNotify::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcSyncNoticeOfAddApplyListNotify& GuildRpcSyncNoticeOfAddApplyListNotify::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcSyncNoticeOfAddApplyListNotify* GuildRpcSyncNoticeOfAddApplyListNotify::New(::google::protobuf::Arena* arena) const {
  GuildRpcSyncNoticeOfAddApplyListNotify* n = new GuildRpcSyncNoticeOfAddApplyListNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcSyncNoticeOfAddApplyListNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcSyncNoticeOfAddApplyListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_applyplayer()) {
    GOOGLE_DCHECK(applyplayer_ != NULL);
    applyplayer_->::ApplyListRoleInfoObj::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcSyncNoticeOfAddApplyListNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcSyncNoticeOfAddApplyListNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ApplyListRoleInfoObj ApplyPlayer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_applyplayer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcSyncNoticeOfAddApplyListNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcSyncNoticeOfAddApplyListNotify)
  return false;
#undef DO_
}

void GuildRpcSyncNoticeOfAddApplyListNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcSyncNoticeOfAddApplyListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ApplyListRoleInfoObj ApplyPlayer = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->applyplayer_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcSyncNoticeOfAddApplyListNotify)
}

::google::protobuf::uint8* GuildRpcSyncNoticeOfAddApplyListNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcSyncNoticeOfAddApplyListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ApplyListRoleInfoObj ApplyPlayer = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->applyplayer_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcSyncNoticeOfAddApplyListNotify)
  return target;
}

size_t GuildRpcSyncNoticeOfAddApplyListNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcSyncNoticeOfAddApplyListNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .ApplyListRoleInfoObj ApplyPlayer = 2;
  if (has_applyplayer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->applyplayer_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcSyncNoticeOfAddApplyListNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcSyncNoticeOfAddApplyListNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcSyncNoticeOfAddApplyListNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcSyncNoticeOfAddApplyListNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcSyncNoticeOfAddApplyListNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcSyncNoticeOfAddApplyListNotify)
    MergeFrom(*source);
  }
}

void GuildRpcSyncNoticeOfAddApplyListNotify::MergeFrom(const GuildRpcSyncNoticeOfAddApplyListNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcSyncNoticeOfAddApplyListNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_applyplayer()) {
    mutable_applyplayer()->::ApplyListRoleInfoObj::MergeFrom(from.applyplayer());
  }
}

void GuildRpcSyncNoticeOfAddApplyListNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcSyncNoticeOfAddApplyListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcSyncNoticeOfAddApplyListNotify::CopyFrom(const GuildRpcSyncNoticeOfAddApplyListNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcSyncNoticeOfAddApplyListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcSyncNoticeOfAddApplyListNotify::IsInitialized() const {
  return true;
}

void GuildRpcSyncNoticeOfAddApplyListNotify::Swap(GuildRpcSyncNoticeOfAddApplyListNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcSyncNoticeOfAddApplyListNotify::InternalSwap(GuildRpcSyncNoticeOfAddApplyListNotify* other) {
  using std::swap;
  swap(applyplayer_, other->applyplayer_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcSyncNoticeOfAddApplyListNotify::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcSyncNoticeOfAddApplyListNotify

// optional .ApplyListRoleInfoObj ApplyPlayer = 2;
bool GuildRpcSyncNoticeOfAddApplyListNotify::has_applyplayer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcSyncNoticeOfAddApplyListNotify::set_has_applyplayer() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcSyncNoticeOfAddApplyListNotify::clear_has_applyplayer() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcSyncNoticeOfAddApplyListNotify::clear_applyplayer() {
  if (applyplayer_ != NULL) applyplayer_->::ApplyListRoleInfoObj::Clear();
  clear_has_applyplayer();
}
const ::ApplyListRoleInfoObj& GuildRpcSyncNoticeOfAddApplyListNotify::applyplayer() const {
  const ::ApplyListRoleInfoObj* p = applyplayer_;
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfAddApplyListNotify.ApplyPlayer)
  return p != NULL ? *p : *reinterpret_cast<const ::ApplyListRoleInfoObj*>(
      &::_ApplyListRoleInfoObj_default_instance_);
}
::ApplyListRoleInfoObj* GuildRpcSyncNoticeOfAddApplyListNotify::mutable_applyplayer() {
  set_has_applyplayer();
  if (applyplayer_ == NULL) {
    applyplayer_ = new ::ApplyListRoleInfoObj;
  }
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncNoticeOfAddApplyListNotify.ApplyPlayer)
  return applyplayer_;
}
::ApplyListRoleInfoObj* GuildRpcSyncNoticeOfAddApplyListNotify::release_applyplayer() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncNoticeOfAddApplyListNotify.ApplyPlayer)
  clear_has_applyplayer();
  ::ApplyListRoleInfoObj* temp = applyplayer_;
  applyplayer_ = NULL;
  return temp;
}
void GuildRpcSyncNoticeOfAddApplyListNotify::set_allocated_applyplayer(::ApplyListRoleInfoObj* applyplayer) {
  delete applyplayer_;
  applyplayer_ = applyplayer;
  if (applyplayer) {
    set_has_applyplayer();
  } else {
    clear_has_applyplayer();
  }
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncNoticeOfAddApplyListNotify.ApplyPlayer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcSyncNoticeOfDelApplyListNotify::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcSyncNoticeOfDelApplyListNotify::GuildRpcSyncNoticeOfDelApplyListNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcSyncNoticeOfDelApplyListNotify)
}
GuildRpcSyncNoticeOfDelApplyListNotify::GuildRpcSyncNoticeOfDelApplyListNotify(const GuildRpcSyncNoticeOfDelApplyListNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcSyncNoticeOfDelApplyListNotify)
}

void GuildRpcSyncNoticeOfDelApplyListNotify::SharedCtor() {
  _cached_size_ = 0;
  userid_ = GOOGLE_LONGLONG(-1);
}

GuildRpcSyncNoticeOfDelApplyListNotify::~GuildRpcSyncNoticeOfDelApplyListNotify() {
  // @@protoc_insertion_point(destructor:GuildRpcSyncNoticeOfDelApplyListNotify)
  SharedDtor();
}

void GuildRpcSyncNoticeOfDelApplyListNotify::SharedDtor() {
}

void GuildRpcSyncNoticeOfDelApplyListNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcSyncNoticeOfDelApplyListNotify::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcSyncNoticeOfDelApplyListNotify& GuildRpcSyncNoticeOfDelApplyListNotify::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcSyncNoticeOfDelApplyListNotify* GuildRpcSyncNoticeOfDelApplyListNotify::New(::google::protobuf::Arena* arena) const {
  GuildRpcSyncNoticeOfDelApplyListNotify* n = new GuildRpcSyncNoticeOfDelApplyListNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcSyncNoticeOfDelApplyListNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcSyncNoticeOfDelApplyListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = GOOGLE_LONGLONG(-1);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcSyncNoticeOfDelApplyListNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcSyncNoticeOfDelApplyListNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 UserId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcSyncNoticeOfDelApplyListNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcSyncNoticeOfDelApplyListNotify)
  return false;
#undef DO_
}

void GuildRpcSyncNoticeOfDelApplyListNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcSyncNoticeOfDelApplyListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcSyncNoticeOfDelApplyListNotify)
}

::google::protobuf::uint8* GuildRpcSyncNoticeOfDelApplyListNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcSyncNoticeOfDelApplyListNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcSyncNoticeOfDelApplyListNotify)
  return target;
}

size_t GuildRpcSyncNoticeOfDelApplyListNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcSyncNoticeOfDelApplyListNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint64 UserId = 1 [default = -1];
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcSyncNoticeOfDelApplyListNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcSyncNoticeOfDelApplyListNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcSyncNoticeOfDelApplyListNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcSyncNoticeOfDelApplyListNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcSyncNoticeOfDelApplyListNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcSyncNoticeOfDelApplyListNotify)
    MergeFrom(*source);
  }
}

void GuildRpcSyncNoticeOfDelApplyListNotify::MergeFrom(const GuildRpcSyncNoticeOfDelApplyListNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcSyncNoticeOfDelApplyListNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void GuildRpcSyncNoticeOfDelApplyListNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcSyncNoticeOfDelApplyListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcSyncNoticeOfDelApplyListNotify::CopyFrom(const GuildRpcSyncNoticeOfDelApplyListNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcSyncNoticeOfDelApplyListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcSyncNoticeOfDelApplyListNotify::IsInitialized() const {
  return true;
}

void GuildRpcSyncNoticeOfDelApplyListNotify::Swap(GuildRpcSyncNoticeOfDelApplyListNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcSyncNoticeOfDelApplyListNotify::InternalSwap(GuildRpcSyncNoticeOfDelApplyListNotify* other) {
  using std::swap;
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcSyncNoticeOfDelApplyListNotify::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcSyncNoticeOfDelApplyListNotify

// optional sint64 UserId = 1 [default = -1];
bool GuildRpcSyncNoticeOfDelApplyListNotify::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcSyncNoticeOfDelApplyListNotify::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcSyncNoticeOfDelApplyListNotify::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcSyncNoticeOfDelApplyListNotify::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 GuildRpcSyncNoticeOfDelApplyListNotify::userid() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfDelApplyListNotify.UserId)
  return userid_;
}
void GuildRpcSyncNoticeOfDelApplyListNotify::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfDelApplyListNotify.UserId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcSyncNoticeOfChangeAnnouncementNotify::kAnnouncementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcSyncNoticeOfChangeAnnouncementNotify::GuildRpcSyncNoticeOfChangeAnnouncementNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcSyncNoticeOfChangeAnnouncementNotify)
}
GuildRpcSyncNoticeOfChangeAnnouncementNotify::GuildRpcSyncNoticeOfChangeAnnouncementNotify(const GuildRpcSyncNoticeOfChangeAnnouncementNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  announcement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_announcement()) {
    announcement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.announcement_);
  }
  // @@protoc_insertion_point(copy_constructor:GuildRpcSyncNoticeOfChangeAnnouncementNotify)
}

void GuildRpcSyncNoticeOfChangeAnnouncementNotify::SharedCtor() {
  _cached_size_ = 0;
  announcement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GuildRpcSyncNoticeOfChangeAnnouncementNotify::~GuildRpcSyncNoticeOfChangeAnnouncementNotify() {
  // @@protoc_insertion_point(destructor:GuildRpcSyncNoticeOfChangeAnnouncementNotify)
  SharedDtor();
}

void GuildRpcSyncNoticeOfChangeAnnouncementNotify::SharedDtor() {
  announcement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GuildRpcSyncNoticeOfChangeAnnouncementNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcSyncNoticeOfChangeAnnouncementNotify::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcSyncNoticeOfChangeAnnouncementNotify& GuildRpcSyncNoticeOfChangeAnnouncementNotify::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcSyncNoticeOfChangeAnnouncementNotify* GuildRpcSyncNoticeOfChangeAnnouncementNotify::New(::google::protobuf::Arena* arena) const {
  GuildRpcSyncNoticeOfChangeAnnouncementNotify* n = new GuildRpcSyncNoticeOfChangeAnnouncementNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcSyncNoticeOfChangeAnnouncementNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcSyncNoticeOfChangeAnnouncementNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_announcement()) {
    GOOGLE_DCHECK(!announcement_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*announcement_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcSyncNoticeOfChangeAnnouncementNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcSyncNoticeOfChangeAnnouncementNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Announcement = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_announcement()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->announcement().data(), static_cast<int>(this->announcement().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildRpcSyncNoticeOfChangeAnnouncementNotify.Announcement");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcSyncNoticeOfChangeAnnouncementNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcSyncNoticeOfChangeAnnouncementNotify)
  return false;
#undef DO_
}

void GuildRpcSyncNoticeOfChangeAnnouncementNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcSyncNoticeOfChangeAnnouncementNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Announcement = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->announcement().data(), static_cast<int>(this->announcement().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildRpcSyncNoticeOfChangeAnnouncementNotify.Announcement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->announcement(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcSyncNoticeOfChangeAnnouncementNotify)
}

::google::protobuf::uint8* GuildRpcSyncNoticeOfChangeAnnouncementNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcSyncNoticeOfChangeAnnouncementNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Announcement = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->announcement().data(), static_cast<int>(this->announcement().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildRpcSyncNoticeOfChangeAnnouncementNotify.Announcement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->announcement(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcSyncNoticeOfChangeAnnouncementNotify)
  return target;
}

size_t GuildRpcSyncNoticeOfChangeAnnouncementNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcSyncNoticeOfChangeAnnouncementNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string Announcement = 1;
  if (has_announcement()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->announcement());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcSyncNoticeOfChangeAnnouncementNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcSyncNoticeOfChangeAnnouncementNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcSyncNoticeOfChangeAnnouncementNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcSyncNoticeOfChangeAnnouncementNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcSyncNoticeOfChangeAnnouncementNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcSyncNoticeOfChangeAnnouncementNotify)
    MergeFrom(*source);
  }
}

void GuildRpcSyncNoticeOfChangeAnnouncementNotify::MergeFrom(const GuildRpcSyncNoticeOfChangeAnnouncementNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcSyncNoticeOfChangeAnnouncementNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_announcement()) {
    set_has_announcement();
    announcement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.announcement_);
  }
}

void GuildRpcSyncNoticeOfChangeAnnouncementNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcSyncNoticeOfChangeAnnouncementNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcSyncNoticeOfChangeAnnouncementNotify::CopyFrom(const GuildRpcSyncNoticeOfChangeAnnouncementNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcSyncNoticeOfChangeAnnouncementNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcSyncNoticeOfChangeAnnouncementNotify::IsInitialized() const {
  return true;
}

void GuildRpcSyncNoticeOfChangeAnnouncementNotify::Swap(GuildRpcSyncNoticeOfChangeAnnouncementNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcSyncNoticeOfChangeAnnouncementNotify::InternalSwap(GuildRpcSyncNoticeOfChangeAnnouncementNotify* other) {
  using std::swap;
  announcement_.Swap(&other->announcement_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcSyncNoticeOfChangeAnnouncementNotify::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcSyncNoticeOfChangeAnnouncementNotify

// optional string Announcement = 1;
bool GuildRpcSyncNoticeOfChangeAnnouncementNotify::has_announcement() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcSyncNoticeOfChangeAnnouncementNotify::set_has_announcement() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcSyncNoticeOfChangeAnnouncementNotify::clear_has_announcement() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcSyncNoticeOfChangeAnnouncementNotify::clear_announcement() {
  announcement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_announcement();
}
const ::std::string& GuildRpcSyncNoticeOfChangeAnnouncementNotify::announcement() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfChangeAnnouncementNotify.Announcement)
  return announcement_.GetNoArena();
}
void GuildRpcSyncNoticeOfChangeAnnouncementNotify::set_announcement(const ::std::string& value) {
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfChangeAnnouncementNotify.Announcement)
}
#if LANG_CXX11
void GuildRpcSyncNoticeOfChangeAnnouncementNotify::set_announcement(::std::string&& value) {
  set_has_announcement();
  announcement_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildRpcSyncNoticeOfChangeAnnouncementNotify.Announcement)
}
#endif
void GuildRpcSyncNoticeOfChangeAnnouncementNotify::set_announcement(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildRpcSyncNoticeOfChangeAnnouncementNotify.Announcement)
}
void GuildRpcSyncNoticeOfChangeAnnouncementNotify::set_announcement(const char* value, size_t size) {
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildRpcSyncNoticeOfChangeAnnouncementNotify.Announcement)
}
::std::string* GuildRpcSyncNoticeOfChangeAnnouncementNotify::mutable_announcement() {
  set_has_announcement();
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncNoticeOfChangeAnnouncementNotify.Announcement)
  return announcement_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildRpcSyncNoticeOfChangeAnnouncementNotify::release_announcement() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncNoticeOfChangeAnnouncementNotify.Announcement)
  clear_has_announcement();
  return announcement_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildRpcSyncNoticeOfChangeAnnouncementNotify::set_allocated_announcement(::std::string* announcement) {
  if (announcement != NULL) {
    set_has_announcement();
  } else {
    clear_has_announcement();
  }
  announcement_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), announcement);
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncNoticeOfChangeAnnouncementNotify.Announcement)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcSyncNoticeOfBreakupNotify::GuildRpcSyncNoticeOfBreakupNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcSyncNoticeOfBreakupNotify)
}
GuildRpcSyncNoticeOfBreakupNotify::GuildRpcSyncNoticeOfBreakupNotify(const GuildRpcSyncNoticeOfBreakupNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GuildRpcSyncNoticeOfBreakupNotify)
}

void GuildRpcSyncNoticeOfBreakupNotify::SharedCtor() {
  _cached_size_ = 0;
}

GuildRpcSyncNoticeOfBreakupNotify::~GuildRpcSyncNoticeOfBreakupNotify() {
  // @@protoc_insertion_point(destructor:GuildRpcSyncNoticeOfBreakupNotify)
  SharedDtor();
}

void GuildRpcSyncNoticeOfBreakupNotify::SharedDtor() {
}

void GuildRpcSyncNoticeOfBreakupNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcSyncNoticeOfBreakupNotify::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcSyncNoticeOfBreakupNotify& GuildRpcSyncNoticeOfBreakupNotify::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcSyncNoticeOfBreakupNotify* GuildRpcSyncNoticeOfBreakupNotify::New(::google::protobuf::Arena* arena) const {
  GuildRpcSyncNoticeOfBreakupNotify* n = new GuildRpcSyncNoticeOfBreakupNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcSyncNoticeOfBreakupNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcSyncNoticeOfBreakupNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcSyncNoticeOfBreakupNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcSyncNoticeOfBreakupNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcSyncNoticeOfBreakupNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcSyncNoticeOfBreakupNotify)
  return false;
#undef DO_
}

void GuildRpcSyncNoticeOfBreakupNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcSyncNoticeOfBreakupNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcSyncNoticeOfBreakupNotify)
}

::google::protobuf::uint8* GuildRpcSyncNoticeOfBreakupNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcSyncNoticeOfBreakupNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcSyncNoticeOfBreakupNotify)
  return target;
}

size_t GuildRpcSyncNoticeOfBreakupNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcSyncNoticeOfBreakupNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcSyncNoticeOfBreakupNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcSyncNoticeOfBreakupNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcSyncNoticeOfBreakupNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcSyncNoticeOfBreakupNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcSyncNoticeOfBreakupNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcSyncNoticeOfBreakupNotify)
    MergeFrom(*source);
  }
}

void GuildRpcSyncNoticeOfBreakupNotify::MergeFrom(const GuildRpcSyncNoticeOfBreakupNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcSyncNoticeOfBreakupNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GuildRpcSyncNoticeOfBreakupNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcSyncNoticeOfBreakupNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcSyncNoticeOfBreakupNotify::CopyFrom(const GuildRpcSyncNoticeOfBreakupNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcSyncNoticeOfBreakupNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcSyncNoticeOfBreakupNotify::IsInitialized() const {
  return true;
}

void GuildRpcSyncNoticeOfBreakupNotify::Swap(GuildRpcSyncNoticeOfBreakupNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcSyncNoticeOfBreakupNotify::InternalSwap(GuildRpcSyncNoticeOfBreakupNotify* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcSyncNoticeOfBreakupNotify::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcSyncNoticeOfBreakupNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcHallLvUpAsk::GuildRpcHallLvUpAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcHallLvUpAsk)
}
GuildRpcHallLvUpAsk::GuildRpcHallLvUpAsk(const GuildRpcHallLvUpAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GuildRpcHallLvUpAsk)
}

void GuildRpcHallLvUpAsk::SharedCtor() {
  _cached_size_ = 0;
}

GuildRpcHallLvUpAsk::~GuildRpcHallLvUpAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcHallLvUpAsk)
  SharedDtor();
}

void GuildRpcHallLvUpAsk::SharedDtor() {
}

void GuildRpcHallLvUpAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcHallLvUpAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcHallLvUpAsk& GuildRpcHallLvUpAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcHallLvUpAsk* GuildRpcHallLvUpAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcHallLvUpAsk* n = new GuildRpcHallLvUpAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcHallLvUpAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcHallLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcHallLvUpAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcHallLvUpAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcHallLvUpAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcHallLvUpAsk)
  return false;
#undef DO_
}

void GuildRpcHallLvUpAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcHallLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcHallLvUpAsk)
}

::google::protobuf::uint8* GuildRpcHallLvUpAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcHallLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcHallLvUpAsk)
  return target;
}

size_t GuildRpcHallLvUpAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcHallLvUpAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcHallLvUpAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcHallLvUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcHallLvUpAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcHallLvUpAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcHallLvUpAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcHallLvUpAsk)
    MergeFrom(*source);
  }
}

void GuildRpcHallLvUpAsk::MergeFrom(const GuildRpcHallLvUpAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcHallLvUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GuildRpcHallLvUpAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcHallLvUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcHallLvUpAsk::CopyFrom(const GuildRpcHallLvUpAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcHallLvUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcHallLvUpAsk::IsInitialized() const {
  return true;
}

void GuildRpcHallLvUpAsk::Swap(GuildRpcHallLvUpAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcHallLvUpAsk::InternalSwap(GuildRpcHallLvUpAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcHallLvUpAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcHallLvUpAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcHallLvUpReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcHallLvUpReply::GuildRpcHallLvUpReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcHallLvUpReply)
}
GuildRpcHallLvUpReply::GuildRpcHallLvUpReply(const GuildRpcHallLvUpReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcHallLvUpReply)
}

void GuildRpcHallLvUpReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcHallLvUpReply::~GuildRpcHallLvUpReply() {
  // @@protoc_insertion_point(destructor:GuildRpcHallLvUpReply)
  SharedDtor();
}

void GuildRpcHallLvUpReply::SharedDtor() {
}

void GuildRpcHallLvUpReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcHallLvUpReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcHallLvUpReply& GuildRpcHallLvUpReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcHallLvUpReply* GuildRpcHallLvUpReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcHallLvUpReply* n = new GuildRpcHallLvUpReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcHallLvUpReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcHallLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcHallLvUpReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcHallLvUpReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcHallLvUpReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcHallLvUpReply)
  return false;
#undef DO_
}

void GuildRpcHallLvUpReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcHallLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcHallLvUpReply)
}

::google::protobuf::uint8* GuildRpcHallLvUpReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcHallLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcHallLvUpReply)
  return target;
}

size_t GuildRpcHallLvUpReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcHallLvUpReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcHallLvUpReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcHallLvUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcHallLvUpReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcHallLvUpReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcHallLvUpReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcHallLvUpReply)
    MergeFrom(*source);
  }
}

void GuildRpcHallLvUpReply::MergeFrom(const GuildRpcHallLvUpReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcHallLvUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcHallLvUpReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcHallLvUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcHallLvUpReply::CopyFrom(const GuildRpcHallLvUpReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcHallLvUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcHallLvUpReply::IsInitialized() const {
  return true;
}

void GuildRpcHallLvUpReply::Swap(GuildRpcHallLvUpReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcHallLvUpReply::InternalSwap(GuildRpcHallLvUpReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcHallLvUpReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcHallLvUpReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcHallLvUpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcHallLvUpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcHallLvUpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcHallLvUpReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcHallLvUpReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcHallLvUpReply.Result)
  return result_;
}
void GuildRpcHallLvUpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcHallLvUpReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcHouseLvUpAsk::GuildRpcHouseLvUpAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcHouseLvUpAsk)
}
GuildRpcHouseLvUpAsk::GuildRpcHouseLvUpAsk(const GuildRpcHouseLvUpAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GuildRpcHouseLvUpAsk)
}

void GuildRpcHouseLvUpAsk::SharedCtor() {
  _cached_size_ = 0;
}

GuildRpcHouseLvUpAsk::~GuildRpcHouseLvUpAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcHouseLvUpAsk)
  SharedDtor();
}

void GuildRpcHouseLvUpAsk::SharedDtor() {
}

void GuildRpcHouseLvUpAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcHouseLvUpAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcHouseLvUpAsk& GuildRpcHouseLvUpAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcHouseLvUpAsk* GuildRpcHouseLvUpAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcHouseLvUpAsk* n = new GuildRpcHouseLvUpAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcHouseLvUpAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcHouseLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcHouseLvUpAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcHouseLvUpAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcHouseLvUpAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcHouseLvUpAsk)
  return false;
#undef DO_
}

void GuildRpcHouseLvUpAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcHouseLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcHouseLvUpAsk)
}

::google::protobuf::uint8* GuildRpcHouseLvUpAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcHouseLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcHouseLvUpAsk)
  return target;
}

size_t GuildRpcHouseLvUpAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcHouseLvUpAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcHouseLvUpAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcHouseLvUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcHouseLvUpAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcHouseLvUpAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcHouseLvUpAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcHouseLvUpAsk)
    MergeFrom(*source);
  }
}

void GuildRpcHouseLvUpAsk::MergeFrom(const GuildRpcHouseLvUpAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcHouseLvUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GuildRpcHouseLvUpAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcHouseLvUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcHouseLvUpAsk::CopyFrom(const GuildRpcHouseLvUpAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcHouseLvUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcHouseLvUpAsk::IsInitialized() const {
  return true;
}

void GuildRpcHouseLvUpAsk::Swap(GuildRpcHouseLvUpAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcHouseLvUpAsk::InternalSwap(GuildRpcHouseLvUpAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcHouseLvUpAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcHouseLvUpAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcHouseLvUpReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcHouseLvUpReply::GuildRpcHouseLvUpReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcHouseLvUpReply)
}
GuildRpcHouseLvUpReply::GuildRpcHouseLvUpReply(const GuildRpcHouseLvUpReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcHouseLvUpReply)
}

void GuildRpcHouseLvUpReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcHouseLvUpReply::~GuildRpcHouseLvUpReply() {
  // @@protoc_insertion_point(destructor:GuildRpcHouseLvUpReply)
  SharedDtor();
}

void GuildRpcHouseLvUpReply::SharedDtor() {
}

void GuildRpcHouseLvUpReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcHouseLvUpReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcHouseLvUpReply& GuildRpcHouseLvUpReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcHouseLvUpReply* GuildRpcHouseLvUpReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcHouseLvUpReply* n = new GuildRpcHouseLvUpReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcHouseLvUpReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcHouseLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcHouseLvUpReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcHouseLvUpReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcHouseLvUpReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcHouseLvUpReply)
  return false;
#undef DO_
}

void GuildRpcHouseLvUpReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcHouseLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcHouseLvUpReply)
}

::google::protobuf::uint8* GuildRpcHouseLvUpReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcHouseLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcHouseLvUpReply)
  return target;
}

size_t GuildRpcHouseLvUpReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcHouseLvUpReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcHouseLvUpReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcHouseLvUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcHouseLvUpReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcHouseLvUpReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcHouseLvUpReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcHouseLvUpReply)
    MergeFrom(*source);
  }
}

void GuildRpcHouseLvUpReply::MergeFrom(const GuildRpcHouseLvUpReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcHouseLvUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcHouseLvUpReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcHouseLvUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcHouseLvUpReply::CopyFrom(const GuildRpcHouseLvUpReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcHouseLvUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcHouseLvUpReply::IsInitialized() const {
  return true;
}

void GuildRpcHouseLvUpReply::Swap(GuildRpcHouseLvUpReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcHouseLvUpReply::InternalSwap(GuildRpcHouseLvUpReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcHouseLvUpReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcHouseLvUpReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcHouseLvUpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcHouseLvUpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcHouseLvUpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcHouseLvUpReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcHouseLvUpReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcHouseLvUpReply.Result)
  return result_;
}
void GuildRpcHouseLvUpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcHouseLvUpReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcStoreroomLvUpAsk::GuildRpcStoreroomLvUpAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcStoreroomLvUpAsk)
}
GuildRpcStoreroomLvUpAsk::GuildRpcStoreroomLvUpAsk(const GuildRpcStoreroomLvUpAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GuildRpcStoreroomLvUpAsk)
}

void GuildRpcStoreroomLvUpAsk::SharedCtor() {
  _cached_size_ = 0;
}

GuildRpcStoreroomLvUpAsk::~GuildRpcStoreroomLvUpAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcStoreroomLvUpAsk)
  SharedDtor();
}

void GuildRpcStoreroomLvUpAsk::SharedDtor() {
}

void GuildRpcStoreroomLvUpAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcStoreroomLvUpAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcStoreroomLvUpAsk& GuildRpcStoreroomLvUpAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcStoreroomLvUpAsk* GuildRpcStoreroomLvUpAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcStoreroomLvUpAsk* n = new GuildRpcStoreroomLvUpAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcStoreroomLvUpAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcStoreroomLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcStoreroomLvUpAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcStoreroomLvUpAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcStoreroomLvUpAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcStoreroomLvUpAsk)
  return false;
#undef DO_
}

void GuildRpcStoreroomLvUpAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcStoreroomLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcStoreroomLvUpAsk)
}

::google::protobuf::uint8* GuildRpcStoreroomLvUpAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcStoreroomLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcStoreroomLvUpAsk)
  return target;
}

size_t GuildRpcStoreroomLvUpAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcStoreroomLvUpAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcStoreroomLvUpAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcStoreroomLvUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcStoreroomLvUpAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcStoreroomLvUpAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcStoreroomLvUpAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcStoreroomLvUpAsk)
    MergeFrom(*source);
  }
}

void GuildRpcStoreroomLvUpAsk::MergeFrom(const GuildRpcStoreroomLvUpAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcStoreroomLvUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GuildRpcStoreroomLvUpAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcStoreroomLvUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcStoreroomLvUpAsk::CopyFrom(const GuildRpcStoreroomLvUpAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcStoreroomLvUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcStoreroomLvUpAsk::IsInitialized() const {
  return true;
}

void GuildRpcStoreroomLvUpAsk::Swap(GuildRpcStoreroomLvUpAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcStoreroomLvUpAsk::InternalSwap(GuildRpcStoreroomLvUpAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcStoreroomLvUpAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcStoreroomLvUpAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcStoreroomLvUpReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcStoreroomLvUpReply::GuildRpcStoreroomLvUpReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcStoreroomLvUpReply)
}
GuildRpcStoreroomLvUpReply::GuildRpcStoreroomLvUpReply(const GuildRpcStoreroomLvUpReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcStoreroomLvUpReply)
}

void GuildRpcStoreroomLvUpReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcStoreroomLvUpReply::~GuildRpcStoreroomLvUpReply() {
  // @@protoc_insertion_point(destructor:GuildRpcStoreroomLvUpReply)
  SharedDtor();
}

void GuildRpcStoreroomLvUpReply::SharedDtor() {
}

void GuildRpcStoreroomLvUpReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcStoreroomLvUpReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcStoreroomLvUpReply& GuildRpcStoreroomLvUpReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcStoreroomLvUpReply* GuildRpcStoreroomLvUpReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcStoreroomLvUpReply* n = new GuildRpcStoreroomLvUpReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcStoreroomLvUpReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcStoreroomLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcStoreroomLvUpReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcStoreroomLvUpReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcStoreroomLvUpReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcStoreroomLvUpReply)
  return false;
#undef DO_
}

void GuildRpcStoreroomLvUpReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcStoreroomLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcStoreroomLvUpReply)
}

::google::protobuf::uint8* GuildRpcStoreroomLvUpReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcStoreroomLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcStoreroomLvUpReply)
  return target;
}

size_t GuildRpcStoreroomLvUpReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcStoreroomLvUpReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcStoreroomLvUpReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcStoreroomLvUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcStoreroomLvUpReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcStoreroomLvUpReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcStoreroomLvUpReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcStoreroomLvUpReply)
    MergeFrom(*source);
  }
}

void GuildRpcStoreroomLvUpReply::MergeFrom(const GuildRpcStoreroomLvUpReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcStoreroomLvUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcStoreroomLvUpReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcStoreroomLvUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcStoreroomLvUpReply::CopyFrom(const GuildRpcStoreroomLvUpReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcStoreroomLvUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcStoreroomLvUpReply::IsInitialized() const {
  return true;
}

void GuildRpcStoreroomLvUpReply::Swap(GuildRpcStoreroomLvUpReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcStoreroomLvUpReply::InternalSwap(GuildRpcStoreroomLvUpReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcStoreroomLvUpReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcStoreroomLvUpReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcStoreroomLvUpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcStoreroomLvUpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcStoreroomLvUpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcStoreroomLvUpReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcStoreroomLvUpReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcStoreroomLvUpReply.Result)
  return result_;
}
void GuildRpcStoreroomLvUpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcStoreroomLvUpReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcKongfuHallLvUpAsk::GuildRpcKongfuHallLvUpAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcKongfuHallLvUpAsk)
}
GuildRpcKongfuHallLvUpAsk::GuildRpcKongfuHallLvUpAsk(const GuildRpcKongfuHallLvUpAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GuildRpcKongfuHallLvUpAsk)
}

void GuildRpcKongfuHallLvUpAsk::SharedCtor() {
  _cached_size_ = 0;
}

GuildRpcKongfuHallLvUpAsk::~GuildRpcKongfuHallLvUpAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcKongfuHallLvUpAsk)
  SharedDtor();
}

void GuildRpcKongfuHallLvUpAsk::SharedDtor() {
}

void GuildRpcKongfuHallLvUpAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcKongfuHallLvUpAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcKongfuHallLvUpAsk& GuildRpcKongfuHallLvUpAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcKongfuHallLvUpAsk* GuildRpcKongfuHallLvUpAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcKongfuHallLvUpAsk* n = new GuildRpcKongfuHallLvUpAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcKongfuHallLvUpAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcKongfuHallLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcKongfuHallLvUpAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcKongfuHallLvUpAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcKongfuHallLvUpAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcKongfuHallLvUpAsk)
  return false;
#undef DO_
}

void GuildRpcKongfuHallLvUpAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcKongfuHallLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcKongfuHallLvUpAsk)
}

::google::protobuf::uint8* GuildRpcKongfuHallLvUpAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcKongfuHallLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcKongfuHallLvUpAsk)
  return target;
}

size_t GuildRpcKongfuHallLvUpAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcKongfuHallLvUpAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcKongfuHallLvUpAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcKongfuHallLvUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcKongfuHallLvUpAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcKongfuHallLvUpAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcKongfuHallLvUpAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcKongfuHallLvUpAsk)
    MergeFrom(*source);
  }
}

void GuildRpcKongfuHallLvUpAsk::MergeFrom(const GuildRpcKongfuHallLvUpAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcKongfuHallLvUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GuildRpcKongfuHallLvUpAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcKongfuHallLvUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcKongfuHallLvUpAsk::CopyFrom(const GuildRpcKongfuHallLvUpAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcKongfuHallLvUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcKongfuHallLvUpAsk::IsInitialized() const {
  return true;
}

void GuildRpcKongfuHallLvUpAsk::Swap(GuildRpcKongfuHallLvUpAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcKongfuHallLvUpAsk::InternalSwap(GuildRpcKongfuHallLvUpAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcKongfuHallLvUpAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcKongfuHallLvUpAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcKongfuHallLvUpReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcKongfuHallLvUpReply::GuildRpcKongfuHallLvUpReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcKongfuHallLvUpReply)
}
GuildRpcKongfuHallLvUpReply::GuildRpcKongfuHallLvUpReply(const GuildRpcKongfuHallLvUpReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcKongfuHallLvUpReply)
}

void GuildRpcKongfuHallLvUpReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcKongfuHallLvUpReply::~GuildRpcKongfuHallLvUpReply() {
  // @@protoc_insertion_point(destructor:GuildRpcKongfuHallLvUpReply)
  SharedDtor();
}

void GuildRpcKongfuHallLvUpReply::SharedDtor() {
}

void GuildRpcKongfuHallLvUpReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcKongfuHallLvUpReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcKongfuHallLvUpReply& GuildRpcKongfuHallLvUpReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcKongfuHallLvUpReply* GuildRpcKongfuHallLvUpReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcKongfuHallLvUpReply* n = new GuildRpcKongfuHallLvUpReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcKongfuHallLvUpReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcKongfuHallLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcKongfuHallLvUpReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcKongfuHallLvUpReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcKongfuHallLvUpReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcKongfuHallLvUpReply)
  return false;
#undef DO_
}

void GuildRpcKongfuHallLvUpReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcKongfuHallLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcKongfuHallLvUpReply)
}

::google::protobuf::uint8* GuildRpcKongfuHallLvUpReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcKongfuHallLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcKongfuHallLvUpReply)
  return target;
}

size_t GuildRpcKongfuHallLvUpReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcKongfuHallLvUpReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcKongfuHallLvUpReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcKongfuHallLvUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcKongfuHallLvUpReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcKongfuHallLvUpReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcKongfuHallLvUpReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcKongfuHallLvUpReply)
    MergeFrom(*source);
  }
}

void GuildRpcKongfuHallLvUpReply::MergeFrom(const GuildRpcKongfuHallLvUpReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcKongfuHallLvUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcKongfuHallLvUpReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcKongfuHallLvUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcKongfuHallLvUpReply::CopyFrom(const GuildRpcKongfuHallLvUpReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcKongfuHallLvUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcKongfuHallLvUpReply::IsInitialized() const {
  return true;
}

void GuildRpcKongfuHallLvUpReply::Swap(GuildRpcKongfuHallLvUpReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcKongfuHallLvUpReply::InternalSwap(GuildRpcKongfuHallLvUpReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcKongfuHallLvUpReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcKongfuHallLvUpReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcKongfuHallLvUpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcKongfuHallLvUpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcKongfuHallLvUpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcKongfuHallLvUpReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcKongfuHallLvUpReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcKongfuHallLvUpReply.Result)
  return result_;
}
void GuildRpcKongfuHallLvUpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcKongfuHallLvUpReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcSyncNoticeOfHallLvUpNotify::kLvFieldNumber;
const int GuildRpcSyncNoticeOfHallLvUpNotify::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcSyncNoticeOfHallLvUpNotify::GuildRpcSyncNoticeOfHallLvUpNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcSyncNoticeOfHallLvUpNotify)
}
GuildRpcSyncNoticeOfHallLvUpNotify::GuildRpcSyncNoticeOfHallLvUpNotify(const GuildRpcSyncNoticeOfHallLvUpNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lv_, &from.lv_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&lv_)) + sizeof(time_));
  // @@protoc_insertion_point(copy_constructor:GuildRpcSyncNoticeOfHallLvUpNotify)
}

void GuildRpcSyncNoticeOfHallLvUpNotify::SharedCtor() {
  _cached_size_ = 0;
  lv_ = -1;
  time_ = -1;
}

GuildRpcSyncNoticeOfHallLvUpNotify::~GuildRpcSyncNoticeOfHallLvUpNotify() {
  // @@protoc_insertion_point(destructor:GuildRpcSyncNoticeOfHallLvUpNotify)
  SharedDtor();
}

void GuildRpcSyncNoticeOfHallLvUpNotify::SharedDtor() {
}

void GuildRpcSyncNoticeOfHallLvUpNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcSyncNoticeOfHallLvUpNotify::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcSyncNoticeOfHallLvUpNotify& GuildRpcSyncNoticeOfHallLvUpNotify::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcSyncNoticeOfHallLvUpNotify* GuildRpcSyncNoticeOfHallLvUpNotify::New(::google::protobuf::Arena* arena) const {
  GuildRpcSyncNoticeOfHallLvUpNotify* n = new GuildRpcSyncNoticeOfHallLvUpNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcSyncNoticeOfHallLvUpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcSyncNoticeOfHallLvUpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    lv_ = -1;
    time_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcSyncNoticeOfHallLvUpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcSyncNoticeOfHallLvUpNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Lv = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &lv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Time = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcSyncNoticeOfHallLvUpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcSyncNoticeOfHallLvUpNotify)
  return false;
#undef DO_
}

void GuildRpcSyncNoticeOfHallLvUpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcSyncNoticeOfHallLvUpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Lv = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->lv(), output);
  }

  // optional sint32 Time = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcSyncNoticeOfHallLvUpNotify)
}

::google::protobuf::uint8* GuildRpcSyncNoticeOfHallLvUpNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcSyncNoticeOfHallLvUpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Lv = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->lv(), target);
  }

  // optional sint32 Time = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcSyncNoticeOfHallLvUpNotify)
  return target;
}

size_t GuildRpcSyncNoticeOfHallLvUpNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcSyncNoticeOfHallLvUpNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Lv = 1 [default = -1];
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->lv());
    }

    // optional sint32 Time = 2 [default = -1];
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcSyncNoticeOfHallLvUpNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcSyncNoticeOfHallLvUpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcSyncNoticeOfHallLvUpNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcSyncNoticeOfHallLvUpNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcSyncNoticeOfHallLvUpNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcSyncNoticeOfHallLvUpNotify)
    MergeFrom(*source);
  }
}

void GuildRpcSyncNoticeOfHallLvUpNotify::MergeFrom(const GuildRpcSyncNoticeOfHallLvUpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcSyncNoticeOfHallLvUpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      lv_ = from.lv_;
    }
    if (cached_has_bits & 0x00000002u) {
      time_ = from.time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildRpcSyncNoticeOfHallLvUpNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcSyncNoticeOfHallLvUpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcSyncNoticeOfHallLvUpNotify::CopyFrom(const GuildRpcSyncNoticeOfHallLvUpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcSyncNoticeOfHallLvUpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcSyncNoticeOfHallLvUpNotify::IsInitialized() const {
  return true;
}

void GuildRpcSyncNoticeOfHallLvUpNotify::Swap(GuildRpcSyncNoticeOfHallLvUpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcSyncNoticeOfHallLvUpNotify::InternalSwap(GuildRpcSyncNoticeOfHallLvUpNotify* other) {
  using std::swap;
  swap(lv_, other->lv_);
  swap(time_, other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcSyncNoticeOfHallLvUpNotify::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcSyncNoticeOfHallLvUpNotify

// optional sint32 Lv = 1 [default = -1];
bool GuildRpcSyncNoticeOfHallLvUpNotify::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcSyncNoticeOfHallLvUpNotify::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcSyncNoticeOfHallLvUpNotify::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcSyncNoticeOfHallLvUpNotify::clear_lv() {
  lv_ = -1;
  clear_has_lv();
}
::google::protobuf::int32 GuildRpcSyncNoticeOfHallLvUpNotify::lv() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfHallLvUpNotify.Lv)
  return lv_;
}
void GuildRpcSyncNoticeOfHallLvUpNotify::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfHallLvUpNotify.Lv)
}

// optional sint32 Time = 2 [default = -1];
bool GuildRpcSyncNoticeOfHallLvUpNotify::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildRpcSyncNoticeOfHallLvUpNotify::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildRpcSyncNoticeOfHallLvUpNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildRpcSyncNoticeOfHallLvUpNotify::clear_time() {
  time_ = -1;
  clear_has_time();
}
::google::protobuf::int32 GuildRpcSyncNoticeOfHallLvUpNotify::time() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfHallLvUpNotify.Time)
  return time_;
}
void GuildRpcSyncNoticeOfHallLvUpNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfHallLvUpNotify.Time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcSyncNoticeOfHouseLvUpNotify::kLvFieldNumber;
const int GuildRpcSyncNoticeOfHouseLvUpNotify::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcSyncNoticeOfHouseLvUpNotify::GuildRpcSyncNoticeOfHouseLvUpNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcSyncNoticeOfHouseLvUpNotify)
}
GuildRpcSyncNoticeOfHouseLvUpNotify::GuildRpcSyncNoticeOfHouseLvUpNotify(const GuildRpcSyncNoticeOfHouseLvUpNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lv_, &from.lv_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&lv_)) + sizeof(time_));
  // @@protoc_insertion_point(copy_constructor:GuildRpcSyncNoticeOfHouseLvUpNotify)
}

void GuildRpcSyncNoticeOfHouseLvUpNotify::SharedCtor() {
  _cached_size_ = 0;
  lv_ = -1;
  time_ = -1;
}

GuildRpcSyncNoticeOfHouseLvUpNotify::~GuildRpcSyncNoticeOfHouseLvUpNotify() {
  // @@protoc_insertion_point(destructor:GuildRpcSyncNoticeOfHouseLvUpNotify)
  SharedDtor();
}

void GuildRpcSyncNoticeOfHouseLvUpNotify::SharedDtor() {
}

void GuildRpcSyncNoticeOfHouseLvUpNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcSyncNoticeOfHouseLvUpNotify::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcSyncNoticeOfHouseLvUpNotify& GuildRpcSyncNoticeOfHouseLvUpNotify::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcSyncNoticeOfHouseLvUpNotify* GuildRpcSyncNoticeOfHouseLvUpNotify::New(::google::protobuf::Arena* arena) const {
  GuildRpcSyncNoticeOfHouseLvUpNotify* n = new GuildRpcSyncNoticeOfHouseLvUpNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcSyncNoticeOfHouseLvUpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcSyncNoticeOfHouseLvUpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    lv_ = -1;
    time_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcSyncNoticeOfHouseLvUpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcSyncNoticeOfHouseLvUpNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Lv = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &lv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Time = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcSyncNoticeOfHouseLvUpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcSyncNoticeOfHouseLvUpNotify)
  return false;
#undef DO_
}

void GuildRpcSyncNoticeOfHouseLvUpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcSyncNoticeOfHouseLvUpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Lv = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->lv(), output);
  }

  // optional sint32 Time = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcSyncNoticeOfHouseLvUpNotify)
}

::google::protobuf::uint8* GuildRpcSyncNoticeOfHouseLvUpNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcSyncNoticeOfHouseLvUpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Lv = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->lv(), target);
  }

  // optional sint32 Time = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcSyncNoticeOfHouseLvUpNotify)
  return target;
}

size_t GuildRpcSyncNoticeOfHouseLvUpNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcSyncNoticeOfHouseLvUpNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Lv = 1 [default = -1];
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->lv());
    }

    // optional sint32 Time = 2 [default = -1];
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcSyncNoticeOfHouseLvUpNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcSyncNoticeOfHouseLvUpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcSyncNoticeOfHouseLvUpNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcSyncNoticeOfHouseLvUpNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcSyncNoticeOfHouseLvUpNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcSyncNoticeOfHouseLvUpNotify)
    MergeFrom(*source);
  }
}

void GuildRpcSyncNoticeOfHouseLvUpNotify::MergeFrom(const GuildRpcSyncNoticeOfHouseLvUpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcSyncNoticeOfHouseLvUpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      lv_ = from.lv_;
    }
    if (cached_has_bits & 0x00000002u) {
      time_ = from.time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildRpcSyncNoticeOfHouseLvUpNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcSyncNoticeOfHouseLvUpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcSyncNoticeOfHouseLvUpNotify::CopyFrom(const GuildRpcSyncNoticeOfHouseLvUpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcSyncNoticeOfHouseLvUpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcSyncNoticeOfHouseLvUpNotify::IsInitialized() const {
  return true;
}

void GuildRpcSyncNoticeOfHouseLvUpNotify::Swap(GuildRpcSyncNoticeOfHouseLvUpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcSyncNoticeOfHouseLvUpNotify::InternalSwap(GuildRpcSyncNoticeOfHouseLvUpNotify* other) {
  using std::swap;
  swap(lv_, other->lv_);
  swap(time_, other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcSyncNoticeOfHouseLvUpNotify::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcSyncNoticeOfHouseLvUpNotify

// optional sint32 Lv = 1 [default = -1];
bool GuildRpcSyncNoticeOfHouseLvUpNotify::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcSyncNoticeOfHouseLvUpNotify::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcSyncNoticeOfHouseLvUpNotify::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcSyncNoticeOfHouseLvUpNotify::clear_lv() {
  lv_ = -1;
  clear_has_lv();
}
::google::protobuf::int32 GuildRpcSyncNoticeOfHouseLvUpNotify::lv() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfHouseLvUpNotify.Lv)
  return lv_;
}
void GuildRpcSyncNoticeOfHouseLvUpNotify::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfHouseLvUpNotify.Lv)
}

// optional sint32 Time = 2 [default = -1];
bool GuildRpcSyncNoticeOfHouseLvUpNotify::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildRpcSyncNoticeOfHouseLvUpNotify::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildRpcSyncNoticeOfHouseLvUpNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildRpcSyncNoticeOfHouseLvUpNotify::clear_time() {
  time_ = -1;
  clear_has_time();
}
::google::protobuf::int32 GuildRpcSyncNoticeOfHouseLvUpNotify::time() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfHouseLvUpNotify.Time)
  return time_;
}
void GuildRpcSyncNoticeOfHouseLvUpNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfHouseLvUpNotify.Time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcSyncNoticeOfStorerommLvUpNotify::kLvFieldNumber;
const int GuildRpcSyncNoticeOfStorerommLvUpNotify::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcSyncNoticeOfStorerommLvUpNotify::GuildRpcSyncNoticeOfStorerommLvUpNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcSyncNoticeOfStorerommLvUpNotify)
}
GuildRpcSyncNoticeOfStorerommLvUpNotify::GuildRpcSyncNoticeOfStorerommLvUpNotify(const GuildRpcSyncNoticeOfStorerommLvUpNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lv_, &from.lv_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&lv_)) + sizeof(time_));
  // @@protoc_insertion_point(copy_constructor:GuildRpcSyncNoticeOfStorerommLvUpNotify)
}

void GuildRpcSyncNoticeOfStorerommLvUpNotify::SharedCtor() {
  _cached_size_ = 0;
  lv_ = -1;
  time_ = -1;
}

GuildRpcSyncNoticeOfStorerommLvUpNotify::~GuildRpcSyncNoticeOfStorerommLvUpNotify() {
  // @@protoc_insertion_point(destructor:GuildRpcSyncNoticeOfStorerommLvUpNotify)
  SharedDtor();
}

void GuildRpcSyncNoticeOfStorerommLvUpNotify::SharedDtor() {
}

void GuildRpcSyncNoticeOfStorerommLvUpNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcSyncNoticeOfStorerommLvUpNotify::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcSyncNoticeOfStorerommLvUpNotify& GuildRpcSyncNoticeOfStorerommLvUpNotify::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcSyncNoticeOfStorerommLvUpNotify* GuildRpcSyncNoticeOfStorerommLvUpNotify::New(::google::protobuf::Arena* arena) const {
  GuildRpcSyncNoticeOfStorerommLvUpNotify* n = new GuildRpcSyncNoticeOfStorerommLvUpNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcSyncNoticeOfStorerommLvUpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcSyncNoticeOfStorerommLvUpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    lv_ = -1;
    time_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcSyncNoticeOfStorerommLvUpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcSyncNoticeOfStorerommLvUpNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Lv = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &lv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Time = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcSyncNoticeOfStorerommLvUpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcSyncNoticeOfStorerommLvUpNotify)
  return false;
#undef DO_
}

void GuildRpcSyncNoticeOfStorerommLvUpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcSyncNoticeOfStorerommLvUpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Lv = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->lv(), output);
  }

  // optional sint32 Time = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcSyncNoticeOfStorerommLvUpNotify)
}

::google::protobuf::uint8* GuildRpcSyncNoticeOfStorerommLvUpNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcSyncNoticeOfStorerommLvUpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Lv = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->lv(), target);
  }

  // optional sint32 Time = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcSyncNoticeOfStorerommLvUpNotify)
  return target;
}

size_t GuildRpcSyncNoticeOfStorerommLvUpNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcSyncNoticeOfStorerommLvUpNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Lv = 1 [default = -1];
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->lv());
    }

    // optional sint32 Time = 2 [default = -1];
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcSyncNoticeOfStorerommLvUpNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcSyncNoticeOfStorerommLvUpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcSyncNoticeOfStorerommLvUpNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcSyncNoticeOfStorerommLvUpNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcSyncNoticeOfStorerommLvUpNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcSyncNoticeOfStorerommLvUpNotify)
    MergeFrom(*source);
  }
}

void GuildRpcSyncNoticeOfStorerommLvUpNotify::MergeFrom(const GuildRpcSyncNoticeOfStorerommLvUpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcSyncNoticeOfStorerommLvUpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      lv_ = from.lv_;
    }
    if (cached_has_bits & 0x00000002u) {
      time_ = from.time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildRpcSyncNoticeOfStorerommLvUpNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcSyncNoticeOfStorerommLvUpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcSyncNoticeOfStorerommLvUpNotify::CopyFrom(const GuildRpcSyncNoticeOfStorerommLvUpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcSyncNoticeOfStorerommLvUpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcSyncNoticeOfStorerommLvUpNotify::IsInitialized() const {
  return true;
}

void GuildRpcSyncNoticeOfStorerommLvUpNotify::Swap(GuildRpcSyncNoticeOfStorerommLvUpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcSyncNoticeOfStorerommLvUpNotify::InternalSwap(GuildRpcSyncNoticeOfStorerommLvUpNotify* other) {
  using std::swap;
  swap(lv_, other->lv_);
  swap(time_, other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcSyncNoticeOfStorerommLvUpNotify::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcSyncNoticeOfStorerommLvUpNotify

// optional sint32 Lv = 1 [default = -1];
bool GuildRpcSyncNoticeOfStorerommLvUpNotify::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcSyncNoticeOfStorerommLvUpNotify::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcSyncNoticeOfStorerommLvUpNotify::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcSyncNoticeOfStorerommLvUpNotify::clear_lv() {
  lv_ = -1;
  clear_has_lv();
}
::google::protobuf::int32 GuildRpcSyncNoticeOfStorerommLvUpNotify::lv() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfStorerommLvUpNotify.Lv)
  return lv_;
}
void GuildRpcSyncNoticeOfStorerommLvUpNotify::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfStorerommLvUpNotify.Lv)
}

// optional sint32 Time = 2 [default = -1];
bool GuildRpcSyncNoticeOfStorerommLvUpNotify::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildRpcSyncNoticeOfStorerommLvUpNotify::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildRpcSyncNoticeOfStorerommLvUpNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildRpcSyncNoticeOfStorerommLvUpNotify::clear_time() {
  time_ = -1;
  clear_has_time();
}
::google::protobuf::int32 GuildRpcSyncNoticeOfStorerommLvUpNotify::time() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfStorerommLvUpNotify.Time)
  return time_;
}
void GuildRpcSyncNoticeOfStorerommLvUpNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfStorerommLvUpNotify.Time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcSyncNoticeOfKongfuHallLvUpNotify::kLvFieldNumber;
const int GuildRpcSyncNoticeOfKongfuHallLvUpNotify::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcSyncNoticeOfKongfuHallLvUpNotify::GuildRpcSyncNoticeOfKongfuHallLvUpNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcSyncNoticeOfKongfuHallLvUpNotify)
}
GuildRpcSyncNoticeOfKongfuHallLvUpNotify::GuildRpcSyncNoticeOfKongfuHallLvUpNotify(const GuildRpcSyncNoticeOfKongfuHallLvUpNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lv_, &from.lv_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&lv_)) + sizeof(time_));
  // @@protoc_insertion_point(copy_constructor:GuildRpcSyncNoticeOfKongfuHallLvUpNotify)
}

void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::SharedCtor() {
  _cached_size_ = 0;
  lv_ = -1;
  time_ = -1;
}

GuildRpcSyncNoticeOfKongfuHallLvUpNotify::~GuildRpcSyncNoticeOfKongfuHallLvUpNotify() {
  // @@protoc_insertion_point(destructor:GuildRpcSyncNoticeOfKongfuHallLvUpNotify)
  SharedDtor();
}

void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::SharedDtor() {
}

void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcSyncNoticeOfKongfuHallLvUpNotify::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcSyncNoticeOfKongfuHallLvUpNotify& GuildRpcSyncNoticeOfKongfuHallLvUpNotify::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcSyncNoticeOfKongfuHallLvUpNotify* GuildRpcSyncNoticeOfKongfuHallLvUpNotify::New(::google::protobuf::Arena* arena) const {
  GuildRpcSyncNoticeOfKongfuHallLvUpNotify* n = new GuildRpcSyncNoticeOfKongfuHallLvUpNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcSyncNoticeOfKongfuHallLvUpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    lv_ = -1;
    time_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcSyncNoticeOfKongfuHallLvUpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcSyncNoticeOfKongfuHallLvUpNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Lv = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &lv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Time = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcSyncNoticeOfKongfuHallLvUpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcSyncNoticeOfKongfuHallLvUpNotify)
  return false;
#undef DO_
}

void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcSyncNoticeOfKongfuHallLvUpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Lv = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->lv(), output);
  }

  // optional sint32 Time = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcSyncNoticeOfKongfuHallLvUpNotify)
}

::google::protobuf::uint8* GuildRpcSyncNoticeOfKongfuHallLvUpNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcSyncNoticeOfKongfuHallLvUpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Lv = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->lv(), target);
  }

  // optional sint32 Time = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcSyncNoticeOfKongfuHallLvUpNotify)
  return target;
}

size_t GuildRpcSyncNoticeOfKongfuHallLvUpNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcSyncNoticeOfKongfuHallLvUpNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Lv = 1 [default = -1];
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->lv());
    }

    // optional sint32 Time = 2 [default = -1];
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcSyncNoticeOfKongfuHallLvUpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcSyncNoticeOfKongfuHallLvUpNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcSyncNoticeOfKongfuHallLvUpNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcSyncNoticeOfKongfuHallLvUpNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcSyncNoticeOfKongfuHallLvUpNotify)
    MergeFrom(*source);
  }
}

void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::MergeFrom(const GuildRpcSyncNoticeOfKongfuHallLvUpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcSyncNoticeOfKongfuHallLvUpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      lv_ = from.lv_;
    }
    if (cached_has_bits & 0x00000002u) {
      time_ = from.time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcSyncNoticeOfKongfuHallLvUpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::CopyFrom(const GuildRpcSyncNoticeOfKongfuHallLvUpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcSyncNoticeOfKongfuHallLvUpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcSyncNoticeOfKongfuHallLvUpNotify::IsInitialized() const {
  return true;
}

void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::Swap(GuildRpcSyncNoticeOfKongfuHallLvUpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::InternalSwap(GuildRpcSyncNoticeOfKongfuHallLvUpNotify* other) {
  using std::swap;
  swap(lv_, other->lv_);
  swap(time_, other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcSyncNoticeOfKongfuHallLvUpNotify::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcSyncNoticeOfKongfuHallLvUpNotify

// optional sint32 Lv = 1 [default = -1];
bool GuildRpcSyncNoticeOfKongfuHallLvUpNotify::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::clear_lv() {
  lv_ = -1;
  clear_has_lv();
}
::google::protobuf::int32 GuildRpcSyncNoticeOfKongfuHallLvUpNotify::lv() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfKongfuHallLvUpNotify.Lv)
  return lv_;
}
void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfKongfuHallLvUpNotify.Lv)
}

// optional sint32 Time = 2 [default = -1];
bool GuildRpcSyncNoticeOfKongfuHallLvUpNotify::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::clear_time() {
  time_ = -1;
  clear_has_time();
}
::google::protobuf::int32 GuildRpcSyncNoticeOfKongfuHallLvUpNotify::time() const {
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfKongfuHallLvUpNotify.Time)
  return time_;
}
void GuildRpcSyncNoticeOfKongfuHallLvUpNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcSyncNoticeOfKongfuHallLvUpNotify.Time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcApplyGuildHandleAsk::kUserIdFieldNumber;
const int GuildRpcApplyGuildHandleAsk::kOperFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcApplyGuildHandleAsk::GuildRpcApplyGuildHandleAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcApplyGuildHandleAsk)
}
GuildRpcApplyGuildHandleAsk::GuildRpcApplyGuildHandleAsk(const GuildRpcApplyGuildHandleAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&oper_, &from.oper_,
    static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&oper_)) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:GuildRpcApplyGuildHandleAsk)
}

void GuildRpcApplyGuildHandleAsk::SharedCtor() {
  _cached_size_ = 0;
  oper_ = 0;
  userid_ = GOOGLE_LONGLONG(-1);
}

GuildRpcApplyGuildHandleAsk::~GuildRpcApplyGuildHandleAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcApplyGuildHandleAsk)
  SharedDtor();
}

void GuildRpcApplyGuildHandleAsk::SharedDtor() {
}

void GuildRpcApplyGuildHandleAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcApplyGuildHandleAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcApplyGuildHandleAsk& GuildRpcApplyGuildHandleAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcApplyGuildHandleAsk* GuildRpcApplyGuildHandleAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcApplyGuildHandleAsk* n = new GuildRpcApplyGuildHandleAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcApplyGuildHandleAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcApplyGuildHandleAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    oper_ = 0;
    userid_ = GOOGLE_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcApplyGuildHandleAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcApplyGuildHandleAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 UserId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Oper = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_oper();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &oper_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcApplyGuildHandleAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcApplyGuildHandleAsk)
  return false;
#undef DO_
}

void GuildRpcApplyGuildHandleAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcApplyGuildHandleAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->userid(), output);
  }

  // optional sint32 Oper = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->oper(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcApplyGuildHandleAsk)
}

::google::protobuf::uint8* GuildRpcApplyGuildHandleAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcApplyGuildHandleAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->userid(), target);
  }

  // optional sint32 Oper = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->oper(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcApplyGuildHandleAsk)
  return target;
}

size_t GuildRpcApplyGuildHandleAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcApplyGuildHandleAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Oper = 2 [default = 0];
    if (has_oper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->oper());
    }

    // optional sint64 UserId = 1 [default = -1];
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcApplyGuildHandleAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcApplyGuildHandleAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcApplyGuildHandleAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcApplyGuildHandleAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcApplyGuildHandleAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcApplyGuildHandleAsk)
    MergeFrom(*source);
  }
}

void GuildRpcApplyGuildHandleAsk::MergeFrom(const GuildRpcApplyGuildHandleAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcApplyGuildHandleAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      oper_ = from.oper_;
    }
    if (cached_has_bits & 0x00000002u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildRpcApplyGuildHandleAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcApplyGuildHandleAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcApplyGuildHandleAsk::CopyFrom(const GuildRpcApplyGuildHandleAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcApplyGuildHandleAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcApplyGuildHandleAsk::IsInitialized() const {
  return true;
}

void GuildRpcApplyGuildHandleAsk::Swap(GuildRpcApplyGuildHandleAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcApplyGuildHandleAsk::InternalSwap(GuildRpcApplyGuildHandleAsk* other) {
  using std::swap;
  swap(oper_, other->oper_);
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcApplyGuildHandleAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcApplyGuildHandleAsk

// optional sint64 UserId = 1 [default = -1];
bool GuildRpcApplyGuildHandleAsk::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildRpcApplyGuildHandleAsk::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildRpcApplyGuildHandleAsk::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildRpcApplyGuildHandleAsk::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 GuildRpcApplyGuildHandleAsk::userid() const {
  // @@protoc_insertion_point(field_get:GuildRpcApplyGuildHandleAsk.UserId)
  return userid_;
}
void GuildRpcApplyGuildHandleAsk::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcApplyGuildHandleAsk.UserId)
}

// optional sint32 Oper = 2 [default = 0];
bool GuildRpcApplyGuildHandleAsk::has_oper() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcApplyGuildHandleAsk::set_has_oper() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcApplyGuildHandleAsk::clear_has_oper() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcApplyGuildHandleAsk::clear_oper() {
  oper_ = 0;
  clear_has_oper();
}
::google::protobuf::int32 GuildRpcApplyGuildHandleAsk::oper() const {
  // @@protoc_insertion_point(field_get:GuildRpcApplyGuildHandleAsk.Oper)
  return oper_;
}
void GuildRpcApplyGuildHandleAsk::set_oper(::google::protobuf::int32 value) {
  set_has_oper();
  oper_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcApplyGuildHandleAsk.Oper)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcApplyGuildHandleReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcApplyGuildHandleReply::GuildRpcApplyGuildHandleReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcApplyGuildHandleReply)
}
GuildRpcApplyGuildHandleReply::GuildRpcApplyGuildHandleReply(const GuildRpcApplyGuildHandleReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcApplyGuildHandleReply)
}

void GuildRpcApplyGuildHandleReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcApplyGuildHandleReply::~GuildRpcApplyGuildHandleReply() {
  // @@protoc_insertion_point(destructor:GuildRpcApplyGuildHandleReply)
  SharedDtor();
}

void GuildRpcApplyGuildHandleReply::SharedDtor() {
}

void GuildRpcApplyGuildHandleReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcApplyGuildHandleReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcApplyGuildHandleReply& GuildRpcApplyGuildHandleReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcApplyGuildHandleReply* GuildRpcApplyGuildHandleReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcApplyGuildHandleReply* n = new GuildRpcApplyGuildHandleReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcApplyGuildHandleReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcApplyGuildHandleReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcApplyGuildHandleReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcApplyGuildHandleReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcApplyGuildHandleReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcApplyGuildHandleReply)
  return false;
#undef DO_
}

void GuildRpcApplyGuildHandleReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcApplyGuildHandleReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcApplyGuildHandleReply)
}

::google::protobuf::uint8* GuildRpcApplyGuildHandleReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcApplyGuildHandleReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcApplyGuildHandleReply)
  return target;
}

size_t GuildRpcApplyGuildHandleReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcApplyGuildHandleReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcApplyGuildHandleReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcApplyGuildHandleReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcApplyGuildHandleReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcApplyGuildHandleReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcApplyGuildHandleReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcApplyGuildHandleReply)
    MergeFrom(*source);
  }
}

void GuildRpcApplyGuildHandleReply::MergeFrom(const GuildRpcApplyGuildHandleReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcApplyGuildHandleReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcApplyGuildHandleReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcApplyGuildHandleReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcApplyGuildHandleReply::CopyFrom(const GuildRpcApplyGuildHandleReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcApplyGuildHandleReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcApplyGuildHandleReply::IsInitialized() const {
  return true;
}

void GuildRpcApplyGuildHandleReply::Swap(GuildRpcApplyGuildHandleReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcApplyGuildHandleReply::InternalSwap(GuildRpcApplyGuildHandleReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcApplyGuildHandleReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcApplyGuildHandleReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcApplyGuildHandleReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcApplyGuildHandleReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcApplyGuildHandleReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcApplyGuildHandleReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcApplyGuildHandleReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcApplyGuildHandleReply.Result)
  return result_;
}
void GuildRpcApplyGuildHandleReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcApplyGuildHandleReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcCreateGuildDungeonAsk::kDungeonNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcCreateGuildDungeonAsk::GuildRpcCreateGuildDungeonAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcCreateGuildDungeonAsk)
}
GuildRpcCreateGuildDungeonAsk::GuildRpcCreateGuildDungeonAsk(const GuildRpcCreateGuildDungeonAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dungeonnum_ = from.dungeonnum_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcCreateGuildDungeonAsk)
}

void GuildRpcCreateGuildDungeonAsk::SharedCtor() {
  _cached_size_ = 0;
  dungeonnum_ = -1;
}

GuildRpcCreateGuildDungeonAsk::~GuildRpcCreateGuildDungeonAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcCreateGuildDungeonAsk)
  SharedDtor();
}

void GuildRpcCreateGuildDungeonAsk::SharedDtor() {
}

void GuildRpcCreateGuildDungeonAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcCreateGuildDungeonAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcCreateGuildDungeonAsk& GuildRpcCreateGuildDungeonAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcCreateGuildDungeonAsk* GuildRpcCreateGuildDungeonAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcCreateGuildDungeonAsk* n = new GuildRpcCreateGuildDungeonAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcCreateGuildDungeonAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcCreateGuildDungeonAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dungeonnum_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcCreateGuildDungeonAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcCreateGuildDungeonAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 DungeonNum = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_dungeonnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &dungeonnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcCreateGuildDungeonAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcCreateGuildDungeonAsk)
  return false;
#undef DO_
}

void GuildRpcCreateGuildDungeonAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcCreateGuildDungeonAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 DungeonNum = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->dungeonnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcCreateGuildDungeonAsk)
}

::google::protobuf::uint8* GuildRpcCreateGuildDungeonAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcCreateGuildDungeonAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 DungeonNum = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->dungeonnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcCreateGuildDungeonAsk)
  return target;
}

size_t GuildRpcCreateGuildDungeonAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcCreateGuildDungeonAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 DungeonNum = 2 [default = -1];
  if (has_dungeonnum()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->dungeonnum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcCreateGuildDungeonAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcCreateGuildDungeonAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcCreateGuildDungeonAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcCreateGuildDungeonAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcCreateGuildDungeonAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcCreateGuildDungeonAsk)
    MergeFrom(*source);
  }
}

void GuildRpcCreateGuildDungeonAsk::MergeFrom(const GuildRpcCreateGuildDungeonAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcCreateGuildDungeonAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dungeonnum()) {
    set_dungeonnum(from.dungeonnum());
  }
}

void GuildRpcCreateGuildDungeonAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcCreateGuildDungeonAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcCreateGuildDungeonAsk::CopyFrom(const GuildRpcCreateGuildDungeonAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcCreateGuildDungeonAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcCreateGuildDungeonAsk::IsInitialized() const {
  return true;
}

void GuildRpcCreateGuildDungeonAsk::Swap(GuildRpcCreateGuildDungeonAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcCreateGuildDungeonAsk::InternalSwap(GuildRpcCreateGuildDungeonAsk* other) {
  using std::swap;
  swap(dungeonnum_, other->dungeonnum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcCreateGuildDungeonAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcCreateGuildDungeonAsk

// optional sint32 DungeonNum = 2 [default = -1];
bool GuildRpcCreateGuildDungeonAsk::has_dungeonnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcCreateGuildDungeonAsk::set_has_dungeonnum() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcCreateGuildDungeonAsk::clear_has_dungeonnum() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcCreateGuildDungeonAsk::clear_dungeonnum() {
  dungeonnum_ = -1;
  clear_has_dungeonnum();
}
::google::protobuf::int32 GuildRpcCreateGuildDungeonAsk::dungeonnum() const {
  // @@protoc_insertion_point(field_get:GuildRpcCreateGuildDungeonAsk.DungeonNum)
  return dungeonnum_;
}
void GuildRpcCreateGuildDungeonAsk::set_dungeonnum(::google::protobuf::int32 value) {
  set_has_dungeonnum();
  dungeonnum_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcCreateGuildDungeonAsk.DungeonNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcCreateGuildDungeonReply::kResultFieldNumber;
const int GuildRpcCreateGuildDungeonReply::kDungeonNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcCreateGuildDungeonReply::GuildRpcCreateGuildDungeonReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcCreateGuildDungeonReply)
}
GuildRpcCreateGuildDungeonReply::GuildRpcCreateGuildDungeonReply(const GuildRpcCreateGuildDungeonReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&dungeonnum_) -
    reinterpret_cast<char*>(&result_)) + sizeof(dungeonnum_));
  // @@protoc_insertion_point(copy_constructor:GuildRpcCreateGuildDungeonReply)
}

void GuildRpcCreateGuildDungeonReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  dungeonnum_ = -1;
}

GuildRpcCreateGuildDungeonReply::~GuildRpcCreateGuildDungeonReply() {
  // @@protoc_insertion_point(destructor:GuildRpcCreateGuildDungeonReply)
  SharedDtor();
}

void GuildRpcCreateGuildDungeonReply::SharedDtor() {
}

void GuildRpcCreateGuildDungeonReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcCreateGuildDungeonReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcCreateGuildDungeonReply& GuildRpcCreateGuildDungeonReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcCreateGuildDungeonReply* GuildRpcCreateGuildDungeonReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcCreateGuildDungeonReply* n = new GuildRpcCreateGuildDungeonReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcCreateGuildDungeonReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcCreateGuildDungeonReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    result_ = -9999;
    dungeonnum_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcCreateGuildDungeonReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcCreateGuildDungeonReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 DungeonNum = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_dungeonnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &dungeonnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcCreateGuildDungeonReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcCreateGuildDungeonReply)
  return false;
#undef DO_
}

void GuildRpcCreateGuildDungeonReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcCreateGuildDungeonReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 DungeonNum = 4 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->dungeonnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcCreateGuildDungeonReply)
}

::google::protobuf::uint8* GuildRpcCreateGuildDungeonReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcCreateGuildDungeonReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 DungeonNum = 4 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->dungeonnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcCreateGuildDungeonReply)
  return target;
}

size_t GuildRpcCreateGuildDungeonReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcCreateGuildDungeonReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 DungeonNum = 4 [default = -1];
    if (has_dungeonnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->dungeonnum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcCreateGuildDungeonReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcCreateGuildDungeonReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcCreateGuildDungeonReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcCreateGuildDungeonReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcCreateGuildDungeonReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcCreateGuildDungeonReply)
    MergeFrom(*source);
  }
}

void GuildRpcCreateGuildDungeonReply::MergeFrom(const GuildRpcCreateGuildDungeonReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcCreateGuildDungeonReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      dungeonnum_ = from.dungeonnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildRpcCreateGuildDungeonReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcCreateGuildDungeonReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcCreateGuildDungeonReply::CopyFrom(const GuildRpcCreateGuildDungeonReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcCreateGuildDungeonReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcCreateGuildDungeonReply::IsInitialized() const {
  return true;
}

void GuildRpcCreateGuildDungeonReply::Swap(GuildRpcCreateGuildDungeonReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcCreateGuildDungeonReply::InternalSwap(GuildRpcCreateGuildDungeonReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(dungeonnum_, other->dungeonnum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcCreateGuildDungeonReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcCreateGuildDungeonReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcCreateGuildDungeonReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcCreateGuildDungeonReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcCreateGuildDungeonReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcCreateGuildDungeonReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcCreateGuildDungeonReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcCreateGuildDungeonReply.Result)
  return result_;
}
void GuildRpcCreateGuildDungeonReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcCreateGuildDungeonReply.Result)
}

// optional sint32 DungeonNum = 4 [default = -1];
bool GuildRpcCreateGuildDungeonReply::has_dungeonnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildRpcCreateGuildDungeonReply::set_has_dungeonnum() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildRpcCreateGuildDungeonReply::clear_has_dungeonnum() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildRpcCreateGuildDungeonReply::clear_dungeonnum() {
  dungeonnum_ = -1;
  clear_has_dungeonnum();
}
::google::protobuf::int32 GuildRpcCreateGuildDungeonReply::dungeonnum() const {
  // @@protoc_insertion_point(field_get:GuildRpcCreateGuildDungeonReply.DungeonNum)
  return dungeonnum_;
}
void GuildRpcCreateGuildDungeonReply::set_dungeonnum(::google::protobuf::int32 value) {
  set_has_dungeonnum();
  dungeonnum_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcCreateGuildDungeonReply.DungeonNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcEnterGuildDungeonAsk::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcEnterGuildDungeonAsk::GuildRpcEnterGuildDungeonAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcEnterGuildDungeonAsk)
}
GuildRpcEnterGuildDungeonAsk::GuildRpcEnterGuildDungeonAsk(const GuildRpcEnterGuildDungeonAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcEnterGuildDungeonAsk)
}

void GuildRpcEnterGuildDungeonAsk::SharedCtor() {
  _cached_size_ = 0;
  index_ = -1;
}

GuildRpcEnterGuildDungeonAsk::~GuildRpcEnterGuildDungeonAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcEnterGuildDungeonAsk)
  SharedDtor();
}

void GuildRpcEnterGuildDungeonAsk::SharedDtor() {
}

void GuildRpcEnterGuildDungeonAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcEnterGuildDungeonAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcEnterGuildDungeonAsk& GuildRpcEnterGuildDungeonAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcEnterGuildDungeonAsk* GuildRpcEnterGuildDungeonAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcEnterGuildDungeonAsk* n = new GuildRpcEnterGuildDungeonAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcEnterGuildDungeonAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcEnterGuildDungeonAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcEnterGuildDungeonAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcEnterGuildDungeonAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Index = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcEnterGuildDungeonAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcEnterGuildDungeonAsk)
  return false;
#undef DO_
}

void GuildRpcEnterGuildDungeonAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcEnterGuildDungeonAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Index = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcEnterGuildDungeonAsk)
}

::google::protobuf::uint8* GuildRpcEnterGuildDungeonAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcEnterGuildDungeonAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Index = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcEnterGuildDungeonAsk)
  return target;
}

size_t GuildRpcEnterGuildDungeonAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcEnterGuildDungeonAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Index = 1 [default = -1];
  if (has_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcEnterGuildDungeonAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcEnterGuildDungeonAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcEnterGuildDungeonAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcEnterGuildDungeonAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcEnterGuildDungeonAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcEnterGuildDungeonAsk)
    MergeFrom(*source);
  }
}

void GuildRpcEnterGuildDungeonAsk::MergeFrom(const GuildRpcEnterGuildDungeonAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcEnterGuildDungeonAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_index()) {
    set_index(from.index());
  }
}

void GuildRpcEnterGuildDungeonAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcEnterGuildDungeonAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcEnterGuildDungeonAsk::CopyFrom(const GuildRpcEnterGuildDungeonAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcEnterGuildDungeonAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcEnterGuildDungeonAsk::IsInitialized() const {
  return true;
}

void GuildRpcEnterGuildDungeonAsk::Swap(GuildRpcEnterGuildDungeonAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcEnterGuildDungeonAsk::InternalSwap(GuildRpcEnterGuildDungeonAsk* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcEnterGuildDungeonAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcEnterGuildDungeonAsk

// optional sint32 Index = 1 [default = -1];
bool GuildRpcEnterGuildDungeonAsk::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcEnterGuildDungeonAsk::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcEnterGuildDungeonAsk::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcEnterGuildDungeonAsk::clear_index() {
  index_ = -1;
  clear_has_index();
}
::google::protobuf::int32 GuildRpcEnterGuildDungeonAsk::index() const {
  // @@protoc_insertion_point(field_get:GuildRpcEnterGuildDungeonAsk.Index)
  return index_;
}
void GuildRpcEnterGuildDungeonAsk::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcEnterGuildDungeonAsk.Index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcEnterGuildDungeonReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcEnterGuildDungeonReply::GuildRpcEnterGuildDungeonReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcEnterGuildDungeonReply)
}
GuildRpcEnterGuildDungeonReply::GuildRpcEnterGuildDungeonReply(const GuildRpcEnterGuildDungeonReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcEnterGuildDungeonReply)
}

void GuildRpcEnterGuildDungeonReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcEnterGuildDungeonReply::~GuildRpcEnterGuildDungeonReply() {
  // @@protoc_insertion_point(destructor:GuildRpcEnterGuildDungeonReply)
  SharedDtor();
}

void GuildRpcEnterGuildDungeonReply::SharedDtor() {
}

void GuildRpcEnterGuildDungeonReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcEnterGuildDungeonReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcEnterGuildDungeonReply& GuildRpcEnterGuildDungeonReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcEnterGuildDungeonReply* GuildRpcEnterGuildDungeonReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcEnterGuildDungeonReply* n = new GuildRpcEnterGuildDungeonReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcEnterGuildDungeonReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcEnterGuildDungeonReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcEnterGuildDungeonReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcEnterGuildDungeonReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcEnterGuildDungeonReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcEnterGuildDungeonReply)
  return false;
#undef DO_
}

void GuildRpcEnterGuildDungeonReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcEnterGuildDungeonReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcEnterGuildDungeonReply)
}

::google::protobuf::uint8* GuildRpcEnterGuildDungeonReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcEnterGuildDungeonReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcEnterGuildDungeonReply)
  return target;
}

size_t GuildRpcEnterGuildDungeonReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcEnterGuildDungeonReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcEnterGuildDungeonReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcEnterGuildDungeonReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcEnterGuildDungeonReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcEnterGuildDungeonReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcEnterGuildDungeonReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcEnterGuildDungeonReply)
    MergeFrom(*source);
  }
}

void GuildRpcEnterGuildDungeonReply::MergeFrom(const GuildRpcEnterGuildDungeonReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcEnterGuildDungeonReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcEnterGuildDungeonReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcEnterGuildDungeonReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcEnterGuildDungeonReply::CopyFrom(const GuildRpcEnterGuildDungeonReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcEnterGuildDungeonReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcEnterGuildDungeonReply::IsInitialized() const {
  return true;
}

void GuildRpcEnterGuildDungeonReply::Swap(GuildRpcEnterGuildDungeonReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcEnterGuildDungeonReply::InternalSwap(GuildRpcEnterGuildDungeonReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcEnterGuildDungeonReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcEnterGuildDungeonReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcEnterGuildDungeonReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcEnterGuildDungeonReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcEnterGuildDungeonReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcEnterGuildDungeonReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcEnterGuildDungeonReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcEnterGuildDungeonReply.Result)
  return result_;
}
void GuildRpcEnterGuildDungeonReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcEnterGuildDungeonReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::kDungeonListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify)
}
GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify(const GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      dungeonlist_(from.dungeonlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify)
}

void GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::SharedCtor() {
  _cached_size_ = 0;
}

GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::~GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify() {
  // @@protoc_insertion_point(destructor:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify)
  SharedDtor();
}

void GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::SharedDtor() {
}

void GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify& GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify* GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::New(::google::protobuf::Arena* arena) const {
  GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify* n = new GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dungeonlist_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .GuildDungeonObj DungeonList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dungeonlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify)
  return false;
#undef DO_
}

void GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GuildDungeonObj DungeonList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dungeonlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dungeonlist(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify)
}

::google::protobuf::uint8* GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GuildDungeonObj DungeonList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dungeonlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->dungeonlist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify)
  return target;
}

size_t GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .GuildDungeonObj DungeonList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->dungeonlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dungeonlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify)
    MergeFrom(*source);
  }
}

void GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::MergeFrom(const GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dungeonlist_.MergeFrom(from.dungeonlist_);
}

void GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::CopyFrom(const GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::IsInitialized() const {
  return true;
}

void GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::Swap(GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::InternalSwap(GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify* other) {
  using std::swap;
  dungeonlist_.InternalSwap(&other->dungeonlist_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify

// repeated .GuildDungeonObj DungeonList = 1;
int GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::dungeonlist_size() const {
  return dungeonlist_.size();
}
void GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::clear_dungeonlist() {
  dungeonlist_.Clear();
}
const ::GuildDungeonObj& GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::dungeonlist(int index) const {
  // @@protoc_insertion_point(field_get:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify.DungeonList)
  return dungeonlist_.Get(index);
}
::GuildDungeonObj* GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::mutable_dungeonlist(int index) {
  // @@protoc_insertion_point(field_mutable:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify.DungeonList)
  return dungeonlist_.Mutable(index);
}
::GuildDungeonObj* GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::add_dungeonlist() {
  // @@protoc_insertion_point(field_add:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify.DungeonList)
  return dungeonlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::GuildDungeonObj >*
GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::mutable_dungeonlist() {
  // @@protoc_insertion_point(field_mutable_list:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify.DungeonList)
  return &dungeonlist_;
}
const ::google::protobuf::RepeatedPtrField< ::GuildDungeonObj >&
GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify::dungeonlist() const {
  // @@protoc_insertion_point(field_list:GuildRpcRpcSyncNoticeOfCreateGuildDungeonNotify.DungeonList)
  return dungeonlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcCreateGuildWarAsk::kGuildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcCreateGuildWarAsk::GuildRpcCreateGuildWarAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcCreateGuildWarAsk)
}
GuildRpcCreateGuildWarAsk::GuildRpcCreateGuildWarAsk(const GuildRpcCreateGuildWarAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guild_ = from.guild_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcCreateGuildWarAsk)
}

void GuildRpcCreateGuildWarAsk::SharedCtor() {
  _cached_size_ = 0;
  guild_ = -1;
}

GuildRpcCreateGuildWarAsk::~GuildRpcCreateGuildWarAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcCreateGuildWarAsk)
  SharedDtor();
}

void GuildRpcCreateGuildWarAsk::SharedDtor() {
}

void GuildRpcCreateGuildWarAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcCreateGuildWarAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcCreateGuildWarAsk& GuildRpcCreateGuildWarAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcCreateGuildWarAsk* GuildRpcCreateGuildWarAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcCreateGuildWarAsk* n = new GuildRpcCreateGuildWarAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcCreateGuildWarAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcCreateGuildWarAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcCreateGuildWarAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcCreateGuildWarAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Guild = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_guild();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &guild_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcCreateGuildWarAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcCreateGuildWarAsk)
  return false;
#undef DO_
}

void GuildRpcCreateGuildWarAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcCreateGuildWarAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Guild = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->guild(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcCreateGuildWarAsk)
}

::google::protobuf::uint8* GuildRpcCreateGuildWarAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcCreateGuildWarAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Guild = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->guild(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcCreateGuildWarAsk)
  return target;
}

size_t GuildRpcCreateGuildWarAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcCreateGuildWarAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Guild = 1 [default = -1];
  if (has_guild()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->guild());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcCreateGuildWarAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcCreateGuildWarAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcCreateGuildWarAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcCreateGuildWarAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcCreateGuildWarAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcCreateGuildWarAsk)
    MergeFrom(*source);
  }
}

void GuildRpcCreateGuildWarAsk::MergeFrom(const GuildRpcCreateGuildWarAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcCreateGuildWarAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_guild()) {
    set_guild(from.guild());
  }
}

void GuildRpcCreateGuildWarAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcCreateGuildWarAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcCreateGuildWarAsk::CopyFrom(const GuildRpcCreateGuildWarAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcCreateGuildWarAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcCreateGuildWarAsk::IsInitialized() const {
  return true;
}

void GuildRpcCreateGuildWarAsk::Swap(GuildRpcCreateGuildWarAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcCreateGuildWarAsk::InternalSwap(GuildRpcCreateGuildWarAsk* other) {
  using std::swap;
  swap(guild_, other->guild_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcCreateGuildWarAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcCreateGuildWarAsk

// optional sint32 Guild = 1 [default = -1];
bool GuildRpcCreateGuildWarAsk::has_guild() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcCreateGuildWarAsk::set_has_guild() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcCreateGuildWarAsk::clear_has_guild() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcCreateGuildWarAsk::clear_guild() {
  guild_ = -1;
  clear_has_guild();
}
::google::protobuf::int32 GuildRpcCreateGuildWarAsk::guild() const {
  // @@protoc_insertion_point(field_get:GuildRpcCreateGuildWarAsk.Guild)
  return guild_;
}
void GuildRpcCreateGuildWarAsk::set_guild(::google::protobuf::int32 value) {
  set_has_guild();
  guild_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcCreateGuildWarAsk.Guild)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcCreateGuildWarReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcCreateGuildWarReply::GuildRpcCreateGuildWarReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcCreateGuildWarReply)
}
GuildRpcCreateGuildWarReply::GuildRpcCreateGuildWarReply(const GuildRpcCreateGuildWarReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcCreateGuildWarReply)
}

void GuildRpcCreateGuildWarReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcCreateGuildWarReply::~GuildRpcCreateGuildWarReply() {
  // @@protoc_insertion_point(destructor:GuildRpcCreateGuildWarReply)
  SharedDtor();
}

void GuildRpcCreateGuildWarReply::SharedDtor() {
}

void GuildRpcCreateGuildWarReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcCreateGuildWarReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcCreateGuildWarReply& GuildRpcCreateGuildWarReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcCreateGuildWarReply* GuildRpcCreateGuildWarReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcCreateGuildWarReply* n = new GuildRpcCreateGuildWarReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcCreateGuildWarReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcCreateGuildWarReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcCreateGuildWarReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcCreateGuildWarReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcCreateGuildWarReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcCreateGuildWarReply)
  return false;
#undef DO_
}

void GuildRpcCreateGuildWarReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcCreateGuildWarReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcCreateGuildWarReply)
}

::google::protobuf::uint8* GuildRpcCreateGuildWarReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcCreateGuildWarReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcCreateGuildWarReply)
  return target;
}

size_t GuildRpcCreateGuildWarReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcCreateGuildWarReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcCreateGuildWarReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcCreateGuildWarReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcCreateGuildWarReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcCreateGuildWarReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcCreateGuildWarReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcCreateGuildWarReply)
    MergeFrom(*source);
  }
}

void GuildRpcCreateGuildWarReply::MergeFrom(const GuildRpcCreateGuildWarReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcCreateGuildWarReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcCreateGuildWarReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcCreateGuildWarReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcCreateGuildWarReply::CopyFrom(const GuildRpcCreateGuildWarReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcCreateGuildWarReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcCreateGuildWarReply::IsInitialized() const {
  return true;
}

void GuildRpcCreateGuildWarReply::Swap(GuildRpcCreateGuildWarReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcCreateGuildWarReply::InternalSwap(GuildRpcCreateGuildWarReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcCreateGuildWarReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcCreateGuildWarReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcCreateGuildWarReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcCreateGuildWarReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcCreateGuildWarReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcCreateGuildWarReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcCreateGuildWarReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcCreateGuildWarReply.Result)
  return result_;
}
void GuildRpcCreateGuildWarReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcCreateGuildWarReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcSyncNoticeOfOpenGuildWarNotify::kGuildWarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcSyncNoticeOfOpenGuildWarNotify::GuildRpcSyncNoticeOfOpenGuildWarNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcSyncNoticeOfOpenGuildWarNotify)
}
GuildRpcSyncNoticeOfOpenGuildWarNotify::GuildRpcSyncNoticeOfOpenGuildWarNotify(const GuildRpcSyncNoticeOfOpenGuildWarNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_guildwar()) {
    guildwar_ = new ::GuildWarObj(*from.guildwar_);
  } else {
    guildwar_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:GuildRpcSyncNoticeOfOpenGuildWarNotify)
}

void GuildRpcSyncNoticeOfOpenGuildWarNotify::SharedCtor() {
  _cached_size_ = 0;
  guildwar_ = NULL;
}

GuildRpcSyncNoticeOfOpenGuildWarNotify::~GuildRpcSyncNoticeOfOpenGuildWarNotify() {
  // @@protoc_insertion_point(destructor:GuildRpcSyncNoticeOfOpenGuildWarNotify)
  SharedDtor();
}

void GuildRpcSyncNoticeOfOpenGuildWarNotify::SharedDtor() {
  if (this != internal_default_instance()) delete guildwar_;
}

void GuildRpcSyncNoticeOfOpenGuildWarNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcSyncNoticeOfOpenGuildWarNotify::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcSyncNoticeOfOpenGuildWarNotify& GuildRpcSyncNoticeOfOpenGuildWarNotify::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcSyncNoticeOfOpenGuildWarNotify* GuildRpcSyncNoticeOfOpenGuildWarNotify::New(::google::protobuf::Arena* arena) const {
  GuildRpcSyncNoticeOfOpenGuildWarNotify* n = new GuildRpcSyncNoticeOfOpenGuildWarNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcSyncNoticeOfOpenGuildWarNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcSyncNoticeOfOpenGuildWarNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_guildwar()) {
    GOOGLE_DCHECK(guildwar_ != NULL);
    guildwar_->::GuildWarObj::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcSyncNoticeOfOpenGuildWarNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcSyncNoticeOfOpenGuildWarNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .GuildWarObj GuildWar = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_guildwar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcSyncNoticeOfOpenGuildWarNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcSyncNoticeOfOpenGuildWarNotify)
  return false;
#undef DO_
}

void GuildRpcSyncNoticeOfOpenGuildWarNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcSyncNoticeOfOpenGuildWarNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .GuildWarObj GuildWar = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->guildwar_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcSyncNoticeOfOpenGuildWarNotify)
}

::google::protobuf::uint8* GuildRpcSyncNoticeOfOpenGuildWarNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcSyncNoticeOfOpenGuildWarNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .GuildWarObj GuildWar = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->guildwar_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcSyncNoticeOfOpenGuildWarNotify)
  return target;
}

size_t GuildRpcSyncNoticeOfOpenGuildWarNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcSyncNoticeOfOpenGuildWarNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .GuildWarObj GuildWar = 2;
  if (has_guildwar()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->guildwar_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcSyncNoticeOfOpenGuildWarNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcSyncNoticeOfOpenGuildWarNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcSyncNoticeOfOpenGuildWarNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcSyncNoticeOfOpenGuildWarNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcSyncNoticeOfOpenGuildWarNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcSyncNoticeOfOpenGuildWarNotify)
    MergeFrom(*source);
  }
}

void GuildRpcSyncNoticeOfOpenGuildWarNotify::MergeFrom(const GuildRpcSyncNoticeOfOpenGuildWarNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcSyncNoticeOfOpenGuildWarNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_guildwar()) {
    mutable_guildwar()->::GuildWarObj::MergeFrom(from.guildwar());
  }
}

void GuildRpcSyncNoticeOfOpenGuildWarNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcSyncNoticeOfOpenGuildWarNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcSyncNoticeOfOpenGuildWarNotify::CopyFrom(const GuildRpcSyncNoticeOfOpenGuildWarNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcSyncNoticeOfOpenGuildWarNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcSyncNoticeOfOpenGuildWarNotify::IsInitialized() const {
  return true;
}

void GuildRpcSyncNoticeOfOpenGuildWarNotify::Swap(GuildRpcSyncNoticeOfOpenGuildWarNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcSyncNoticeOfOpenGuildWarNotify::InternalSwap(GuildRpcSyncNoticeOfOpenGuildWarNotify* other) {
  using std::swap;
  swap(guildwar_, other->guildwar_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcSyncNoticeOfOpenGuildWarNotify::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcSyncNoticeOfOpenGuildWarNotify

// optional .GuildWarObj GuildWar = 2;
bool GuildRpcSyncNoticeOfOpenGuildWarNotify::has_guildwar() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcSyncNoticeOfOpenGuildWarNotify::set_has_guildwar() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcSyncNoticeOfOpenGuildWarNotify::clear_has_guildwar() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcSyncNoticeOfOpenGuildWarNotify::clear_guildwar() {
  if (guildwar_ != NULL) guildwar_->::GuildWarObj::Clear();
  clear_has_guildwar();
}
const ::GuildWarObj& GuildRpcSyncNoticeOfOpenGuildWarNotify::guildwar() const {
  const ::GuildWarObj* p = guildwar_;
  // @@protoc_insertion_point(field_get:GuildRpcSyncNoticeOfOpenGuildWarNotify.GuildWar)
  return p != NULL ? *p : *reinterpret_cast<const ::GuildWarObj*>(
      &::_GuildWarObj_default_instance_);
}
::GuildWarObj* GuildRpcSyncNoticeOfOpenGuildWarNotify::mutable_guildwar() {
  set_has_guildwar();
  if (guildwar_ == NULL) {
    guildwar_ = new ::GuildWarObj;
  }
  // @@protoc_insertion_point(field_mutable:GuildRpcSyncNoticeOfOpenGuildWarNotify.GuildWar)
  return guildwar_;
}
::GuildWarObj* GuildRpcSyncNoticeOfOpenGuildWarNotify::release_guildwar() {
  // @@protoc_insertion_point(field_release:GuildRpcSyncNoticeOfOpenGuildWarNotify.GuildWar)
  clear_has_guildwar();
  ::GuildWarObj* temp = guildwar_;
  guildwar_ = NULL;
  return temp;
}
void GuildRpcSyncNoticeOfOpenGuildWarNotify::set_allocated_guildwar(::GuildWarObj* guildwar) {
  delete guildwar_;
  guildwar_ = guildwar;
  if (guildwar) {
    set_has_guildwar();
  } else {
    clear_has_guildwar();
  }
  // @@protoc_insertion_point(field_set_allocated:GuildRpcSyncNoticeOfOpenGuildWarNotify.GuildWar)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcEnterGuildWarAsk::GuildRpcEnterGuildWarAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcEnterGuildWarAsk)
}
GuildRpcEnterGuildWarAsk::GuildRpcEnterGuildWarAsk(const GuildRpcEnterGuildWarAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GuildRpcEnterGuildWarAsk)
}

void GuildRpcEnterGuildWarAsk::SharedCtor() {
  _cached_size_ = 0;
}

GuildRpcEnterGuildWarAsk::~GuildRpcEnterGuildWarAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcEnterGuildWarAsk)
  SharedDtor();
}

void GuildRpcEnterGuildWarAsk::SharedDtor() {
}

void GuildRpcEnterGuildWarAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcEnterGuildWarAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcEnterGuildWarAsk& GuildRpcEnterGuildWarAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcEnterGuildWarAsk* GuildRpcEnterGuildWarAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcEnterGuildWarAsk* n = new GuildRpcEnterGuildWarAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcEnterGuildWarAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcEnterGuildWarAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcEnterGuildWarAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcEnterGuildWarAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcEnterGuildWarAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcEnterGuildWarAsk)
  return false;
#undef DO_
}

void GuildRpcEnterGuildWarAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcEnterGuildWarAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcEnterGuildWarAsk)
}

::google::protobuf::uint8* GuildRpcEnterGuildWarAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcEnterGuildWarAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcEnterGuildWarAsk)
  return target;
}

size_t GuildRpcEnterGuildWarAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcEnterGuildWarAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcEnterGuildWarAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcEnterGuildWarAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcEnterGuildWarAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcEnterGuildWarAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcEnterGuildWarAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcEnterGuildWarAsk)
    MergeFrom(*source);
  }
}

void GuildRpcEnterGuildWarAsk::MergeFrom(const GuildRpcEnterGuildWarAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcEnterGuildWarAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GuildRpcEnterGuildWarAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcEnterGuildWarAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcEnterGuildWarAsk::CopyFrom(const GuildRpcEnterGuildWarAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcEnterGuildWarAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcEnterGuildWarAsk::IsInitialized() const {
  return true;
}

void GuildRpcEnterGuildWarAsk::Swap(GuildRpcEnterGuildWarAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcEnterGuildWarAsk::InternalSwap(GuildRpcEnterGuildWarAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcEnterGuildWarAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcEnterGuildWarAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcEnterGuildWarReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcEnterGuildWarReply::GuildRpcEnterGuildWarReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcEnterGuildWarReply)
}
GuildRpcEnterGuildWarReply::GuildRpcEnterGuildWarReply(const GuildRpcEnterGuildWarReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcEnterGuildWarReply)
}

void GuildRpcEnterGuildWarReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcEnterGuildWarReply::~GuildRpcEnterGuildWarReply() {
  // @@protoc_insertion_point(destructor:GuildRpcEnterGuildWarReply)
  SharedDtor();
}

void GuildRpcEnterGuildWarReply::SharedDtor() {
}

void GuildRpcEnterGuildWarReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcEnterGuildWarReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcEnterGuildWarReply& GuildRpcEnterGuildWarReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcEnterGuildWarReply* GuildRpcEnterGuildWarReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcEnterGuildWarReply* n = new GuildRpcEnterGuildWarReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcEnterGuildWarReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcEnterGuildWarReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcEnterGuildWarReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcEnterGuildWarReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcEnterGuildWarReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcEnterGuildWarReply)
  return false;
#undef DO_
}

void GuildRpcEnterGuildWarReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcEnterGuildWarReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcEnterGuildWarReply)
}

::google::protobuf::uint8* GuildRpcEnterGuildWarReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcEnterGuildWarReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcEnterGuildWarReply)
  return target;
}

size_t GuildRpcEnterGuildWarReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcEnterGuildWarReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcEnterGuildWarReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcEnterGuildWarReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcEnterGuildWarReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcEnterGuildWarReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcEnterGuildWarReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcEnterGuildWarReply)
    MergeFrom(*source);
  }
}

void GuildRpcEnterGuildWarReply::MergeFrom(const GuildRpcEnterGuildWarReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcEnterGuildWarReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcEnterGuildWarReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcEnterGuildWarReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcEnterGuildWarReply::CopyFrom(const GuildRpcEnterGuildWarReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcEnterGuildWarReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcEnterGuildWarReply::IsInitialized() const {
  return true;
}

void GuildRpcEnterGuildWarReply::Swap(GuildRpcEnterGuildWarReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcEnterGuildWarReply::InternalSwap(GuildRpcEnterGuildWarReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcEnterGuildWarReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcEnterGuildWarReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcEnterGuildWarReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcEnterGuildWarReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcEnterGuildWarReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcEnterGuildWarReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcEnterGuildWarReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcEnterGuildWarReply.Result)
  return result_;
}
void GuildRpcEnterGuildWarReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcEnterGuildWarReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcOpenScienceAttrAsk::kScienceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcOpenScienceAttrAsk::GuildRpcOpenScienceAttrAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcOpenScienceAttrAsk)
}
GuildRpcOpenScienceAttrAsk::GuildRpcOpenScienceAttrAsk(const GuildRpcOpenScienceAttrAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scienceid_ = from.scienceid_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcOpenScienceAttrAsk)
}

void GuildRpcOpenScienceAttrAsk::SharedCtor() {
  _cached_size_ = 0;
  scienceid_ = -1;
}

GuildRpcOpenScienceAttrAsk::~GuildRpcOpenScienceAttrAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcOpenScienceAttrAsk)
  SharedDtor();
}

void GuildRpcOpenScienceAttrAsk::SharedDtor() {
}

void GuildRpcOpenScienceAttrAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcOpenScienceAttrAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcOpenScienceAttrAsk& GuildRpcOpenScienceAttrAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcOpenScienceAttrAsk* GuildRpcOpenScienceAttrAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcOpenScienceAttrAsk* n = new GuildRpcOpenScienceAttrAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcOpenScienceAttrAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcOpenScienceAttrAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scienceid_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcOpenScienceAttrAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcOpenScienceAttrAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 ScienceId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_scienceid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &scienceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcOpenScienceAttrAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcOpenScienceAttrAsk)
  return false;
#undef DO_
}

void GuildRpcOpenScienceAttrAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcOpenScienceAttrAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ScienceId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->scienceid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcOpenScienceAttrAsk)
}

::google::protobuf::uint8* GuildRpcOpenScienceAttrAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcOpenScienceAttrAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ScienceId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->scienceid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcOpenScienceAttrAsk)
  return target;
}

size_t GuildRpcOpenScienceAttrAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcOpenScienceAttrAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 ScienceId = 1 [default = -1];
  if (has_scienceid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->scienceid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcOpenScienceAttrAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcOpenScienceAttrAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcOpenScienceAttrAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcOpenScienceAttrAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcOpenScienceAttrAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcOpenScienceAttrAsk)
    MergeFrom(*source);
  }
}

void GuildRpcOpenScienceAttrAsk::MergeFrom(const GuildRpcOpenScienceAttrAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcOpenScienceAttrAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_scienceid()) {
    set_scienceid(from.scienceid());
  }
}

void GuildRpcOpenScienceAttrAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcOpenScienceAttrAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcOpenScienceAttrAsk::CopyFrom(const GuildRpcOpenScienceAttrAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcOpenScienceAttrAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcOpenScienceAttrAsk::IsInitialized() const {
  return true;
}

void GuildRpcOpenScienceAttrAsk::Swap(GuildRpcOpenScienceAttrAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcOpenScienceAttrAsk::InternalSwap(GuildRpcOpenScienceAttrAsk* other) {
  using std::swap;
  swap(scienceid_, other->scienceid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcOpenScienceAttrAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcOpenScienceAttrAsk

// optional sint32 ScienceId = 1 [default = -1];
bool GuildRpcOpenScienceAttrAsk::has_scienceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcOpenScienceAttrAsk::set_has_scienceid() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcOpenScienceAttrAsk::clear_has_scienceid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcOpenScienceAttrAsk::clear_scienceid() {
  scienceid_ = -1;
  clear_has_scienceid();
}
::google::protobuf::int32 GuildRpcOpenScienceAttrAsk::scienceid() const {
  // @@protoc_insertion_point(field_get:GuildRpcOpenScienceAttrAsk.ScienceId)
  return scienceid_;
}
void GuildRpcOpenScienceAttrAsk::set_scienceid(::google::protobuf::int32 value) {
  set_has_scienceid();
  scienceid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcOpenScienceAttrAsk.ScienceId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcOpenScienceAttrReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcOpenScienceAttrReply::GuildRpcOpenScienceAttrReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcOpenScienceAttrReply)
}
GuildRpcOpenScienceAttrReply::GuildRpcOpenScienceAttrReply(const GuildRpcOpenScienceAttrReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcOpenScienceAttrReply)
}

void GuildRpcOpenScienceAttrReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcOpenScienceAttrReply::~GuildRpcOpenScienceAttrReply() {
  // @@protoc_insertion_point(destructor:GuildRpcOpenScienceAttrReply)
  SharedDtor();
}

void GuildRpcOpenScienceAttrReply::SharedDtor() {
}

void GuildRpcOpenScienceAttrReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcOpenScienceAttrReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcOpenScienceAttrReply& GuildRpcOpenScienceAttrReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcOpenScienceAttrReply* GuildRpcOpenScienceAttrReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcOpenScienceAttrReply* n = new GuildRpcOpenScienceAttrReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcOpenScienceAttrReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcOpenScienceAttrReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcOpenScienceAttrReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcOpenScienceAttrReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcOpenScienceAttrReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcOpenScienceAttrReply)
  return false;
#undef DO_
}

void GuildRpcOpenScienceAttrReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcOpenScienceAttrReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcOpenScienceAttrReply)
}

::google::protobuf::uint8* GuildRpcOpenScienceAttrReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcOpenScienceAttrReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcOpenScienceAttrReply)
  return target;
}

size_t GuildRpcOpenScienceAttrReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcOpenScienceAttrReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcOpenScienceAttrReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcOpenScienceAttrReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcOpenScienceAttrReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcOpenScienceAttrReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcOpenScienceAttrReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcOpenScienceAttrReply)
    MergeFrom(*source);
  }
}

void GuildRpcOpenScienceAttrReply::MergeFrom(const GuildRpcOpenScienceAttrReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcOpenScienceAttrReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcOpenScienceAttrReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcOpenScienceAttrReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcOpenScienceAttrReply::CopyFrom(const GuildRpcOpenScienceAttrReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcOpenScienceAttrReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcOpenScienceAttrReply::IsInitialized() const {
  return true;
}

void GuildRpcOpenScienceAttrReply::Swap(GuildRpcOpenScienceAttrReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcOpenScienceAttrReply::InternalSwap(GuildRpcOpenScienceAttrReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcOpenScienceAttrReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcOpenScienceAttrReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcOpenScienceAttrReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcOpenScienceAttrReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcOpenScienceAttrReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcOpenScienceAttrReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcOpenScienceAttrReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcOpenScienceAttrReply.Result)
  return result_;
}
void GuildRpcOpenScienceAttrReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcOpenScienceAttrReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcGuildScienceLvUpAsk::kScienceIdFieldNumber;
const int GuildRpcGuildScienceLvUpAsk::kIsKeyUpLvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcGuildScienceLvUpAsk::GuildRpcGuildScienceLvUpAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcGuildScienceLvUpAsk)
}
GuildRpcGuildScienceLvUpAsk::GuildRpcGuildScienceLvUpAsk(const GuildRpcGuildScienceLvUpAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&iskeyuplv_, &from.iskeyuplv_,
    static_cast<size_t>(reinterpret_cast<char*>(&scienceid_) -
    reinterpret_cast<char*>(&iskeyuplv_)) + sizeof(scienceid_));
  // @@protoc_insertion_point(copy_constructor:GuildRpcGuildScienceLvUpAsk)
}

void GuildRpcGuildScienceLvUpAsk::SharedCtor() {
  _cached_size_ = 0;
  iskeyuplv_ = false;
  scienceid_ = -1;
}

GuildRpcGuildScienceLvUpAsk::~GuildRpcGuildScienceLvUpAsk() {
  // @@protoc_insertion_point(destructor:GuildRpcGuildScienceLvUpAsk)
  SharedDtor();
}

void GuildRpcGuildScienceLvUpAsk::SharedDtor() {
}

void GuildRpcGuildScienceLvUpAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcGuildScienceLvUpAsk::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcGuildScienceLvUpAsk& GuildRpcGuildScienceLvUpAsk::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcGuildScienceLvUpAsk* GuildRpcGuildScienceLvUpAsk::New(::google::protobuf::Arena* arena) const {
  GuildRpcGuildScienceLvUpAsk* n = new GuildRpcGuildScienceLvUpAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcGuildScienceLvUpAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcGuildScienceLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    iskeyuplv_ = false;
    scienceid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcGuildScienceLvUpAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcGuildScienceLvUpAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 ScienceId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_scienceid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &scienceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsKeyUpLv = 3 [default = false];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_iskeyuplv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &iskeyuplv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcGuildScienceLvUpAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcGuildScienceLvUpAsk)
  return false;
#undef DO_
}

void GuildRpcGuildScienceLvUpAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcGuildScienceLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ScienceId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->scienceid(), output);
  }

  // optional bool IsKeyUpLv = 3 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->iskeyuplv(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcGuildScienceLvUpAsk)
}

::google::protobuf::uint8* GuildRpcGuildScienceLvUpAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcGuildScienceLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ScienceId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->scienceid(), target);
  }

  // optional bool IsKeyUpLv = 3 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->iskeyuplv(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcGuildScienceLvUpAsk)
  return target;
}

size_t GuildRpcGuildScienceLvUpAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcGuildScienceLvUpAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bool IsKeyUpLv = 3 [default = false];
    if (has_iskeyuplv()) {
      total_size += 1 + 1;
    }

    // optional sint32 ScienceId = 2 [default = -1];
    if (has_scienceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->scienceid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcGuildScienceLvUpAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcGuildScienceLvUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcGuildScienceLvUpAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcGuildScienceLvUpAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcGuildScienceLvUpAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcGuildScienceLvUpAsk)
    MergeFrom(*source);
  }
}

void GuildRpcGuildScienceLvUpAsk::MergeFrom(const GuildRpcGuildScienceLvUpAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcGuildScienceLvUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      iskeyuplv_ = from.iskeyuplv_;
    }
    if (cached_has_bits & 0x00000002u) {
      scienceid_ = from.scienceid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildRpcGuildScienceLvUpAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcGuildScienceLvUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcGuildScienceLvUpAsk::CopyFrom(const GuildRpcGuildScienceLvUpAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcGuildScienceLvUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcGuildScienceLvUpAsk::IsInitialized() const {
  return true;
}

void GuildRpcGuildScienceLvUpAsk::Swap(GuildRpcGuildScienceLvUpAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcGuildScienceLvUpAsk::InternalSwap(GuildRpcGuildScienceLvUpAsk* other) {
  using std::swap;
  swap(iskeyuplv_, other->iskeyuplv_);
  swap(scienceid_, other->scienceid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcGuildScienceLvUpAsk::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcGuildScienceLvUpAsk

// optional sint32 ScienceId = 2 [default = -1];
bool GuildRpcGuildScienceLvUpAsk::has_scienceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildRpcGuildScienceLvUpAsk::set_has_scienceid() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildRpcGuildScienceLvUpAsk::clear_has_scienceid() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildRpcGuildScienceLvUpAsk::clear_scienceid() {
  scienceid_ = -1;
  clear_has_scienceid();
}
::google::protobuf::int32 GuildRpcGuildScienceLvUpAsk::scienceid() const {
  // @@protoc_insertion_point(field_get:GuildRpcGuildScienceLvUpAsk.ScienceId)
  return scienceid_;
}
void GuildRpcGuildScienceLvUpAsk::set_scienceid(::google::protobuf::int32 value) {
  set_has_scienceid();
  scienceid_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcGuildScienceLvUpAsk.ScienceId)
}

// optional bool IsKeyUpLv = 3 [default = false];
bool GuildRpcGuildScienceLvUpAsk::has_iskeyuplv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcGuildScienceLvUpAsk::set_has_iskeyuplv() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcGuildScienceLvUpAsk::clear_has_iskeyuplv() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcGuildScienceLvUpAsk::clear_iskeyuplv() {
  iskeyuplv_ = false;
  clear_has_iskeyuplv();
}
bool GuildRpcGuildScienceLvUpAsk::iskeyuplv() const {
  // @@protoc_insertion_point(field_get:GuildRpcGuildScienceLvUpAsk.IsKeyUpLv)
  return iskeyuplv_;
}
void GuildRpcGuildScienceLvUpAsk::set_iskeyuplv(bool value) {
  set_has_iskeyuplv();
  iskeyuplv_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcGuildScienceLvUpAsk.IsKeyUpLv)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildRpcGuildScienceLvUpReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildRpcGuildScienceLvUpReply::GuildRpcGuildScienceLvUpReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GuildRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildRpcGuildScienceLvUpReply)
}
GuildRpcGuildScienceLvUpReply::GuildRpcGuildScienceLvUpReply(const GuildRpcGuildScienceLvUpReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:GuildRpcGuildScienceLvUpReply)
}

void GuildRpcGuildScienceLvUpReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

GuildRpcGuildScienceLvUpReply::~GuildRpcGuildScienceLvUpReply() {
  // @@protoc_insertion_point(destructor:GuildRpcGuildScienceLvUpReply)
  SharedDtor();
}

void GuildRpcGuildScienceLvUpReply::SharedDtor() {
}

void GuildRpcGuildScienceLvUpReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildRpcGuildScienceLvUpReply::descriptor() {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildRpcGuildScienceLvUpReply& GuildRpcGuildScienceLvUpReply::default_instance() {
  protobuf_GuildRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildRpcGuildScienceLvUpReply* GuildRpcGuildScienceLvUpReply::New(::google::protobuf::Arena* arena) const {
  GuildRpcGuildScienceLvUpReply* n = new GuildRpcGuildScienceLvUpReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildRpcGuildScienceLvUpReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildRpcGuildScienceLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildRpcGuildScienceLvUpReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildRpcGuildScienceLvUpReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildRpcGuildScienceLvUpReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildRpcGuildScienceLvUpReply)
  return false;
#undef DO_
}

void GuildRpcGuildScienceLvUpReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildRpcGuildScienceLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildRpcGuildScienceLvUpReply)
}

::google::protobuf::uint8* GuildRpcGuildScienceLvUpReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildRpcGuildScienceLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildRpcGuildScienceLvUpReply)
  return target;
}

size_t GuildRpcGuildScienceLvUpReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildRpcGuildScienceLvUpReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildRpcGuildScienceLvUpReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildRpcGuildScienceLvUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildRpcGuildScienceLvUpReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildRpcGuildScienceLvUpReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildRpcGuildScienceLvUpReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildRpcGuildScienceLvUpReply)
    MergeFrom(*source);
  }
}

void GuildRpcGuildScienceLvUpReply::MergeFrom(const GuildRpcGuildScienceLvUpReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildRpcGuildScienceLvUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void GuildRpcGuildScienceLvUpReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildRpcGuildScienceLvUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildRpcGuildScienceLvUpReply::CopyFrom(const GuildRpcGuildScienceLvUpReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildRpcGuildScienceLvUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildRpcGuildScienceLvUpReply::IsInitialized() const {
  return true;
}

void GuildRpcGuildScienceLvUpReply::Swap(GuildRpcGuildScienceLvUpReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildRpcGuildScienceLvUpReply::InternalSwap(GuildRpcGuildScienceLvUpReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildRpcGuildScienceLvUpReply::GetMetadata() const {
  protobuf_GuildRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GuildRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildRpcGuildScienceLvUpReply

// optional sint32 Result = 1 [default = -9999];
bool GuildRpcGuildScienceLvUpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildRpcGuildScienceLvUpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildRpcGuildScienceLvUpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildRpcGuildScienceLvUpReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 GuildRpcGuildScienceLvUpReply::result() const {
  // @@protoc_insertion_point(field_get:GuildRpcGuildScienceLvUpReply.Result)
  return result_;
}
void GuildRpcGuildScienceLvUpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:GuildRpcGuildScienceLvUpReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
