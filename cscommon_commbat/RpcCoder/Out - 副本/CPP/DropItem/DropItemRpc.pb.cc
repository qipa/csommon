// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DropItemRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "DropItemRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class DropItemRpcDropItemNoticeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DropItemRpcDropItemNoticeNotify>
     _instance;
} _DropItemRpcDropItemNoticeNotify_default_instance_;
class DropItemRpcPickupItemAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DropItemRpcPickupItemAsk>
     _instance;
} _DropItemRpcPickupItemAsk_default_instance_;
class DropItemRpcPickupItemReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DropItemRpcPickupItemReply>
     _instance;
} _DropItemRpcPickupItemReply_default_instance_;
class DropItemRpcDelDropItemNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DropItemRpcDelDropItemNotify>
     _instance;
} _DropItemRpcDelDropItemNotify_default_instance_;

namespace protobuf_DropItemRpc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemRpcDropItemNoticeNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemRpcDropItemNoticeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemRpcDropItemNoticeNotify, dropitem_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemRpcPickupItemAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemRpcPickupItemAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemRpcPickupItemAsk, uid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemRpcPickupItemReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemRpcPickupItemReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemRpcPickupItemReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemRpcDelDropItemNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemRpcDelDropItemNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemRpcDelDropItemNotify, uid_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(DropItemRpcDropItemNoticeNotify)},
  { 7, 13, sizeof(DropItemRpcPickupItemAsk)},
  { 14, 20, sizeof(DropItemRpcPickupItemReply)},
  { 21, 27, sizeof(DropItemRpcDelDropItemNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_DropItemRpcDropItemNoticeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DropItemRpcPickupItemAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DropItemRpcPickupItemReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DropItemRpcDelDropItemNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "DropItemRpc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _DropItemRpcDropItemNoticeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DropItemRpcDropItemNoticeNotify_default_instance_);_DropItemRpcPickupItemAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DropItemRpcPickupItemAsk_default_instance_);_DropItemRpcPickupItemReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DropItemRpcPickupItemReply_default_instance_);_DropItemRpcDelDropItemNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DropItemRpcDelDropItemNotify_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021DropItemRpc.proto\032\022PublicStruct.proto\""
      "A\n\037DropItemRpcDropItemNoticeNotify\022\036\n\010Dr"
      "opItem\030\001 \003(\0132\014.DropItemObj\"+\n\030DropItemRp"
      "cPickupItemAsk\022\017\n\003UId\030\002 \001(\021:\002-1\"3\n\032DropI"
      "temRpcPickupItemReply\022\025\n\006Result\030\001 \001(\021:\005-"
      "9999\"/\n\034DropItemRpcDelDropItemNotify\022\017\n\003"
      "UId\030\001 \001(\021:\002-1"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 253);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DropItemRpc.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_DropItemRpc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropItemRpcDropItemNoticeNotify::kDropItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropItemRpcDropItemNoticeNotify::DropItemRpcDropItemNoticeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DropItemRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DropItemRpcDropItemNoticeNotify)
}
DropItemRpcDropItemNoticeNotify::DropItemRpcDropItemNoticeNotify(const DropItemRpcDropItemNoticeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      dropitem_(from.dropitem_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DropItemRpcDropItemNoticeNotify)
}

void DropItemRpcDropItemNoticeNotify::SharedCtor() {
  _cached_size_ = 0;
}

DropItemRpcDropItemNoticeNotify::~DropItemRpcDropItemNoticeNotify() {
  // @@protoc_insertion_point(destructor:DropItemRpcDropItemNoticeNotify)
  SharedDtor();
}

void DropItemRpcDropItemNoticeNotify::SharedDtor() {
}

void DropItemRpcDropItemNoticeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DropItemRpcDropItemNoticeNotify::descriptor() {
  protobuf_DropItemRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DropItemRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropItemRpcDropItemNoticeNotify& DropItemRpcDropItemNoticeNotify::default_instance() {
  protobuf_DropItemRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

DropItemRpcDropItemNoticeNotify* DropItemRpcDropItemNoticeNotify::New(::google::protobuf::Arena* arena) const {
  DropItemRpcDropItemNoticeNotify* n = new DropItemRpcDropItemNoticeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DropItemRpcDropItemNoticeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:DropItemRpcDropItemNoticeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dropitem_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DropItemRpcDropItemNoticeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DropItemRpcDropItemNoticeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DropItemObj DropItem = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dropitem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DropItemRpcDropItemNoticeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DropItemRpcDropItemNoticeNotify)
  return false;
#undef DO_
}

void DropItemRpcDropItemNoticeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DropItemRpcDropItemNoticeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DropItemObj DropItem = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dropitem_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dropitem(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DropItemRpcDropItemNoticeNotify)
}

::google::protobuf::uint8* DropItemRpcDropItemNoticeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DropItemRpcDropItemNoticeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DropItemObj DropItem = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dropitem_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->dropitem(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DropItemRpcDropItemNoticeNotify)
  return target;
}

size_t DropItemRpcDropItemNoticeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DropItemRpcDropItemNoticeNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .DropItemObj DropItem = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->dropitem_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dropitem(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DropItemRpcDropItemNoticeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DropItemRpcDropItemNoticeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const DropItemRpcDropItemNoticeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropItemRpcDropItemNoticeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DropItemRpcDropItemNoticeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DropItemRpcDropItemNoticeNotify)
    MergeFrom(*source);
  }
}

void DropItemRpcDropItemNoticeNotify::MergeFrom(const DropItemRpcDropItemNoticeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DropItemRpcDropItemNoticeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dropitem_.MergeFrom(from.dropitem_);
}

void DropItemRpcDropItemNoticeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DropItemRpcDropItemNoticeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropItemRpcDropItemNoticeNotify::CopyFrom(const DropItemRpcDropItemNoticeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DropItemRpcDropItemNoticeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropItemRpcDropItemNoticeNotify::IsInitialized() const {
  return true;
}

void DropItemRpcDropItemNoticeNotify::Swap(DropItemRpcDropItemNoticeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropItemRpcDropItemNoticeNotify::InternalSwap(DropItemRpcDropItemNoticeNotify* other) {
  using std::swap;
  dropitem_.InternalSwap(&other->dropitem_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DropItemRpcDropItemNoticeNotify::GetMetadata() const {
  protobuf_DropItemRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DropItemRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DropItemRpcDropItemNoticeNotify

// repeated .DropItemObj DropItem = 1;
int DropItemRpcDropItemNoticeNotify::dropitem_size() const {
  return dropitem_.size();
}
void DropItemRpcDropItemNoticeNotify::clear_dropitem() {
  dropitem_.Clear();
}
const ::DropItemObj& DropItemRpcDropItemNoticeNotify::dropitem(int index) const {
  // @@protoc_insertion_point(field_get:DropItemRpcDropItemNoticeNotify.DropItem)
  return dropitem_.Get(index);
}
::DropItemObj* DropItemRpcDropItemNoticeNotify::mutable_dropitem(int index) {
  // @@protoc_insertion_point(field_mutable:DropItemRpcDropItemNoticeNotify.DropItem)
  return dropitem_.Mutable(index);
}
::DropItemObj* DropItemRpcDropItemNoticeNotify::add_dropitem() {
  // @@protoc_insertion_point(field_add:DropItemRpcDropItemNoticeNotify.DropItem)
  return dropitem_.Add();
}
::google::protobuf::RepeatedPtrField< ::DropItemObj >*
DropItemRpcDropItemNoticeNotify::mutable_dropitem() {
  // @@protoc_insertion_point(field_mutable_list:DropItemRpcDropItemNoticeNotify.DropItem)
  return &dropitem_;
}
const ::google::protobuf::RepeatedPtrField< ::DropItemObj >&
DropItemRpcDropItemNoticeNotify::dropitem() const {
  // @@protoc_insertion_point(field_list:DropItemRpcDropItemNoticeNotify.DropItem)
  return dropitem_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropItemRpcPickupItemAsk::kUIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropItemRpcPickupItemAsk::DropItemRpcPickupItemAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DropItemRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DropItemRpcPickupItemAsk)
}
DropItemRpcPickupItemAsk::DropItemRpcPickupItemAsk(const DropItemRpcPickupItemAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:DropItemRpcPickupItemAsk)
}

void DropItemRpcPickupItemAsk::SharedCtor() {
  _cached_size_ = 0;
  uid_ = -1;
}

DropItemRpcPickupItemAsk::~DropItemRpcPickupItemAsk() {
  // @@protoc_insertion_point(destructor:DropItemRpcPickupItemAsk)
  SharedDtor();
}

void DropItemRpcPickupItemAsk::SharedDtor() {
}

void DropItemRpcPickupItemAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DropItemRpcPickupItemAsk::descriptor() {
  protobuf_DropItemRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DropItemRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropItemRpcPickupItemAsk& DropItemRpcPickupItemAsk::default_instance() {
  protobuf_DropItemRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

DropItemRpcPickupItemAsk* DropItemRpcPickupItemAsk::New(::google::protobuf::Arena* arena) const {
  DropItemRpcPickupItemAsk* n = new DropItemRpcPickupItemAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DropItemRpcPickupItemAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:DropItemRpcPickupItemAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DropItemRpcPickupItemAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DropItemRpcPickupItemAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 UId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DropItemRpcPickupItemAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DropItemRpcPickupItemAsk)
  return false;
#undef DO_
}

void DropItemRpcPickupItemAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DropItemRpcPickupItemAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 UId = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DropItemRpcPickupItemAsk)
}

::google::protobuf::uint8* DropItemRpcPickupItemAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DropItemRpcPickupItemAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 UId = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DropItemRpcPickupItemAsk)
  return target;
}

size_t DropItemRpcPickupItemAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DropItemRpcPickupItemAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 UId = 2 [default = -1];
  if (has_uid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DropItemRpcPickupItemAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DropItemRpcPickupItemAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const DropItemRpcPickupItemAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropItemRpcPickupItemAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DropItemRpcPickupItemAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DropItemRpcPickupItemAsk)
    MergeFrom(*source);
  }
}

void DropItemRpcPickupItemAsk::MergeFrom(const DropItemRpcPickupItemAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DropItemRpcPickupItemAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_uid()) {
    set_uid(from.uid());
  }
}

void DropItemRpcPickupItemAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DropItemRpcPickupItemAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropItemRpcPickupItemAsk::CopyFrom(const DropItemRpcPickupItemAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DropItemRpcPickupItemAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropItemRpcPickupItemAsk::IsInitialized() const {
  return true;
}

void DropItemRpcPickupItemAsk::Swap(DropItemRpcPickupItemAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropItemRpcPickupItemAsk::InternalSwap(DropItemRpcPickupItemAsk* other) {
  using std::swap;
  swap(uid_, other->uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DropItemRpcPickupItemAsk::GetMetadata() const {
  protobuf_DropItemRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DropItemRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DropItemRpcPickupItemAsk

// optional sint32 UId = 2 [default = -1];
bool DropItemRpcPickupItemAsk::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DropItemRpcPickupItemAsk::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void DropItemRpcPickupItemAsk::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void DropItemRpcPickupItemAsk::clear_uid() {
  uid_ = -1;
  clear_has_uid();
}
::google::protobuf::int32 DropItemRpcPickupItemAsk::uid() const {
  // @@protoc_insertion_point(field_get:DropItemRpcPickupItemAsk.UId)
  return uid_;
}
void DropItemRpcPickupItemAsk::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:DropItemRpcPickupItemAsk.UId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropItemRpcPickupItemReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropItemRpcPickupItemReply::DropItemRpcPickupItemReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DropItemRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DropItemRpcPickupItemReply)
}
DropItemRpcPickupItemReply::DropItemRpcPickupItemReply(const DropItemRpcPickupItemReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:DropItemRpcPickupItemReply)
}

void DropItemRpcPickupItemReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

DropItemRpcPickupItemReply::~DropItemRpcPickupItemReply() {
  // @@protoc_insertion_point(destructor:DropItemRpcPickupItemReply)
  SharedDtor();
}

void DropItemRpcPickupItemReply::SharedDtor() {
}

void DropItemRpcPickupItemReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DropItemRpcPickupItemReply::descriptor() {
  protobuf_DropItemRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DropItemRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropItemRpcPickupItemReply& DropItemRpcPickupItemReply::default_instance() {
  protobuf_DropItemRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

DropItemRpcPickupItemReply* DropItemRpcPickupItemReply::New(::google::protobuf::Arena* arena) const {
  DropItemRpcPickupItemReply* n = new DropItemRpcPickupItemReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DropItemRpcPickupItemReply::Clear() {
// @@protoc_insertion_point(message_clear_start:DropItemRpcPickupItemReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DropItemRpcPickupItemReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DropItemRpcPickupItemReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DropItemRpcPickupItemReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DropItemRpcPickupItemReply)
  return false;
#undef DO_
}

void DropItemRpcPickupItemReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DropItemRpcPickupItemReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DropItemRpcPickupItemReply)
}

::google::protobuf::uint8* DropItemRpcPickupItemReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DropItemRpcPickupItemReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DropItemRpcPickupItemReply)
  return target;
}

size_t DropItemRpcPickupItemReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DropItemRpcPickupItemReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DropItemRpcPickupItemReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DropItemRpcPickupItemReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DropItemRpcPickupItemReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropItemRpcPickupItemReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DropItemRpcPickupItemReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DropItemRpcPickupItemReply)
    MergeFrom(*source);
  }
}

void DropItemRpcPickupItemReply::MergeFrom(const DropItemRpcPickupItemReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DropItemRpcPickupItemReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void DropItemRpcPickupItemReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DropItemRpcPickupItemReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropItemRpcPickupItemReply::CopyFrom(const DropItemRpcPickupItemReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DropItemRpcPickupItemReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropItemRpcPickupItemReply::IsInitialized() const {
  return true;
}

void DropItemRpcPickupItemReply::Swap(DropItemRpcPickupItemReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropItemRpcPickupItemReply::InternalSwap(DropItemRpcPickupItemReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DropItemRpcPickupItemReply::GetMetadata() const {
  protobuf_DropItemRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DropItemRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DropItemRpcPickupItemReply

// optional sint32 Result = 1 [default = -9999];
bool DropItemRpcPickupItemReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DropItemRpcPickupItemReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void DropItemRpcPickupItemReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void DropItemRpcPickupItemReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 DropItemRpcPickupItemReply::result() const {
  // @@protoc_insertion_point(field_get:DropItemRpcPickupItemReply.Result)
  return result_;
}
void DropItemRpcPickupItemReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:DropItemRpcPickupItemReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropItemRpcDelDropItemNotify::kUIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropItemRpcDelDropItemNotify::DropItemRpcDelDropItemNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DropItemRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DropItemRpcDelDropItemNotify)
}
DropItemRpcDelDropItemNotify::DropItemRpcDelDropItemNotify(const DropItemRpcDelDropItemNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:DropItemRpcDelDropItemNotify)
}

void DropItemRpcDelDropItemNotify::SharedCtor() {
  _cached_size_ = 0;
  uid_ = -1;
}

DropItemRpcDelDropItemNotify::~DropItemRpcDelDropItemNotify() {
  // @@protoc_insertion_point(destructor:DropItemRpcDelDropItemNotify)
  SharedDtor();
}

void DropItemRpcDelDropItemNotify::SharedDtor() {
}

void DropItemRpcDelDropItemNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DropItemRpcDelDropItemNotify::descriptor() {
  protobuf_DropItemRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DropItemRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropItemRpcDelDropItemNotify& DropItemRpcDelDropItemNotify::default_instance() {
  protobuf_DropItemRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

DropItemRpcDelDropItemNotify* DropItemRpcDelDropItemNotify::New(::google::protobuf::Arena* arena) const {
  DropItemRpcDelDropItemNotify* n = new DropItemRpcDelDropItemNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DropItemRpcDelDropItemNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:DropItemRpcDelDropItemNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DropItemRpcDelDropItemNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DropItemRpcDelDropItemNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 UId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DropItemRpcDelDropItemNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DropItemRpcDelDropItemNotify)
  return false;
#undef DO_
}

void DropItemRpcDelDropItemNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DropItemRpcDelDropItemNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 UId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DropItemRpcDelDropItemNotify)
}

::google::protobuf::uint8* DropItemRpcDelDropItemNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DropItemRpcDelDropItemNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 UId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DropItemRpcDelDropItemNotify)
  return target;
}

size_t DropItemRpcDelDropItemNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DropItemRpcDelDropItemNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 UId = 1 [default = -1];
  if (has_uid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DropItemRpcDelDropItemNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DropItemRpcDelDropItemNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const DropItemRpcDelDropItemNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropItemRpcDelDropItemNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DropItemRpcDelDropItemNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DropItemRpcDelDropItemNotify)
    MergeFrom(*source);
  }
}

void DropItemRpcDelDropItemNotify::MergeFrom(const DropItemRpcDelDropItemNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DropItemRpcDelDropItemNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_uid()) {
    set_uid(from.uid());
  }
}

void DropItemRpcDelDropItemNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DropItemRpcDelDropItemNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropItemRpcDelDropItemNotify::CopyFrom(const DropItemRpcDelDropItemNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DropItemRpcDelDropItemNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropItemRpcDelDropItemNotify::IsInitialized() const {
  return true;
}

void DropItemRpcDelDropItemNotify::Swap(DropItemRpcDelDropItemNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropItemRpcDelDropItemNotify::InternalSwap(DropItemRpcDelDropItemNotify* other) {
  using std::swap;
  swap(uid_, other->uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DropItemRpcDelDropItemNotify::GetMetadata() const {
  protobuf_DropItemRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DropItemRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DropItemRpcDelDropItemNotify

// optional sint32 UId = 1 [default = -1];
bool DropItemRpcDelDropItemNotify::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DropItemRpcDelDropItemNotify::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void DropItemRpcDelDropItemNotify::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void DropItemRpcDelDropItemNotify::clear_uid() {
  uid_ = -1;
  clear_has_uid();
}
::google::protobuf::int32 DropItemRpcDelDropItemNotify::uid() const {
  // @@protoc_insertion_point(field_get:DropItemRpcDelDropItemNotify.UId)
  return uid_;
}
void DropItemRpcDelDropItemNotify::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:DropItemRpcDelDropItemNotify.UId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
