// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PublicStruct.proto

#ifndef PROTOBUF_PublicStruct_2eproto__INCLUDED
#define PROTOBUF_PublicStruct_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class ActMessage;
class ActMessageDefaultTypeInternal;
extern ActMessageDefaultTypeInternal _ActMessage_default_instance_;
class ActivityNpcData;
class ActivityNpcDataDefaultTypeInternal;
extern ActivityNpcDataDefaultTypeInternal _ActivityNpcData_default_instance_;
class ApplyListRoleInfoObj;
class ApplyListRoleInfoObjDefaultTypeInternal;
extern ApplyListRoleInfoObjDefaultTypeInternal _ApplyListRoleInfoObj_default_instance_;
class BagAttrFloatObj;
class BagAttrFloatObjDefaultTypeInternal;
extern BagAttrFloatObjDefaultTypeInternal _BagAttrFloatObj_default_instance_;
class BagAttrIntObj;
class BagAttrIntObjDefaultTypeInternal;
extern BagAttrIntObjDefaultTypeInternal _BagAttrIntObj_default_instance_;
class BagEquipObj;
class BagEquipObjDefaultTypeInternal;
extern BagEquipObjDefaultTypeInternal _BagEquipObj_default_instance_;
class BagExtraAttrIdObj;
class BagExtraAttrIdObjDefaultTypeInternal;
extern BagExtraAttrIdObjDefaultTypeInternal _BagExtraAttrIdObj_default_instance_;
class BagExtraAttrObj;
class BagExtraAttrObjDefaultTypeInternal;
extern BagExtraAttrObjDefaultTypeInternal _BagExtraAttrObj_default_instance_;
class BagGemObj;
class BagGemObjDefaultTypeInternal;
extern BagGemObjDefaultTypeInternal _BagGemObj_default_instance_;
class BagGridObj;
class BagGridObjDefaultTypeInternal;
extern BagGridObjDefaultTypeInternal _BagGridObj_default_instance_;
class BagRecycleGridObj;
class BagRecycleGridObjDefaultTypeInternal;
extern BagRecycleGridObjDefaultTypeInternal _BagRecycleGridObj_default_instance_;
class ChatHyperLink;
class ChatHyperLinkDefaultTypeInternal;
extern ChatHyperLinkDefaultTypeInternal _ChatHyperLink_default_instance_;
class ChatMsgObj;
class ChatMsgObjDefaultTypeInternal;
extern ChatMsgObjDefaultTypeInternal _ChatMsgObj_default_instance_;
class ChatNetData;
class ChatNetDataDefaultTypeInternal;
extern ChatNetDataDefaultTypeInternal _ChatNetData_default_instance_;
class ChatObj;
class ChatObjDefaultTypeInternal;
extern ChatObjDefaultTypeInternal _ChatObj_default_instance_;
class ChatUserInfoObj;
class ChatUserInfoObjDefaultTypeInternal;
extern ChatUserInfoObjDefaultTypeInternal _ChatUserInfoObj_default_instance_;
class DropItemObj;
class DropItemObjDefaultTypeInternal;
extern DropItemObjDefaultTypeInternal _DropItemObj_default_instance_;
class EquipSkillBuff2;
class EquipSkillBuff2DefaultTypeInternal;
extern EquipSkillBuff2DefaultTypeInternal _EquipSkillBuff2_default_instance_;
class GuildDungeonObj;
class GuildDungeonObjDefaultTypeInternal;
extern GuildDungeonObjDefaultTypeInternal _GuildDungeonObj_default_instance_;
class GuildEventObj;
class GuildEventObjDefaultTypeInternal;
extern GuildEventObjDefaultTypeInternal _GuildEventObj_default_instance_;
class GuildInfoObj;
class GuildInfoObjDefaultTypeInternal;
extern GuildInfoObjDefaultTypeInternal _GuildInfoObj_default_instance_;
class GuildListObj;
class GuildListObjDefaultTypeInternal;
extern GuildListObjDefaultTypeInternal _GuildListObj_default_instance_;
class GuildMemberObj;
class GuildMemberObjDefaultTypeInternal;
extern GuildMemberObjDefaultTypeInternal _GuildMemberObj_default_instance_;
class GuildWarObj;
class GuildWarObjDefaultTypeInternal;
extern GuildWarObjDefaultTypeInternal _GuildWarObj_default_instance_;
class HeroFightInfo;
class HeroFightInfoDefaultTypeInternal;
extern HeroFightInfoDefaultTypeInternal _HeroFightInfo_default_instance_;
class KeyValue2;
class KeyValue2DefaultTypeInternal;
extern KeyValue2DefaultTypeInternal _KeyValue2_default_instance_;
class KeyValue2IntBool;
class KeyValue2IntBoolDefaultTypeInternal;
extern KeyValue2IntBoolDefaultTypeInternal _KeyValue2IntBool_default_instance_;
class KeyValue2IntInt;
class KeyValue2IntIntDefaultTypeInternal;
extern KeyValue2IntIntDefaultTypeInternal _KeyValue2IntInt_default_instance_;
class MailBodyObj;
class MailBodyObjDefaultTypeInternal;
extern MailBodyObjDefaultTypeInternal _MailBodyObj_default_instance_;
class MailHeadObj;
class MailHeadObjDefaultTypeInternal;
extern MailHeadObjDefaultTypeInternal _MailHeadObj_default_instance_;
class OneSData;
class OneSDataDefaultTypeInternal;
extern OneSDataDefaultTypeInternal _OneSData_default_instance_;
class TeamApplyUserObj;
class TeamApplyUserObjDefaultTypeInternal;
extern TeamApplyUserObjDefaultTypeInternal _TeamApplyUserObj_default_instance_;
class TeamObj;
class TeamObjDefaultTypeInternal;
extern TeamObjDefaultTypeInternal _TeamObj_default_instance_;
class TeamUserObj;
class TeamUserObjDefaultTypeInternal;
extern TeamUserObjDefaultTypeInternal _TeamUserObj_default_instance_;
class TimeTop;
class TimeTopDefaultTypeInternal;
extern TimeTopDefaultTypeInternal _TimeTop_default_instance_;
class TopJobMess;
class TopJobMessDefaultTypeInternal;
extern TopJobMessDefaultTypeInternal _TopJobMess_default_instance_;
class TopMess;
class TopMessDefaultTypeInternal;
extern TopMessDefaultTypeInternal _TopMess_default_instance_;
class TopPeoValue;
class TopPeoValueDefaultTypeInternal;
extern TopPeoValueDefaultTypeInternal _TopPeoValue_default_instance_;
class WorldBossObj;
class WorldBossObjDefaultTypeInternal;
extern WorldBossObjDefaultTypeInternal _WorldBossObj_default_instance_;
class WorldBossRankObj;
class WorldBossRankObjDefaultTypeInternal;
extern WorldBossRankObjDefaultTypeInternal _WorldBossRankObj_default_instance_;

namespace protobuf_PublicStruct_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_PublicStruct_2eproto

// ===================================================================

class TeamUserObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TeamUserObj) */ {
 public:
  TeamUserObj();
  virtual ~TeamUserObj();

  TeamUserObj(const TeamUserObj& from);

  inline TeamUserObj& operator=(const TeamUserObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TeamUserObj(TeamUserObj&& from) noexcept
    : TeamUserObj() {
    *this = ::std::move(from);
  }

  inline TeamUserObj& operator=(TeamUserObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamUserObj& default_instance();

  static inline const TeamUserObj* internal_default_instance() {
    return reinterpret_cast<const TeamUserObj*>(
               &_TeamUserObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TeamUserObj* other);
  friend void swap(TeamUserObj& a, TeamUserObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TeamUserObj* New() const PROTOBUF_FINAL { return New(NULL); }

  TeamUserObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TeamUserObj& from);
  void MergeFrom(const TeamUserObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TeamUserObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional bool IsCaptain = 4 [default = false];
  bool has_iscaptain() const;
  void clear_iscaptain();
  static const int kIsCaptainFieldNumber = 4;
  bool iscaptain() const;
  void set_iscaptain(bool value);

  // optional bool IsFollowing = 10 [default = false];
  bool has_isfollowing() const;
  void clear_isfollowing();
  static const int kIsFollowingFieldNumber = 10;
  bool isfollowing() const;
  void set_isfollowing(bool value);

  // optional sint64 UserId = 1 [default = -1];
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // optional sint32 Level = 3 [default = -1];
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional sint32 Prof = 5 [default = -1];
  bool has_prof() const;
  void clear_prof();
  static const int kProfFieldNumber = 5;
  ::google::protobuf::int32 prof() const;
  void set_prof(::google::protobuf::int32 value);

  // optional sint32 HP = 8 [default = -1];
  bool has_hp() const;
  void clear_hp();
  static const int kHPFieldNumber = 8;
  ::google::protobuf::int32 hp() const;
  void set_hp(::google::protobuf::int32 value);

  // optional sint32 MaxHP = 9 [default = -1];
  bool has_maxhp() const;
  void clear_maxhp();
  static const int kMaxHPFieldNumber = 9;
  ::google::protobuf::int32 maxhp() const;
  void set_maxhp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamUserObj)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_username();
  void clear_has_username();
  void set_has_level();
  void clear_has_level();
  void set_has_iscaptain();
  void clear_has_iscaptain();
  void set_has_prof();
  void clear_has_prof();
  void set_has_hp();
  void clear_has_hp();
  void set_has_maxhp();
  void clear_has_maxhp();
  void set_has_isfollowing();
  void clear_has_isfollowing();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  bool iscaptain_;
  bool isfollowing_;
  ::google::protobuf::int64 userid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 prof_;
  ::google::protobuf::int32 hp_;
  ::google::protobuf::int32 maxhp_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TeamObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TeamObj) */ {
 public:
  TeamObj();
  virtual ~TeamObj();

  TeamObj(const TeamObj& from);

  inline TeamObj& operator=(const TeamObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TeamObj(TeamObj&& from) noexcept
    : TeamObj() {
    *this = ::std::move(from);
  }

  inline TeamObj& operator=(TeamObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamObj& default_instance();

  static inline const TeamObj* internal_default_instance() {
    return reinterpret_cast<const TeamObj*>(
               &_TeamObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(TeamObj* other);
  friend void swap(TeamObj& a, TeamObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TeamObj* New() const PROTOBUF_FINAL { return New(NULL); }

  TeamObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TeamObj& from);
  void MergeFrom(const TeamObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TeamObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TeamUserObj TeamMember = 5;
  int teammember_size() const;
  void clear_teammember();
  static const int kTeamMemberFieldNumber = 5;
  const ::TeamUserObj& teammember(int index) const;
  ::TeamUserObj* mutable_teammember(int index);
  ::TeamUserObj* add_teammember();
  ::google::protobuf::RepeatedPtrField< ::TeamUserObj >*
      mutable_teammember();
  const ::google::protobuf::RepeatedPtrField< ::TeamUserObj >&
      teammember() const;

  // optional bool IsMatching = 9 [default = false];
  bool has_ismatching() const;
  void clear_ismatching();
  static const int kIsMatchingFieldNumber = 9;
  bool ismatching() const;
  void set_ismatching(bool value);

  // optional bool IsTeamFollow = 11 [default = false];
  bool has_isteamfollow() const;
  void clear_isteamfollow();
  static const int kIsTeamFollowFieldNumber = 11;
  bool isteamfollow() const;
  void set_isteamfollow(bool value);

  // optional sint32 CaptainLevel = 10 [default = -1];
  bool has_captainlevel() const;
  void clear_captainlevel();
  static const int kCaptainLevelFieldNumber = 10;
  ::google::protobuf::int32 captainlevel() const;
  void set_captainlevel(::google::protobuf::int32 value);

  // optional sint64 CaptainUserId = 2 [default = -1];
  bool has_captainuserid() const;
  void clear_captainuserid();
  static const int kCaptainUserIdFieldNumber = 2;
  ::google::protobuf::int64 captainuserid() const;
  void set_captainuserid(::google::protobuf::int64 value);

  // optional sint32 TeamId = 1 [default = -1];
  bool has_teamid() const;
  void clear_teamid();
  static const int kTeamIdFieldNumber = 1;
  ::google::protobuf::int32 teamid() const;
  void set_teamid(::google::protobuf::int32 value);

  // optional sint32 MemberCount = 3 [default = -1];
  bool has_membercount() const;
  void clear_membercount();
  static const int kMemberCountFieldNumber = 3;
  ::google::protobuf::int32 membercount() const;
  void set_membercount(::google::protobuf::int32 value);

  // optional sint32 TeamTarget = 4 [default = -1];
  bool has_teamtarget() const;
  void clear_teamtarget();
  static const int kTeamTargetFieldNumber = 4;
  ::google::protobuf::int32 teamtarget() const;
  void set_teamtarget(::google::protobuf::int32 value);

  // optional sint32 CaptainProf = 6 [default = -1];
  bool has_captainprof() const;
  void clear_captainprof();
  static const int kCaptainProfFieldNumber = 6;
  ::google::protobuf::int32 captainprof() const;
  void set_captainprof(::google::protobuf::int32 value);

  // optional sint32 TargetMinLv = 7 [default = -1];
  bool has_targetminlv() const;
  void clear_targetminlv();
  static const int kTargetMinLvFieldNumber = 7;
  ::google::protobuf::int32 targetminlv() const;
  void set_targetminlv(::google::protobuf::int32 value);

  // optional sint32 TargetMaxLv = 8 [default = -1];
  bool has_targetmaxlv() const;
  void clear_targetmaxlv();
  static const int kTargetMaxLvFieldNumber = 8;
  ::google::protobuf::int32 targetmaxlv() const;
  void set_targetmaxlv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamObj)
 private:
  void set_has_teamid();
  void clear_has_teamid();
  void set_has_captainuserid();
  void clear_has_captainuserid();
  void set_has_membercount();
  void clear_has_membercount();
  void set_has_teamtarget();
  void clear_has_teamtarget();
  void set_has_captainprof();
  void clear_has_captainprof();
  void set_has_targetminlv();
  void clear_has_targetminlv();
  void set_has_targetmaxlv();
  void clear_has_targetmaxlv();
  void set_has_ismatching();
  void clear_has_ismatching();
  void set_has_captainlevel();
  void clear_has_captainlevel();
  void set_has_isteamfollow();
  void clear_has_isteamfollow();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TeamUserObj > teammember_;
  bool ismatching_;
  bool isteamfollow_;
  ::google::protobuf::int32 captainlevel_;
  ::google::protobuf::int64 captainuserid_;
  ::google::protobuf::int32 teamid_;
  ::google::protobuf::int32 membercount_;
  ::google::protobuf::int32 teamtarget_;
  ::google::protobuf::int32 captainprof_;
  ::google::protobuf::int32 targetminlv_;
  ::google::protobuf::int32 targetmaxlv_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TeamApplyUserObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TeamApplyUserObj) */ {
 public:
  TeamApplyUserObj();
  virtual ~TeamApplyUserObj();

  TeamApplyUserObj(const TeamApplyUserObj& from);

  inline TeamApplyUserObj& operator=(const TeamApplyUserObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TeamApplyUserObj(TeamApplyUserObj&& from) noexcept
    : TeamApplyUserObj() {
    *this = ::std::move(from);
  }

  inline TeamApplyUserObj& operator=(TeamApplyUserObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamApplyUserObj& default_instance();

  static inline const TeamApplyUserObj* internal_default_instance() {
    return reinterpret_cast<const TeamApplyUserObj*>(
               &_TeamApplyUserObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(TeamApplyUserObj* other);
  friend void swap(TeamApplyUserObj& a, TeamApplyUserObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TeamApplyUserObj* New() const PROTOBUF_FINAL { return New(NULL); }

  TeamApplyUserObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TeamApplyUserObj& from);
  void MergeFrom(const TeamApplyUserObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TeamApplyUserObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional sint32 TeamId = 5 [default = -1];
  bool has_teamid() const;
  void clear_teamid();
  static const int kTeamIdFieldNumber = 5;
  ::google::protobuf::int32 teamid() const;
  void set_teamid(::google::protobuf::int32 value);

  // optional sint64 UserId = 1 [default = -1];
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // optional sint32 Level = 3 [default = -1];
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional sint32 Prof = 4 [default = -1];
  bool has_prof() const;
  void clear_prof();
  static const int kProfFieldNumber = 4;
  ::google::protobuf::int32 prof() const;
  void set_prof(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TeamApplyUserObj)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_username();
  void clear_has_username();
  void set_has_level();
  void clear_has_level();
  void set_has_prof();
  void clear_has_prof();
  void set_has_teamid();
  void clear_has_teamid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::int32 teamid_;
  ::google::protobuf::int64 userid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 prof_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BagRecycleGridObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BagRecycleGridObj) */ {
 public:
  BagRecycleGridObj();
  virtual ~BagRecycleGridObj();

  BagRecycleGridObj(const BagRecycleGridObj& from);

  inline BagRecycleGridObj& operator=(const BagRecycleGridObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BagRecycleGridObj(BagRecycleGridObj&& from) noexcept
    : BagRecycleGridObj() {
    *this = ::std::move(from);
  }

  inline BagRecycleGridObj& operator=(BagRecycleGridObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagRecycleGridObj& default_instance();

  static inline const BagRecycleGridObj* internal_default_instance() {
    return reinterpret_cast<const BagRecycleGridObj*>(
               &_BagRecycleGridObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(BagRecycleGridObj* other);
  friend void swap(BagRecycleGridObj& a, BagRecycleGridObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BagRecycleGridObj* New() const PROTOBUF_FINAL { return New(NULL); }

  BagRecycleGridObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BagRecycleGridObj& from);
  void MergeFrom(const BagRecycleGridObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BagRecycleGridObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 ItemId = 1 [default = -1];
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::int64 itemid() const;
  void set_itemid(::google::protobuf::int64 value);

  // optional sint32 TemplateId = 2 [default = -1];
  bool has_templateid() const;
  void clear_templateid();
  static const int kTemplateIdFieldNumber = 2;
  ::google::protobuf::int32 templateid() const;
  void set_templateid(::google::protobuf::int32 value);

  // optional sint32 Num = 3 [default = -1];
  bool has_num() const;
  void clear_num();
  static const int kNumFieldNumber = 3;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // optional sint32 ItemType = 4 [default = -1];
  bool has_itemtype() const;
  void clear_itemtype();
  static const int kItemTypeFieldNumber = 4;
  ::google::protobuf::int32 itemtype() const;
  void set_itemtype(::google::protobuf::int32 value);

  // optional sint32 Pos = 5 [default = -1];
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 5;
  ::google::protobuf::int32 pos() const;
  void set_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BagRecycleGridObj)
 private:
  void set_has_itemid();
  void clear_has_itemid();
  void set_has_templateid();
  void clear_has_templateid();
  void set_has_num();
  void clear_has_num();
  void set_has_itemtype();
  void clear_has_itemtype();
  void set_has_pos();
  void clear_has_pos();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 itemid_;
  ::google::protobuf::int32 templateid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 itemtype_;
  ::google::protobuf::int32 pos_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KeyValue2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KeyValue2) */ {
 public:
  KeyValue2();
  virtual ~KeyValue2();

  KeyValue2(const KeyValue2& from);

  inline KeyValue2& operator=(const KeyValue2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KeyValue2(KeyValue2&& from) noexcept
    : KeyValue2() {
    *this = ::std::move(from);
  }

  inline KeyValue2& operator=(KeyValue2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyValue2& default_instance();

  static inline const KeyValue2* internal_default_instance() {
    return reinterpret_cast<const KeyValue2*>(
               &_KeyValue2_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(KeyValue2* other);
  friend void swap(KeyValue2& a, KeyValue2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KeyValue2* New() const PROTOBUF_FINAL { return New(NULL); }

  KeyValue2* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KeyValue2& from);
  void MergeFrom(const KeyValue2& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KeyValue2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Key = 1 [default = -1];
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int32 key() const;
  void set_key(::google::protobuf::int32 value);

  // optional float Value = 2 [default = -1];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:KeyValue2)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 key_;
  float value_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EquipSkillBuff2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EquipSkillBuff2) */ {
 public:
  EquipSkillBuff2();
  virtual ~EquipSkillBuff2();

  EquipSkillBuff2(const EquipSkillBuff2& from);

  inline EquipSkillBuff2& operator=(const EquipSkillBuff2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EquipSkillBuff2(EquipSkillBuff2&& from) noexcept
    : EquipSkillBuff2() {
    *this = ::std::move(from);
  }

  inline EquipSkillBuff2& operator=(EquipSkillBuff2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipSkillBuff2& default_instance();

  static inline const EquipSkillBuff2* internal_default_instance() {
    return reinterpret_cast<const EquipSkillBuff2*>(
               &_EquipSkillBuff2_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(EquipSkillBuff2* other);
  friend void swap(EquipSkillBuff2& a, EquipSkillBuff2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EquipSkillBuff2* New() const PROTOBUF_FINAL { return New(NULL); }

  EquipSkillBuff2* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EquipSkillBuff2& from);
  void MergeFrom(const EquipSkillBuff2& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EquipSkillBuff2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Cd = 3 [default = -1];
  bool has_cd() const;
  void clear_cd();
  static const int kCdFieldNumber = 3;
  ::google::protobuf::int32 cd() const;
  void set_cd(::google::protobuf::int32 value);

  // optional sint32 Id = 1 [default = -1];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional sint32 LV = 2 [default = -1];
  bool has_lv() const;
  void clear_lv();
  static const int kLVFieldNumber = 2;
  ::google::protobuf::int32 lv() const;
  void set_lv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EquipSkillBuff2)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_lv();
  void clear_has_lv();
  void set_has_cd();
  void clear_has_cd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 cd_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 lv_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildMemberObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildMemberObj) */ {
 public:
  GuildMemberObj();
  virtual ~GuildMemberObj();

  GuildMemberObj(const GuildMemberObj& from);

  inline GuildMemberObj& operator=(const GuildMemberObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildMemberObj(GuildMemberObj&& from) noexcept
    : GuildMemberObj() {
    *this = ::std::move(from);
  }

  inline GuildMemberObj& operator=(GuildMemberObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMemberObj& default_instance();

  static inline const GuildMemberObj* internal_default_instance() {
    return reinterpret_cast<const GuildMemberObj*>(
               &_GuildMemberObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(GuildMemberObj* other);
  friend void swap(GuildMemberObj& a, GuildMemberObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildMemberObj* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildMemberObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildMemberObj& from);
  void MergeFrom(const GuildMemberObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildMemberObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 DropItemArray = 16;
  int dropitemarray_size() const;
  void clear_dropitemarray();
  static const int kDropItemArrayFieldNumber = 16;
  ::google::protobuf::int32 dropitemarray(int index) const;
  void set_dropitemarray(int index, ::google::protobuf::int32 value);
  void add_dropitemarray(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dropitemarray() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dropitemarray();

  // optional string UserName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional bool IsGuildDungeon = 18 [default = false];
  bool has_isguilddungeon() const;
  void clear_isguilddungeon();
  static const int kIsGuildDungeonFieldNumber = 18;
  bool isguilddungeon() const;
  void set_isguilddungeon(bool value);

  // optional bool IsOnline = 17 [default = true];
  bool has_isonline() const;
  void clear_isonline();
  static const int kIsOnlineFieldNumber = 17;
  bool isonline() const;
  void set_isonline(bool value);

  // optional sint64 UserId = 1 [default = -1];
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // optional sint32 Level = 3 [default = -1];
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional sint32 Prof = 9 [default = -1];
  bool has_prof() const;
  void clear_prof();
  static const int kProfFieldNumber = 9;
  ::google::protobuf::int32 prof() const;
  void set_prof(::google::protobuf::int32 value);

  // optional sint32 Duty = 10 [default = -1];
  bool has_duty() const;
  void clear_duty();
  static const int kDutyFieldNumber = 10;
  ::google::protobuf::int32 duty() const;
  void set_duty(::google::protobuf::int32 value);

  // optional sint32 CurContribution = 11 [default = -1];
  bool has_curcontribution() const;
  void clear_curcontribution();
  static const int kCurContributionFieldNumber = 11;
  ::google::protobuf::int32 curcontribution() const;
  void set_curcontribution(::google::protobuf::int32 value);

  // optional sint32 MaxContribution = 12 [default = -1];
  bool has_maxcontribution() const;
  void clear_maxcontribution();
  static const int kMaxContributionFieldNumber = 12;
  ::google::protobuf::int32 maxcontribution() const;
  void set_maxcontribution(::google::protobuf::int32 value);

  // optional sint32 LeagueMatchesCount = 13 [default = -1];
  bool has_leaguematchescount() const;
  void clear_leaguematchescount();
  static const int kLeagueMatchesCountFieldNumber = 13;
  ::google::protobuf::int32 leaguematchescount() const;
  void set_leaguematchescount(::google::protobuf::int32 value);

  // optional sint32 OfflineTime = 14 [default = -1];
  bool has_offlinetime() const;
  void clear_offlinetime();
  static const int kOfflineTimeFieldNumber = 14;
  ::google::protobuf::int32 offlinetime() const;
  void set_offlinetime(::google::protobuf::int32 value);

  // optional sint32 JoinTime = 15 [default = -1];
  bool has_jointime() const;
  void clear_jointime();
  static const int kJoinTimeFieldNumber = 15;
  ::google::protobuf::int32 jointime() const;
  void set_jointime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildMemberObj)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_username();
  void clear_has_username();
  void set_has_level();
  void clear_has_level();
  void set_has_prof();
  void clear_has_prof();
  void set_has_duty();
  void clear_has_duty();
  void set_has_curcontribution();
  void clear_has_curcontribution();
  void set_has_maxcontribution();
  void clear_has_maxcontribution();
  void set_has_leaguematchescount();
  void clear_has_leaguematchescount();
  void set_has_offlinetime();
  void clear_has_offlinetime();
  void set_has_jointime();
  void clear_has_jointime();
  void set_has_isonline();
  void clear_has_isonline();
  void set_has_isguilddungeon();
  void clear_has_isguilddungeon();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dropitemarray_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  bool isguilddungeon_;
  bool isonline_;
  ::google::protobuf::int64 userid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 prof_;
  ::google::protobuf::int32 duty_;
  ::google::protobuf::int32 curcontribution_;
  ::google::protobuf::int32 maxcontribution_;
  ::google::protobuf::int32 leaguematchescount_;
  ::google::protobuf::int32 offlinetime_;
  ::google::protobuf::int32 jointime_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildInfoObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildInfoObj) */ {
 public:
  GuildInfoObj();
  virtual ~GuildInfoObj();

  GuildInfoObj(const GuildInfoObj& from);

  inline GuildInfoObj& operator=(const GuildInfoObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildInfoObj(GuildInfoObj&& from) noexcept
    : GuildInfoObj() {
    *this = ::std::move(from);
  }

  inline GuildInfoObj& operator=(GuildInfoObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildInfoObj& default_instance();

  static inline const GuildInfoObj* internal_default_instance() {
    return reinterpret_cast<const GuildInfoObj*>(
               &_GuildInfoObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(GuildInfoObj* other);
  friend void swap(GuildInfoObj& a, GuildInfoObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildInfoObj* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildInfoObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildInfoObj& from);
  void MergeFrom(const GuildInfoObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildInfoObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GuildMemberObj GuildMember = 10;
  int guildmember_size() const;
  void clear_guildmember();
  static const int kGuildMemberFieldNumber = 10;
  const ::GuildMemberObj& guildmember(int index) const;
  ::GuildMemberObj* mutable_guildmember(int index);
  ::GuildMemberObj* add_guildmember();
  ::google::protobuf::RepeatedPtrField< ::GuildMemberObj >*
      mutable_guildmember();
  const ::google::protobuf::RepeatedPtrField< ::GuildMemberObj >&
      guildmember() const;

  // repeated .ApplyListRoleInfoObj ApplyList = 15;
  int applylist_size() const;
  void clear_applylist();
  static const int kApplyListFieldNumber = 15;
  const ::ApplyListRoleInfoObj& applylist(int index) const;
  ::ApplyListRoleInfoObj* mutable_applylist(int index);
  ::ApplyListRoleInfoObj* add_applylist();
  ::google::protobuf::RepeatedPtrField< ::ApplyListRoleInfoObj >*
      mutable_applylist();
  const ::google::protobuf::RepeatedPtrField< ::ApplyListRoleInfoObj >&
      applylist() const;

  // repeated .GuildEventObj EventList = 26;
  int eventlist_size() const;
  void clear_eventlist();
  static const int kEventListFieldNumber = 26;
  const ::GuildEventObj& eventlist(int index) const;
  ::GuildEventObj* mutable_eventlist(int index);
  ::GuildEventObj* add_eventlist();
  ::google::protobuf::RepeatedPtrField< ::GuildEventObj >*
      mutable_eventlist();
  const ::google::protobuf::RepeatedPtrField< ::GuildEventObj >&
      eventlist() const;

  // repeated .GuildDungeonObj GuildDungeonList = 27;
  int guilddungeonlist_size() const;
  void clear_guilddungeonlist();
  static const int kGuildDungeonListFieldNumber = 27;
  const ::GuildDungeonObj& guilddungeonlist(int index) const;
  ::GuildDungeonObj* mutable_guilddungeonlist(int index);
  ::GuildDungeonObj* add_guilddungeonlist();
  ::google::protobuf::RepeatedPtrField< ::GuildDungeonObj >*
      mutable_guilddungeonlist();
  const ::google::protobuf::RepeatedPtrField< ::GuildDungeonObj >&
      guilddungeonlist() const;

  // repeated sint32 GuildOpenScience = 29;
  int guildopenscience_size() const;
  void clear_guildopenscience();
  static const int kGuildOpenScienceFieldNumber = 29;
  ::google::protobuf::int32 guildopenscience(int index) const;
  void set_guildopenscience(int index, ::google::protobuf::int32 value);
  void add_guildopenscience(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guildopenscience() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guildopenscience();

  // optional string GuildName = 2;
  bool has_guildname() const;
  void clear_guildname();
  static const int kGuildNameFieldNumber = 2;
  const ::std::string& guildname() const;
  void set_guildname(const ::std::string& value);
  #if LANG_CXX11
  void set_guildname(::std::string&& value);
  #endif
  void set_guildname(const char* value);
  void set_guildname(const char* value, size_t size);
  ::std::string* mutable_guildname();
  ::std::string* release_guildname();
  void set_allocated_guildname(::std::string* guildname);

  // optional string CaptainName = 6;
  bool has_captainname() const;
  void clear_captainname();
  static const int kCaptainNameFieldNumber = 6;
  const ::std::string& captainname() const;
  void set_captainname(const ::std::string& value);
  #if LANG_CXX11
  void set_captainname(::std::string&& value);
  #endif
  void set_captainname(const char* value);
  void set_captainname(const char* value, size_t size);
  ::std::string* mutable_captainname();
  ::std::string* release_captainname();
  void set_allocated_captainname(::std::string* captainname);

  // optional string Announcement = 13;
  bool has_announcement() const;
  void clear_announcement();
  static const int kAnnouncementFieldNumber = 13;
  const ::std::string& announcement() const;
  void set_announcement(const ::std::string& value);
  #if LANG_CXX11
  void set_announcement(::std::string&& value);
  #endif
  void set_announcement(const char* value);
  void set_announcement(const char* value, size_t size);
  ::std::string* mutable_announcement();
  ::std::string* release_announcement();
  void set_allocated_announcement(::std::string* announcement);

  // optional .GuildWarObj GuildWar = 28;
  bool has_guildwar() const;
  void clear_guildwar();
  static const int kGuildWarFieldNumber = 28;
  const ::GuildWarObj& guildwar() const;
  ::GuildWarObj* mutable_guildwar();
  ::GuildWarObj* release_guildwar();
  void set_allocated_guildwar(::GuildWarObj* guildwar);

  // optional sint32 CreateTime = 25 [default = -1];
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 25;
  ::google::protobuf::int32 createtime() const;
  void set_createtime(::google::protobuf::int32 value);

  // optional sint32 Guild = 1 [default = -1];
  bool has_guild() const;
  void clear_guild();
  static const int kGuildFieldNumber = 1;
  ::google::protobuf::int32 guild() const;
  void set_guild(::google::protobuf::int32 value);

  // optional sint32 Level = 3 [default = 1];
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional sint64 CaptainId = 5 [default = -1];
  bool has_captainid() const;
  void clear_captainid();
  static const int kCaptainIdFieldNumber = 5;
  ::google::protobuf::int64 captainid() const;
  void set_captainid(::google::protobuf::int64 value);

  // optional sint32 Funds = 7 [default = -1];
  bool has_funds() const;
  void clear_funds();
  static const int kFundsFieldNumber = 7;
  ::google::protobuf::int32 funds() const;
  void set_funds(::google::protobuf::int32 value);

  // optional sint32 CurMemberNum = 8 [default = 1];
  bool has_curmembernum() const;
  void clear_curmembernum();
  static const int kCurMemberNumFieldNumber = 8;
  ::google::protobuf::int32 curmembernum() const;
  void set_curmembernum(::google::protobuf::int32 value);

  // optional sint32 MaintenanceCost = 11 [default = -1];
  bool has_maintenancecost() const;
  void clear_maintenancecost();
  static const int kMaintenanceCostFieldNumber = 11;
  ::google::protobuf::int32 maintenancecost() const;
  void set_maintenancecost(::google::protobuf::int32 value);

  // optional sint32 LeagueMatchesRank = 12 [default = -1];
  bool has_leaguematchesrank() const;
  void clear_leaguematchesrank();
  static const int kLeagueMatchesRankFieldNumber = 12;
  ::google::protobuf::int32 leaguematchesrank() const;
  void set_leaguematchesrank(::google::protobuf::int32 value);

  // optional sint32 TotalMilitary = 14 [default = -1];
  bool has_totalmilitary() const;
  void clear_totalmilitary();
  static const int kTotalMilitaryFieldNumber = 14;
  ::google::protobuf::int32 totalmilitary() const;
  void set_totalmilitary(::google::protobuf::int32 value);

  // optional sint32 MaxMemberNum = 16 [default = -1];
  bool has_maxmembernum() const;
  void clear_maxmembernum();
  static const int kMaxMemberNumFieldNumber = 16;
  ::google::protobuf::int32 maxmembernum() const;
  void set_maxmembernum(::google::protobuf::int32 value);

  // optional sint32 HallLv = 17 [default = 1];
  bool has_halllv() const;
  void clear_halllv();
  static const int kHallLvFieldNumber = 17;
  ::google::protobuf::int32 halllv() const;
  void set_halllv(::google::protobuf::int32 value);

  // optional sint32 HallLvupTime = 18 [default = -1];
  bool has_halllvuptime() const;
  void clear_halllvuptime();
  static const int kHallLvupTimeFieldNumber = 18;
  ::google::protobuf::int32 halllvuptime() const;
  void set_halllvuptime(::google::protobuf::int32 value);

  // optional sint32 HouseLv = 19 [default = 1];
  bool has_houselv() const;
  void clear_houselv();
  static const int kHouseLvFieldNumber = 19;
  ::google::protobuf::int32 houselv() const;
  void set_houselv(::google::protobuf::int32 value);

  // optional sint32 HouseLvupTime = 20 [default = -1];
  bool has_houselvuptime() const;
  void clear_houselvuptime();
  static const int kHouseLvupTimeFieldNumber = 20;
  ::google::protobuf::int32 houselvuptime() const;
  void set_houselvuptime(::google::protobuf::int32 value);

  // optional sint32 StoreroomLv = 21 [default = 1];
  bool has_storeroomlv() const;
  void clear_storeroomlv();
  static const int kStoreroomLvFieldNumber = 21;
  ::google::protobuf::int32 storeroomlv() const;
  void set_storeroomlv(::google::protobuf::int32 value);

  // optional sint32 StoreroomLvupTime = 22 [default = -1];
  bool has_storeroomlvuptime() const;
  void clear_storeroomlvuptime();
  static const int kStoreroomLvupTimeFieldNumber = 22;
  ::google::protobuf::int32 storeroomlvuptime() const;
  void set_storeroomlvuptime(::google::protobuf::int32 value);

  // optional sint32 KongfuHallLv = 23 [default = 1];
  bool has_kongfuhalllv() const;
  void clear_kongfuhalllv();
  static const int kKongfuHallLvFieldNumber = 23;
  ::google::protobuf::int32 kongfuhalllv() const;
  void set_kongfuhalllv(::google::protobuf::int32 value);

  // optional sint32 KongfuHallLvupTime = 24 [default = -1];
  bool has_kongfuhalllvuptime() const;
  void clear_kongfuhalllvuptime();
  static const int kKongfuHallLvupTimeFieldNumber = 24;
  ::google::protobuf::int32 kongfuhalllvuptime() const;
  void set_kongfuhalllvuptime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildInfoObj)
 private:
  void set_has_guild();
  void clear_has_guild();
  void set_has_guildname();
  void clear_has_guildname();
  void set_has_level();
  void clear_has_level();
  void set_has_captainid();
  void clear_has_captainid();
  void set_has_captainname();
  void clear_has_captainname();
  void set_has_funds();
  void clear_has_funds();
  void set_has_curmembernum();
  void clear_has_curmembernum();
  void set_has_maintenancecost();
  void clear_has_maintenancecost();
  void set_has_leaguematchesrank();
  void clear_has_leaguematchesrank();
  void set_has_announcement();
  void clear_has_announcement();
  void set_has_totalmilitary();
  void clear_has_totalmilitary();
  void set_has_maxmembernum();
  void clear_has_maxmembernum();
  void set_has_halllv();
  void clear_has_halllv();
  void set_has_halllvuptime();
  void clear_has_halllvuptime();
  void set_has_houselv();
  void clear_has_houselv();
  void set_has_houselvuptime();
  void clear_has_houselvuptime();
  void set_has_storeroomlv();
  void clear_has_storeroomlv();
  void set_has_storeroomlvuptime();
  void clear_has_storeroomlvuptime();
  void set_has_kongfuhalllv();
  void clear_has_kongfuhalllv();
  void set_has_kongfuhalllvuptime();
  void clear_has_kongfuhalllvuptime();
  void set_has_createtime();
  void clear_has_createtime();
  void set_has_guildwar();
  void clear_has_guildwar();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::GuildMemberObj > guildmember_;
  ::google::protobuf::RepeatedPtrField< ::ApplyListRoleInfoObj > applylist_;
  ::google::protobuf::RepeatedPtrField< ::GuildEventObj > eventlist_;
  ::google::protobuf::RepeatedPtrField< ::GuildDungeonObj > guilddungeonlist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guildopenscience_;
  ::google::protobuf::internal::ArenaStringPtr guildname_;
  ::google::protobuf::internal::ArenaStringPtr captainname_;
  ::google::protobuf::internal::ArenaStringPtr announcement_;
  ::GuildWarObj* guildwar_;
  ::google::protobuf::int32 createtime_;
  ::google::protobuf::int32 guild_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int64 captainid_;
  ::google::protobuf::int32 funds_;
  ::google::protobuf::int32 curmembernum_;
  ::google::protobuf::int32 maintenancecost_;
  ::google::protobuf::int32 leaguematchesrank_;
  ::google::protobuf::int32 totalmilitary_;
  ::google::protobuf::int32 maxmembernum_;
  ::google::protobuf::int32 halllv_;
  ::google::protobuf::int32 halllvuptime_;
  ::google::protobuf::int32 houselv_;
  ::google::protobuf::int32 houselvuptime_;
  ::google::protobuf::int32 storeroomlv_;
  ::google::protobuf::int32 storeroomlvuptime_;
  ::google::protobuf::int32 kongfuhalllv_;
  ::google::protobuf::int32 kongfuhalllvuptime_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ApplyListRoleInfoObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ApplyListRoleInfoObj) */ {
 public:
  ApplyListRoleInfoObj();
  virtual ~ApplyListRoleInfoObj();

  ApplyListRoleInfoObj(const ApplyListRoleInfoObj& from);

  inline ApplyListRoleInfoObj& operator=(const ApplyListRoleInfoObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyListRoleInfoObj(ApplyListRoleInfoObj&& from) noexcept
    : ApplyListRoleInfoObj() {
    *this = ::std::move(from);
  }

  inline ApplyListRoleInfoObj& operator=(ApplyListRoleInfoObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ApplyListRoleInfoObj& default_instance();

  static inline const ApplyListRoleInfoObj* internal_default_instance() {
    return reinterpret_cast<const ApplyListRoleInfoObj*>(
               &_ApplyListRoleInfoObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ApplyListRoleInfoObj* other);
  friend void swap(ApplyListRoleInfoObj& a, ApplyListRoleInfoObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyListRoleInfoObj* New() const PROTOBUF_FINAL { return New(NULL); }

  ApplyListRoleInfoObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ApplyListRoleInfoObj& from);
  void MergeFrom(const ApplyListRoleInfoObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ApplyListRoleInfoObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional sint32 Prof = 4 [default = 0];
  bool has_prof() const;
  void clear_prof();
  static const int kProfFieldNumber = 4;
  ::google::protobuf::int32 prof() const;
  void set_prof(::google::protobuf::int32 value);

  // optional sint32 TalentLevel = 5 [default = 0];
  bool has_talentlevel() const;
  void clear_talentlevel();
  static const int kTalentLevelFieldNumber = 5;
  ::google::protobuf::int32 talentlevel() const;
  void set_talentlevel(::google::protobuf::int32 value);

  // optional sint32 Xiulian = 6 [default = 0];
  bool has_xiulian() const;
  void clear_xiulian();
  static const int kXiulianFieldNumber = 6;
  ::google::protobuf::int32 xiulian() const;
  void set_xiulian(::google::protobuf::int32 value);

  // optional sint32 Military = 7 [default = 0];
  bool has_military() const;
  void clear_military();
  static const int kMilitaryFieldNumber = 7;
  ::google::protobuf::int32 military() const;
  void set_military(::google::protobuf::int32 value);

  // optional sint32 Level = 3 [default = 1];
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional sint64 UserId = 1 [default = -1];
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ApplyListRoleInfoObj)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_username();
  void clear_has_username();
  void set_has_level();
  void clear_has_level();
  void set_has_prof();
  void clear_has_prof();
  void set_has_talentlevel();
  void clear_has_talentlevel();
  void set_has_xiulian();
  void clear_has_xiulian();
  void set_has_military();
  void clear_has_military();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::int32 prof_;
  ::google::protobuf::int32 talentlevel_;
  ::google::protobuf::int32 xiulian_;
  ::google::protobuf::int32 military_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int64 userid_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildListObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildListObj) */ {
 public:
  GuildListObj();
  virtual ~GuildListObj();

  GuildListObj(const GuildListObj& from);

  inline GuildListObj& operator=(const GuildListObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildListObj(GuildListObj&& from) noexcept
    : GuildListObj() {
    *this = ::std::move(from);
  }

  inline GuildListObj& operator=(GuildListObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildListObj& default_instance();

  static inline const GuildListObj* internal_default_instance() {
    return reinterpret_cast<const GuildListObj*>(
               &_GuildListObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GuildListObj* other);
  friend void swap(GuildListObj& a, GuildListObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildListObj* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildListObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildListObj& from);
  void MergeFrom(const GuildListObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildListObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string GuildName = 2;
  bool has_guildname() const;
  void clear_guildname();
  static const int kGuildNameFieldNumber = 2;
  const ::std::string& guildname() const;
  void set_guildname(const ::std::string& value);
  #if LANG_CXX11
  void set_guildname(::std::string&& value);
  #endif
  void set_guildname(const char* value);
  void set_guildname(const char* value, size_t size);
  ::std::string* mutable_guildname();
  ::std::string* release_guildname();
  void set_allocated_guildname(::std::string* guildname);

  // optional string Announcement = 6;
  bool has_announcement() const;
  void clear_announcement();
  static const int kAnnouncementFieldNumber = 6;
  const ::std::string& announcement() const;
  void set_announcement(const ::std::string& value);
  #if LANG_CXX11
  void set_announcement(::std::string&& value);
  #endif
  void set_announcement(const char* value);
  void set_announcement(const char* value, size_t size);
  ::std::string* mutable_announcement();
  ::std::string* release_announcement();
  void set_allocated_announcement(::std::string* announcement);

  // optional sint32 TotalMilitary = 5 [default = 0];
  bool has_totalmilitary() const;
  void clear_totalmilitary();
  static const int kTotalMilitaryFieldNumber = 5;
  ::google::protobuf::int32 totalmilitary() const;
  void set_totalmilitary(::google::protobuf::int32 value);

  // optional sint32 CurMemberNum = 4 [default = 1];
  bool has_curmembernum() const;
  void clear_curmembernum();
  static const int kCurMemberNumFieldNumber = 4;
  ::google::protobuf::int32 curmembernum() const;
  void set_curmembernum(::google::protobuf::int32 value);

  // optional sint32 Guild = 1 [default = -1];
  bool has_guild() const;
  void clear_guild();
  static const int kGuildFieldNumber = 1;
  ::google::protobuf::int32 guild() const;
  void set_guild(::google::protobuf::int32 value);

  // optional sint32 Level = 3 [default = 1];
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildListObj)
 private:
  void set_has_guild();
  void clear_has_guild();
  void set_has_guildname();
  void clear_has_guildname();
  void set_has_level();
  void clear_has_level();
  void set_has_curmembernum();
  void clear_has_curmembernum();
  void set_has_totalmilitary();
  void clear_has_totalmilitary();
  void set_has_announcement();
  void clear_has_announcement();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr guildname_;
  ::google::protobuf::internal::ArenaStringPtr announcement_;
  ::google::protobuf::int32 totalmilitary_;
  ::google::protobuf::int32 curmembernum_;
  ::google::protobuf::int32 guild_;
  ::google::protobuf::int32 level_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeroFightInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:HeroFightInfo) */ {
 public:
  HeroFightInfo();
  virtual ~HeroFightInfo();

  HeroFightInfo(const HeroFightInfo& from);

  inline HeroFightInfo& operator=(const HeroFightInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeroFightInfo(HeroFightInfo&& from) noexcept
    : HeroFightInfo() {
    *this = ::std::move(from);
  }

  inline HeroFightInfo& operator=(HeroFightInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroFightInfo& default_instance();

  static inline const HeroFightInfo* internal_default_instance() {
    return reinterpret_cast<const HeroFightInfo*>(
               &_HeroFightInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(HeroFightInfo* other);
  friend void swap(HeroFightInfo& a, HeroFightInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeroFightInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  HeroFightInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HeroFightInfo& from);
  void MergeFrom(const HeroFightInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HeroFightInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 IntParaArr = 8;
  int intparaarr_size() const;
  void clear_intparaarr();
  static const int kIntParaArrFieldNumber = 8;
  ::google::protobuf::int32 intparaarr(int index) const;
  void set_intparaarr(int index, ::google::protobuf::int32 value);
  void add_intparaarr(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      intparaarr() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_intparaarr();

  // optional string Name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional sint32 DeadTimes = 4 [default = 0];
  bool has_deadtimes() const;
  void clear_deadtimes();
  static const int kDeadTimesFieldNumber = 4;
  ::google::protobuf::int32 deadtimes() const;
  void set_deadtimes(::google::protobuf::int32 value);

  // optional sint32 KilledNum = 5 [default = 0];
  bool has_killednum() const;
  void clear_killednum();
  static const int kKilledNumFieldNumber = 5;
  ::google::protobuf::int32 killednum() const;
  void set_killednum(::google::protobuf::int32 value);

  // optional sint32 CmapId = 11 [default = -1];
  bool has_cmapid() const;
  void clear_cmapid();
  static const int kCmapIdFieldNumber = 11;
  ::google::protobuf::int32 cmapid() const;
  void set_cmapid(::google::protobuf::int32 value);

  // optional sint64 UserId = 1 [default = -1];
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // optional sint32 ObjId = 2 [default = -1];
  bool has_objid() const;
  void clear_objid();
  static const int kObjIdFieldNumber = 2;
  ::google::protobuf::int32 objid() const;
  void set_objid(::google::protobuf::int32 value);

  // optional sint32 TotalEndure = 7 [default = -1];
  bool has_totalendure() const;
  void clear_totalendure();
  static const int kTotalEndureFieldNumber = 7;
  ::google::protobuf::int32 totalendure() const;
  void set_totalendure(::google::protobuf::int32 value);

  // optional sint64 TotalDamage = 6 [default = -1];
  bool has_totaldamage() const;
  void clear_totaldamage();
  static const int kTotalDamageFieldNumber = 6;
  ::google::protobuf::int64 totaldamage() const;
  void set_totaldamage(::google::protobuf::int64 value);

  // optional sint32 Level = 9 [default = -1];
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 9;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional sint32 AssistKilled = 10 [default = -1];
  bool has_assistkilled() const;
  void clear_assistkilled();
  static const int kAssistKilledFieldNumber = 10;
  ::google::protobuf::int32 assistkilled() const;
  void set_assistkilled(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HeroFightInfo)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_objid();
  void clear_has_objid();
  void set_has_name();
  void clear_has_name();
  void set_has_deadtimes();
  void clear_has_deadtimes();
  void set_has_killednum();
  void clear_has_killednum();
  void set_has_totaldamage();
  void clear_has_totaldamage();
  void set_has_totalendure();
  void clear_has_totalendure();
  void set_has_level();
  void clear_has_level();
  void set_has_assistkilled();
  void clear_has_assistkilled();
  void set_has_cmapid();
  void clear_has_cmapid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > intparaarr_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 deadtimes_;
  ::google::protobuf::int32 killednum_;
  ::google::protobuf::int32 cmapid_;
  ::google::protobuf::int64 userid_;
  ::google::protobuf::int32 objid_;
  ::google::protobuf::int32 totalendure_;
  ::google::protobuf::int64 totaldamage_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 assistkilled_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildEventObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildEventObj) */ {
 public:
  GuildEventObj();
  virtual ~GuildEventObj();

  GuildEventObj(const GuildEventObj& from);

  inline GuildEventObj& operator=(const GuildEventObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildEventObj(GuildEventObj&& from) noexcept
    : GuildEventObj() {
    *this = ::std::move(from);
  }

  inline GuildEventObj& operator=(GuildEventObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildEventObj& default_instance();

  static inline const GuildEventObj* internal_default_instance() {
    return reinterpret_cast<const GuildEventObj*>(
               &_GuildEventObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(GuildEventObj* other);
  friend void swap(GuildEventObj& a, GuildEventObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildEventObj* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildEventObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildEventObj& from);
  void MergeFrom(const GuildEventObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildEventObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Param1 = 2;
  bool has_param1() const;
  void clear_param1();
  static const int kParam1FieldNumber = 2;
  const ::std::string& param1() const;
  void set_param1(const ::std::string& value);
  #if LANG_CXX11
  void set_param1(::std::string&& value);
  #endif
  void set_param1(const char* value);
  void set_param1(const char* value, size_t size);
  ::std::string* mutable_param1();
  ::std::string* release_param1();
  void set_allocated_param1(::std::string* param1);

  // optional string Param2 = 3;
  bool has_param2() const;
  void clear_param2();
  static const int kParam2FieldNumber = 3;
  const ::std::string& param2() const;
  void set_param2(const ::std::string& value);
  #if LANG_CXX11
  void set_param2(::std::string&& value);
  #endif
  void set_param2(const char* value);
  void set_param2(const char* value, size_t size);
  ::std::string* mutable_param2();
  ::std::string* release_param2();
  void set_allocated_param2(::std::string* param2);

  // optional sint32 EventId = 1 [default = -1];
  bool has_eventid() const;
  void clear_eventid();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::int32 eventid() const;
  void set_eventid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildEventObj)
 private:
  void set_has_eventid();
  void clear_has_eventid();
  void set_has_param1();
  void clear_has_param1();
  void set_has_param2();
  void clear_has_param2();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr param1_;
  ::google::protobuf::internal::ArenaStringPtr param2_;
  ::google::protobuf::int32 eventid_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildDungeonObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildDungeonObj) */ {
 public:
  GuildDungeonObj();
  virtual ~GuildDungeonObj();

  GuildDungeonObj(const GuildDungeonObj& from);

  inline GuildDungeonObj& operator=(const GuildDungeonObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildDungeonObj(GuildDungeonObj&& from) noexcept
    : GuildDungeonObj() {
    *this = ::std::move(from);
  }

  inline GuildDungeonObj& operator=(GuildDungeonObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildDungeonObj& default_instance();

  static inline const GuildDungeonObj* internal_default_instance() {
    return reinterpret_cast<const GuildDungeonObj*>(
               &_GuildDungeonObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(GuildDungeonObj* other);
  friend void swap(GuildDungeonObj& a, GuildDungeonObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildDungeonObj* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildDungeonObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildDungeonObj& from);
  void MergeFrom(const GuildDungeonObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildDungeonObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Key = 2;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string Host = 4;
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 4;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // optional sint32 DungeonId = 1 [default = -1];
  bool has_dungeonid() const;
  void clear_dungeonid();
  static const int kDungeonIdFieldNumber = 1;
  ::google::protobuf::int32 dungeonid() const;
  void set_dungeonid(::google::protobuf::int32 value);

  // optional sint32 Post = 3 [default = -1];
  bool has_post() const;
  void clear_post();
  static const int kPostFieldNumber = 3;
  ::google::protobuf::int32 post() const;
  void set_post(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildDungeonObj)
 private:
  void set_has_dungeonid();
  void clear_has_dungeonid();
  void set_has_key();
  void clear_has_key();
  void set_has_post();
  void clear_has_post();
  void set_has_host();
  void clear_has_host();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::int32 dungeonid_;
  ::google::protobuf::int32 post_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GuildWarObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuildWarObj) */ {
 public:
  GuildWarObj();
  virtual ~GuildWarObj();

  GuildWarObj(const GuildWarObj& from);

  inline GuildWarObj& operator=(const GuildWarObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuildWarObj(GuildWarObj&& from) noexcept
    : GuildWarObj() {
    *this = ::std::move(from);
  }

  inline GuildWarObj& operator=(GuildWarObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildWarObj& default_instance();

  static inline const GuildWarObj* internal_default_instance() {
    return reinterpret_cast<const GuildWarObj*>(
               &_GuildWarObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(GuildWarObj* other);
  friend void swap(GuildWarObj& a, GuildWarObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuildWarObj* New() const PROTOBUF_FINAL { return New(NULL); }

  GuildWarObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuildWarObj& from);
  void MergeFrom(const GuildWarObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuildWarObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Key = 5;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 5;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string Host = 7;
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 7;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // optional sint32 Guild_A = 2 [default = -1];
  bool has_guild_a() const;
  void clear_guild_a();
  static const int kGuildAFieldNumber = 2;
  ::google::protobuf::int32 guild_a() const;
  void set_guild_a(::google::protobuf::int32 value);

  // optional sint32 Guild_B = 3 [default = -1];
  bool has_guild_b() const;
  void clear_guild_b();
  static const int kGuildBFieldNumber = 3;
  ::google::protobuf::int32 guild_b() const;
  void set_guild_b(::google::protobuf::int32 value);

  // optional sint32 DungeonId = 4 [default = -1];
  bool has_dungeonid() const;
  void clear_dungeonid();
  static const int kDungeonIdFieldNumber = 4;
  ::google::protobuf::int32 dungeonid() const;
  void set_dungeonid(::google::protobuf::int32 value);

  // optional sint32 Port = 6 [default = -1];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 6;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuildWarObj)
 private:
  void set_has_guild_a();
  void clear_has_guild_a();
  void set_has_guild_b();
  void clear_has_guild_b();
  void set_has_dungeonid();
  void clear_has_dungeonid();
  void set_has_key();
  void clear_has_key();
  void set_has_port();
  void clear_has_port();
  void set_has_host();
  void clear_has_host();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::int32 guild_a_;
  ::google::protobuf::int32 guild_b_;
  ::google::protobuf::int32 dungeonid_;
  ::google::protobuf::int32 port_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BagGridObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BagGridObj) */ {
 public:
  BagGridObj();
  virtual ~BagGridObj();

  BagGridObj(const BagGridObj& from);

  inline BagGridObj& operator=(const BagGridObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BagGridObj(BagGridObj&& from) noexcept
    : BagGridObj() {
    *this = ::std::move(from);
  }

  inline BagGridObj& operator=(BagGridObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagGridObj& default_instance();

  static inline const BagGridObj* internal_default_instance() {
    return reinterpret_cast<const BagGridObj*>(
               &_BagGridObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(BagGridObj* other);
  friend void swap(BagGridObj& a, BagGridObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BagGridObj* New() const PROTOBUF_FINAL { return New(NULL); }

  BagGridObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BagGridObj& from);
  void MergeFrom(const BagGridObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BagGridObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Num = 2 [default = 0];
  bool has_num() const;
  void clear_num();
  static const int kNumFieldNumber = 2;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // optional bool Bind = 7 [default = false];
  bool has_bind() const;
  void clear_bind();
  static const int kBindFieldNumber = 7;
  bool bind() const;
  void set_bind(bool value);

  // optional sint32 TemplateID = 1 [default = -1];
  bool has_templateid() const;
  void clear_templateid();
  static const int kTemplateIDFieldNumber = 1;
  ::google::protobuf::int32 templateid() const;
  void set_templateid(::google::protobuf::int32 value);

  // optional sint32 ItemType = 3 [default = -1];
  bool has_itemtype() const;
  void clear_itemtype();
  static const int kItemTypeFieldNumber = 3;
  ::google::protobuf::int32 itemtype() const;
  void set_itemtype(::google::protobuf::int32 value);

  // optional sint32 Pos = 4 [default = -1];
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 4;
  ::google::protobuf::int32 pos() const;
  void set_pos(::google::protobuf::int32 value);

  // optional sint32 Value = 5 [default = -1];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 5;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // optional sint64 Index = 6 [default = -1];
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 6;
  ::google::protobuf::int64 index() const;
  void set_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:BagGridObj)
 private:
  void set_has_templateid();
  void clear_has_templateid();
  void set_has_num();
  void clear_has_num();
  void set_has_itemtype();
  void clear_has_itemtype();
  void set_has_pos();
  void clear_has_pos();
  void set_has_value();
  void clear_has_value();
  void set_has_index();
  void clear_has_index();
  void set_has_bind();
  void clear_has_bind();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 num_;
  bool bind_;
  ::google::protobuf::int32 templateid_;
  ::google::protobuf::int32 itemtype_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::int64 index_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DropItemObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DropItemObj) */ {
 public:
  DropItemObj();
  virtual ~DropItemObj();

  DropItemObj(const DropItemObj& from);

  inline DropItemObj& operator=(const DropItemObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DropItemObj(DropItemObj&& from) noexcept
    : DropItemObj() {
    *this = ::std::move(from);
  }

  inline DropItemObj& operator=(DropItemObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DropItemObj& default_instance();

  static inline const DropItemObj* internal_default_instance() {
    return reinterpret_cast<const DropItemObj*>(
               &_DropItemObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(DropItemObj* other);
  friend void swap(DropItemObj& a, DropItemObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DropItemObj* New() const PROTOBUF_FINAL { return New(NULL); }

  DropItemObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DropItemObj& from);
  void MergeFrom(const DropItemObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DropItemObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes PosInfo = 10;
  bool has_posinfo() const;
  void clear_posinfo();
  static const int kPosInfoFieldNumber = 10;
  const ::std::string& posinfo() const;
  void set_posinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_posinfo(::std::string&& value);
  #endif
  void set_posinfo(const char* value);
  void set_posinfo(const void* value, size_t size);
  ::std::string* mutable_posinfo();
  ::std::string* release_posinfo();
  void set_allocated_posinfo(::std::string* posinfo);

  // optional sint32 Num = 4 [default = 0];
  bool has_num() const;
  void clear_num();
  static const int kNumFieldNumber = 4;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // optional sint32 AttrNum = 8 [default = 0];
  bool has_attrnum() const;
  void clear_attrnum();
  static const int kAttrNumFieldNumber = 8;
  ::google::protobuf::int32 attrnum() const;
  void set_attrnum(::google::protobuf::int32 value);

  // optional sint32 CreateTime = 11 [default = 0];
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 11;
  ::google::protobuf::int32 createtime() const;
  void set_createtime(::google::protobuf::int32 value);

  // optional bool IsPickup = 12 [default = false];
  bool has_ispickup() const;
  void clear_ispickup();
  static const int kIsPickupFieldNumber = 12;
  bool ispickup() const;
  void set_ispickup(bool value);

  // optional sint32 DestroyTime = 14 [default = 0];
  bool has_destroytime() const;
  void clear_destroytime();
  static const int kDestroyTimeFieldNumber = 14;
  ::google::protobuf::int32 destroytime() const;
  void set_destroytime(::google::protobuf::int32 value);

  // optional sint32 ConfigId = 1 [default = -1];
  bool has_configid() const;
  void clear_configid();
  static const int kConfigIdFieldNumber = 1;
  ::google::protobuf::int32 configid() const;
  void set_configid(::google::protobuf::int32 value);

  // optional sint32 UId = 2 [default = -1];
  bool has_uid() const;
  void clear_uid();
  static const int kUIdFieldNumber = 2;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // optional sint32 ItemType = 5 [default = -1];
  bool has_itemtype() const;
  void clear_itemtype();
  static const int kItemTypeFieldNumber = 5;
  ::google::protobuf::int32 itemtype() const;
  void set_itemtype(::google::protobuf::int32 value);

  // optional sint32 MonsterObjId = 9 [default = -1];
  bool has_monsterobjid() const;
  void clear_monsterobjid();
  static const int kMonsterObjIdFieldNumber = 9;
  ::google::protobuf::int32 monsterobjid() const;
  void set_monsterobjid(::google::protobuf::int32 value);

  // optional sint64 ItemId = 13 [default = -1];
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemIdFieldNumber = 13;
  ::google::protobuf::int64 itemid() const;
  void set_itemid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:DropItemObj)
 private:
  void set_has_configid();
  void clear_has_configid();
  void set_has_uid();
  void clear_has_uid();
  void set_has_num();
  void clear_has_num();
  void set_has_itemtype();
  void clear_has_itemtype();
  void set_has_attrnum();
  void clear_has_attrnum();
  void set_has_monsterobjid();
  void clear_has_monsterobjid();
  void set_has_posinfo();
  void clear_has_posinfo();
  void set_has_createtime();
  void clear_has_createtime();
  void set_has_ispickup();
  void clear_has_ispickup();
  void set_has_itemid();
  void clear_has_itemid();
  void set_has_destroytime();
  void clear_has_destroytime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr posinfo_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 attrnum_;
  ::google::protobuf::int32 createtime_;
  bool ispickup_;
  ::google::protobuf::int32 destroytime_;
  ::google::protobuf::int32 configid_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 itemtype_;
  ::google::protobuf::int32 monsterobjid_;
  ::google::protobuf::int64 itemid_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BagEquipObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BagEquipObj) */ {
 public:
  BagEquipObj();
  virtual ~BagEquipObj();

  BagEquipObj(const BagEquipObj& from);

  inline BagEquipObj& operator=(const BagEquipObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BagEquipObj(BagEquipObj&& from) noexcept
    : BagEquipObj() {
    *this = ::std::move(from);
  }

  inline BagEquipObj& operator=(BagEquipObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagEquipObj& default_instance();

  static inline const BagEquipObj* internal_default_instance() {
    return reinterpret_cast<const BagEquipObj*>(
               &_BagEquipObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(BagEquipObj* other);
  friend void swap(BagEquipObj& a, BagEquipObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BagEquipObj* New() const PROTOBUF_FINAL { return New(NULL); }

  BagEquipObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BagEquipObj& from);
  void MergeFrom(const BagEquipObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BagEquipObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BagAttrIntObj BaseAttr = 2;
  int baseattr_size() const;
  void clear_baseattr();
  static const int kBaseAttrFieldNumber = 2;
  const ::BagAttrIntObj& baseattr(int index) const;
  ::BagAttrIntObj* mutable_baseattr(int index);
  ::BagAttrIntObj* add_baseattr();
  ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >*
      mutable_baseattr();
  const ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >&
      baseattr() const;

  // repeated .BagExtraAttrObj ExtraAttr = 3;
  int extraattr_size() const;
  void clear_extraattr();
  static const int kExtraAttrFieldNumber = 3;
  const ::BagExtraAttrObj& extraattr(int index) const;
  ::BagExtraAttrObj* mutable_extraattr(int index);
  ::BagExtraAttrObj* add_extraattr();
  ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj >*
      mutable_extraattr();
  const ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj >&
      extraattr() const;

  // repeated sint32 EnhanceLv = 4;
  int enhancelv_size() const;
  void clear_enhancelv();
  static const int kEnhanceLvFieldNumber = 4;
  ::google::protobuf::int32 enhancelv(int index) const;
  void set_enhancelv(int index, ::google::protobuf::int32 value);
  void add_enhancelv(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      enhancelv() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_enhancelv();

  // repeated .BagExtraAttrObj EquipPolishedResult = 5;
  int equippolishedresult_size() const;
  void clear_equippolishedresult();
  static const int kEquipPolishedResultFieldNumber = 5;
  const ::BagExtraAttrObj& equippolishedresult(int index) const;
  ::BagExtraAttrObj* mutable_equippolishedresult(int index);
  ::BagExtraAttrObj* add_equippolishedresult();
  ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj >*
      mutable_equippolishedresult();
  const ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj >&
      equippolishedresult() const;

  // repeated .BagAttrIntObj InitBaseAttr = 8;
  int initbaseattr_size() const;
  void clear_initbaseattr();
  static const int kInitBaseAttrFieldNumber = 8;
  const ::BagAttrIntObj& initbaseattr(int index) const;
  ::BagAttrIntObj* mutable_initbaseattr(int index);
  ::BagAttrIntObj* add_initbaseattr();
  ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >*
      mutable_initbaseattr();
  const ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >&
      initbaseattr() const;

  // repeated .BagExtraAttrIdObj PlishedAttrId = 11;
  int plishedattrid_size() const;
  void clear_plishedattrid();
  static const int kPlishedAttrIdFieldNumber = 11;
  const ::BagExtraAttrIdObj& plishedattrid(int index) const;
  ::BagExtraAttrIdObj* mutable_plishedattrid(int index);
  ::BagExtraAttrIdObj* add_plishedattrid();
  ::google::protobuf::RepeatedPtrField< ::BagExtraAttrIdObj >*
      mutable_plishedattrid();
  const ::google::protobuf::RepeatedPtrField< ::BagExtraAttrIdObj >&
      plishedattrid() const;

  // repeated .BagGemObj GemArray = 12;
  int gemarray_size() const;
  void clear_gemarray();
  static const int kGemArrayFieldNumber = 12;
  const ::BagGemObj& gemarray(int index) const;
  ::BagGemObj* mutable_gemarray(int index);
  ::BagGemObj* add_gemarray();
  ::google::protobuf::RepeatedPtrField< ::BagGemObj >*
      mutable_gemarray();
  const ::google::protobuf::RepeatedPtrField< ::BagGemObj >&
      gemarray() const;

  // repeated .BagAttrIntObj PolishedBaseAttrResult = 13;
  int polishedbaseattrresult_size() const;
  void clear_polishedbaseattrresult();
  static const int kPolishedBaseAttrResultFieldNumber = 13;
  const ::BagAttrIntObj& polishedbaseattrresult(int index) const;
  ::BagAttrIntObj* mutable_polishedbaseattrresult(int index);
  ::BagAttrIntObj* add_polishedbaseattrresult();
  ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >*
      mutable_polishedbaseattrresult();
  const ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >&
      polishedbaseattrresult() const;

  // repeated .BagAttrIntObj BaseAttrPolishedInitAttr = 18;
  int baseattrpolishedinitattr_size() const;
  void clear_baseattrpolishedinitattr();
  static const int kBaseAttrPolishedInitAttrFieldNumber = 18;
  const ::BagAttrIntObj& baseattrpolishedinitattr(int index) const;
  ::BagAttrIntObj* mutable_baseattrpolishedinitattr(int index);
  ::BagAttrIntObj* add_baseattrpolishedinitattr();
  ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >*
      mutable_baseattrpolishedinitattr();
  const ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >&
      baseattrpolishedinitattr() const;

  // optional sint32 PolishedScore = 6 [default = 0];
  bool has_polishedscore() const;
  void clear_polishedscore();
  static const int kPolishedScoreFieldNumber = 6;
  ::google::protobuf::int32 polishedscore() const;
  void set_polishedscore(::google::protobuf::int32 value);

  // optional sint32 EquipScore = 16 [default = 0];
  bool has_equipscore() const;
  void clear_equipscore();
  static const int kEquipScoreFieldNumber = 16;
  ::google::protobuf::int32 equipscore() const;
  void set_equipscore(::google::protobuf::int32 value);

  // optional sint32 PolishedEquipScore = 17 [default = 0];
  bool has_polishedequipscore() const;
  void clear_polishedequipscore();
  static const int kPolishedEquipScoreFieldNumber = 17;
  ::google::protobuf::int32 polishedequipscore() const;
  void set_polishedequipscore(::google::protobuf::int32 value);

  // optional sint64 ItemID = 1 [default = -1];
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  ::google::protobuf::int64 itemid() const;
  void set_itemid(::google::protobuf::int64 value);

  // optional sint64 Index = 7 [default = -1];
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 7;
  ::google::protobuf::int64 index() const;
  void set_index(::google::protobuf::int64 value);

  // optional sint32 BagContainerType = 9 [default = -1];
  bool has_bagcontainertype() const;
  void clear_bagcontainertype();
  static const int kBagContainerTypeFieldNumber = 9;
  ::google::protobuf::int32 bagcontainertype() const;
  void set_bagcontainertype(::google::protobuf::int32 value);

  // optional sint32 GridIndex = 10 [default = -1];
  bool has_gridindex() const;
  void clear_gridindex();
  static const int kGridIndexFieldNumber = 10;
  ::google::protobuf::int32 gridindex() const;
  void set_gridindex(::google::protobuf::int32 value);

  // optional sint32 TemplateId = 14 [default = -1];
  bool has_templateid() const;
  void clear_templateid();
  static const int kTemplateIdFieldNumber = 14;
  ::google::protobuf::int32 templateid() const;
  void set_templateid(::google::protobuf::int32 value);

  // optional sint32 GemSuitId = 15 [default = -1];
  bool has_gemsuitid() const;
  void clear_gemsuitid();
  static const int kGemSuitIdFieldNumber = 15;
  ::google::protobuf::int32 gemsuitid() const;
  void set_gemsuitid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BagEquipObj)
 private:
  void set_has_itemid();
  void clear_has_itemid();
  void set_has_polishedscore();
  void clear_has_polishedscore();
  void set_has_index();
  void clear_has_index();
  void set_has_bagcontainertype();
  void clear_has_bagcontainertype();
  void set_has_gridindex();
  void clear_has_gridindex();
  void set_has_templateid();
  void clear_has_templateid();
  void set_has_gemsuitid();
  void clear_has_gemsuitid();
  void set_has_equipscore();
  void clear_has_equipscore();
  void set_has_polishedequipscore();
  void clear_has_polishedequipscore();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj > baseattr_;
  ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj > extraattr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > enhancelv_;
  ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj > equippolishedresult_;
  ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj > initbaseattr_;
  ::google::protobuf::RepeatedPtrField< ::BagExtraAttrIdObj > plishedattrid_;
  ::google::protobuf::RepeatedPtrField< ::BagGemObj > gemarray_;
  ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj > polishedbaseattrresult_;
  ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj > baseattrpolishedinitattr_;
  ::google::protobuf::int32 polishedscore_;
  ::google::protobuf::int32 equipscore_;
  ::google::protobuf::int32 polishedequipscore_;
  ::google::protobuf::int64 itemid_;
  ::google::protobuf::int64 index_;
  ::google::protobuf::int32 bagcontainertype_;
  ::google::protobuf::int32 gridindex_;
  ::google::protobuf::int32 templateid_;
  ::google::protobuf::int32 gemsuitid_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BagAttrIntObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BagAttrIntObj) */ {
 public:
  BagAttrIntObj();
  virtual ~BagAttrIntObj();

  BagAttrIntObj(const BagAttrIntObj& from);

  inline BagAttrIntObj& operator=(const BagAttrIntObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BagAttrIntObj(BagAttrIntObj&& from) noexcept
    : BagAttrIntObj() {
    *this = ::std::move(from);
  }

  inline BagAttrIntObj& operator=(BagAttrIntObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagAttrIntObj& default_instance();

  static inline const BagAttrIntObj* internal_default_instance() {
    return reinterpret_cast<const BagAttrIntObj*>(
               &_BagAttrIntObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(BagAttrIntObj* other);
  friend void swap(BagAttrIntObj& a, BagAttrIntObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BagAttrIntObj* New() const PROTOBUF_FINAL { return New(NULL); }

  BagAttrIntObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BagAttrIntObj& from);
  void MergeFrom(const BagAttrIntObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BagAttrIntObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 MaxAttrValue = 3 [default = -1];
  bool has_maxattrvalue() const;
  void clear_maxattrvalue();
  static const int kMaxAttrValueFieldNumber = 3;
  ::google::protobuf::int32 maxattrvalue() const;
  void set_maxattrvalue(::google::protobuf::int32 value);

  // optional sint32 AttrId = 1 [default = -1];
  bool has_attrid() const;
  void clear_attrid();
  static const int kAttrIdFieldNumber = 1;
  ::google::protobuf::int32 attrid() const;
  void set_attrid(::google::protobuf::int32 value);

  // optional sint32 AttrValue = 2 [default = -1];
  bool has_attrvalue() const;
  void clear_attrvalue();
  static const int kAttrValueFieldNumber = 2;
  ::google::protobuf::int32 attrvalue() const;
  void set_attrvalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BagAttrIntObj)
 private:
  void set_has_attrid();
  void clear_has_attrid();
  void set_has_attrvalue();
  void clear_has_attrvalue();
  void set_has_maxattrvalue();
  void clear_has_maxattrvalue();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 maxattrvalue_;
  ::google::protobuf::int32 attrid_;
  ::google::protobuf::int32 attrvalue_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BagAttrFloatObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BagAttrFloatObj) */ {
 public:
  BagAttrFloatObj();
  virtual ~BagAttrFloatObj();

  BagAttrFloatObj(const BagAttrFloatObj& from);

  inline BagAttrFloatObj& operator=(const BagAttrFloatObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BagAttrFloatObj(BagAttrFloatObj&& from) noexcept
    : BagAttrFloatObj() {
    *this = ::std::move(from);
  }

  inline BagAttrFloatObj& operator=(BagAttrFloatObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagAttrFloatObj& default_instance();

  static inline const BagAttrFloatObj* internal_default_instance() {
    return reinterpret_cast<const BagAttrFloatObj*>(
               &_BagAttrFloatObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(BagAttrFloatObj* other);
  friend void swap(BagAttrFloatObj& a, BagAttrFloatObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BagAttrFloatObj* New() const PROTOBUF_FINAL { return New(NULL); }

  BagAttrFloatObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BagAttrFloatObj& from);
  void MergeFrom(const BagAttrFloatObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BagAttrFloatObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Index = 3 [default = -1];
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // optional sint32 AttrId = 1 [default = -1];
  bool has_attrid() const;
  void clear_attrid();
  static const int kAttrIdFieldNumber = 1;
  ::google::protobuf::int32 attrid() const;
  void set_attrid(::google::protobuf::int32 value);

  // optional float AttrValue = 2 [default = -1];
  bool has_attrvalue() const;
  void clear_attrvalue();
  static const int kAttrValueFieldNumber = 2;
  float attrvalue() const;
  void set_attrvalue(float value);

  // @@protoc_insertion_point(class_scope:BagAttrFloatObj)
 private:
  void set_has_attrid();
  void clear_has_attrid();
  void set_has_attrvalue();
  void clear_has_attrvalue();
  void set_has_index();
  void clear_has_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 attrid_;
  float attrvalue_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BagGemObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BagGemObj) */ {
 public:
  BagGemObj();
  virtual ~BagGemObj();

  BagGemObj(const BagGemObj& from);

  inline BagGemObj& operator=(const BagGemObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BagGemObj(BagGemObj&& from) noexcept
    : BagGemObj() {
    *this = ::std::move(from);
  }

  inline BagGemObj& operator=(BagGemObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagGemObj& default_instance();

  static inline const BagGemObj* internal_default_instance() {
    return reinterpret_cast<const BagGemObj*>(
               &_BagGemObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(BagGemObj* other);
  friend void swap(BagGemObj& a, BagGemObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BagGemObj* New() const PROTOBUF_FINAL { return New(NULL); }

  BagGemObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BagGemObj& from);
  void MergeFrom(const BagGemObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BagGemObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool IsLock = 3 [default = false];
  bool has_islock() const;
  void clear_islock();
  static const int kIsLockFieldNumber = 3;
  bool islock() const;
  void set_islock(bool value);

  // optional sint32 GemId = 1 [default = -1];
  bool has_gemid() const;
  void clear_gemid();
  static const int kGemIdFieldNumber = 1;
  ::google::protobuf::int32 gemid() const;
  void set_gemid(::google::protobuf::int32 value);

  // optional sint32 Pos = 2 [default = -1];
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  ::google::protobuf::int32 pos() const;
  void set_pos(::google::protobuf::int32 value);

  // optional sint32 Level = 4 [default = -1];
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 4;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional sint32 Type = 5 [default = -1];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BagGemObj)
 private:
  void set_has_gemid();
  void clear_has_gemid();
  void set_has_pos();
  void clear_has_pos();
  void set_has_islock();
  void clear_has_islock();
  void set_has_level();
  void clear_has_level();
  void set_has_type();
  void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool islock_;
  ::google::protobuf::int32 gemid_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 type_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KeyValue2IntInt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KeyValue2IntInt) */ {
 public:
  KeyValue2IntInt();
  virtual ~KeyValue2IntInt();

  KeyValue2IntInt(const KeyValue2IntInt& from);

  inline KeyValue2IntInt& operator=(const KeyValue2IntInt& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KeyValue2IntInt(KeyValue2IntInt&& from) noexcept
    : KeyValue2IntInt() {
    *this = ::std::move(from);
  }

  inline KeyValue2IntInt& operator=(KeyValue2IntInt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyValue2IntInt& default_instance();

  static inline const KeyValue2IntInt* internal_default_instance() {
    return reinterpret_cast<const KeyValue2IntInt*>(
               &_KeyValue2IntInt_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(KeyValue2IntInt* other);
  friend void swap(KeyValue2IntInt& a, KeyValue2IntInt& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KeyValue2IntInt* New() const PROTOBUF_FINAL { return New(NULL); }

  KeyValue2IntInt* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KeyValue2IntInt& from);
  void MergeFrom(const KeyValue2IntInt& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KeyValue2IntInt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Key = 1 [default = -1];
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int32 key() const;
  void set_key(::google::protobuf::int32 value);

  // optional sint32 Value = 2 [default = -1];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KeyValue2IntInt)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 key_;
  ::google::protobuf::int32 value_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KeyValue2IntBool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KeyValue2IntBool) */ {
 public:
  KeyValue2IntBool();
  virtual ~KeyValue2IntBool();

  KeyValue2IntBool(const KeyValue2IntBool& from);

  inline KeyValue2IntBool& operator=(const KeyValue2IntBool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KeyValue2IntBool(KeyValue2IntBool&& from) noexcept
    : KeyValue2IntBool() {
    *this = ::std::move(from);
  }

  inline KeyValue2IntBool& operator=(KeyValue2IntBool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyValue2IntBool& default_instance();

  static inline const KeyValue2IntBool* internal_default_instance() {
    return reinterpret_cast<const KeyValue2IntBool*>(
               &_KeyValue2IntBool_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(KeyValue2IntBool* other);
  friend void swap(KeyValue2IntBool& a, KeyValue2IntBool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KeyValue2IntBool* New() const PROTOBUF_FINAL { return New(NULL); }

  KeyValue2IntBool* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KeyValue2IntBool& from);
  void MergeFrom(const KeyValue2IntBool& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KeyValue2IntBool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool Value = 2 [default = false];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  bool value() const;
  void set_value(bool value);

  // optional sint32 Key = 1 [default = -1];
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int32 key() const;
  void set_key(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KeyValue2IntBool)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool value_;
  ::google::protobuf::int32 key_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BagExtraAttrObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BagExtraAttrObj) */ {
 public:
  BagExtraAttrObj();
  virtual ~BagExtraAttrObj();

  BagExtraAttrObj(const BagExtraAttrObj& from);

  inline BagExtraAttrObj& operator=(const BagExtraAttrObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BagExtraAttrObj(BagExtraAttrObj&& from) noexcept
    : BagExtraAttrObj() {
    *this = ::std::move(from);
  }

  inline BagExtraAttrObj& operator=(BagExtraAttrObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagExtraAttrObj& default_instance();

  static inline const BagExtraAttrObj* internal_default_instance() {
    return reinterpret_cast<const BagExtraAttrObj*>(
               &_BagExtraAttrObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(BagExtraAttrObj* other);
  friend void swap(BagExtraAttrObj& a, BagExtraAttrObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BagExtraAttrObj* New() const PROTOBUF_FINAL { return New(NULL); }

  BagExtraAttrObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BagExtraAttrObj& from);
  void MergeFrom(const BagExtraAttrObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BagExtraAttrObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BagAttrFloatObj ExtraAttr = 1;
  int extraattr_size() const;
  void clear_extraattr();
  static const int kExtraAttrFieldNumber = 1;
  const ::BagAttrFloatObj& extraattr(int index) const;
  ::BagAttrFloatObj* mutable_extraattr(int index);
  ::BagAttrFloatObj* add_extraattr();
  ::google::protobuf::RepeatedPtrField< ::BagAttrFloatObj >*
      mutable_extraattr();
  const ::google::protobuf::RepeatedPtrField< ::BagAttrFloatObj >&
      extraattr() const;

  // optional sint32 Id = 2 [default = -1];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BagExtraAttrObj)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BagAttrFloatObj > extraattr_;
  ::google::protobuf::int32 id_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BagExtraAttrIdObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BagExtraAttrIdObj) */ {
 public:
  BagExtraAttrIdObj();
  virtual ~BagExtraAttrIdObj();

  BagExtraAttrIdObj(const BagExtraAttrIdObj& from);

  inline BagExtraAttrIdObj& operator=(const BagExtraAttrIdObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BagExtraAttrIdObj(BagExtraAttrIdObj&& from) noexcept
    : BagExtraAttrIdObj() {
    *this = ::std::move(from);
  }

  inline BagExtraAttrIdObj& operator=(BagExtraAttrIdObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagExtraAttrIdObj& default_instance();

  static inline const BagExtraAttrIdObj* internal_default_instance() {
    return reinterpret_cast<const BagExtraAttrIdObj*>(
               &_BagExtraAttrIdObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(BagExtraAttrIdObj* other);
  friend void swap(BagExtraAttrIdObj& a, BagExtraAttrIdObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BagExtraAttrIdObj* New() const PROTOBUF_FINAL { return New(NULL); }

  BagExtraAttrIdObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BagExtraAttrIdObj& from);
  void MergeFrom(const BagExtraAttrIdObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BagExtraAttrIdObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 AttrId = 1;
  int attrid_size() const;
  void clear_attrid();
  static const int kAttrIdFieldNumber = 1;
  ::google::protobuf::int32 attrid(int index) const;
  void set_attrid(int index, ::google::protobuf::int32 value);
  void add_attrid(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      attrid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_attrid();

  // optional sint32 Id = 2 [default = -1];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BagExtraAttrIdObj)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > attrid_;
  ::google::protobuf::int32 id_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActivityNpcData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityNpcData) */ {
 public:
  ActivityNpcData();
  virtual ~ActivityNpcData();

  ActivityNpcData(const ActivityNpcData& from);

  inline ActivityNpcData& operator=(const ActivityNpcData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActivityNpcData(ActivityNpcData&& from) noexcept
    : ActivityNpcData() {
    *this = ::std::move(from);
  }

  inline ActivityNpcData& operator=(ActivityNpcData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityNpcData& default_instance();

  static inline const ActivityNpcData* internal_default_instance() {
    return reinterpret_cast<const ActivityNpcData*>(
               &_ActivityNpcData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(ActivityNpcData* other);
  friend void swap(ActivityNpcData& a, ActivityNpcData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActivityNpcData* New() const PROTOBUF_FINAL { return New(NULL); }

  ActivityNpcData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActivityNpcData& from);
  void MergeFrom(const ActivityNpcData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActivityNpcData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes PosInfo = 2;
  bool has_posinfo() const;
  void clear_posinfo();
  static const int kPosInfoFieldNumber = 2;
  const ::std::string& posinfo() const;
  void set_posinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_posinfo(::std::string&& value);
  #endif
  void set_posinfo(const char* value);
  void set_posinfo(const void* value, size_t size);
  ::std::string* mutable_posinfo();
  ::std::string* release_posinfo();
  void set_allocated_posinfo(::std::string* posinfo);

  // optional sint32 ObjId = 4 [default = -1];
  bool has_objid() const;
  void clear_objid();
  static const int kObjIdFieldNumber = 4;
  ::google::protobuf::int32 objid() const;
  void set_objid(::google::protobuf::int32 value);

  // optional sint32 DungeonId = 1 [default = -1];
  bool has_dungeonid() const;
  void clear_dungeonid();
  static const int kDungeonIdFieldNumber = 1;
  ::google::protobuf::int32 dungeonid() const;
  void set_dungeonid(::google::protobuf::int32 value);

  // optional sint32 NPCId = 3 [default = -1];
  bool has_npcid() const;
  void clear_npcid();
  static const int kNPCIdFieldNumber = 3;
  ::google::protobuf::int32 npcid() const;
  void set_npcid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivityNpcData)
 private:
  void set_has_dungeonid();
  void clear_has_dungeonid();
  void set_has_posinfo();
  void clear_has_posinfo();
  void set_has_npcid();
  void clear_has_npcid();
  void set_has_objid();
  void clear_has_objid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr posinfo_;
  ::google::protobuf::int32 objid_;
  ::google::protobuf::int32 dungeonid_;
  ::google::protobuf::int32 npcid_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldBossObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WorldBossObj) */ {
 public:
  WorldBossObj();
  virtual ~WorldBossObj();

  WorldBossObj(const WorldBossObj& from);

  inline WorldBossObj& operator=(const WorldBossObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldBossObj(WorldBossObj&& from) noexcept
    : WorldBossObj() {
    *this = ::std::move(from);
  }

  inline WorldBossObj& operator=(WorldBossObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBossObj& default_instance();

  static inline const WorldBossObj* internal_default_instance() {
    return reinterpret_cast<const WorldBossObj*>(
               &_WorldBossObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(WorldBossObj* other);
  friend void swap(WorldBossObj& a, WorldBossObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldBossObj* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldBossObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldBossObj& from);
  void MergeFrom(const WorldBossObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldBossObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool IsDead = 4 [default = false];
  bool has_isdead() const;
  void clear_isdead();
  static const int kIsDeadFieldNumber = 4;
  bool isdead() const;
  void set_isdead(bool value);

  // optional sint32 DungeonId = 1 [default = -1];
  bool has_dungeonid() const;
  void clear_dungeonid();
  static const int kDungeonIdFieldNumber = 1;
  ::google::protobuf::int32 dungeonid() const;
  void set_dungeonid(::google::protobuf::int32 value);

  // optional sint32 MonsterId = 2 [default = -1];
  bool has_monsterid() const;
  void clear_monsterid();
  static const int kMonsterIdFieldNumber = 2;
  ::google::protobuf::int32 monsterid() const;
  void set_monsterid(::google::protobuf::int32 value);

  // optional sint32 CurHP = 3 [default = -1];
  bool has_curhp() const;
  void clear_curhp();
  static const int kCurHPFieldNumber = 3;
  ::google::protobuf::int32 curhp() const;
  void set_curhp(::google::protobuf::int32 value);

  // optional sint32 Level = 7 [default = 1];
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 7;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WorldBossObj)
 private:
  void set_has_dungeonid();
  void clear_has_dungeonid();
  void set_has_monsterid();
  void clear_has_monsterid();
  void set_has_curhp();
  void clear_has_curhp();
  void set_has_isdead();
  void clear_has_isdead();
  void set_has_level();
  void clear_has_level();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool isdead_;
  ::google::protobuf::int32 dungeonid_;
  ::google::protobuf::int32 monsterid_;
  ::google::protobuf::int32 curhp_;
  ::google::protobuf::int32 level_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldBossRankObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WorldBossRankObj) */ {
 public:
  WorldBossRankObj();
  virtual ~WorldBossRankObj();

  WorldBossRankObj(const WorldBossRankObj& from);

  inline WorldBossRankObj& operator=(const WorldBossRankObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldBossRankObj(WorldBossRankObj&& from) noexcept
    : WorldBossRankObj() {
    *this = ::std::move(from);
  }

  inline WorldBossRankObj& operator=(WorldBossRankObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBossRankObj& default_instance();

  static inline const WorldBossRankObj* internal_default_instance() {
    return reinterpret_cast<const WorldBossRankObj*>(
               &_WorldBossRankObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(WorldBossRankObj* other);
  friend void swap(WorldBossRankObj& a, WorldBossRankObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldBossRankObj* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldBossRankObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldBossRankObj& from);
  void MergeFrom(const WorldBossRankObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldBossRankObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 3;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 3;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional sint32 Rank = 1 [default = 0];
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // optional sint32 Level = 5 [default = 0];
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional sint32 Hurt = 6 [default = 0];
  bool has_hurt() const;
  void clear_hurt();
  static const int kHurtFieldNumber = 6;
  ::google::protobuf::int32 hurt() const;
  void set_hurt(::google::protobuf::int32 value);

  // optional sint64 UserId = 2 [default = -1];
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:WorldBossRankObj)
 private:
  void set_has_rank();
  void clear_has_rank();
  void set_has_userid();
  void clear_has_userid();
  void set_has_username();
  void clear_has_username();
  void set_has_level();
  void clear_has_level();
  void set_has_hurt();
  void clear_has_hurt();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 hurt_;
  ::google::protobuf::int64 userid_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TopPeoValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TopPeoValue) */ {
 public:
  TopPeoValue();
  virtual ~TopPeoValue();

  TopPeoValue(const TopPeoValue& from);

  inline TopPeoValue& operator=(const TopPeoValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TopPeoValue(TopPeoValue&& from) noexcept
    : TopPeoValue() {
    *this = ::std::move(from);
  }

  inline TopPeoValue& operator=(TopPeoValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TopPeoValue& default_instance();

  static inline const TopPeoValue* internal_default_instance() {
    return reinterpret_cast<const TopPeoValue*>(
               &_TopPeoValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(TopPeoValue* other);
  friend void swap(TopPeoValue& a, TopPeoValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TopPeoValue* New() const PROTOBUF_FINAL { return New(NULL); }

  TopPeoValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TopPeoValue& from);
  void MergeFrom(const TopPeoValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TopPeoValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string PlanName = 1;
  bool has_planname() const;
  void clear_planname();
  static const int kPlanNameFieldNumber = 1;
  const ::std::string& planname() const;
  void set_planname(const ::std::string& value);
  #if LANG_CXX11
  void set_planname(::std::string&& value);
  #endif
  void set_planname(const char* value);
  void set_planname(const char* value, size_t size);
  ::std::string* mutable_planname();
  ::std::string* release_planname();
  void set_allocated_planname(::std::string* planname);

  // optional sint32 MyRanking = 6 [default = -1];
  bool has_myranking() const;
  void clear_myranking();
  static const int kMyRankingFieldNumber = 6;
  ::google::protobuf::int32 myranking() const;
  void set_myranking(::google::protobuf::int32 value);

  // optional sint64 UserId = 2 [default = -1];
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // optional sint32 LV = 3 [default = -1];
  bool has_lv() const;
  void clear_lv();
  static const int kLVFieldNumber = 3;
  ::google::protobuf::int32 lv() const;
  void set_lv(::google::protobuf::int32 value);

  // optional sint32 AllRanking = 4 [default = -1];
  bool has_allranking() const;
  void clear_allranking();
  static const int kAllRankingFieldNumber = 4;
  ::google::protobuf::int32 allranking() const;
  void set_allranking(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TopPeoValue)
 private:
  void set_has_planname();
  void clear_has_planname();
  void set_has_userid();
  void clear_has_userid();
  void set_has_lv();
  void clear_has_lv();
  void set_has_allranking();
  void clear_has_allranking();
  void set_has_myranking();
  void clear_has_myranking();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr planname_;
  ::google::protobuf::int32 myranking_;
  ::google::protobuf::int64 userid_;
  ::google::protobuf::int32 lv_;
  ::google::protobuf::int32 allranking_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OneSData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OneSData) */ {
 public:
  OneSData();
  virtual ~OneSData();

  OneSData(const OneSData& from);

  inline OneSData& operator=(const OneSData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OneSData(OneSData&& from) noexcept
    : OneSData() {
    *this = ::std::move(from);
  }

  inline OneSData& operator=(OneSData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneSData& default_instance();

  static inline const OneSData* internal_default_instance() {
    return reinterpret_cast<const OneSData*>(
               &_OneSData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(OneSData* other);
  friend void swap(OneSData& a, OneSData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OneSData* New() const PROTOBUF_FINAL { return New(NULL); }

  OneSData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OneSData& from);
  void MergeFrom(const OneSData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OneSData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Type = 1 [default = -1];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional sint32 SkillID = 2 [default = -1];
  bool has_skillid() const;
  void clear_skillid();
  static const int kSkillIDFieldNumber = 2;
  ::google::protobuf::int32 skillid() const;
  void set_skillid(::google::protobuf::int32 value);

  // optional sint32 SkillLv = 3 [default = -1];
  bool has_skilllv() const;
  void clear_skilllv();
  static const int kSkillLvFieldNumber = 3;
  ::google::protobuf::int32 skilllv() const;
  void set_skilllv(::google::protobuf::int32 value);

  // optional sint32 Index = 4 [default = -1];
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 4;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OneSData)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_skillid();
  void clear_has_skillid();
  void set_has_skilllv();
  void clear_has_skilllv();
  void set_has_index();
  void clear_has_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 skilllv_;
  ::google::protobuf::int32 index_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActMessage) */ {
 public:
  ActMessage();
  virtual ~ActMessage();

  ActMessage(const ActMessage& from);

  inline ActMessage& operator=(const ActMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActMessage(ActMessage&& from) noexcept
    : ActMessage() {
    *this = ::std::move(from);
  }

  inline ActMessage& operator=(ActMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActMessage& default_instance();

  static inline const ActMessage* internal_default_instance() {
    return reinterpret_cast<const ActMessage*>(
               &_ActMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(ActMessage* other);
  friend void swap(ActMessage& a, ActMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  ActMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActMessage& from);
  void MergeFrom(const ActMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ActPlanName = 4;
  bool has_actplanname() const;
  void clear_actplanname();
  static const int kActPlanNameFieldNumber = 4;
  const ::std::string& actplanname() const;
  void set_actplanname(const ::std::string& value);
  #if LANG_CXX11
  void set_actplanname(::std::string&& value);
  #endif
  void set_actplanname(const char* value);
  void set_actplanname(const char* value, size_t size);
  ::std::string* mutable_actplanname();
  ::std::string* release_actplanname();
  void set_allocated_actplanname(::std::string* actplanname);

  // optional string DepPlanName = 5;
  bool has_depplanname() const;
  void clear_depplanname();
  static const int kDepPlanNameFieldNumber = 5;
  const ::std::string& depplanname() const;
  void set_depplanname(const ::std::string& value);
  #if LANG_CXX11
  void set_depplanname(::std::string&& value);
  #endif
  void set_depplanname(const char* value);
  void set_depplanname(const char* value, size_t size);
  ::std::string* mutable_depplanname();
  ::std::string* release_depplanname();
  void set_allocated_depplanname(::std::string* depplanname);

  // optional string Time = 6;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 6;
  const ::std::string& time() const;
  void set_time(const ::std::string& value);
  #if LANG_CXX11
  void set_time(::std::string&& value);
  #endif
  void set_time(const char* value);
  void set_time(const char* value, size_t size);
  ::std::string* mutable_time();
  ::std::string* release_time();
  void set_allocated_time(::std::string* time);

  // optional sint64 ActUserID = 1 [default = -1];
  bool has_actuserid() const;
  void clear_actuserid();
  static const int kActUserIDFieldNumber = 1;
  ::google::protobuf::int64 actuserid() const;
  void set_actuserid(::google::protobuf::int64 value);

  // optional sint64 DepUserID = 2 [default = -1];
  bool has_depuserid() const;
  void clear_depuserid();
  static const int kDepUserIDFieldNumber = 2;
  ::google::protobuf::int64 depuserid() const;
  void set_depuserid(::google::protobuf::int64 value);

  // optional sint32 ActIsCopy = 3 [default = -1];
  bool has_actiscopy() const;
  void clear_actiscopy();
  static const int kActIsCopyFieldNumber = 3;
  ::google::protobuf::int32 actiscopy() const;
  void set_actiscopy(::google::protobuf::int32 value);

  // optional sint32 ActRanking = 7 [default = -1];
  bool has_actranking() const;
  void clear_actranking();
  static const int kActRankingFieldNumber = 7;
  ::google::protobuf::int32 actranking() const;
  void set_actranking(::google::protobuf::int32 value);

  // optional sint64 WinUserID = 9 [default = -1];
  bool has_winuserid() const;
  void clear_winuserid();
  static const int kWinUserIDFieldNumber = 9;
  ::google::protobuf::int64 winuserid() const;
  void set_winuserid(::google::protobuf::int64 value);

  // optional sint32 DepRanking = 8 [default = -1];
  bool has_depranking() const;
  void clear_depranking();
  static const int kDepRankingFieldNumber = 8;
  ::google::protobuf::int32 depranking() const;
  void set_depranking(::google::protobuf::int32 value);

  // optional sint32 DepIsCopy = 10 [default = -1];
  bool has_depiscopy() const;
  void clear_depiscopy();
  static const int kDepIsCopyFieldNumber = 10;
  ::google::protobuf::int32 depiscopy() const;
  void set_depiscopy(::google::protobuf::int32 value);

  // optional sint32 ActJobID = 11 [default = -1];
  bool has_actjobid() const;
  void clear_actjobid();
  static const int kActJobIDFieldNumber = 11;
  ::google::protobuf::int32 actjobid() const;
  void set_actjobid(::google::protobuf::int32 value);

  // optional sint32 DepJobID = 12 [default = -1];
  bool has_depjobid() const;
  void clear_depjobid();
  static const int kDepJobIDFieldNumber = 12;
  ::google::protobuf::int32 depjobid() const;
  void set_depjobid(::google::protobuf::int32 value);

  // optional sint32 ActChangeSource = 13 [default = -1];
  bool has_actchangesource() const;
  void clear_actchangesource();
  static const int kActChangeSourceFieldNumber = 13;
  ::google::protobuf::int32 actchangesource() const;
  void set_actchangesource(::google::protobuf::int32 value);

  // optional sint32 DepChangeSource = 14 [default = -1];
  bool has_depchangesource() const;
  void clear_depchangesource();
  static const int kDepChangeSourceFieldNumber = 14;
  ::google::protobuf::int32 depchangesource() const;
  void set_depchangesource(::google::protobuf::int32 value);

  // optional sint32 ActChangeOver = 15 [default = -1];
  bool has_actchangeover() const;
  void clear_actchangeover();
  static const int kActChangeOverFieldNumber = 15;
  ::google::protobuf::int32 actchangeover() const;
  void set_actchangeover(::google::protobuf::int32 value);

  // optional sint32 DepChangeOver = 16 [default = -1];
  bool has_depchangeover() const;
  void clear_depchangeover();
  static const int kDepChangeOverFieldNumber = 16;
  ::google::protobuf::int32 depchangeover() const;
  void set_depchangeover(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActMessage)
 private:
  void set_has_actuserid();
  void clear_has_actuserid();
  void set_has_depuserid();
  void clear_has_depuserid();
  void set_has_actiscopy();
  void clear_has_actiscopy();
  void set_has_actplanname();
  void clear_has_actplanname();
  void set_has_depplanname();
  void clear_has_depplanname();
  void set_has_time();
  void clear_has_time();
  void set_has_actranking();
  void clear_has_actranking();
  void set_has_depranking();
  void clear_has_depranking();
  void set_has_winuserid();
  void clear_has_winuserid();
  void set_has_depiscopy();
  void clear_has_depiscopy();
  void set_has_actjobid();
  void clear_has_actjobid();
  void set_has_depjobid();
  void clear_has_depjobid();
  void set_has_actchangesource();
  void clear_has_actchangesource();
  void set_has_depchangesource();
  void clear_has_depchangesource();
  void set_has_actchangeover();
  void clear_has_actchangeover();
  void set_has_depchangeover();
  void clear_has_depchangeover();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr actplanname_;
  ::google::protobuf::internal::ArenaStringPtr depplanname_;
  ::google::protobuf::internal::ArenaStringPtr time_;
  ::google::protobuf::int64 actuserid_;
  ::google::protobuf::int64 depuserid_;
  ::google::protobuf::int32 actiscopy_;
  ::google::protobuf::int32 actranking_;
  ::google::protobuf::int64 winuserid_;
  ::google::protobuf::int32 depranking_;
  ::google::protobuf::int32 depiscopy_;
  ::google::protobuf::int32 actjobid_;
  ::google::protobuf::int32 depjobid_;
  ::google::protobuf::int32 actchangesource_;
  ::google::protobuf::int32 depchangesource_;
  ::google::protobuf::int32 actchangeover_;
  ::google::protobuf::int32 depchangeover_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TopJobMess : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TopJobMess) */ {
 public:
  TopJobMess();
  virtual ~TopJobMess();

  TopJobMess(const TopJobMess& from);

  inline TopJobMess& operator=(const TopJobMess& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TopJobMess(TopJobMess&& from) noexcept
    : TopJobMess() {
    *this = ::std::move(from);
  }

  inline TopJobMess& operator=(TopJobMess&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TopJobMess& default_instance();

  static inline const TopJobMess* internal_default_instance() {
    return reinterpret_cast<const TopJobMess*>(
               &_TopJobMess_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(TopJobMess* other);
  friend void swap(TopJobMess& a, TopJobMess& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TopJobMess* New() const PROTOBUF_FINAL { return New(NULL); }

  TopJobMess* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TopJobMess& from);
  void MergeFrom(const TopJobMess& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TopJobMess* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TopPeoValue Top = 2;
  int top_size() const;
  void clear_top();
  static const int kTopFieldNumber = 2;
  const ::TopPeoValue& top(int index) const;
  ::TopPeoValue* mutable_top(int index);
  ::TopPeoValue* add_top();
  ::google::protobuf::RepeatedPtrField< ::TopPeoValue >*
      mutable_top();
  const ::google::protobuf::RepeatedPtrField< ::TopPeoValue >&
      top() const;

  // optional sint32 JobID = 1 [default = -1];
  bool has_jobid() const;
  void clear_jobid();
  static const int kJobIDFieldNumber = 1;
  ::google::protobuf::int32 jobid() const;
  void set_jobid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TopJobMess)
 private:
  void set_has_jobid();
  void clear_has_jobid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TopPeoValue > top_;
  ::google::protobuf::int32 jobid_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TopMess : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TopMess) */ {
 public:
  TopMess();
  virtual ~TopMess();

  TopMess(const TopMess& from);

  inline TopMess& operator=(const TopMess& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TopMess(TopMess&& from) noexcept
    : TopMess() {
    *this = ::std::move(from);
  }

  inline TopMess& operator=(TopMess&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TopMess& default_instance();

  static inline const TopMess* internal_default_instance() {
    return reinterpret_cast<const TopMess*>(
               &_TopMess_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(TopMess* other);
  friend void swap(TopMess& a, TopMess& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TopMess* New() const PROTOBUF_FINAL { return New(NULL); }

  TopMess* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TopMess& from);
  void MergeFrom(const TopMess& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TopMess* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TopJobMess Top = 2;
  int top_size() const;
  void clear_top();
  static const int kTopFieldNumber = 2;
  const ::TopJobMess& top(int index) const;
  ::TopJobMess* mutable_top(int index);
  ::TopJobMess* add_top();
  ::google::protobuf::RepeatedPtrField< ::TopJobMess >*
      mutable_top();
  const ::google::protobuf::RepeatedPtrField< ::TopJobMess >&
      top() const;

  // optional sint32 MyType = 1 [default = -1];
  bool has_mytype() const;
  void clear_mytype();
  static const int kMyTypeFieldNumber = 1;
  ::google::protobuf::int32 mytype() const;
  void set_mytype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TopMess)
 private:
  void set_has_mytype();
  void clear_has_mytype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TopJobMess > top_;
  ::google::protobuf::int32 mytype_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TimeTop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TimeTop) */ {
 public:
  TimeTop();
  virtual ~TimeTop();

  TimeTop(const TimeTop& from);

  inline TimeTop& operator=(const TimeTop& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TimeTop(TimeTop&& from) noexcept
    : TimeTop() {
    *this = ::std::move(from);
  }

  inline TimeTop& operator=(TimeTop&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TimeTop& default_instance();

  static inline const TimeTop* internal_default_instance() {
    return reinterpret_cast<const TimeTop*>(
               &_TimeTop_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(TimeTop* other);
  friend void swap(TimeTop& a, TimeTop& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TimeTop* New() const PROTOBUF_FINAL { return New(NULL); }

  TimeTop* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TimeTop& from);
  void MergeFrom(const TimeTop& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TimeTop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Ranking = 2 [default = -1];
  bool has_ranking() const;
  void clear_ranking();
  static const int kRankingFieldNumber = 2;
  ::google::protobuf::int32 ranking() const;
  void set_ranking(::google::protobuf::int32 value);

  // optional sint64 ID = 1 [default = -1];
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:TimeTop)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_ranking();
  void clear_has_ranking();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 ranking_;
  ::google::protobuf::int64 id_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MailHeadObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MailHeadObj) */ {
 public:
  MailHeadObj();
  virtual ~MailHeadObj();

  MailHeadObj(const MailHeadObj& from);

  inline MailHeadObj& operator=(const MailHeadObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MailHeadObj(MailHeadObj&& from) noexcept
    : MailHeadObj() {
    *this = ::std::move(from);
  }

  inline MailHeadObj& operator=(MailHeadObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailHeadObj& default_instance();

  static inline const MailHeadObj* internal_default_instance() {
    return reinterpret_cast<const MailHeadObj*>(
               &_MailHeadObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(MailHeadObj* other);
  friend void swap(MailHeadObj& a, MailHeadObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MailHeadObj* New() const PROTOBUF_FINAL { return New(NULL); }

  MailHeadObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MailHeadObj& from);
  void MergeFrom(const MailHeadObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MailHeadObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string TiTleString = 2;
  bool has_titlestring() const;
  void clear_titlestring();
  static const int kTiTleStringFieldNumber = 2;
  const ::std::string& titlestring() const;
  void set_titlestring(const ::std::string& value);
  #if LANG_CXX11
  void set_titlestring(::std::string&& value);
  #endif
  void set_titlestring(const char* value);
  void set_titlestring(const char* value, size_t size);
  ::std::string* mutable_titlestring();
  ::std::string* release_titlestring();
  void set_allocated_titlestring(::std::string* titlestring);

  // optional sint32 Status = 5 [default = 0];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 5;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional bool IsAutoDel = 6 [default = false];
  bool has_isautodel() const;
  void clear_isautodel();
  static const int kIsAutoDelFieldNumber = 6;
  bool isautodel() const;
  void set_isautodel(bool value);

  // optional sint64 UId = 1 [default = -1];
  bool has_uid() const;
  void clear_uid();
  static const int kUIdFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // optional sint32 CreateTime = 3 [default = -1];
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 3;
  ::google::protobuf::int32 createtime() const;
  void set_createtime(::google::protobuf::int32 value);

  // optional sint32 Type = 4 [default = -1];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional sint64 GUId = 8 [default = -1];
  bool has_guid() const;
  void clear_guid();
  static const int kGUIdFieldNumber = 8;
  ::google::protobuf::int64 guid() const;
  void set_guid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:MailHeadObj)
 private:
  void set_has_uid();
  void clear_has_uid();
  void set_has_titlestring();
  void clear_has_titlestring();
  void set_has_createtime();
  void clear_has_createtime();
  void set_has_type();
  void clear_has_type();
  void set_has_status();
  void clear_has_status();
  void set_has_isautodel();
  void clear_has_isautodel();
  void set_has_guid();
  void clear_has_guid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr titlestring_;
  ::google::protobuf::int32 status_;
  bool isautodel_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 createtime_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int64 guid_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MailBodyObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MailBodyObj) */ {
 public:
  MailBodyObj();
  virtual ~MailBodyObj();

  MailBodyObj(const MailBodyObj& from);

  inline MailBodyObj& operator=(const MailBodyObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MailBodyObj(MailBodyObj&& from) noexcept
    : MailBodyObj() {
    *this = ::std::move(from);
  }

  inline MailBodyObj& operator=(MailBodyObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailBodyObj& default_instance();

  static inline const MailBodyObj* internal_default_instance() {
    return reinterpret_cast<const MailBodyObj*>(
               &_MailBodyObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(MailBodyObj* other);
  friend void swap(MailBodyObj& a, MailBodyObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MailBodyObj* New() const PROTOBUF_FINAL { return New(NULL); }

  MailBodyObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MailBodyObj& from);
  void MergeFrom(const MailBodyObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MailBodyObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ChatHyperLink HyperlinkList = 4;
  int hyperlinklist_size() const;
  void clear_hyperlinklist();
  static const int kHyperlinkListFieldNumber = 4;
  const ::ChatHyperLink& hyperlinklist(int index) const;
  ::ChatHyperLink* mutable_hyperlinklist(int index);
  ::ChatHyperLink* add_hyperlinklist();
  ::google::protobuf::RepeatedPtrField< ::ChatHyperLink >*
      mutable_hyperlinklist();
  const ::google::protobuf::RepeatedPtrField< ::ChatHyperLink >&
      hyperlinklist() const;

  // repeated .KeyValue2IntInt ItemList = 5;
  int itemlist_size() const;
  void clear_itemlist();
  static const int kItemListFieldNumber = 5;
  const ::KeyValue2IntInt& itemlist(int index) const;
  ::KeyValue2IntInt* mutable_itemlist(int index);
  ::KeyValue2IntInt* add_itemlist();
  ::google::protobuf::RepeatedPtrField< ::KeyValue2IntInt >*
      mutable_itemlist();
  const ::google::protobuf::RepeatedPtrField< ::KeyValue2IntInt >&
      itemlist() const;

  // optional string Text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional sint32 Status = 6 [default = 0];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 6;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MailBodyObj)
 private:
  void set_has_text();
  void clear_has_text();
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ChatHyperLink > hyperlinklist_;
  ::google::protobuf::RepeatedPtrField< ::KeyValue2IntInt > itemlist_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 status_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatHyperLink : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChatHyperLink) */ {
 public:
  ChatHyperLink();
  virtual ~ChatHyperLink();

  ChatHyperLink(const ChatHyperLink& from);

  inline ChatHyperLink& operator=(const ChatHyperLink& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatHyperLink(ChatHyperLink&& from) noexcept
    : ChatHyperLink() {
    *this = ::std::move(from);
  }

  inline ChatHyperLink& operator=(ChatHyperLink&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatHyperLink& default_instance();

  static inline const ChatHyperLink* internal_default_instance() {
    return reinterpret_cast<const ChatHyperLink*>(
               &_ChatHyperLink_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(ChatHyperLink* other);
  friend void swap(ChatHyperLink& a, ChatHyperLink& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatHyperLink* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatHyperLink* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatHyperLink& from);
  void MergeFrom(const ChatHyperLink& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatHyperLink* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Text = 4;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 4;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional bytes FunParam = 7;
  bool has_funparam() const;
  void clear_funparam();
  static const int kFunParamFieldNumber = 7;
  const ::std::string& funparam() const;
  void set_funparam(const ::std::string& value);
  #if LANG_CXX11
  void set_funparam(::std::string&& value);
  #endif
  void set_funparam(const char* value);
  void set_funparam(const void* value, size_t size);
  ::std::string* mutable_funparam();
  ::std::string* release_funparam();
  void set_allocated_funparam(::std::string* funparam);

  // optional sint32 FunId = 6 [default = -1];
  bool has_funid() const;
  void clear_funid();
  static const int kFunIdFieldNumber = 6;
  ::google::protobuf::int32 funid() const;
  void set_funid(::google::protobuf::int32 value);

  // optional sint64 Uid = 1 [default = -1];
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // optional sint32 ConfigID = 2 [default = -1];
  bool has_configid() const;
  void clear_configid();
  static const int kConfigIDFieldNumber = 2;
  ::google::protobuf::int32 configid() const;
  void set_configid(::google::protobuf::int32 value);

  // optional sint32 Type = 3 [default = -1];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional sint64 Userid = 5 [default = -1];
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 5;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ChatHyperLink)
 private:
  void set_has_uid();
  void clear_has_uid();
  void set_has_configid();
  void clear_has_configid();
  void set_has_type();
  void clear_has_type();
  void set_has_text();
  void clear_has_text();
  void set_has_userid();
  void clear_has_userid();
  void set_has_funid();
  void clear_has_funid();
  void set_has_funparam();
  void clear_has_funparam();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr funparam_;
  ::google::protobuf::int32 funid_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 configid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int64 userid_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChatObj) */ {
 public:
  ChatObj();
  virtual ~ChatObj();

  ChatObj(const ChatObj& from);

  inline ChatObj& operator=(const ChatObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatObj(ChatObj&& from) noexcept
    : ChatObj() {
    *this = ::std::move(from);
  }

  inline ChatObj& operator=(ChatObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatObj& default_instance();

  static inline const ChatObj* internal_default_instance() {
    return reinterpret_cast<const ChatObj*>(
               &_ChatObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(ChatObj* other);
  friend void swap(ChatObj& a, ChatObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatObj* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatObj& from);
  void MergeFrom(const ChatObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ChatMsgObj ChatMsg = 1;
  bool has_chatmsg() const;
  void clear_chatmsg();
  static const int kChatMsgFieldNumber = 1;
  const ::ChatMsgObj& chatmsg() const;
  ::ChatMsgObj* mutable_chatmsg();
  ::ChatMsgObj* release_chatmsg();
  void set_allocated_chatmsg(::ChatMsgObj* chatmsg);

  // optional .ChatUserInfoObj UserInfo = 2;
  bool has_userinfo() const;
  void clear_userinfo();
  static const int kUserInfoFieldNumber = 2;
  const ::ChatUserInfoObj& userinfo() const;
  ::ChatUserInfoObj* mutable_userinfo();
  ::ChatUserInfoObj* release_userinfo();
  void set_allocated_userinfo(::ChatUserInfoObj* userinfo);

  // @@protoc_insertion_point(class_scope:ChatObj)
 private:
  void set_has_chatmsg();
  void clear_has_chatmsg();
  void set_has_userinfo();
  void clear_has_userinfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ChatMsgObj* chatmsg_;
  ::ChatUserInfoObj* userinfo_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatMsgObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChatMsgObj) */ {
 public:
  ChatMsgObj();
  virtual ~ChatMsgObj();

  ChatMsgObj(const ChatMsgObj& from);

  inline ChatMsgObj& operator=(const ChatMsgObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatMsgObj(ChatMsgObj&& from) noexcept
    : ChatMsgObj() {
    *this = ::std::move(from);
  }

  inline ChatMsgObj& operator=(ChatMsgObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatMsgObj& default_instance();

  static inline const ChatMsgObj* internal_default_instance() {
    return reinterpret_cast<const ChatMsgObj*>(
               &_ChatMsgObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(ChatMsgObj* other);
  friend void swap(ChatMsgObj& a, ChatMsgObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatMsgObj* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatMsgObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatMsgObj& from);
  void MergeFrom(const ChatMsgObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatMsgObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional bytes Voice = 3;
  bool has_voice() const;
  void clear_voice();
  static const int kVoiceFieldNumber = 3;
  const ::std::string& voice() const;
  void set_voice(const ::std::string& value);
  #if LANG_CXX11
  void set_voice(::std::string&& value);
  #endif
  void set_voice(const char* value);
  void set_voice(const void* value, size_t size);
  ::std::string* mutable_voice();
  ::std::string* release_voice();
  void set_allocated_voice(::std::string* voice);

  // optional bytes URL = 5;
  bool has_url() const;
  void clear_url();
  static const int kURLFieldNumber = 5;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const void* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional sint32 Channel = 1 [default = 0];
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // optional sint32 ChildChannel = 6 [default = -1];
  bool has_childchannel() const;
  void clear_childchannel();
  static const int kChildChannelFieldNumber = 6;
  ::google::protobuf::int32 childchannel() const;
  void set_childchannel(::google::protobuf::int32 value);

  // optional sint64 TargetUserId = 4 [default = -1];
  bool has_targetuserid() const;
  void clear_targetuserid();
  static const int kTargetUserIdFieldNumber = 4;
  ::google::protobuf::int64 targetuserid() const;
  void set_targetuserid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ChatMsgObj)
 private:
  void set_has_channel();
  void clear_has_channel();
  void set_has_text();
  void clear_has_text();
  void set_has_voice();
  void clear_has_voice();
  void set_has_targetuserid();
  void clear_has_targetuserid();
  void set_has_url();
  void clear_has_url();
  void set_has_childchannel();
  void clear_has_childchannel();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr voice_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::int32 channel_;
  ::google::protobuf::int32 childchannel_;
  ::google::protobuf::int64 targetuserid_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatUserInfoObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChatUserInfoObj) */ {
 public:
  ChatUserInfoObj();
  virtual ~ChatUserInfoObj();

  ChatUserInfoObj(const ChatUserInfoObj& from);

  inline ChatUserInfoObj& operator=(const ChatUserInfoObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatUserInfoObj(ChatUserInfoObj&& from) noexcept
    : ChatUserInfoObj() {
    *this = ::std::move(from);
  }

  inline ChatUserInfoObj& operator=(ChatUserInfoObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatUserInfoObj& default_instance();

  static inline const ChatUserInfoObj* internal_default_instance() {
    return reinterpret_cast<const ChatUserInfoObj*>(
               &_ChatUserInfoObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(ChatUserInfoObj* other);
  friend void swap(ChatUserInfoObj& a, ChatUserInfoObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatUserInfoObj* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatUserInfoObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatUserInfoObj& from);
  void MergeFrom(const ChatUserInfoObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatUserInfoObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional sint64 UserId = 1 [default = -1];
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // optional sint32 Prof = 3 [default = -1];
  bool has_prof() const;
  void clear_prof();
  static const int kProfFieldNumber = 3;
  ::google::protobuf::int32 prof() const;
  void set_prof(::google::protobuf::int32 value);

  // optional sint32 Level = 4 [default = -1];
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 4;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChatUserInfoObj)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_username();
  void clear_has_username();
  void set_has_prof();
  void clear_has_prof();
  void set_has_level();
  void clear_has_level();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::int64 userid_;
  ::google::protobuf::int32 prof_;
  ::google::protobuf::int32 level_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatNetData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChatNetData) */ {
 public:
  ChatNetData();
  virtual ~ChatNetData();

  ChatNetData(const ChatNetData& from);

  inline ChatNetData& operator=(const ChatNetData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatNetData(ChatNetData&& from) noexcept
    : ChatNetData() {
    *this = ::std::move(from);
  }

  inline ChatNetData& operator=(ChatNetData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatNetData& default_instance();

  static inline const ChatNetData* internal_default_instance() {
    return reinterpret_cast<const ChatNetData*>(
               &_ChatNetData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(ChatNetData* other);
  friend void swap(ChatNetData& a, ChatNetData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatNetData* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatNetData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatNetData& from);
  void MergeFrom(const ChatNetData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatNetData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ChatHyperLink HyperlinkList = 1;
  int hyperlinklist_size() const;
  void clear_hyperlinklist();
  static const int kHyperlinkListFieldNumber = 1;
  const ::ChatHyperLink& hyperlinklist(int index) const;
  ::ChatHyperLink* mutable_hyperlinklist(int index);
  ::ChatHyperLink* add_hyperlinklist();
  ::google::protobuf::RepeatedPtrField< ::ChatHyperLink >*
      mutable_hyperlinklist();
  const ::google::protobuf::RepeatedPtrField< ::ChatHyperLink >&
      hyperlinklist() const;

  // optional string Text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional .ChatUserInfoObj UserInfo = 3;
  bool has_userinfo() const;
  void clear_userinfo();
  static const int kUserInfoFieldNumber = 3;
  const ::ChatUserInfoObj& userinfo() const;
  ::ChatUserInfoObj* mutable_userinfo();
  ::ChatUserInfoObj* release_userinfo();
  void set_allocated_userinfo(::ChatUserInfoObj* userinfo);

  // optional sint32 Channel = 4 [default = 0];
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 4;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // optional sint32 ChildChannel = 5 [default = -1];
  bool has_childchannel() const;
  void clear_childchannel();
  static const int kChildChannelFieldNumber = 5;
  ::google::protobuf::int32 childchannel() const;
  void set_childchannel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChatNetData)
 private:
  void set_has_text();
  void clear_has_text();
  void set_has_userinfo();
  void clear_has_userinfo();
  void set_has_channel();
  void clear_has_channel();
  void set_has_childchannel();
  void clear_has_childchannel();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ChatHyperLink > hyperlinklist_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::ChatUserInfoObj* userinfo_;
  ::google::protobuf::int32 channel_;
  ::google::protobuf::int32 childchannel_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TeamUserObj

// optional sint64 UserId = 1 [default = -1];
inline bool TeamUserObj::has_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamUserObj::set_has_userid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamUserObj::clear_has_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamUserObj::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
inline ::google::protobuf::int64 TeamUserObj::userid() const {
  // @@protoc_insertion_point(field_get:TeamUserObj.UserId)
  return userid_;
}
inline void TeamUserObj::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:TeamUserObj.UserId)
}

// optional string UserName = 2;
inline bool TeamUserObj::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamUserObj::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamUserObj::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamUserObj::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& TeamUserObj::username() const {
  // @@protoc_insertion_point(field_get:TeamUserObj.UserName)
  return username_.GetNoArena();
}
inline void TeamUserObj::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TeamUserObj.UserName)
}
#if LANG_CXX11
inline void TeamUserObj::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TeamUserObj.UserName)
}
#endif
inline void TeamUserObj::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TeamUserObj.UserName)
}
inline void TeamUserObj::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TeamUserObj.UserName)
}
inline ::std::string* TeamUserObj::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:TeamUserObj.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TeamUserObj::release_username() {
  // @@protoc_insertion_point(field_release:TeamUserObj.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TeamUserObj::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:TeamUserObj.UserName)
}

// optional sint32 Level = 3 [default = -1];
inline bool TeamUserObj::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamUserObj::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamUserObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamUserObj::clear_level() {
  level_ = -1;
  clear_has_level();
}
inline ::google::protobuf::int32 TeamUserObj::level() const {
  // @@protoc_insertion_point(field_get:TeamUserObj.Level)
  return level_;
}
inline void TeamUserObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TeamUserObj.Level)
}

// optional bool IsCaptain = 4 [default = false];
inline bool TeamUserObj::has_iscaptain() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamUserObj::set_has_iscaptain() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamUserObj::clear_has_iscaptain() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamUserObj::clear_iscaptain() {
  iscaptain_ = false;
  clear_has_iscaptain();
}
inline bool TeamUserObj::iscaptain() const {
  // @@protoc_insertion_point(field_get:TeamUserObj.IsCaptain)
  return iscaptain_;
}
inline void TeamUserObj::set_iscaptain(bool value) {
  set_has_iscaptain();
  iscaptain_ = value;
  // @@protoc_insertion_point(field_set:TeamUserObj.IsCaptain)
}

// optional sint32 Prof = 5 [default = -1];
inline bool TeamUserObj::has_prof() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TeamUserObj::set_has_prof() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TeamUserObj::clear_has_prof() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TeamUserObj::clear_prof() {
  prof_ = -1;
  clear_has_prof();
}
inline ::google::protobuf::int32 TeamUserObj::prof() const {
  // @@protoc_insertion_point(field_get:TeamUserObj.Prof)
  return prof_;
}
inline void TeamUserObj::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
  // @@protoc_insertion_point(field_set:TeamUserObj.Prof)
}

// optional sint32 HP = 8 [default = -1];
inline bool TeamUserObj::has_hp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TeamUserObj::set_has_hp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TeamUserObj::clear_has_hp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TeamUserObj::clear_hp() {
  hp_ = -1;
  clear_has_hp();
}
inline ::google::protobuf::int32 TeamUserObj::hp() const {
  // @@protoc_insertion_point(field_get:TeamUserObj.HP)
  return hp_;
}
inline void TeamUserObj::set_hp(::google::protobuf::int32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:TeamUserObj.HP)
}

// optional sint32 MaxHP = 9 [default = -1];
inline bool TeamUserObj::has_maxhp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TeamUserObj::set_has_maxhp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TeamUserObj::clear_has_maxhp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TeamUserObj::clear_maxhp() {
  maxhp_ = -1;
  clear_has_maxhp();
}
inline ::google::protobuf::int32 TeamUserObj::maxhp() const {
  // @@protoc_insertion_point(field_get:TeamUserObj.MaxHP)
  return maxhp_;
}
inline void TeamUserObj::set_maxhp(::google::protobuf::int32 value) {
  set_has_maxhp();
  maxhp_ = value;
  // @@protoc_insertion_point(field_set:TeamUserObj.MaxHP)
}

// optional bool IsFollowing = 10 [default = false];
inline bool TeamUserObj::has_isfollowing() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamUserObj::set_has_isfollowing() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamUserObj::clear_has_isfollowing() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamUserObj::clear_isfollowing() {
  isfollowing_ = false;
  clear_has_isfollowing();
}
inline bool TeamUserObj::isfollowing() const {
  // @@protoc_insertion_point(field_get:TeamUserObj.IsFollowing)
  return isfollowing_;
}
inline void TeamUserObj::set_isfollowing(bool value) {
  set_has_isfollowing();
  isfollowing_ = value;
  // @@protoc_insertion_point(field_set:TeamUserObj.IsFollowing)
}

// -------------------------------------------------------------------

// TeamObj

// optional sint32 TeamId = 1 [default = -1];
inline bool TeamObj::has_teamid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamObj::set_has_teamid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamObj::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamObj::clear_teamid() {
  teamid_ = -1;
  clear_has_teamid();
}
inline ::google::protobuf::int32 TeamObj::teamid() const {
  // @@protoc_insertion_point(field_get:TeamObj.TeamId)
  return teamid_;
}
inline void TeamObj::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:TeamObj.TeamId)
}

// optional sint64 CaptainUserId = 2 [default = -1];
inline bool TeamObj::has_captainuserid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamObj::set_has_captainuserid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamObj::clear_has_captainuserid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamObj::clear_captainuserid() {
  captainuserid_ = GOOGLE_LONGLONG(-1);
  clear_has_captainuserid();
}
inline ::google::protobuf::int64 TeamObj::captainuserid() const {
  // @@protoc_insertion_point(field_get:TeamObj.CaptainUserId)
  return captainuserid_;
}
inline void TeamObj::set_captainuserid(::google::protobuf::int64 value) {
  set_has_captainuserid();
  captainuserid_ = value;
  // @@protoc_insertion_point(field_set:TeamObj.CaptainUserId)
}

// optional sint32 MemberCount = 3 [default = -1];
inline bool TeamObj::has_membercount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TeamObj::set_has_membercount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TeamObj::clear_has_membercount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TeamObj::clear_membercount() {
  membercount_ = -1;
  clear_has_membercount();
}
inline ::google::protobuf::int32 TeamObj::membercount() const {
  // @@protoc_insertion_point(field_get:TeamObj.MemberCount)
  return membercount_;
}
inline void TeamObj::set_membercount(::google::protobuf::int32 value) {
  set_has_membercount();
  membercount_ = value;
  // @@protoc_insertion_point(field_set:TeamObj.MemberCount)
}

// optional sint32 TeamTarget = 4 [default = -1];
inline bool TeamObj::has_teamtarget() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TeamObj::set_has_teamtarget() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TeamObj::clear_has_teamtarget() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TeamObj::clear_teamtarget() {
  teamtarget_ = -1;
  clear_has_teamtarget();
}
inline ::google::protobuf::int32 TeamObj::teamtarget() const {
  // @@protoc_insertion_point(field_get:TeamObj.TeamTarget)
  return teamtarget_;
}
inline void TeamObj::set_teamtarget(::google::protobuf::int32 value) {
  set_has_teamtarget();
  teamtarget_ = value;
  // @@protoc_insertion_point(field_set:TeamObj.TeamTarget)
}

// repeated .TeamUserObj TeamMember = 5;
inline int TeamObj::teammember_size() const {
  return teammember_.size();
}
inline void TeamObj::clear_teammember() {
  teammember_.Clear();
}
inline const ::TeamUserObj& TeamObj::teammember(int index) const {
  // @@protoc_insertion_point(field_get:TeamObj.TeamMember)
  return teammember_.Get(index);
}
inline ::TeamUserObj* TeamObj::mutable_teammember(int index) {
  // @@protoc_insertion_point(field_mutable:TeamObj.TeamMember)
  return teammember_.Mutable(index);
}
inline ::TeamUserObj* TeamObj::add_teammember() {
  // @@protoc_insertion_point(field_add:TeamObj.TeamMember)
  return teammember_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::TeamUserObj >*
TeamObj::mutable_teammember() {
  // @@protoc_insertion_point(field_mutable_list:TeamObj.TeamMember)
  return &teammember_;
}
inline const ::google::protobuf::RepeatedPtrField< ::TeamUserObj >&
TeamObj::teammember() const {
  // @@protoc_insertion_point(field_list:TeamObj.TeamMember)
  return teammember_;
}

// optional sint32 CaptainProf = 6 [default = -1];
inline bool TeamObj::has_captainprof() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TeamObj::set_has_captainprof() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TeamObj::clear_has_captainprof() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TeamObj::clear_captainprof() {
  captainprof_ = -1;
  clear_has_captainprof();
}
inline ::google::protobuf::int32 TeamObj::captainprof() const {
  // @@protoc_insertion_point(field_get:TeamObj.CaptainProf)
  return captainprof_;
}
inline void TeamObj::set_captainprof(::google::protobuf::int32 value) {
  set_has_captainprof();
  captainprof_ = value;
  // @@protoc_insertion_point(field_set:TeamObj.CaptainProf)
}

// optional sint32 TargetMinLv = 7 [default = -1];
inline bool TeamObj::has_targetminlv() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TeamObj::set_has_targetminlv() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TeamObj::clear_has_targetminlv() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TeamObj::clear_targetminlv() {
  targetminlv_ = -1;
  clear_has_targetminlv();
}
inline ::google::protobuf::int32 TeamObj::targetminlv() const {
  // @@protoc_insertion_point(field_get:TeamObj.TargetMinLv)
  return targetminlv_;
}
inline void TeamObj::set_targetminlv(::google::protobuf::int32 value) {
  set_has_targetminlv();
  targetminlv_ = value;
  // @@protoc_insertion_point(field_set:TeamObj.TargetMinLv)
}

// optional sint32 TargetMaxLv = 8 [default = -1];
inline bool TeamObj::has_targetmaxlv() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TeamObj::set_has_targetmaxlv() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TeamObj::clear_has_targetmaxlv() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TeamObj::clear_targetmaxlv() {
  targetmaxlv_ = -1;
  clear_has_targetmaxlv();
}
inline ::google::protobuf::int32 TeamObj::targetmaxlv() const {
  // @@protoc_insertion_point(field_get:TeamObj.TargetMaxLv)
  return targetmaxlv_;
}
inline void TeamObj::set_targetmaxlv(::google::protobuf::int32 value) {
  set_has_targetmaxlv();
  targetmaxlv_ = value;
  // @@protoc_insertion_point(field_set:TeamObj.TargetMaxLv)
}

// optional bool IsMatching = 9 [default = false];
inline bool TeamObj::has_ismatching() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamObj::set_has_ismatching() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamObj::clear_has_ismatching() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamObj::clear_ismatching() {
  ismatching_ = false;
  clear_has_ismatching();
}
inline bool TeamObj::ismatching() const {
  // @@protoc_insertion_point(field_get:TeamObj.IsMatching)
  return ismatching_;
}
inline void TeamObj::set_ismatching(bool value) {
  set_has_ismatching();
  ismatching_ = value;
  // @@protoc_insertion_point(field_set:TeamObj.IsMatching)
}

// optional sint32 CaptainLevel = 10 [default = -1];
inline bool TeamObj::has_captainlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamObj::set_has_captainlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamObj::clear_has_captainlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamObj::clear_captainlevel() {
  captainlevel_ = -1;
  clear_has_captainlevel();
}
inline ::google::protobuf::int32 TeamObj::captainlevel() const {
  // @@protoc_insertion_point(field_get:TeamObj.CaptainLevel)
  return captainlevel_;
}
inline void TeamObj::set_captainlevel(::google::protobuf::int32 value) {
  set_has_captainlevel();
  captainlevel_ = value;
  // @@protoc_insertion_point(field_set:TeamObj.CaptainLevel)
}

// optional bool IsTeamFollow = 11 [default = false];
inline bool TeamObj::has_isteamfollow() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamObj::set_has_isteamfollow() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamObj::clear_has_isteamfollow() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamObj::clear_isteamfollow() {
  isteamfollow_ = false;
  clear_has_isteamfollow();
}
inline bool TeamObj::isteamfollow() const {
  // @@protoc_insertion_point(field_get:TeamObj.IsTeamFollow)
  return isteamfollow_;
}
inline void TeamObj::set_isteamfollow(bool value) {
  set_has_isteamfollow();
  isteamfollow_ = value;
  // @@protoc_insertion_point(field_set:TeamObj.IsTeamFollow)
}

// -------------------------------------------------------------------

// TeamApplyUserObj

// optional sint64 UserId = 1 [default = -1];
inline bool TeamApplyUserObj::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamApplyUserObj::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamApplyUserObj::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamApplyUserObj::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
inline ::google::protobuf::int64 TeamApplyUserObj::userid() const {
  // @@protoc_insertion_point(field_get:TeamApplyUserObj.UserId)
  return userid_;
}
inline void TeamApplyUserObj::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:TeamApplyUserObj.UserId)
}

// optional string UserName = 2;
inline bool TeamApplyUserObj::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamApplyUserObj::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamApplyUserObj::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamApplyUserObj::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& TeamApplyUserObj::username() const {
  // @@protoc_insertion_point(field_get:TeamApplyUserObj.UserName)
  return username_.GetNoArena();
}
inline void TeamApplyUserObj::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TeamApplyUserObj.UserName)
}
#if LANG_CXX11
inline void TeamApplyUserObj::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TeamApplyUserObj.UserName)
}
#endif
inline void TeamApplyUserObj::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TeamApplyUserObj.UserName)
}
inline void TeamApplyUserObj::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TeamApplyUserObj.UserName)
}
inline ::std::string* TeamApplyUserObj::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:TeamApplyUserObj.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TeamApplyUserObj::release_username() {
  // @@protoc_insertion_point(field_release:TeamApplyUserObj.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TeamApplyUserObj::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:TeamApplyUserObj.UserName)
}

// optional sint32 Level = 3 [default = -1];
inline bool TeamApplyUserObj::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamApplyUserObj::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamApplyUserObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamApplyUserObj::clear_level() {
  level_ = -1;
  clear_has_level();
}
inline ::google::protobuf::int32 TeamApplyUserObj::level() const {
  // @@protoc_insertion_point(field_get:TeamApplyUserObj.Level)
  return level_;
}
inline void TeamApplyUserObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TeamApplyUserObj.Level)
}

// optional sint32 Prof = 4 [default = -1];
inline bool TeamApplyUserObj::has_prof() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamApplyUserObj::set_has_prof() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamApplyUserObj::clear_has_prof() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamApplyUserObj::clear_prof() {
  prof_ = -1;
  clear_has_prof();
}
inline ::google::protobuf::int32 TeamApplyUserObj::prof() const {
  // @@protoc_insertion_point(field_get:TeamApplyUserObj.Prof)
  return prof_;
}
inline void TeamApplyUserObj::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
  // @@protoc_insertion_point(field_set:TeamApplyUserObj.Prof)
}

// optional sint32 TeamId = 5 [default = -1];
inline bool TeamApplyUserObj::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamApplyUserObj::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamApplyUserObj::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamApplyUserObj::clear_teamid() {
  teamid_ = -1;
  clear_has_teamid();
}
inline ::google::protobuf::int32 TeamApplyUserObj::teamid() const {
  // @@protoc_insertion_point(field_get:TeamApplyUserObj.TeamId)
  return teamid_;
}
inline void TeamApplyUserObj::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:TeamApplyUserObj.TeamId)
}

// -------------------------------------------------------------------

// BagRecycleGridObj

// optional sint64 ItemId = 1 [default = -1];
inline bool BagRecycleGridObj::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagRecycleGridObj::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagRecycleGridObj::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagRecycleGridObj::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(-1);
  clear_has_itemid();
}
inline ::google::protobuf::int64 BagRecycleGridObj::itemid() const {
  // @@protoc_insertion_point(field_get:BagRecycleGridObj.ItemId)
  return itemid_;
}
inline void BagRecycleGridObj::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagRecycleGridObj.ItemId)
}

// optional sint32 TemplateId = 2 [default = -1];
inline bool BagRecycleGridObj::has_templateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BagRecycleGridObj::set_has_templateid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BagRecycleGridObj::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BagRecycleGridObj::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
inline ::google::protobuf::int32 BagRecycleGridObj::templateid() const {
  // @@protoc_insertion_point(field_get:BagRecycleGridObj.TemplateId)
  return templateid_;
}
inline void BagRecycleGridObj::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRecycleGridObj.TemplateId)
}

// optional sint32 Num = 3 [default = -1];
inline bool BagRecycleGridObj::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BagRecycleGridObj::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BagRecycleGridObj::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BagRecycleGridObj::clear_num() {
  num_ = -1;
  clear_has_num();
}
inline ::google::protobuf::int32 BagRecycleGridObj::num() const {
  // @@protoc_insertion_point(field_get:BagRecycleGridObj.Num)
  return num_;
}
inline void BagRecycleGridObj::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:BagRecycleGridObj.Num)
}

// optional sint32 ItemType = 4 [default = -1];
inline bool BagRecycleGridObj::has_itemtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BagRecycleGridObj::set_has_itemtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BagRecycleGridObj::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BagRecycleGridObj::clear_itemtype() {
  itemtype_ = -1;
  clear_has_itemtype();
}
inline ::google::protobuf::int32 BagRecycleGridObj::itemtype() const {
  // @@protoc_insertion_point(field_get:BagRecycleGridObj.ItemType)
  return itemtype_;
}
inline void BagRecycleGridObj::set_itemtype(::google::protobuf::int32 value) {
  set_has_itemtype();
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:BagRecycleGridObj.ItemType)
}

// optional sint32 Pos = 5 [default = -1];
inline bool BagRecycleGridObj::has_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BagRecycleGridObj::set_has_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BagRecycleGridObj::clear_has_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BagRecycleGridObj::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
inline ::google::protobuf::int32 BagRecycleGridObj::pos() const {
  // @@protoc_insertion_point(field_get:BagRecycleGridObj.Pos)
  return pos_;
}
inline void BagRecycleGridObj::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRecycleGridObj.Pos)
}

// -------------------------------------------------------------------

// KeyValue2

// optional sint32 Key = 1 [default = -1];
inline bool KeyValue2::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeyValue2::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KeyValue2::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KeyValue2::clear_key() {
  key_ = -1;
  clear_has_key();
}
inline ::google::protobuf::int32 KeyValue2::key() const {
  // @@protoc_insertion_point(field_get:KeyValue2.Key)
  return key_;
}
inline void KeyValue2::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:KeyValue2.Key)
}

// optional float Value = 2 [default = -1];
inline bool KeyValue2::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KeyValue2::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KeyValue2::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KeyValue2::clear_value() {
  value_ = -1;
  clear_has_value();
}
inline float KeyValue2::value() const {
  // @@protoc_insertion_point(field_get:KeyValue2.Value)
  return value_;
}
inline void KeyValue2::set_value(float value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:KeyValue2.Value)
}

// -------------------------------------------------------------------

// EquipSkillBuff2

// optional sint32 Id = 1 [default = -1];
inline bool EquipSkillBuff2::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipSkillBuff2::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipSkillBuff2::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipSkillBuff2::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 EquipSkillBuff2::id() const {
  // @@protoc_insertion_point(field_get:EquipSkillBuff2.Id)
  return id_;
}
inline void EquipSkillBuff2::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:EquipSkillBuff2.Id)
}

// optional sint32 LV = 2 [default = -1];
inline bool EquipSkillBuff2::has_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipSkillBuff2::set_has_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipSkillBuff2::clear_has_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipSkillBuff2::clear_lv() {
  lv_ = -1;
  clear_has_lv();
}
inline ::google::protobuf::int32 EquipSkillBuff2::lv() const {
  // @@protoc_insertion_point(field_get:EquipSkillBuff2.LV)
  return lv_;
}
inline void EquipSkillBuff2::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:EquipSkillBuff2.LV)
}

// optional sint32 Cd = 3 [default = -1];
inline bool EquipSkillBuff2::has_cd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipSkillBuff2::set_has_cd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipSkillBuff2::clear_has_cd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipSkillBuff2::clear_cd() {
  cd_ = -1;
  clear_has_cd();
}
inline ::google::protobuf::int32 EquipSkillBuff2::cd() const {
  // @@protoc_insertion_point(field_get:EquipSkillBuff2.Cd)
  return cd_;
}
inline void EquipSkillBuff2::set_cd(::google::protobuf::int32 value) {
  set_has_cd();
  cd_ = value;
  // @@protoc_insertion_point(field_set:EquipSkillBuff2.Cd)
}

// -------------------------------------------------------------------

// GuildMemberObj

// optional sint64 UserId = 1 [default = -1];
inline bool GuildMemberObj::has_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildMemberObj::set_has_userid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildMemberObj::clear_has_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildMemberObj::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
inline ::google::protobuf::int64 GuildMemberObj::userid() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.UserId)
  return userid_;
}
inline void GuildMemberObj::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.UserId)
}

// optional string UserName = 2;
inline bool GuildMemberObj::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMemberObj::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMemberObj::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMemberObj::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& GuildMemberObj::username() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.UserName)
  return username_.GetNoArena();
}
inline void GuildMemberObj::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildMemberObj.UserName)
}
#if LANG_CXX11
inline void GuildMemberObj::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildMemberObj.UserName)
}
#endif
inline void GuildMemberObj::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildMemberObj.UserName)
}
inline void GuildMemberObj::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildMemberObj.UserName)
}
inline ::std::string* GuildMemberObj::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:GuildMemberObj.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildMemberObj::release_username() {
  // @@protoc_insertion_point(field_release:GuildMemberObj.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildMemberObj::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:GuildMemberObj.UserName)
}

// optional sint32 Level = 3 [default = -1];
inline bool GuildMemberObj::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildMemberObj::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildMemberObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildMemberObj::clear_level() {
  level_ = -1;
  clear_has_level();
}
inline ::google::protobuf::int32 GuildMemberObj::level() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.Level)
  return level_;
}
inline void GuildMemberObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.Level)
}

// optional sint32 Prof = 9 [default = -1];
inline bool GuildMemberObj::has_prof() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildMemberObj::set_has_prof() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildMemberObj::clear_has_prof() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildMemberObj::clear_prof() {
  prof_ = -1;
  clear_has_prof();
}
inline ::google::protobuf::int32 GuildMemberObj::prof() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.Prof)
  return prof_;
}
inline void GuildMemberObj::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.Prof)
}

// optional sint32 Duty = 10 [default = -1];
inline bool GuildMemberObj::has_duty() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildMemberObj::set_has_duty() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildMemberObj::clear_has_duty() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildMemberObj::clear_duty() {
  duty_ = -1;
  clear_has_duty();
}
inline ::google::protobuf::int32 GuildMemberObj::duty() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.Duty)
  return duty_;
}
inline void GuildMemberObj::set_duty(::google::protobuf::int32 value) {
  set_has_duty();
  duty_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.Duty)
}

// optional sint32 CurContribution = 11 [default = -1];
inline bool GuildMemberObj::has_curcontribution() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildMemberObj::set_has_curcontribution() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildMemberObj::clear_has_curcontribution() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildMemberObj::clear_curcontribution() {
  curcontribution_ = -1;
  clear_has_curcontribution();
}
inline ::google::protobuf::int32 GuildMemberObj::curcontribution() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.CurContribution)
  return curcontribution_;
}
inline void GuildMemberObj::set_curcontribution(::google::protobuf::int32 value) {
  set_has_curcontribution();
  curcontribution_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.CurContribution)
}

// optional sint32 MaxContribution = 12 [default = -1];
inline bool GuildMemberObj::has_maxcontribution() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildMemberObj::set_has_maxcontribution() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildMemberObj::clear_has_maxcontribution() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildMemberObj::clear_maxcontribution() {
  maxcontribution_ = -1;
  clear_has_maxcontribution();
}
inline ::google::protobuf::int32 GuildMemberObj::maxcontribution() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.MaxContribution)
  return maxcontribution_;
}
inline void GuildMemberObj::set_maxcontribution(::google::protobuf::int32 value) {
  set_has_maxcontribution();
  maxcontribution_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.MaxContribution)
}

// optional sint32 LeagueMatchesCount = 13 [default = -1];
inline bool GuildMemberObj::has_leaguematchescount() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildMemberObj::set_has_leaguematchescount() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildMemberObj::clear_has_leaguematchescount() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildMemberObj::clear_leaguematchescount() {
  leaguematchescount_ = -1;
  clear_has_leaguematchescount();
}
inline ::google::protobuf::int32 GuildMemberObj::leaguematchescount() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.LeagueMatchesCount)
  return leaguematchescount_;
}
inline void GuildMemberObj::set_leaguematchescount(::google::protobuf::int32 value) {
  set_has_leaguematchescount();
  leaguematchescount_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.LeagueMatchesCount)
}

// optional sint32 OfflineTime = 14 [default = -1];
inline bool GuildMemberObj::has_offlinetime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuildMemberObj::set_has_offlinetime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuildMemberObj::clear_has_offlinetime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuildMemberObj::clear_offlinetime() {
  offlinetime_ = -1;
  clear_has_offlinetime();
}
inline ::google::protobuf::int32 GuildMemberObj::offlinetime() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.OfflineTime)
  return offlinetime_;
}
inline void GuildMemberObj::set_offlinetime(::google::protobuf::int32 value) {
  set_has_offlinetime();
  offlinetime_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.OfflineTime)
}

// optional sint32 JoinTime = 15 [default = -1];
inline bool GuildMemberObj::has_jointime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuildMemberObj::set_has_jointime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuildMemberObj::clear_has_jointime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuildMemberObj::clear_jointime() {
  jointime_ = -1;
  clear_has_jointime();
}
inline ::google::protobuf::int32 GuildMemberObj::jointime() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.JoinTime)
  return jointime_;
}
inline void GuildMemberObj::set_jointime(::google::protobuf::int32 value) {
  set_has_jointime();
  jointime_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.JoinTime)
}

// repeated sint32 DropItemArray = 16;
inline int GuildMemberObj::dropitemarray_size() const {
  return dropitemarray_.size();
}
inline void GuildMemberObj::clear_dropitemarray() {
  dropitemarray_.Clear();
}
inline ::google::protobuf::int32 GuildMemberObj::dropitemarray(int index) const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.DropItemArray)
  return dropitemarray_.Get(index);
}
inline void GuildMemberObj::set_dropitemarray(int index, ::google::protobuf::int32 value) {
  dropitemarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:GuildMemberObj.DropItemArray)
}
inline void GuildMemberObj::add_dropitemarray(::google::protobuf::int32 value) {
  dropitemarray_.Add(value);
  // @@protoc_insertion_point(field_add:GuildMemberObj.DropItemArray)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GuildMemberObj::dropitemarray() const {
  // @@protoc_insertion_point(field_list:GuildMemberObj.DropItemArray)
  return dropitemarray_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GuildMemberObj::mutable_dropitemarray() {
  // @@protoc_insertion_point(field_mutable_list:GuildMemberObj.DropItemArray)
  return &dropitemarray_;
}

// optional bool IsOnline = 17 [default = true];
inline bool GuildMemberObj::has_isonline() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMemberObj::set_has_isonline() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMemberObj::clear_has_isonline() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMemberObj::clear_isonline() {
  isonline_ = true;
  clear_has_isonline();
}
inline bool GuildMemberObj::isonline() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.IsOnline)
  return isonline_;
}
inline void GuildMemberObj::set_isonline(bool value) {
  set_has_isonline();
  isonline_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.IsOnline)
}

// optional bool IsGuildDungeon = 18 [default = false];
inline bool GuildMemberObj::has_isguilddungeon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMemberObj::set_has_isguilddungeon() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMemberObj::clear_has_isguilddungeon() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMemberObj::clear_isguilddungeon() {
  isguilddungeon_ = false;
  clear_has_isguilddungeon();
}
inline bool GuildMemberObj::isguilddungeon() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.IsGuildDungeon)
  return isguilddungeon_;
}
inline void GuildMemberObj::set_isguilddungeon(bool value) {
  set_has_isguilddungeon();
  isguilddungeon_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.IsGuildDungeon)
}

// -------------------------------------------------------------------

// GuildInfoObj

// optional sint32 Guild = 1 [default = -1];
inline bool GuildInfoObj::has_guild() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildInfoObj::set_has_guild() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildInfoObj::clear_has_guild() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildInfoObj::clear_guild() {
  guild_ = -1;
  clear_has_guild();
}
inline ::google::protobuf::int32 GuildInfoObj::guild() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.Guild)
  return guild_;
}
inline void GuildInfoObj::set_guild(::google::protobuf::int32 value) {
  set_has_guild();
  guild_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.Guild)
}

// optional string GuildName = 2;
inline bool GuildInfoObj::has_guildname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildInfoObj::set_has_guildname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildInfoObj::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildInfoObj::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guildname();
}
inline const ::std::string& GuildInfoObj::guildname() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.GuildName)
  return guildname_.GetNoArena();
}
inline void GuildInfoObj::set_guildname(const ::std::string& value) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildInfoObj.GuildName)
}
#if LANG_CXX11
inline void GuildInfoObj::set_guildname(::std::string&& value) {
  set_has_guildname();
  guildname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildInfoObj.GuildName)
}
#endif
inline void GuildInfoObj::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildInfoObj.GuildName)
}
inline void GuildInfoObj::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildInfoObj.GuildName)
}
inline ::std::string* GuildInfoObj::mutable_guildname() {
  set_has_guildname();
  // @@protoc_insertion_point(field_mutable:GuildInfoObj.GuildName)
  return guildname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildInfoObj::release_guildname() {
  // @@protoc_insertion_point(field_release:GuildInfoObj.GuildName)
  clear_has_guildname();
  return guildname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildInfoObj::set_allocated_guildname(::std::string* guildname) {
  if (guildname != NULL) {
    set_has_guildname();
  } else {
    clear_has_guildname();
  }
  guildname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:GuildInfoObj.GuildName)
}

// optional sint32 Level = 3 [default = 1];
inline bool GuildInfoObj::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildInfoObj::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildInfoObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildInfoObj::clear_level() {
  level_ = 1;
  clear_has_level();
}
inline ::google::protobuf::int32 GuildInfoObj::level() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.Level)
  return level_;
}
inline void GuildInfoObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.Level)
}

// optional sint64 CaptainId = 5 [default = -1];
inline bool GuildInfoObj::has_captainid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildInfoObj::set_has_captainid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildInfoObj::clear_has_captainid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildInfoObj::clear_captainid() {
  captainid_ = GOOGLE_LONGLONG(-1);
  clear_has_captainid();
}
inline ::google::protobuf::int64 GuildInfoObj::captainid() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.CaptainId)
  return captainid_;
}
inline void GuildInfoObj::set_captainid(::google::protobuf::int64 value) {
  set_has_captainid();
  captainid_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.CaptainId)
}

// optional string CaptainName = 6;
inline bool GuildInfoObj::has_captainname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildInfoObj::set_has_captainname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildInfoObj::clear_has_captainname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildInfoObj::clear_captainname() {
  captainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_captainname();
}
inline const ::std::string& GuildInfoObj::captainname() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.CaptainName)
  return captainname_.GetNoArena();
}
inline void GuildInfoObj::set_captainname(const ::std::string& value) {
  set_has_captainname();
  captainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildInfoObj.CaptainName)
}
#if LANG_CXX11
inline void GuildInfoObj::set_captainname(::std::string&& value) {
  set_has_captainname();
  captainname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildInfoObj.CaptainName)
}
#endif
inline void GuildInfoObj::set_captainname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_captainname();
  captainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildInfoObj.CaptainName)
}
inline void GuildInfoObj::set_captainname(const char* value, size_t size) {
  set_has_captainname();
  captainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildInfoObj.CaptainName)
}
inline ::std::string* GuildInfoObj::mutable_captainname() {
  set_has_captainname();
  // @@protoc_insertion_point(field_mutable:GuildInfoObj.CaptainName)
  return captainname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildInfoObj::release_captainname() {
  // @@protoc_insertion_point(field_release:GuildInfoObj.CaptainName)
  clear_has_captainname();
  return captainname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildInfoObj::set_allocated_captainname(::std::string* captainname) {
  if (captainname != NULL) {
    set_has_captainname();
  } else {
    clear_has_captainname();
  }
  captainname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), captainname);
  // @@protoc_insertion_point(field_set_allocated:GuildInfoObj.CaptainName)
}

// optional sint32 Funds = 7 [default = -1];
inline bool GuildInfoObj::has_funds() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildInfoObj::set_has_funds() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildInfoObj::clear_has_funds() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildInfoObj::clear_funds() {
  funds_ = -1;
  clear_has_funds();
}
inline ::google::protobuf::int32 GuildInfoObj::funds() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.Funds)
  return funds_;
}
inline void GuildInfoObj::set_funds(::google::protobuf::int32 value) {
  set_has_funds();
  funds_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.Funds)
}

// optional sint32 CurMemberNum = 8 [default = 1];
inline bool GuildInfoObj::has_curmembernum() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildInfoObj::set_has_curmembernum() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildInfoObj::clear_has_curmembernum() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildInfoObj::clear_curmembernum() {
  curmembernum_ = 1;
  clear_has_curmembernum();
}
inline ::google::protobuf::int32 GuildInfoObj::curmembernum() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.CurMemberNum)
  return curmembernum_;
}
inline void GuildInfoObj::set_curmembernum(::google::protobuf::int32 value) {
  set_has_curmembernum();
  curmembernum_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.CurMemberNum)
}

// repeated .GuildMemberObj GuildMember = 10;
inline int GuildInfoObj::guildmember_size() const {
  return guildmember_.size();
}
inline void GuildInfoObj::clear_guildmember() {
  guildmember_.Clear();
}
inline const ::GuildMemberObj& GuildInfoObj::guildmember(int index) const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.GuildMember)
  return guildmember_.Get(index);
}
inline ::GuildMemberObj* GuildInfoObj::mutable_guildmember(int index) {
  // @@protoc_insertion_point(field_mutable:GuildInfoObj.GuildMember)
  return guildmember_.Mutable(index);
}
inline ::GuildMemberObj* GuildInfoObj::add_guildmember() {
  // @@protoc_insertion_point(field_add:GuildInfoObj.GuildMember)
  return guildmember_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::GuildMemberObj >*
GuildInfoObj::mutable_guildmember() {
  // @@protoc_insertion_point(field_mutable_list:GuildInfoObj.GuildMember)
  return &guildmember_;
}
inline const ::google::protobuf::RepeatedPtrField< ::GuildMemberObj >&
GuildInfoObj::guildmember() const {
  // @@protoc_insertion_point(field_list:GuildInfoObj.GuildMember)
  return guildmember_;
}

// optional sint32 MaintenanceCost = 11 [default = -1];
inline bool GuildInfoObj::has_maintenancecost() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuildInfoObj::set_has_maintenancecost() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuildInfoObj::clear_has_maintenancecost() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuildInfoObj::clear_maintenancecost() {
  maintenancecost_ = -1;
  clear_has_maintenancecost();
}
inline ::google::protobuf::int32 GuildInfoObj::maintenancecost() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.MaintenanceCost)
  return maintenancecost_;
}
inline void GuildInfoObj::set_maintenancecost(::google::protobuf::int32 value) {
  set_has_maintenancecost();
  maintenancecost_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.MaintenanceCost)
}

// optional sint32 LeagueMatchesRank = 12 [default = -1];
inline bool GuildInfoObj::has_leaguematchesrank() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuildInfoObj::set_has_leaguematchesrank() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuildInfoObj::clear_has_leaguematchesrank() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuildInfoObj::clear_leaguematchesrank() {
  leaguematchesrank_ = -1;
  clear_has_leaguematchesrank();
}
inline ::google::protobuf::int32 GuildInfoObj::leaguematchesrank() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.LeagueMatchesRank)
  return leaguematchesrank_;
}
inline void GuildInfoObj::set_leaguematchesrank(::google::protobuf::int32 value) {
  set_has_leaguematchesrank();
  leaguematchesrank_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.LeagueMatchesRank)
}

// optional string Announcement = 13;
inline bool GuildInfoObj::has_announcement() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildInfoObj::set_has_announcement() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildInfoObj::clear_has_announcement() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildInfoObj::clear_announcement() {
  announcement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_announcement();
}
inline const ::std::string& GuildInfoObj::announcement() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.Announcement)
  return announcement_.GetNoArena();
}
inline void GuildInfoObj::set_announcement(const ::std::string& value) {
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildInfoObj.Announcement)
}
#if LANG_CXX11
inline void GuildInfoObj::set_announcement(::std::string&& value) {
  set_has_announcement();
  announcement_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildInfoObj.Announcement)
}
#endif
inline void GuildInfoObj::set_announcement(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildInfoObj.Announcement)
}
inline void GuildInfoObj::set_announcement(const char* value, size_t size) {
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildInfoObj.Announcement)
}
inline ::std::string* GuildInfoObj::mutable_announcement() {
  set_has_announcement();
  // @@protoc_insertion_point(field_mutable:GuildInfoObj.Announcement)
  return announcement_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildInfoObj::release_announcement() {
  // @@protoc_insertion_point(field_release:GuildInfoObj.Announcement)
  clear_has_announcement();
  return announcement_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildInfoObj::set_allocated_announcement(::std::string* announcement) {
  if (announcement != NULL) {
    set_has_announcement();
  } else {
    clear_has_announcement();
  }
  announcement_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), announcement);
  // @@protoc_insertion_point(field_set_allocated:GuildInfoObj.Announcement)
}

// optional sint32 TotalMilitary = 14 [default = -1];
inline bool GuildInfoObj::has_totalmilitary() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GuildInfoObj::set_has_totalmilitary() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GuildInfoObj::clear_has_totalmilitary() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GuildInfoObj::clear_totalmilitary() {
  totalmilitary_ = -1;
  clear_has_totalmilitary();
}
inline ::google::protobuf::int32 GuildInfoObj::totalmilitary() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.TotalMilitary)
  return totalmilitary_;
}
inline void GuildInfoObj::set_totalmilitary(::google::protobuf::int32 value) {
  set_has_totalmilitary();
  totalmilitary_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.TotalMilitary)
}

// repeated .ApplyListRoleInfoObj ApplyList = 15;
inline int GuildInfoObj::applylist_size() const {
  return applylist_.size();
}
inline void GuildInfoObj::clear_applylist() {
  applylist_.Clear();
}
inline const ::ApplyListRoleInfoObj& GuildInfoObj::applylist(int index) const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.ApplyList)
  return applylist_.Get(index);
}
inline ::ApplyListRoleInfoObj* GuildInfoObj::mutable_applylist(int index) {
  // @@protoc_insertion_point(field_mutable:GuildInfoObj.ApplyList)
  return applylist_.Mutable(index);
}
inline ::ApplyListRoleInfoObj* GuildInfoObj::add_applylist() {
  // @@protoc_insertion_point(field_add:GuildInfoObj.ApplyList)
  return applylist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ApplyListRoleInfoObj >*
GuildInfoObj::mutable_applylist() {
  // @@protoc_insertion_point(field_mutable_list:GuildInfoObj.ApplyList)
  return &applylist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ApplyListRoleInfoObj >&
GuildInfoObj::applylist() const {
  // @@protoc_insertion_point(field_list:GuildInfoObj.ApplyList)
  return applylist_;
}

// optional sint32 MaxMemberNum = 16 [default = -1];
inline bool GuildInfoObj::has_maxmembernum() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GuildInfoObj::set_has_maxmembernum() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GuildInfoObj::clear_has_maxmembernum() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GuildInfoObj::clear_maxmembernum() {
  maxmembernum_ = -1;
  clear_has_maxmembernum();
}
inline ::google::protobuf::int32 GuildInfoObj::maxmembernum() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.MaxMemberNum)
  return maxmembernum_;
}
inline void GuildInfoObj::set_maxmembernum(::google::protobuf::int32 value) {
  set_has_maxmembernum();
  maxmembernum_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.MaxMemberNum)
}

// optional sint32 HallLv = 17 [default = 1];
inline bool GuildInfoObj::has_halllv() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GuildInfoObj::set_has_halllv() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GuildInfoObj::clear_has_halllv() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GuildInfoObj::clear_halllv() {
  halllv_ = 1;
  clear_has_halllv();
}
inline ::google::protobuf::int32 GuildInfoObj::halllv() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.HallLv)
  return halllv_;
}
inline void GuildInfoObj::set_halllv(::google::protobuf::int32 value) {
  set_has_halllv();
  halllv_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.HallLv)
}

// optional sint32 HallLvupTime = 18 [default = -1];
inline bool GuildInfoObj::has_halllvuptime() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GuildInfoObj::set_has_halllvuptime() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GuildInfoObj::clear_has_halllvuptime() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GuildInfoObj::clear_halllvuptime() {
  halllvuptime_ = -1;
  clear_has_halllvuptime();
}
inline ::google::protobuf::int32 GuildInfoObj::halllvuptime() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.HallLvupTime)
  return halllvuptime_;
}
inline void GuildInfoObj::set_halllvuptime(::google::protobuf::int32 value) {
  set_has_halllvuptime();
  halllvuptime_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.HallLvupTime)
}

// optional sint32 HouseLv = 19 [default = 1];
inline bool GuildInfoObj::has_houselv() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GuildInfoObj::set_has_houselv() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GuildInfoObj::clear_has_houselv() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GuildInfoObj::clear_houselv() {
  houselv_ = 1;
  clear_has_houselv();
}
inline ::google::protobuf::int32 GuildInfoObj::houselv() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.HouseLv)
  return houselv_;
}
inline void GuildInfoObj::set_houselv(::google::protobuf::int32 value) {
  set_has_houselv();
  houselv_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.HouseLv)
}

// optional sint32 HouseLvupTime = 20 [default = -1];
inline bool GuildInfoObj::has_houselvuptime() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GuildInfoObj::set_has_houselvuptime() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GuildInfoObj::clear_has_houselvuptime() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GuildInfoObj::clear_houselvuptime() {
  houselvuptime_ = -1;
  clear_has_houselvuptime();
}
inline ::google::protobuf::int32 GuildInfoObj::houselvuptime() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.HouseLvupTime)
  return houselvuptime_;
}
inline void GuildInfoObj::set_houselvuptime(::google::protobuf::int32 value) {
  set_has_houselvuptime();
  houselvuptime_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.HouseLvupTime)
}

// optional sint32 StoreroomLv = 21 [default = 1];
inline bool GuildInfoObj::has_storeroomlv() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void GuildInfoObj::set_has_storeroomlv() {
  _has_bits_[0] |= 0x00040000u;
}
inline void GuildInfoObj::clear_has_storeroomlv() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void GuildInfoObj::clear_storeroomlv() {
  storeroomlv_ = 1;
  clear_has_storeroomlv();
}
inline ::google::protobuf::int32 GuildInfoObj::storeroomlv() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.StoreroomLv)
  return storeroomlv_;
}
inline void GuildInfoObj::set_storeroomlv(::google::protobuf::int32 value) {
  set_has_storeroomlv();
  storeroomlv_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.StoreroomLv)
}

// optional sint32 StoreroomLvupTime = 22 [default = -1];
inline bool GuildInfoObj::has_storeroomlvuptime() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void GuildInfoObj::set_has_storeroomlvuptime() {
  _has_bits_[0] |= 0x00080000u;
}
inline void GuildInfoObj::clear_has_storeroomlvuptime() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void GuildInfoObj::clear_storeroomlvuptime() {
  storeroomlvuptime_ = -1;
  clear_has_storeroomlvuptime();
}
inline ::google::protobuf::int32 GuildInfoObj::storeroomlvuptime() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.StoreroomLvupTime)
  return storeroomlvuptime_;
}
inline void GuildInfoObj::set_storeroomlvuptime(::google::protobuf::int32 value) {
  set_has_storeroomlvuptime();
  storeroomlvuptime_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.StoreroomLvupTime)
}

// optional sint32 KongfuHallLv = 23 [default = 1];
inline bool GuildInfoObj::has_kongfuhalllv() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void GuildInfoObj::set_has_kongfuhalllv() {
  _has_bits_[0] |= 0x00100000u;
}
inline void GuildInfoObj::clear_has_kongfuhalllv() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void GuildInfoObj::clear_kongfuhalllv() {
  kongfuhalllv_ = 1;
  clear_has_kongfuhalllv();
}
inline ::google::protobuf::int32 GuildInfoObj::kongfuhalllv() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.KongfuHallLv)
  return kongfuhalllv_;
}
inline void GuildInfoObj::set_kongfuhalllv(::google::protobuf::int32 value) {
  set_has_kongfuhalllv();
  kongfuhalllv_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.KongfuHallLv)
}

// optional sint32 KongfuHallLvupTime = 24 [default = -1];
inline bool GuildInfoObj::has_kongfuhalllvuptime() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void GuildInfoObj::set_has_kongfuhalllvuptime() {
  _has_bits_[0] |= 0x00200000u;
}
inline void GuildInfoObj::clear_has_kongfuhalllvuptime() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void GuildInfoObj::clear_kongfuhalllvuptime() {
  kongfuhalllvuptime_ = -1;
  clear_has_kongfuhalllvuptime();
}
inline ::google::protobuf::int32 GuildInfoObj::kongfuhalllvuptime() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.KongfuHallLvupTime)
  return kongfuhalllvuptime_;
}
inline void GuildInfoObj::set_kongfuhalllvuptime(::google::protobuf::int32 value) {
  set_has_kongfuhalllvuptime();
  kongfuhalllvuptime_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.KongfuHallLvupTime)
}

// optional sint32 CreateTime = 25 [default = -1];
inline bool GuildInfoObj::has_createtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildInfoObj::set_has_createtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildInfoObj::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildInfoObj::clear_createtime() {
  createtime_ = -1;
  clear_has_createtime();
}
inline ::google::protobuf::int32 GuildInfoObj::createtime() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.CreateTime)
  return createtime_;
}
inline void GuildInfoObj::set_createtime(::google::protobuf::int32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.CreateTime)
}

// repeated .GuildEventObj EventList = 26;
inline int GuildInfoObj::eventlist_size() const {
  return eventlist_.size();
}
inline void GuildInfoObj::clear_eventlist() {
  eventlist_.Clear();
}
inline const ::GuildEventObj& GuildInfoObj::eventlist(int index) const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.EventList)
  return eventlist_.Get(index);
}
inline ::GuildEventObj* GuildInfoObj::mutable_eventlist(int index) {
  // @@protoc_insertion_point(field_mutable:GuildInfoObj.EventList)
  return eventlist_.Mutable(index);
}
inline ::GuildEventObj* GuildInfoObj::add_eventlist() {
  // @@protoc_insertion_point(field_add:GuildInfoObj.EventList)
  return eventlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::GuildEventObj >*
GuildInfoObj::mutable_eventlist() {
  // @@protoc_insertion_point(field_mutable_list:GuildInfoObj.EventList)
  return &eventlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::GuildEventObj >&
GuildInfoObj::eventlist() const {
  // @@protoc_insertion_point(field_list:GuildInfoObj.EventList)
  return eventlist_;
}

// repeated .GuildDungeonObj GuildDungeonList = 27;
inline int GuildInfoObj::guilddungeonlist_size() const {
  return guilddungeonlist_.size();
}
inline void GuildInfoObj::clear_guilddungeonlist() {
  guilddungeonlist_.Clear();
}
inline const ::GuildDungeonObj& GuildInfoObj::guilddungeonlist(int index) const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.GuildDungeonList)
  return guilddungeonlist_.Get(index);
}
inline ::GuildDungeonObj* GuildInfoObj::mutable_guilddungeonlist(int index) {
  // @@protoc_insertion_point(field_mutable:GuildInfoObj.GuildDungeonList)
  return guilddungeonlist_.Mutable(index);
}
inline ::GuildDungeonObj* GuildInfoObj::add_guilddungeonlist() {
  // @@protoc_insertion_point(field_add:GuildInfoObj.GuildDungeonList)
  return guilddungeonlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::GuildDungeonObj >*
GuildInfoObj::mutable_guilddungeonlist() {
  // @@protoc_insertion_point(field_mutable_list:GuildInfoObj.GuildDungeonList)
  return &guilddungeonlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::GuildDungeonObj >&
GuildInfoObj::guilddungeonlist() const {
  // @@protoc_insertion_point(field_list:GuildInfoObj.GuildDungeonList)
  return guilddungeonlist_;
}

// optional .GuildWarObj GuildWar = 28;
inline bool GuildInfoObj::has_guildwar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildInfoObj::set_has_guildwar() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildInfoObj::clear_has_guildwar() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildInfoObj::clear_guildwar() {
  if (guildwar_ != NULL) guildwar_->::GuildWarObj::Clear();
  clear_has_guildwar();
}
inline const ::GuildWarObj& GuildInfoObj::guildwar() const {
  const ::GuildWarObj* p = guildwar_;
  // @@protoc_insertion_point(field_get:GuildInfoObj.GuildWar)
  return p != NULL ? *p : *reinterpret_cast<const ::GuildWarObj*>(
      &::_GuildWarObj_default_instance_);
}
inline ::GuildWarObj* GuildInfoObj::mutable_guildwar() {
  set_has_guildwar();
  if (guildwar_ == NULL) {
    guildwar_ = new ::GuildWarObj;
  }
  // @@protoc_insertion_point(field_mutable:GuildInfoObj.GuildWar)
  return guildwar_;
}
inline ::GuildWarObj* GuildInfoObj::release_guildwar() {
  // @@protoc_insertion_point(field_release:GuildInfoObj.GuildWar)
  clear_has_guildwar();
  ::GuildWarObj* temp = guildwar_;
  guildwar_ = NULL;
  return temp;
}
inline void GuildInfoObj::set_allocated_guildwar(::GuildWarObj* guildwar) {
  delete guildwar_;
  guildwar_ = guildwar;
  if (guildwar) {
    set_has_guildwar();
  } else {
    clear_has_guildwar();
  }
  // @@protoc_insertion_point(field_set_allocated:GuildInfoObj.GuildWar)
}

// repeated sint32 GuildOpenScience = 29;
inline int GuildInfoObj::guildopenscience_size() const {
  return guildopenscience_.size();
}
inline void GuildInfoObj::clear_guildopenscience() {
  guildopenscience_.Clear();
}
inline ::google::protobuf::int32 GuildInfoObj::guildopenscience(int index) const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.GuildOpenScience)
  return guildopenscience_.Get(index);
}
inline void GuildInfoObj::set_guildopenscience(int index, ::google::protobuf::int32 value) {
  guildopenscience_.Set(index, value);
  // @@protoc_insertion_point(field_set:GuildInfoObj.GuildOpenScience)
}
inline void GuildInfoObj::add_guildopenscience(::google::protobuf::int32 value) {
  guildopenscience_.Add(value);
  // @@protoc_insertion_point(field_add:GuildInfoObj.GuildOpenScience)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GuildInfoObj::guildopenscience() const {
  // @@protoc_insertion_point(field_list:GuildInfoObj.GuildOpenScience)
  return guildopenscience_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GuildInfoObj::mutable_guildopenscience() {
  // @@protoc_insertion_point(field_mutable_list:GuildInfoObj.GuildOpenScience)
  return &guildopenscience_;
}

// -------------------------------------------------------------------

// ApplyListRoleInfoObj

// optional sint64 UserId = 1 [default = -1];
inline bool ApplyListRoleInfoObj::has_userid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ApplyListRoleInfoObj::set_has_userid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ApplyListRoleInfoObj::clear_has_userid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ApplyListRoleInfoObj::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
inline ::google::protobuf::int64 ApplyListRoleInfoObj::userid() const {
  // @@protoc_insertion_point(field_get:ApplyListRoleInfoObj.UserId)
  return userid_;
}
inline void ApplyListRoleInfoObj::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:ApplyListRoleInfoObj.UserId)
}

// optional string UserName = 2;
inline bool ApplyListRoleInfoObj::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyListRoleInfoObj::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ApplyListRoleInfoObj::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ApplyListRoleInfoObj::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& ApplyListRoleInfoObj::username() const {
  // @@protoc_insertion_point(field_get:ApplyListRoleInfoObj.UserName)
  return username_.GetNoArena();
}
inline void ApplyListRoleInfoObj::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ApplyListRoleInfoObj.UserName)
}
#if LANG_CXX11
inline void ApplyListRoleInfoObj::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ApplyListRoleInfoObj.UserName)
}
#endif
inline void ApplyListRoleInfoObj::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ApplyListRoleInfoObj.UserName)
}
inline void ApplyListRoleInfoObj::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ApplyListRoleInfoObj.UserName)
}
inline ::std::string* ApplyListRoleInfoObj::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:ApplyListRoleInfoObj.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApplyListRoleInfoObj::release_username() {
  // @@protoc_insertion_point(field_release:ApplyListRoleInfoObj.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApplyListRoleInfoObj::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:ApplyListRoleInfoObj.UserName)
}

// optional sint32 Level = 3 [default = 1];
inline bool ApplyListRoleInfoObj::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ApplyListRoleInfoObj::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ApplyListRoleInfoObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ApplyListRoleInfoObj::clear_level() {
  level_ = 1;
  clear_has_level();
}
inline ::google::protobuf::int32 ApplyListRoleInfoObj::level() const {
  // @@protoc_insertion_point(field_get:ApplyListRoleInfoObj.Level)
  return level_;
}
inline void ApplyListRoleInfoObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ApplyListRoleInfoObj.Level)
}

// optional sint32 Prof = 4 [default = 0];
inline bool ApplyListRoleInfoObj::has_prof() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyListRoleInfoObj::set_has_prof() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ApplyListRoleInfoObj::clear_has_prof() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ApplyListRoleInfoObj::clear_prof() {
  prof_ = 0;
  clear_has_prof();
}
inline ::google::protobuf::int32 ApplyListRoleInfoObj::prof() const {
  // @@protoc_insertion_point(field_get:ApplyListRoleInfoObj.Prof)
  return prof_;
}
inline void ApplyListRoleInfoObj::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
  // @@protoc_insertion_point(field_set:ApplyListRoleInfoObj.Prof)
}

// optional sint32 TalentLevel = 5 [default = 0];
inline bool ApplyListRoleInfoObj::has_talentlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ApplyListRoleInfoObj::set_has_talentlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ApplyListRoleInfoObj::clear_has_talentlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ApplyListRoleInfoObj::clear_talentlevel() {
  talentlevel_ = 0;
  clear_has_talentlevel();
}
inline ::google::protobuf::int32 ApplyListRoleInfoObj::talentlevel() const {
  // @@protoc_insertion_point(field_get:ApplyListRoleInfoObj.TalentLevel)
  return talentlevel_;
}
inline void ApplyListRoleInfoObj::set_talentlevel(::google::protobuf::int32 value) {
  set_has_talentlevel();
  talentlevel_ = value;
  // @@protoc_insertion_point(field_set:ApplyListRoleInfoObj.TalentLevel)
}

// optional sint32 Xiulian = 6 [default = 0];
inline bool ApplyListRoleInfoObj::has_xiulian() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ApplyListRoleInfoObj::set_has_xiulian() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ApplyListRoleInfoObj::clear_has_xiulian() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ApplyListRoleInfoObj::clear_xiulian() {
  xiulian_ = 0;
  clear_has_xiulian();
}
inline ::google::protobuf::int32 ApplyListRoleInfoObj::xiulian() const {
  // @@protoc_insertion_point(field_get:ApplyListRoleInfoObj.Xiulian)
  return xiulian_;
}
inline void ApplyListRoleInfoObj::set_xiulian(::google::protobuf::int32 value) {
  set_has_xiulian();
  xiulian_ = value;
  // @@protoc_insertion_point(field_set:ApplyListRoleInfoObj.Xiulian)
}

// optional sint32 Military = 7 [default = 0];
inline bool ApplyListRoleInfoObj::has_military() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ApplyListRoleInfoObj::set_has_military() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ApplyListRoleInfoObj::clear_has_military() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ApplyListRoleInfoObj::clear_military() {
  military_ = 0;
  clear_has_military();
}
inline ::google::protobuf::int32 ApplyListRoleInfoObj::military() const {
  // @@protoc_insertion_point(field_get:ApplyListRoleInfoObj.Military)
  return military_;
}
inline void ApplyListRoleInfoObj::set_military(::google::protobuf::int32 value) {
  set_has_military();
  military_ = value;
  // @@protoc_insertion_point(field_set:ApplyListRoleInfoObj.Military)
}

// -------------------------------------------------------------------

// GuildListObj

// optional sint32 Guild = 1 [default = -1];
inline bool GuildListObj::has_guild() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildListObj::set_has_guild() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildListObj::clear_has_guild() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildListObj::clear_guild() {
  guild_ = -1;
  clear_has_guild();
}
inline ::google::protobuf::int32 GuildListObj::guild() const {
  // @@protoc_insertion_point(field_get:GuildListObj.Guild)
  return guild_;
}
inline void GuildListObj::set_guild(::google::protobuf::int32 value) {
  set_has_guild();
  guild_ = value;
  // @@protoc_insertion_point(field_set:GuildListObj.Guild)
}

// optional string GuildName = 2;
inline bool GuildListObj::has_guildname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildListObj::set_has_guildname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildListObj::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildListObj::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guildname();
}
inline const ::std::string& GuildListObj::guildname() const {
  // @@protoc_insertion_point(field_get:GuildListObj.GuildName)
  return guildname_.GetNoArena();
}
inline void GuildListObj::set_guildname(const ::std::string& value) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildListObj.GuildName)
}
#if LANG_CXX11
inline void GuildListObj::set_guildname(::std::string&& value) {
  set_has_guildname();
  guildname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildListObj.GuildName)
}
#endif
inline void GuildListObj::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildListObj.GuildName)
}
inline void GuildListObj::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildListObj.GuildName)
}
inline ::std::string* GuildListObj::mutable_guildname() {
  set_has_guildname();
  // @@protoc_insertion_point(field_mutable:GuildListObj.GuildName)
  return guildname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildListObj::release_guildname() {
  // @@protoc_insertion_point(field_release:GuildListObj.GuildName)
  clear_has_guildname();
  return guildname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildListObj::set_allocated_guildname(::std::string* guildname) {
  if (guildname != NULL) {
    set_has_guildname();
  } else {
    clear_has_guildname();
  }
  guildname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:GuildListObj.GuildName)
}

// optional sint32 Level = 3 [default = 1];
inline bool GuildListObj::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildListObj::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildListObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildListObj::clear_level() {
  level_ = 1;
  clear_has_level();
}
inline ::google::protobuf::int32 GuildListObj::level() const {
  // @@protoc_insertion_point(field_get:GuildListObj.Level)
  return level_;
}
inline void GuildListObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:GuildListObj.Level)
}

// optional sint32 CurMemberNum = 4 [default = 1];
inline bool GuildListObj::has_curmembernum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildListObj::set_has_curmembernum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildListObj::clear_has_curmembernum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildListObj::clear_curmembernum() {
  curmembernum_ = 1;
  clear_has_curmembernum();
}
inline ::google::protobuf::int32 GuildListObj::curmembernum() const {
  // @@protoc_insertion_point(field_get:GuildListObj.CurMemberNum)
  return curmembernum_;
}
inline void GuildListObj::set_curmembernum(::google::protobuf::int32 value) {
  set_has_curmembernum();
  curmembernum_ = value;
  // @@protoc_insertion_point(field_set:GuildListObj.CurMemberNum)
}

// optional sint32 TotalMilitary = 5 [default = 0];
inline bool GuildListObj::has_totalmilitary() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildListObj::set_has_totalmilitary() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildListObj::clear_has_totalmilitary() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildListObj::clear_totalmilitary() {
  totalmilitary_ = 0;
  clear_has_totalmilitary();
}
inline ::google::protobuf::int32 GuildListObj::totalmilitary() const {
  // @@protoc_insertion_point(field_get:GuildListObj.TotalMilitary)
  return totalmilitary_;
}
inline void GuildListObj::set_totalmilitary(::google::protobuf::int32 value) {
  set_has_totalmilitary();
  totalmilitary_ = value;
  // @@protoc_insertion_point(field_set:GuildListObj.TotalMilitary)
}

// optional string Announcement = 6;
inline bool GuildListObj::has_announcement() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildListObj::set_has_announcement() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildListObj::clear_has_announcement() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildListObj::clear_announcement() {
  announcement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_announcement();
}
inline const ::std::string& GuildListObj::announcement() const {
  // @@protoc_insertion_point(field_get:GuildListObj.Announcement)
  return announcement_.GetNoArena();
}
inline void GuildListObj::set_announcement(const ::std::string& value) {
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildListObj.Announcement)
}
#if LANG_CXX11
inline void GuildListObj::set_announcement(::std::string&& value) {
  set_has_announcement();
  announcement_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildListObj.Announcement)
}
#endif
inline void GuildListObj::set_announcement(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildListObj.Announcement)
}
inline void GuildListObj::set_announcement(const char* value, size_t size) {
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildListObj.Announcement)
}
inline ::std::string* GuildListObj::mutable_announcement() {
  set_has_announcement();
  // @@protoc_insertion_point(field_mutable:GuildListObj.Announcement)
  return announcement_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildListObj::release_announcement() {
  // @@protoc_insertion_point(field_release:GuildListObj.Announcement)
  clear_has_announcement();
  return announcement_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildListObj::set_allocated_announcement(::std::string* announcement) {
  if (announcement != NULL) {
    set_has_announcement();
  } else {
    clear_has_announcement();
  }
  announcement_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), announcement);
  // @@protoc_insertion_point(field_set_allocated:GuildListObj.Announcement)
}

// -------------------------------------------------------------------

// HeroFightInfo

// optional sint64 UserId = 1 [default = -1];
inline bool HeroFightInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HeroFightInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HeroFightInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HeroFightInfo::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
inline ::google::protobuf::int64 HeroFightInfo::userid() const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.UserId)
  return userid_;
}
inline void HeroFightInfo::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:HeroFightInfo.UserId)
}

// optional sint32 ObjId = 2 [default = -1];
inline bool HeroFightInfo::has_objid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HeroFightInfo::set_has_objid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HeroFightInfo::clear_has_objid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HeroFightInfo::clear_objid() {
  objid_ = -1;
  clear_has_objid();
}
inline ::google::protobuf::int32 HeroFightInfo::objid() const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.ObjId)
  return objid_;
}
inline void HeroFightInfo::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:HeroFightInfo.ObjId)
}

// optional string Name = 3;
inline bool HeroFightInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroFightInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroFightInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroFightInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& HeroFightInfo::name() const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.Name)
  return name_.GetNoArena();
}
inline void HeroFightInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HeroFightInfo.Name)
}
#if LANG_CXX11
inline void HeroFightInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:HeroFightInfo.Name)
}
#endif
inline void HeroFightInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HeroFightInfo.Name)
}
inline void HeroFightInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HeroFightInfo.Name)
}
inline ::std::string* HeroFightInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:HeroFightInfo.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HeroFightInfo::release_name() {
  // @@protoc_insertion_point(field_release:HeroFightInfo.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HeroFightInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:HeroFightInfo.Name)
}

// optional sint32 DeadTimes = 4 [default = 0];
inline bool HeroFightInfo::has_deadtimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroFightInfo::set_has_deadtimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroFightInfo::clear_has_deadtimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroFightInfo::clear_deadtimes() {
  deadtimes_ = 0;
  clear_has_deadtimes();
}
inline ::google::protobuf::int32 HeroFightInfo::deadtimes() const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.DeadTimes)
  return deadtimes_;
}
inline void HeroFightInfo::set_deadtimes(::google::protobuf::int32 value) {
  set_has_deadtimes();
  deadtimes_ = value;
  // @@protoc_insertion_point(field_set:HeroFightInfo.DeadTimes)
}

// optional sint32 KilledNum = 5 [default = 0];
inline bool HeroFightInfo::has_killednum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroFightInfo::set_has_killednum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroFightInfo::clear_has_killednum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroFightInfo::clear_killednum() {
  killednum_ = 0;
  clear_has_killednum();
}
inline ::google::protobuf::int32 HeroFightInfo::killednum() const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.KilledNum)
  return killednum_;
}
inline void HeroFightInfo::set_killednum(::google::protobuf::int32 value) {
  set_has_killednum();
  killednum_ = value;
  // @@protoc_insertion_point(field_set:HeroFightInfo.KilledNum)
}

// optional sint64 TotalDamage = 6 [default = -1];
inline bool HeroFightInfo::has_totaldamage() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HeroFightInfo::set_has_totaldamage() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HeroFightInfo::clear_has_totaldamage() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HeroFightInfo::clear_totaldamage() {
  totaldamage_ = GOOGLE_LONGLONG(-1);
  clear_has_totaldamage();
}
inline ::google::protobuf::int64 HeroFightInfo::totaldamage() const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.TotalDamage)
  return totaldamage_;
}
inline void HeroFightInfo::set_totaldamage(::google::protobuf::int64 value) {
  set_has_totaldamage();
  totaldamage_ = value;
  // @@protoc_insertion_point(field_set:HeroFightInfo.TotalDamage)
}

// optional sint32 TotalEndure = 7 [default = -1];
inline bool HeroFightInfo::has_totalendure() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HeroFightInfo::set_has_totalendure() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HeroFightInfo::clear_has_totalendure() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HeroFightInfo::clear_totalendure() {
  totalendure_ = -1;
  clear_has_totalendure();
}
inline ::google::protobuf::int32 HeroFightInfo::totalendure() const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.TotalEndure)
  return totalendure_;
}
inline void HeroFightInfo::set_totalendure(::google::protobuf::int32 value) {
  set_has_totalendure();
  totalendure_ = value;
  // @@protoc_insertion_point(field_set:HeroFightInfo.TotalEndure)
}

// repeated sint32 IntParaArr = 8;
inline int HeroFightInfo::intparaarr_size() const {
  return intparaarr_.size();
}
inline void HeroFightInfo::clear_intparaarr() {
  intparaarr_.Clear();
}
inline ::google::protobuf::int32 HeroFightInfo::intparaarr(int index) const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.IntParaArr)
  return intparaarr_.Get(index);
}
inline void HeroFightInfo::set_intparaarr(int index, ::google::protobuf::int32 value) {
  intparaarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:HeroFightInfo.IntParaArr)
}
inline void HeroFightInfo::add_intparaarr(::google::protobuf::int32 value) {
  intparaarr_.Add(value);
  // @@protoc_insertion_point(field_add:HeroFightInfo.IntParaArr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HeroFightInfo::intparaarr() const {
  // @@protoc_insertion_point(field_list:HeroFightInfo.IntParaArr)
  return intparaarr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HeroFightInfo::mutable_intparaarr() {
  // @@protoc_insertion_point(field_mutable_list:HeroFightInfo.IntParaArr)
  return &intparaarr_;
}

// optional sint32 Level = 9 [default = -1];
inline bool HeroFightInfo::has_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HeroFightInfo::set_has_level() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HeroFightInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HeroFightInfo::clear_level() {
  level_ = -1;
  clear_has_level();
}
inline ::google::protobuf::int32 HeroFightInfo::level() const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.Level)
  return level_;
}
inline void HeroFightInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:HeroFightInfo.Level)
}

// optional sint32 AssistKilled = 10 [default = -1];
inline bool HeroFightInfo::has_assistkilled() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void HeroFightInfo::set_has_assistkilled() {
  _has_bits_[0] |= 0x00000200u;
}
inline void HeroFightInfo::clear_has_assistkilled() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void HeroFightInfo::clear_assistkilled() {
  assistkilled_ = -1;
  clear_has_assistkilled();
}
inline ::google::protobuf::int32 HeroFightInfo::assistkilled() const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.AssistKilled)
  return assistkilled_;
}
inline void HeroFightInfo::set_assistkilled(::google::protobuf::int32 value) {
  set_has_assistkilled();
  assistkilled_ = value;
  // @@protoc_insertion_point(field_set:HeroFightInfo.AssistKilled)
}

// optional sint32 CmapId = 11 [default = -1];
inline bool HeroFightInfo::has_cmapid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeroFightInfo::set_has_cmapid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeroFightInfo::clear_has_cmapid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeroFightInfo::clear_cmapid() {
  cmapid_ = -1;
  clear_has_cmapid();
}
inline ::google::protobuf::int32 HeroFightInfo::cmapid() const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.CmapId)
  return cmapid_;
}
inline void HeroFightInfo::set_cmapid(::google::protobuf::int32 value) {
  set_has_cmapid();
  cmapid_ = value;
  // @@protoc_insertion_point(field_set:HeroFightInfo.CmapId)
}

// -------------------------------------------------------------------

// GuildEventObj

// optional sint32 EventId = 1 [default = -1];
inline bool GuildEventObj::has_eventid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildEventObj::set_has_eventid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildEventObj::clear_has_eventid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildEventObj::clear_eventid() {
  eventid_ = -1;
  clear_has_eventid();
}
inline ::google::protobuf::int32 GuildEventObj::eventid() const {
  // @@protoc_insertion_point(field_get:GuildEventObj.EventId)
  return eventid_;
}
inline void GuildEventObj::set_eventid(::google::protobuf::int32 value) {
  set_has_eventid();
  eventid_ = value;
  // @@protoc_insertion_point(field_set:GuildEventObj.EventId)
}

// optional string Param1 = 2;
inline bool GuildEventObj::has_param1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildEventObj::set_has_param1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildEventObj::clear_has_param1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildEventObj::clear_param1() {
  param1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param1();
}
inline const ::std::string& GuildEventObj::param1() const {
  // @@protoc_insertion_point(field_get:GuildEventObj.Param1)
  return param1_.GetNoArena();
}
inline void GuildEventObj::set_param1(const ::std::string& value) {
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildEventObj.Param1)
}
#if LANG_CXX11
inline void GuildEventObj::set_param1(::std::string&& value) {
  set_has_param1();
  param1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildEventObj.Param1)
}
#endif
inline void GuildEventObj::set_param1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildEventObj.Param1)
}
inline void GuildEventObj::set_param1(const char* value, size_t size) {
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildEventObj.Param1)
}
inline ::std::string* GuildEventObj::mutable_param1() {
  set_has_param1();
  // @@protoc_insertion_point(field_mutable:GuildEventObj.Param1)
  return param1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildEventObj::release_param1() {
  // @@protoc_insertion_point(field_release:GuildEventObj.Param1)
  clear_has_param1();
  return param1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildEventObj::set_allocated_param1(::std::string* param1) {
  if (param1 != NULL) {
    set_has_param1();
  } else {
    clear_has_param1();
  }
  param1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param1);
  // @@protoc_insertion_point(field_set_allocated:GuildEventObj.Param1)
}

// optional string Param2 = 3;
inline bool GuildEventObj::has_param2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildEventObj::set_has_param2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildEventObj::clear_has_param2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildEventObj::clear_param2() {
  param2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param2();
}
inline const ::std::string& GuildEventObj::param2() const {
  // @@protoc_insertion_point(field_get:GuildEventObj.Param2)
  return param2_.GetNoArena();
}
inline void GuildEventObj::set_param2(const ::std::string& value) {
  set_has_param2();
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildEventObj.Param2)
}
#if LANG_CXX11
inline void GuildEventObj::set_param2(::std::string&& value) {
  set_has_param2();
  param2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildEventObj.Param2)
}
#endif
inline void GuildEventObj::set_param2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_param2();
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildEventObj.Param2)
}
inline void GuildEventObj::set_param2(const char* value, size_t size) {
  set_has_param2();
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildEventObj.Param2)
}
inline ::std::string* GuildEventObj::mutable_param2() {
  set_has_param2();
  // @@protoc_insertion_point(field_mutable:GuildEventObj.Param2)
  return param2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildEventObj::release_param2() {
  // @@protoc_insertion_point(field_release:GuildEventObj.Param2)
  clear_has_param2();
  return param2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildEventObj::set_allocated_param2(::std::string* param2) {
  if (param2 != NULL) {
    set_has_param2();
  } else {
    clear_has_param2();
  }
  param2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param2);
  // @@protoc_insertion_point(field_set_allocated:GuildEventObj.Param2)
}

// -------------------------------------------------------------------

// GuildDungeonObj

// optional sint32 DungeonId = 1 [default = -1];
inline bool GuildDungeonObj::has_dungeonid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildDungeonObj::set_has_dungeonid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildDungeonObj::clear_has_dungeonid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildDungeonObj::clear_dungeonid() {
  dungeonid_ = -1;
  clear_has_dungeonid();
}
inline ::google::protobuf::int32 GuildDungeonObj::dungeonid() const {
  // @@protoc_insertion_point(field_get:GuildDungeonObj.DungeonId)
  return dungeonid_;
}
inline void GuildDungeonObj::set_dungeonid(::google::protobuf::int32 value) {
  set_has_dungeonid();
  dungeonid_ = value;
  // @@protoc_insertion_point(field_set:GuildDungeonObj.DungeonId)
}

// optional string Key = 2;
inline bool GuildDungeonObj::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildDungeonObj::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildDungeonObj::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildDungeonObj::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& GuildDungeonObj::key() const {
  // @@protoc_insertion_point(field_get:GuildDungeonObj.Key)
  return key_.GetNoArena();
}
inline void GuildDungeonObj::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildDungeonObj.Key)
}
#if LANG_CXX11
inline void GuildDungeonObj::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildDungeonObj.Key)
}
#endif
inline void GuildDungeonObj::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildDungeonObj.Key)
}
inline void GuildDungeonObj::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildDungeonObj.Key)
}
inline ::std::string* GuildDungeonObj::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:GuildDungeonObj.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildDungeonObj::release_key() {
  // @@protoc_insertion_point(field_release:GuildDungeonObj.Key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildDungeonObj::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:GuildDungeonObj.Key)
}

// optional sint32 Post = 3 [default = -1];
inline bool GuildDungeonObj::has_post() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildDungeonObj::set_has_post() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildDungeonObj::clear_has_post() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildDungeonObj::clear_post() {
  post_ = -1;
  clear_has_post();
}
inline ::google::protobuf::int32 GuildDungeonObj::post() const {
  // @@protoc_insertion_point(field_get:GuildDungeonObj.Post)
  return post_;
}
inline void GuildDungeonObj::set_post(::google::protobuf::int32 value) {
  set_has_post();
  post_ = value;
  // @@protoc_insertion_point(field_set:GuildDungeonObj.Post)
}

// optional string Host = 4;
inline bool GuildDungeonObj::has_host() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildDungeonObj::set_has_host() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildDungeonObj::clear_has_host() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildDungeonObj::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
inline const ::std::string& GuildDungeonObj::host() const {
  // @@protoc_insertion_point(field_get:GuildDungeonObj.Host)
  return host_.GetNoArena();
}
inline void GuildDungeonObj::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildDungeonObj.Host)
}
#if LANG_CXX11
inline void GuildDungeonObj::set_host(::std::string&& value) {
  set_has_host();
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildDungeonObj.Host)
}
#endif
inline void GuildDungeonObj::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildDungeonObj.Host)
}
inline void GuildDungeonObj::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildDungeonObj.Host)
}
inline ::std::string* GuildDungeonObj::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:GuildDungeonObj.Host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildDungeonObj::release_host() {
  // @@protoc_insertion_point(field_release:GuildDungeonObj.Host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildDungeonObj::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:GuildDungeonObj.Host)
}

// -------------------------------------------------------------------

// GuildWarObj

// optional sint32 Guild_A = 2 [default = -1];
inline bool GuildWarObj::has_guild_a() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildWarObj::set_has_guild_a() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildWarObj::clear_has_guild_a() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildWarObj::clear_guild_a() {
  guild_a_ = -1;
  clear_has_guild_a();
}
inline ::google::protobuf::int32 GuildWarObj::guild_a() const {
  // @@protoc_insertion_point(field_get:GuildWarObj.Guild_A)
  return guild_a_;
}
inline void GuildWarObj::set_guild_a(::google::protobuf::int32 value) {
  set_has_guild_a();
  guild_a_ = value;
  // @@protoc_insertion_point(field_set:GuildWarObj.Guild_A)
}

// optional sint32 Guild_B = 3 [default = -1];
inline bool GuildWarObj::has_guild_b() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildWarObj::set_has_guild_b() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildWarObj::clear_has_guild_b() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildWarObj::clear_guild_b() {
  guild_b_ = -1;
  clear_has_guild_b();
}
inline ::google::protobuf::int32 GuildWarObj::guild_b() const {
  // @@protoc_insertion_point(field_get:GuildWarObj.Guild_B)
  return guild_b_;
}
inline void GuildWarObj::set_guild_b(::google::protobuf::int32 value) {
  set_has_guild_b();
  guild_b_ = value;
  // @@protoc_insertion_point(field_set:GuildWarObj.Guild_B)
}

// optional sint32 DungeonId = 4 [default = -1];
inline bool GuildWarObj::has_dungeonid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildWarObj::set_has_dungeonid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildWarObj::clear_has_dungeonid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildWarObj::clear_dungeonid() {
  dungeonid_ = -1;
  clear_has_dungeonid();
}
inline ::google::protobuf::int32 GuildWarObj::dungeonid() const {
  // @@protoc_insertion_point(field_get:GuildWarObj.DungeonId)
  return dungeonid_;
}
inline void GuildWarObj::set_dungeonid(::google::protobuf::int32 value) {
  set_has_dungeonid();
  dungeonid_ = value;
  // @@protoc_insertion_point(field_set:GuildWarObj.DungeonId)
}

// optional string Key = 5;
inline bool GuildWarObj::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildWarObj::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildWarObj::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildWarObj::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& GuildWarObj::key() const {
  // @@protoc_insertion_point(field_get:GuildWarObj.Key)
  return key_.GetNoArena();
}
inline void GuildWarObj::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildWarObj.Key)
}
#if LANG_CXX11
inline void GuildWarObj::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildWarObj.Key)
}
#endif
inline void GuildWarObj::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildWarObj.Key)
}
inline void GuildWarObj::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildWarObj.Key)
}
inline ::std::string* GuildWarObj::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:GuildWarObj.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildWarObj::release_key() {
  // @@protoc_insertion_point(field_release:GuildWarObj.Key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildWarObj::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:GuildWarObj.Key)
}

// optional sint32 Port = 6 [default = -1];
inline bool GuildWarObj::has_port() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildWarObj::set_has_port() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildWarObj::clear_has_port() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildWarObj::clear_port() {
  port_ = -1;
  clear_has_port();
}
inline ::google::protobuf::int32 GuildWarObj::port() const {
  // @@protoc_insertion_point(field_get:GuildWarObj.Port)
  return port_;
}
inline void GuildWarObj::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:GuildWarObj.Port)
}

// optional string Host = 7;
inline bool GuildWarObj::has_host() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildWarObj::set_has_host() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildWarObj::clear_has_host() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildWarObj::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
inline const ::std::string& GuildWarObj::host() const {
  // @@protoc_insertion_point(field_get:GuildWarObj.Host)
  return host_.GetNoArena();
}
inline void GuildWarObj::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildWarObj.Host)
}
#if LANG_CXX11
inline void GuildWarObj::set_host(::std::string&& value) {
  set_has_host();
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildWarObj.Host)
}
#endif
inline void GuildWarObj::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildWarObj.Host)
}
inline void GuildWarObj::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildWarObj.Host)
}
inline ::std::string* GuildWarObj::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:GuildWarObj.Host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuildWarObj::release_host() {
  // @@protoc_insertion_point(field_release:GuildWarObj.Host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuildWarObj::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:GuildWarObj.Host)
}

// -------------------------------------------------------------------

// BagGridObj

// optional sint32 TemplateID = 1 [default = -1];
inline bool BagGridObj::has_templateid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BagGridObj::set_has_templateid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BagGridObj::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BagGridObj::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
inline ::google::protobuf::int32 BagGridObj::templateid() const {
  // @@protoc_insertion_point(field_get:BagGridObj.TemplateID)
  return templateid_;
}
inline void BagGridObj::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.TemplateID)
}

// optional sint32 Num = 2 [default = 0];
inline bool BagGridObj::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagGridObj::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagGridObj::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagGridObj::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 BagGridObj::num() const {
  // @@protoc_insertion_point(field_get:BagGridObj.Num)
  return num_;
}
inline void BagGridObj::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.Num)
}

// optional sint32 ItemType = 3 [default = -1];
inline bool BagGridObj::has_itemtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BagGridObj::set_has_itemtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BagGridObj::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BagGridObj::clear_itemtype() {
  itemtype_ = -1;
  clear_has_itemtype();
}
inline ::google::protobuf::int32 BagGridObj::itemtype() const {
  // @@protoc_insertion_point(field_get:BagGridObj.ItemType)
  return itemtype_;
}
inline void BagGridObj::set_itemtype(::google::protobuf::int32 value) {
  set_has_itemtype();
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.ItemType)
}

// optional sint32 Pos = 4 [default = -1];
inline bool BagGridObj::has_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BagGridObj::set_has_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BagGridObj::clear_has_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BagGridObj::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
inline ::google::protobuf::int32 BagGridObj::pos() const {
  // @@protoc_insertion_point(field_get:BagGridObj.Pos)
  return pos_;
}
inline void BagGridObj::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.Pos)
}

// optional sint32 Value = 5 [default = -1];
inline bool BagGridObj::has_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BagGridObj::set_has_value() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BagGridObj::clear_has_value() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BagGridObj::clear_value() {
  value_ = -1;
  clear_has_value();
}
inline ::google::protobuf::int32 BagGridObj::value() const {
  // @@protoc_insertion_point(field_get:BagGridObj.Value)
  return value_;
}
inline void BagGridObj::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.Value)
}

// optional sint64 Index = 6 [default = -1];
inline bool BagGridObj::has_index() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BagGridObj::set_has_index() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BagGridObj::clear_has_index() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BagGridObj::clear_index() {
  index_ = GOOGLE_LONGLONG(-1);
  clear_has_index();
}
inline ::google::protobuf::int64 BagGridObj::index() const {
  // @@protoc_insertion_point(field_get:BagGridObj.Index)
  return index_;
}
inline void BagGridObj::set_index(::google::protobuf::int64 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.Index)
}

// optional bool Bind = 7 [default = false];
inline bool BagGridObj::has_bind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BagGridObj::set_has_bind() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BagGridObj::clear_has_bind() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BagGridObj::clear_bind() {
  bind_ = false;
  clear_has_bind();
}
inline bool BagGridObj::bind() const {
  // @@protoc_insertion_point(field_get:BagGridObj.Bind)
  return bind_;
}
inline void BagGridObj::set_bind(bool value) {
  set_has_bind();
  bind_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.Bind)
}

// -------------------------------------------------------------------

// DropItemObj

// optional sint32 ConfigId = 1 [default = -1];
inline bool DropItemObj::has_configid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DropItemObj::set_has_configid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DropItemObj::clear_has_configid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DropItemObj::clear_configid() {
  configid_ = -1;
  clear_has_configid();
}
inline ::google::protobuf::int32 DropItemObj::configid() const {
  // @@protoc_insertion_point(field_get:DropItemObj.ConfigId)
  return configid_;
}
inline void DropItemObj::set_configid(::google::protobuf::int32 value) {
  set_has_configid();
  configid_ = value;
  // @@protoc_insertion_point(field_set:DropItemObj.ConfigId)
}

// optional sint32 UId = 2 [default = -1];
inline bool DropItemObj::has_uid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DropItemObj::set_has_uid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DropItemObj::clear_has_uid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DropItemObj::clear_uid() {
  uid_ = -1;
  clear_has_uid();
}
inline ::google::protobuf::int32 DropItemObj::uid() const {
  // @@protoc_insertion_point(field_get:DropItemObj.UId)
  return uid_;
}
inline void DropItemObj::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:DropItemObj.UId)
}

// optional sint32 Num = 4 [default = 0];
inline bool DropItemObj::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DropItemObj::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DropItemObj::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DropItemObj::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 DropItemObj::num() const {
  // @@protoc_insertion_point(field_get:DropItemObj.Num)
  return num_;
}
inline void DropItemObj::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:DropItemObj.Num)
}

// optional sint32 ItemType = 5 [default = -1];
inline bool DropItemObj::has_itemtype() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DropItemObj::set_has_itemtype() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DropItemObj::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DropItemObj::clear_itemtype() {
  itemtype_ = -1;
  clear_has_itemtype();
}
inline ::google::protobuf::int32 DropItemObj::itemtype() const {
  // @@protoc_insertion_point(field_get:DropItemObj.ItemType)
  return itemtype_;
}
inline void DropItemObj::set_itemtype(::google::protobuf::int32 value) {
  set_has_itemtype();
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:DropItemObj.ItemType)
}

// optional sint32 AttrNum = 8 [default = 0];
inline bool DropItemObj::has_attrnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DropItemObj::set_has_attrnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DropItemObj::clear_has_attrnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DropItemObj::clear_attrnum() {
  attrnum_ = 0;
  clear_has_attrnum();
}
inline ::google::protobuf::int32 DropItemObj::attrnum() const {
  // @@protoc_insertion_point(field_get:DropItemObj.AttrNum)
  return attrnum_;
}
inline void DropItemObj::set_attrnum(::google::protobuf::int32 value) {
  set_has_attrnum();
  attrnum_ = value;
  // @@protoc_insertion_point(field_set:DropItemObj.AttrNum)
}

// optional sint32 MonsterObjId = 9 [default = -1];
inline bool DropItemObj::has_monsterobjid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DropItemObj::set_has_monsterobjid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DropItemObj::clear_has_monsterobjid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DropItemObj::clear_monsterobjid() {
  monsterobjid_ = -1;
  clear_has_monsterobjid();
}
inline ::google::protobuf::int32 DropItemObj::monsterobjid() const {
  // @@protoc_insertion_point(field_get:DropItemObj.MonsterObjId)
  return monsterobjid_;
}
inline void DropItemObj::set_monsterobjid(::google::protobuf::int32 value) {
  set_has_monsterobjid();
  monsterobjid_ = value;
  // @@protoc_insertion_point(field_set:DropItemObj.MonsterObjId)
}

// optional bytes PosInfo = 10;
inline bool DropItemObj::has_posinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DropItemObj::set_has_posinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DropItemObj::clear_has_posinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DropItemObj::clear_posinfo() {
  posinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_posinfo();
}
inline const ::std::string& DropItemObj::posinfo() const {
  // @@protoc_insertion_point(field_get:DropItemObj.PosInfo)
  return posinfo_.GetNoArena();
}
inline void DropItemObj::set_posinfo(const ::std::string& value) {
  set_has_posinfo();
  posinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DropItemObj.PosInfo)
}
#if LANG_CXX11
inline void DropItemObj::set_posinfo(::std::string&& value) {
  set_has_posinfo();
  posinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DropItemObj.PosInfo)
}
#endif
inline void DropItemObj::set_posinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_posinfo();
  posinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DropItemObj.PosInfo)
}
inline void DropItemObj::set_posinfo(const void* value, size_t size) {
  set_has_posinfo();
  posinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DropItemObj.PosInfo)
}
inline ::std::string* DropItemObj::mutable_posinfo() {
  set_has_posinfo();
  // @@protoc_insertion_point(field_mutable:DropItemObj.PosInfo)
  return posinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DropItemObj::release_posinfo() {
  // @@protoc_insertion_point(field_release:DropItemObj.PosInfo)
  clear_has_posinfo();
  return posinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DropItemObj::set_allocated_posinfo(::std::string* posinfo) {
  if (posinfo != NULL) {
    set_has_posinfo();
  } else {
    clear_has_posinfo();
  }
  posinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), posinfo);
  // @@protoc_insertion_point(field_set_allocated:DropItemObj.PosInfo)
}

// optional sint32 CreateTime = 11 [default = 0];
inline bool DropItemObj::has_createtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DropItemObj::set_has_createtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DropItemObj::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DropItemObj::clear_createtime() {
  createtime_ = 0;
  clear_has_createtime();
}
inline ::google::protobuf::int32 DropItemObj::createtime() const {
  // @@protoc_insertion_point(field_get:DropItemObj.CreateTime)
  return createtime_;
}
inline void DropItemObj::set_createtime(::google::protobuf::int32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:DropItemObj.CreateTime)
}

// optional bool IsPickup = 12 [default = false];
inline bool DropItemObj::has_ispickup() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DropItemObj::set_has_ispickup() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DropItemObj::clear_has_ispickup() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DropItemObj::clear_ispickup() {
  ispickup_ = false;
  clear_has_ispickup();
}
inline bool DropItemObj::ispickup() const {
  // @@protoc_insertion_point(field_get:DropItemObj.IsPickup)
  return ispickup_;
}
inline void DropItemObj::set_ispickup(bool value) {
  set_has_ispickup();
  ispickup_ = value;
  // @@protoc_insertion_point(field_set:DropItemObj.IsPickup)
}

// optional sint64 ItemId = 13 [default = -1];
inline bool DropItemObj::has_itemid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DropItemObj::set_has_itemid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DropItemObj::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DropItemObj::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(-1);
  clear_has_itemid();
}
inline ::google::protobuf::int64 DropItemObj::itemid() const {
  // @@protoc_insertion_point(field_get:DropItemObj.ItemId)
  return itemid_;
}
inline void DropItemObj::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:DropItemObj.ItemId)
}

// optional sint32 DestroyTime = 14 [default = 0];
inline bool DropItemObj::has_destroytime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DropItemObj::set_has_destroytime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DropItemObj::clear_has_destroytime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DropItemObj::clear_destroytime() {
  destroytime_ = 0;
  clear_has_destroytime();
}
inline ::google::protobuf::int32 DropItemObj::destroytime() const {
  // @@protoc_insertion_point(field_get:DropItemObj.DestroyTime)
  return destroytime_;
}
inline void DropItemObj::set_destroytime(::google::protobuf::int32 value) {
  set_has_destroytime();
  destroytime_ = value;
  // @@protoc_insertion_point(field_set:DropItemObj.DestroyTime)
}

// -------------------------------------------------------------------

// BagEquipObj

// optional sint64 ItemID = 1 [default = -1];
inline bool BagEquipObj::has_itemid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BagEquipObj::set_has_itemid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BagEquipObj::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BagEquipObj::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(-1);
  clear_has_itemid();
}
inline ::google::protobuf::int64 BagEquipObj::itemid() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.ItemID)
  return itemid_;
}
inline void BagEquipObj::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.ItemID)
}

// repeated .BagAttrIntObj BaseAttr = 2;
inline int BagEquipObj::baseattr_size() const {
  return baseattr_.size();
}
inline void BagEquipObj::clear_baseattr() {
  baseattr_.Clear();
}
inline const ::BagAttrIntObj& BagEquipObj::baseattr(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.BaseAttr)
  return baseattr_.Get(index);
}
inline ::BagAttrIntObj* BagEquipObj::mutable_baseattr(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.BaseAttr)
  return baseattr_.Mutable(index);
}
inline ::BagAttrIntObj* BagEquipObj::add_baseattr() {
  // @@protoc_insertion_point(field_add:BagEquipObj.BaseAttr)
  return baseattr_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >*
BagEquipObj::mutable_baseattr() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.BaseAttr)
  return &baseattr_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >&
BagEquipObj::baseattr() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.BaseAttr)
  return baseattr_;
}

// repeated .BagExtraAttrObj ExtraAttr = 3;
inline int BagEquipObj::extraattr_size() const {
  return extraattr_.size();
}
inline void BagEquipObj::clear_extraattr() {
  extraattr_.Clear();
}
inline const ::BagExtraAttrObj& BagEquipObj::extraattr(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.ExtraAttr)
  return extraattr_.Get(index);
}
inline ::BagExtraAttrObj* BagEquipObj::mutable_extraattr(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.ExtraAttr)
  return extraattr_.Mutable(index);
}
inline ::BagExtraAttrObj* BagEquipObj::add_extraattr() {
  // @@protoc_insertion_point(field_add:BagEquipObj.ExtraAttr)
  return extraattr_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj >*
BagEquipObj::mutable_extraattr() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.ExtraAttr)
  return &extraattr_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj >&
BagEquipObj::extraattr() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.ExtraAttr)
  return extraattr_;
}

// repeated sint32 EnhanceLv = 4;
inline int BagEquipObj::enhancelv_size() const {
  return enhancelv_.size();
}
inline void BagEquipObj::clear_enhancelv() {
  enhancelv_.Clear();
}
inline ::google::protobuf::int32 BagEquipObj::enhancelv(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.EnhanceLv)
  return enhancelv_.Get(index);
}
inline void BagEquipObj::set_enhancelv(int index, ::google::protobuf::int32 value) {
  enhancelv_.Set(index, value);
  // @@protoc_insertion_point(field_set:BagEquipObj.EnhanceLv)
}
inline void BagEquipObj::add_enhancelv(::google::protobuf::int32 value) {
  enhancelv_.Add(value);
  // @@protoc_insertion_point(field_add:BagEquipObj.EnhanceLv)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BagEquipObj::enhancelv() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.EnhanceLv)
  return enhancelv_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BagEquipObj::mutable_enhancelv() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.EnhanceLv)
  return &enhancelv_;
}

// repeated .BagExtraAttrObj EquipPolishedResult = 5;
inline int BagEquipObj::equippolishedresult_size() const {
  return equippolishedresult_.size();
}
inline void BagEquipObj::clear_equippolishedresult() {
  equippolishedresult_.Clear();
}
inline const ::BagExtraAttrObj& BagEquipObj::equippolishedresult(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.EquipPolishedResult)
  return equippolishedresult_.Get(index);
}
inline ::BagExtraAttrObj* BagEquipObj::mutable_equippolishedresult(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.EquipPolishedResult)
  return equippolishedresult_.Mutable(index);
}
inline ::BagExtraAttrObj* BagEquipObj::add_equippolishedresult() {
  // @@protoc_insertion_point(field_add:BagEquipObj.EquipPolishedResult)
  return equippolishedresult_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj >*
BagEquipObj::mutable_equippolishedresult() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.EquipPolishedResult)
  return &equippolishedresult_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj >&
BagEquipObj::equippolishedresult() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.EquipPolishedResult)
  return equippolishedresult_;
}

// optional sint32 PolishedScore = 6 [default = 0];
inline bool BagEquipObj::has_polishedscore() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagEquipObj::set_has_polishedscore() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagEquipObj::clear_has_polishedscore() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagEquipObj::clear_polishedscore() {
  polishedscore_ = 0;
  clear_has_polishedscore();
}
inline ::google::protobuf::int32 BagEquipObj::polishedscore() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.PolishedScore)
  return polishedscore_;
}
inline void BagEquipObj::set_polishedscore(::google::protobuf::int32 value) {
  set_has_polishedscore();
  polishedscore_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.PolishedScore)
}

// optional sint64 Index = 7 [default = -1];
inline bool BagEquipObj::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BagEquipObj::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BagEquipObj::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BagEquipObj::clear_index() {
  index_ = GOOGLE_LONGLONG(-1);
  clear_has_index();
}
inline ::google::protobuf::int64 BagEquipObj::index() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.Index)
  return index_;
}
inline void BagEquipObj::set_index(::google::protobuf::int64 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.Index)
}

// repeated .BagAttrIntObj InitBaseAttr = 8;
inline int BagEquipObj::initbaseattr_size() const {
  return initbaseattr_.size();
}
inline void BagEquipObj::clear_initbaseattr() {
  initbaseattr_.Clear();
}
inline const ::BagAttrIntObj& BagEquipObj::initbaseattr(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.InitBaseAttr)
  return initbaseattr_.Get(index);
}
inline ::BagAttrIntObj* BagEquipObj::mutable_initbaseattr(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.InitBaseAttr)
  return initbaseattr_.Mutable(index);
}
inline ::BagAttrIntObj* BagEquipObj::add_initbaseattr() {
  // @@protoc_insertion_point(field_add:BagEquipObj.InitBaseAttr)
  return initbaseattr_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >*
BagEquipObj::mutable_initbaseattr() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.InitBaseAttr)
  return &initbaseattr_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >&
BagEquipObj::initbaseattr() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.InitBaseAttr)
  return initbaseattr_;
}

// optional sint32 BagContainerType = 9 [default = -1];
inline bool BagEquipObj::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BagEquipObj::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BagEquipObj::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BagEquipObj::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
inline ::google::protobuf::int32 BagEquipObj::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.BagContainerType)
  return bagcontainertype_;
}
inline void BagEquipObj::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.BagContainerType)
}

// optional sint32 GridIndex = 10 [default = -1];
inline bool BagEquipObj::has_gridindex() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BagEquipObj::set_has_gridindex() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BagEquipObj::clear_has_gridindex() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BagEquipObj::clear_gridindex() {
  gridindex_ = -1;
  clear_has_gridindex();
}
inline ::google::protobuf::int32 BagEquipObj::gridindex() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.GridIndex)
  return gridindex_;
}
inline void BagEquipObj::set_gridindex(::google::protobuf::int32 value) {
  set_has_gridindex();
  gridindex_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.GridIndex)
}

// repeated .BagExtraAttrIdObj PlishedAttrId = 11;
inline int BagEquipObj::plishedattrid_size() const {
  return plishedattrid_.size();
}
inline void BagEquipObj::clear_plishedattrid() {
  plishedattrid_.Clear();
}
inline const ::BagExtraAttrIdObj& BagEquipObj::plishedattrid(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.PlishedAttrId)
  return plishedattrid_.Get(index);
}
inline ::BagExtraAttrIdObj* BagEquipObj::mutable_plishedattrid(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.PlishedAttrId)
  return plishedattrid_.Mutable(index);
}
inline ::BagExtraAttrIdObj* BagEquipObj::add_plishedattrid() {
  // @@protoc_insertion_point(field_add:BagEquipObj.PlishedAttrId)
  return plishedattrid_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BagExtraAttrIdObj >*
BagEquipObj::mutable_plishedattrid() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.PlishedAttrId)
  return &plishedattrid_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BagExtraAttrIdObj >&
BagEquipObj::plishedattrid() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.PlishedAttrId)
  return plishedattrid_;
}

// repeated .BagGemObj GemArray = 12;
inline int BagEquipObj::gemarray_size() const {
  return gemarray_.size();
}
inline void BagEquipObj::clear_gemarray() {
  gemarray_.Clear();
}
inline const ::BagGemObj& BagEquipObj::gemarray(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.GemArray)
  return gemarray_.Get(index);
}
inline ::BagGemObj* BagEquipObj::mutable_gemarray(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.GemArray)
  return gemarray_.Mutable(index);
}
inline ::BagGemObj* BagEquipObj::add_gemarray() {
  // @@protoc_insertion_point(field_add:BagEquipObj.GemArray)
  return gemarray_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BagGemObj >*
BagEquipObj::mutable_gemarray() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.GemArray)
  return &gemarray_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BagGemObj >&
BagEquipObj::gemarray() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.GemArray)
  return gemarray_;
}

// repeated .BagAttrIntObj PolishedBaseAttrResult = 13;
inline int BagEquipObj::polishedbaseattrresult_size() const {
  return polishedbaseattrresult_.size();
}
inline void BagEquipObj::clear_polishedbaseattrresult() {
  polishedbaseattrresult_.Clear();
}
inline const ::BagAttrIntObj& BagEquipObj::polishedbaseattrresult(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.PolishedBaseAttrResult)
  return polishedbaseattrresult_.Get(index);
}
inline ::BagAttrIntObj* BagEquipObj::mutable_polishedbaseattrresult(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.PolishedBaseAttrResult)
  return polishedbaseattrresult_.Mutable(index);
}
inline ::BagAttrIntObj* BagEquipObj::add_polishedbaseattrresult() {
  // @@protoc_insertion_point(field_add:BagEquipObj.PolishedBaseAttrResult)
  return polishedbaseattrresult_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >*
BagEquipObj::mutable_polishedbaseattrresult() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.PolishedBaseAttrResult)
  return &polishedbaseattrresult_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >&
BagEquipObj::polishedbaseattrresult() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.PolishedBaseAttrResult)
  return polishedbaseattrresult_;
}

// optional sint32 TemplateId = 14 [default = -1];
inline bool BagEquipObj::has_templateid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BagEquipObj::set_has_templateid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BagEquipObj::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BagEquipObj::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
inline ::google::protobuf::int32 BagEquipObj::templateid() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.TemplateId)
  return templateid_;
}
inline void BagEquipObj::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.TemplateId)
}

// optional sint32 GemSuitId = 15 [default = -1];
inline bool BagEquipObj::has_gemsuitid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BagEquipObj::set_has_gemsuitid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BagEquipObj::clear_has_gemsuitid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BagEquipObj::clear_gemsuitid() {
  gemsuitid_ = -1;
  clear_has_gemsuitid();
}
inline ::google::protobuf::int32 BagEquipObj::gemsuitid() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.GemSuitId)
  return gemsuitid_;
}
inline void BagEquipObj::set_gemsuitid(::google::protobuf::int32 value) {
  set_has_gemsuitid();
  gemsuitid_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.GemSuitId)
}

// optional sint32 EquipScore = 16 [default = 0];
inline bool BagEquipObj::has_equipscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BagEquipObj::set_has_equipscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BagEquipObj::clear_has_equipscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BagEquipObj::clear_equipscore() {
  equipscore_ = 0;
  clear_has_equipscore();
}
inline ::google::protobuf::int32 BagEquipObj::equipscore() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.EquipScore)
  return equipscore_;
}
inline void BagEquipObj::set_equipscore(::google::protobuf::int32 value) {
  set_has_equipscore();
  equipscore_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.EquipScore)
}

// optional sint32 PolishedEquipScore = 17 [default = 0];
inline bool BagEquipObj::has_polishedequipscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BagEquipObj::set_has_polishedequipscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BagEquipObj::clear_has_polishedequipscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BagEquipObj::clear_polishedequipscore() {
  polishedequipscore_ = 0;
  clear_has_polishedequipscore();
}
inline ::google::protobuf::int32 BagEquipObj::polishedequipscore() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.PolishedEquipScore)
  return polishedequipscore_;
}
inline void BagEquipObj::set_polishedequipscore(::google::protobuf::int32 value) {
  set_has_polishedequipscore();
  polishedequipscore_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.PolishedEquipScore)
}

// repeated .BagAttrIntObj BaseAttrPolishedInitAttr = 18;
inline int BagEquipObj::baseattrpolishedinitattr_size() const {
  return baseattrpolishedinitattr_.size();
}
inline void BagEquipObj::clear_baseattrpolishedinitattr() {
  baseattrpolishedinitattr_.Clear();
}
inline const ::BagAttrIntObj& BagEquipObj::baseattrpolishedinitattr(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.BaseAttrPolishedInitAttr)
  return baseattrpolishedinitattr_.Get(index);
}
inline ::BagAttrIntObj* BagEquipObj::mutable_baseattrpolishedinitattr(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.BaseAttrPolishedInitAttr)
  return baseattrpolishedinitattr_.Mutable(index);
}
inline ::BagAttrIntObj* BagEquipObj::add_baseattrpolishedinitattr() {
  // @@protoc_insertion_point(field_add:BagEquipObj.BaseAttrPolishedInitAttr)
  return baseattrpolishedinitattr_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >*
BagEquipObj::mutable_baseattrpolishedinitattr() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.BaseAttrPolishedInitAttr)
  return &baseattrpolishedinitattr_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >&
BagEquipObj::baseattrpolishedinitattr() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.BaseAttrPolishedInitAttr)
  return baseattrpolishedinitattr_;
}

// -------------------------------------------------------------------

// BagAttrIntObj

// optional sint32 AttrId = 1 [default = -1];
inline bool BagAttrIntObj::has_attrid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BagAttrIntObj::set_has_attrid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BagAttrIntObj::clear_has_attrid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BagAttrIntObj::clear_attrid() {
  attrid_ = -1;
  clear_has_attrid();
}
inline ::google::protobuf::int32 BagAttrIntObj::attrid() const {
  // @@protoc_insertion_point(field_get:BagAttrIntObj.AttrId)
  return attrid_;
}
inline void BagAttrIntObj::set_attrid(::google::protobuf::int32 value) {
  set_has_attrid();
  attrid_ = value;
  // @@protoc_insertion_point(field_set:BagAttrIntObj.AttrId)
}

// optional sint32 AttrValue = 2 [default = -1];
inline bool BagAttrIntObj::has_attrvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BagAttrIntObj::set_has_attrvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BagAttrIntObj::clear_has_attrvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BagAttrIntObj::clear_attrvalue() {
  attrvalue_ = -1;
  clear_has_attrvalue();
}
inline ::google::protobuf::int32 BagAttrIntObj::attrvalue() const {
  // @@protoc_insertion_point(field_get:BagAttrIntObj.AttrValue)
  return attrvalue_;
}
inline void BagAttrIntObj::set_attrvalue(::google::protobuf::int32 value) {
  set_has_attrvalue();
  attrvalue_ = value;
  // @@protoc_insertion_point(field_set:BagAttrIntObj.AttrValue)
}

// optional sint32 MaxAttrValue = 3 [default = -1];
inline bool BagAttrIntObj::has_maxattrvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagAttrIntObj::set_has_maxattrvalue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagAttrIntObj::clear_has_maxattrvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagAttrIntObj::clear_maxattrvalue() {
  maxattrvalue_ = -1;
  clear_has_maxattrvalue();
}
inline ::google::protobuf::int32 BagAttrIntObj::maxattrvalue() const {
  // @@protoc_insertion_point(field_get:BagAttrIntObj.MaxAttrValue)
  return maxattrvalue_;
}
inline void BagAttrIntObj::set_maxattrvalue(::google::protobuf::int32 value) {
  set_has_maxattrvalue();
  maxattrvalue_ = value;
  // @@protoc_insertion_point(field_set:BagAttrIntObj.MaxAttrValue)
}

// -------------------------------------------------------------------

// BagAttrFloatObj

// optional sint32 AttrId = 1 [default = -1];
inline bool BagAttrFloatObj::has_attrid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BagAttrFloatObj::set_has_attrid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BagAttrFloatObj::clear_has_attrid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BagAttrFloatObj::clear_attrid() {
  attrid_ = -1;
  clear_has_attrid();
}
inline ::google::protobuf::int32 BagAttrFloatObj::attrid() const {
  // @@protoc_insertion_point(field_get:BagAttrFloatObj.AttrId)
  return attrid_;
}
inline void BagAttrFloatObj::set_attrid(::google::protobuf::int32 value) {
  set_has_attrid();
  attrid_ = value;
  // @@protoc_insertion_point(field_set:BagAttrFloatObj.AttrId)
}

// optional float AttrValue = 2 [default = -1];
inline bool BagAttrFloatObj::has_attrvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BagAttrFloatObj::set_has_attrvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BagAttrFloatObj::clear_has_attrvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BagAttrFloatObj::clear_attrvalue() {
  attrvalue_ = -1;
  clear_has_attrvalue();
}
inline float BagAttrFloatObj::attrvalue() const {
  // @@protoc_insertion_point(field_get:BagAttrFloatObj.AttrValue)
  return attrvalue_;
}
inline void BagAttrFloatObj::set_attrvalue(float value) {
  set_has_attrvalue();
  attrvalue_ = value;
  // @@protoc_insertion_point(field_set:BagAttrFloatObj.AttrValue)
}

// optional sint32 Index = 3 [default = -1];
inline bool BagAttrFloatObj::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagAttrFloatObj::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagAttrFloatObj::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagAttrFloatObj::clear_index() {
  index_ = -1;
  clear_has_index();
}
inline ::google::protobuf::int32 BagAttrFloatObj::index() const {
  // @@protoc_insertion_point(field_get:BagAttrFloatObj.Index)
  return index_;
}
inline void BagAttrFloatObj::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:BagAttrFloatObj.Index)
}

// -------------------------------------------------------------------

// BagGemObj

// optional sint32 GemId = 1 [default = -1];
inline bool BagGemObj::has_gemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BagGemObj::set_has_gemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BagGemObj::clear_has_gemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BagGemObj::clear_gemid() {
  gemid_ = -1;
  clear_has_gemid();
}
inline ::google::protobuf::int32 BagGemObj::gemid() const {
  // @@protoc_insertion_point(field_get:BagGemObj.GemId)
  return gemid_;
}
inline void BagGemObj::set_gemid(::google::protobuf::int32 value) {
  set_has_gemid();
  gemid_ = value;
  // @@protoc_insertion_point(field_set:BagGemObj.GemId)
}

// optional sint32 Pos = 2 [default = -1];
inline bool BagGemObj::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BagGemObj::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BagGemObj::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BagGemObj::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
inline ::google::protobuf::int32 BagGemObj::pos() const {
  // @@protoc_insertion_point(field_get:BagGemObj.Pos)
  return pos_;
}
inline void BagGemObj::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagGemObj.Pos)
}

// optional bool IsLock = 3 [default = false];
inline bool BagGemObj::has_islock() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagGemObj::set_has_islock() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagGemObj::clear_has_islock() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagGemObj::clear_islock() {
  islock_ = false;
  clear_has_islock();
}
inline bool BagGemObj::islock() const {
  // @@protoc_insertion_point(field_get:BagGemObj.IsLock)
  return islock_;
}
inline void BagGemObj::set_islock(bool value) {
  set_has_islock();
  islock_ = value;
  // @@protoc_insertion_point(field_set:BagGemObj.IsLock)
}

// optional sint32 Level = 4 [default = -1];
inline bool BagGemObj::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BagGemObj::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BagGemObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BagGemObj::clear_level() {
  level_ = -1;
  clear_has_level();
}
inline ::google::protobuf::int32 BagGemObj::level() const {
  // @@protoc_insertion_point(field_get:BagGemObj.Level)
  return level_;
}
inline void BagGemObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:BagGemObj.Level)
}

// optional sint32 Type = 5 [default = -1];
inline bool BagGemObj::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BagGemObj::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BagGemObj::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BagGemObj::clear_type() {
  type_ = -1;
  clear_has_type();
}
inline ::google::protobuf::int32 BagGemObj::type() const {
  // @@protoc_insertion_point(field_get:BagGemObj.Type)
  return type_;
}
inline void BagGemObj::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:BagGemObj.Type)
}

// -------------------------------------------------------------------

// KeyValue2IntInt

// optional sint32 Key = 1 [default = -1];
inline bool KeyValue2IntInt::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeyValue2IntInt::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KeyValue2IntInt::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KeyValue2IntInt::clear_key() {
  key_ = -1;
  clear_has_key();
}
inline ::google::protobuf::int32 KeyValue2IntInt::key() const {
  // @@protoc_insertion_point(field_get:KeyValue2IntInt.Key)
  return key_;
}
inline void KeyValue2IntInt::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:KeyValue2IntInt.Key)
}

// optional sint32 Value = 2 [default = -1];
inline bool KeyValue2IntInt::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KeyValue2IntInt::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KeyValue2IntInt::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KeyValue2IntInt::clear_value() {
  value_ = -1;
  clear_has_value();
}
inline ::google::protobuf::int32 KeyValue2IntInt::value() const {
  // @@protoc_insertion_point(field_get:KeyValue2IntInt.Value)
  return value_;
}
inline void KeyValue2IntInt::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:KeyValue2IntInt.Value)
}

// -------------------------------------------------------------------

// KeyValue2IntBool

// optional sint32 Key = 1 [default = -1];
inline bool KeyValue2IntBool::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KeyValue2IntBool::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KeyValue2IntBool::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KeyValue2IntBool::clear_key() {
  key_ = -1;
  clear_has_key();
}
inline ::google::protobuf::int32 KeyValue2IntBool::key() const {
  // @@protoc_insertion_point(field_get:KeyValue2IntBool.Key)
  return key_;
}
inline void KeyValue2IntBool::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:KeyValue2IntBool.Key)
}

// optional bool Value = 2 [default = false];
inline bool KeyValue2IntBool::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeyValue2IntBool::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KeyValue2IntBool::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KeyValue2IntBool::clear_value() {
  value_ = false;
  clear_has_value();
}
inline bool KeyValue2IntBool::value() const {
  // @@protoc_insertion_point(field_get:KeyValue2IntBool.Value)
  return value_;
}
inline void KeyValue2IntBool::set_value(bool value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:KeyValue2IntBool.Value)
}

// -------------------------------------------------------------------

// BagExtraAttrObj

// repeated .BagAttrFloatObj ExtraAttr = 1;
inline int BagExtraAttrObj::extraattr_size() const {
  return extraattr_.size();
}
inline void BagExtraAttrObj::clear_extraattr() {
  extraattr_.Clear();
}
inline const ::BagAttrFloatObj& BagExtraAttrObj::extraattr(int index) const {
  // @@protoc_insertion_point(field_get:BagExtraAttrObj.ExtraAttr)
  return extraattr_.Get(index);
}
inline ::BagAttrFloatObj* BagExtraAttrObj::mutable_extraattr(int index) {
  // @@protoc_insertion_point(field_mutable:BagExtraAttrObj.ExtraAttr)
  return extraattr_.Mutable(index);
}
inline ::BagAttrFloatObj* BagExtraAttrObj::add_extraattr() {
  // @@protoc_insertion_point(field_add:BagExtraAttrObj.ExtraAttr)
  return extraattr_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BagAttrFloatObj >*
BagExtraAttrObj::mutable_extraattr() {
  // @@protoc_insertion_point(field_mutable_list:BagExtraAttrObj.ExtraAttr)
  return &extraattr_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BagAttrFloatObj >&
BagExtraAttrObj::extraattr() const {
  // @@protoc_insertion_point(field_list:BagExtraAttrObj.ExtraAttr)
  return extraattr_;
}

// optional sint32 Id = 2 [default = -1];
inline bool BagExtraAttrObj::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagExtraAttrObj::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagExtraAttrObj::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagExtraAttrObj::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 BagExtraAttrObj::id() const {
  // @@protoc_insertion_point(field_get:BagExtraAttrObj.Id)
  return id_;
}
inline void BagExtraAttrObj::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BagExtraAttrObj.Id)
}

// -------------------------------------------------------------------

// BagExtraAttrIdObj

// repeated sint32 AttrId = 1;
inline int BagExtraAttrIdObj::attrid_size() const {
  return attrid_.size();
}
inline void BagExtraAttrIdObj::clear_attrid() {
  attrid_.Clear();
}
inline ::google::protobuf::int32 BagExtraAttrIdObj::attrid(int index) const {
  // @@protoc_insertion_point(field_get:BagExtraAttrIdObj.AttrId)
  return attrid_.Get(index);
}
inline void BagExtraAttrIdObj::set_attrid(int index, ::google::protobuf::int32 value) {
  attrid_.Set(index, value);
  // @@protoc_insertion_point(field_set:BagExtraAttrIdObj.AttrId)
}
inline void BagExtraAttrIdObj::add_attrid(::google::protobuf::int32 value) {
  attrid_.Add(value);
  // @@protoc_insertion_point(field_add:BagExtraAttrIdObj.AttrId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BagExtraAttrIdObj::attrid() const {
  // @@protoc_insertion_point(field_list:BagExtraAttrIdObj.AttrId)
  return attrid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BagExtraAttrIdObj::mutable_attrid() {
  // @@protoc_insertion_point(field_mutable_list:BagExtraAttrIdObj.AttrId)
  return &attrid_;
}

// optional sint32 Id = 2 [default = -1];
inline bool BagExtraAttrIdObj::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagExtraAttrIdObj::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagExtraAttrIdObj::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagExtraAttrIdObj::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 BagExtraAttrIdObj::id() const {
  // @@protoc_insertion_point(field_get:BagExtraAttrIdObj.Id)
  return id_;
}
inline void BagExtraAttrIdObj::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BagExtraAttrIdObj.Id)
}

// -------------------------------------------------------------------

// ActivityNpcData

// optional sint32 DungeonId = 1 [default = -1];
inline bool ActivityNpcData::has_dungeonid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActivityNpcData::set_has_dungeonid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActivityNpcData::clear_has_dungeonid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActivityNpcData::clear_dungeonid() {
  dungeonid_ = -1;
  clear_has_dungeonid();
}
inline ::google::protobuf::int32 ActivityNpcData::dungeonid() const {
  // @@protoc_insertion_point(field_get:ActivityNpcData.DungeonId)
  return dungeonid_;
}
inline void ActivityNpcData::set_dungeonid(::google::protobuf::int32 value) {
  set_has_dungeonid();
  dungeonid_ = value;
  // @@protoc_insertion_point(field_set:ActivityNpcData.DungeonId)
}

// optional bytes PosInfo = 2;
inline bool ActivityNpcData::has_posinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityNpcData::set_has_posinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityNpcData::clear_has_posinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityNpcData::clear_posinfo() {
  posinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_posinfo();
}
inline const ::std::string& ActivityNpcData::posinfo() const {
  // @@protoc_insertion_point(field_get:ActivityNpcData.PosInfo)
  return posinfo_.GetNoArena();
}
inline void ActivityNpcData::set_posinfo(const ::std::string& value) {
  set_has_posinfo();
  posinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ActivityNpcData.PosInfo)
}
#if LANG_CXX11
inline void ActivityNpcData::set_posinfo(::std::string&& value) {
  set_has_posinfo();
  posinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ActivityNpcData.PosInfo)
}
#endif
inline void ActivityNpcData::set_posinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_posinfo();
  posinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ActivityNpcData.PosInfo)
}
inline void ActivityNpcData::set_posinfo(const void* value, size_t size) {
  set_has_posinfo();
  posinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ActivityNpcData.PosInfo)
}
inline ::std::string* ActivityNpcData::mutable_posinfo() {
  set_has_posinfo();
  // @@protoc_insertion_point(field_mutable:ActivityNpcData.PosInfo)
  return posinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActivityNpcData::release_posinfo() {
  // @@protoc_insertion_point(field_release:ActivityNpcData.PosInfo)
  clear_has_posinfo();
  return posinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActivityNpcData::set_allocated_posinfo(::std::string* posinfo) {
  if (posinfo != NULL) {
    set_has_posinfo();
  } else {
    clear_has_posinfo();
  }
  posinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), posinfo);
  // @@protoc_insertion_point(field_set_allocated:ActivityNpcData.PosInfo)
}

// optional sint32 NPCId = 3 [default = -1];
inline bool ActivityNpcData::has_npcid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActivityNpcData::set_has_npcid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActivityNpcData::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActivityNpcData::clear_npcid() {
  npcid_ = -1;
  clear_has_npcid();
}
inline ::google::protobuf::int32 ActivityNpcData::npcid() const {
  // @@protoc_insertion_point(field_get:ActivityNpcData.NPCId)
  return npcid_;
}
inline void ActivityNpcData::set_npcid(::google::protobuf::int32 value) {
  set_has_npcid();
  npcid_ = value;
  // @@protoc_insertion_point(field_set:ActivityNpcData.NPCId)
}

// optional sint32 ObjId = 4 [default = -1];
inline bool ActivityNpcData::has_objid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActivityNpcData::set_has_objid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActivityNpcData::clear_has_objid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActivityNpcData::clear_objid() {
  objid_ = -1;
  clear_has_objid();
}
inline ::google::protobuf::int32 ActivityNpcData::objid() const {
  // @@protoc_insertion_point(field_get:ActivityNpcData.ObjId)
  return objid_;
}
inline void ActivityNpcData::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:ActivityNpcData.ObjId)
}

// -------------------------------------------------------------------

// WorldBossObj

// optional sint32 DungeonId = 1 [default = -1];
inline bool WorldBossObj::has_dungeonid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldBossObj::set_has_dungeonid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldBossObj::clear_has_dungeonid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldBossObj::clear_dungeonid() {
  dungeonid_ = -1;
  clear_has_dungeonid();
}
inline ::google::protobuf::int32 WorldBossObj::dungeonid() const {
  // @@protoc_insertion_point(field_get:WorldBossObj.DungeonId)
  return dungeonid_;
}
inline void WorldBossObj::set_dungeonid(::google::protobuf::int32 value) {
  set_has_dungeonid();
  dungeonid_ = value;
  // @@protoc_insertion_point(field_set:WorldBossObj.DungeonId)
}

// optional sint32 MonsterId = 2 [default = -1];
inline bool WorldBossObj::has_monsterid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldBossObj::set_has_monsterid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldBossObj::clear_has_monsterid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldBossObj::clear_monsterid() {
  monsterid_ = -1;
  clear_has_monsterid();
}
inline ::google::protobuf::int32 WorldBossObj::monsterid() const {
  // @@protoc_insertion_point(field_get:WorldBossObj.MonsterId)
  return monsterid_;
}
inline void WorldBossObj::set_monsterid(::google::protobuf::int32 value) {
  set_has_monsterid();
  monsterid_ = value;
  // @@protoc_insertion_point(field_set:WorldBossObj.MonsterId)
}

// optional sint32 CurHP = 3 [default = -1];
inline bool WorldBossObj::has_curhp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldBossObj::set_has_curhp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldBossObj::clear_has_curhp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldBossObj::clear_curhp() {
  curhp_ = -1;
  clear_has_curhp();
}
inline ::google::protobuf::int32 WorldBossObj::curhp() const {
  // @@protoc_insertion_point(field_get:WorldBossObj.CurHP)
  return curhp_;
}
inline void WorldBossObj::set_curhp(::google::protobuf::int32 value) {
  set_has_curhp();
  curhp_ = value;
  // @@protoc_insertion_point(field_set:WorldBossObj.CurHP)
}

// optional bool IsDead = 4 [default = false];
inline bool WorldBossObj::has_isdead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldBossObj::set_has_isdead() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldBossObj::clear_has_isdead() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldBossObj::clear_isdead() {
  isdead_ = false;
  clear_has_isdead();
}
inline bool WorldBossObj::isdead() const {
  // @@protoc_insertion_point(field_get:WorldBossObj.IsDead)
  return isdead_;
}
inline void WorldBossObj::set_isdead(bool value) {
  set_has_isdead();
  isdead_ = value;
  // @@protoc_insertion_point(field_set:WorldBossObj.IsDead)
}

// optional sint32 Level = 7 [default = 1];
inline bool WorldBossObj::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorldBossObj::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorldBossObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorldBossObj::clear_level() {
  level_ = 1;
  clear_has_level();
}
inline ::google::protobuf::int32 WorldBossObj::level() const {
  // @@protoc_insertion_point(field_get:WorldBossObj.Level)
  return level_;
}
inline void WorldBossObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:WorldBossObj.Level)
}

// -------------------------------------------------------------------

// WorldBossRankObj

// optional sint32 Rank = 1 [default = 0];
inline bool WorldBossRankObj::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldBossRankObj::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldBossRankObj::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldBossRankObj::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 WorldBossRankObj::rank() const {
  // @@protoc_insertion_point(field_get:WorldBossRankObj.Rank)
  return rank_;
}
inline void WorldBossRankObj::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:WorldBossRankObj.Rank)
}

// optional sint64 UserId = 2 [default = -1];
inline bool WorldBossRankObj::has_userid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorldBossRankObj::set_has_userid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorldBossRankObj::clear_has_userid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorldBossRankObj::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
inline ::google::protobuf::int64 WorldBossRankObj::userid() const {
  // @@protoc_insertion_point(field_get:WorldBossRankObj.UserId)
  return userid_;
}
inline void WorldBossRankObj::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:WorldBossRankObj.UserId)
}

// optional string UserName = 3;
inline bool WorldBossRankObj::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldBossRankObj::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldBossRankObj::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldBossRankObj::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& WorldBossRankObj::username() const {
  // @@protoc_insertion_point(field_get:WorldBossRankObj.UserName)
  return username_.GetNoArena();
}
inline void WorldBossRankObj::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WorldBossRankObj.UserName)
}
#if LANG_CXX11
inline void WorldBossRankObj::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WorldBossRankObj.UserName)
}
#endif
inline void WorldBossRankObj::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WorldBossRankObj.UserName)
}
inline void WorldBossRankObj::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WorldBossRankObj.UserName)
}
inline ::std::string* WorldBossRankObj::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:WorldBossRankObj.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorldBossRankObj::release_username() {
  // @@protoc_insertion_point(field_release:WorldBossRankObj.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorldBossRankObj::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:WorldBossRankObj.UserName)
}

// optional sint32 Level = 5 [default = 0];
inline bool WorldBossRankObj::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldBossRankObj::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldBossRankObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldBossRankObj::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 WorldBossRankObj::level() const {
  // @@protoc_insertion_point(field_get:WorldBossRankObj.Level)
  return level_;
}
inline void WorldBossRankObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:WorldBossRankObj.Level)
}

// optional sint32 Hurt = 6 [default = 0];
inline bool WorldBossRankObj::has_hurt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldBossRankObj::set_has_hurt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldBossRankObj::clear_has_hurt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldBossRankObj::clear_hurt() {
  hurt_ = 0;
  clear_has_hurt();
}
inline ::google::protobuf::int32 WorldBossRankObj::hurt() const {
  // @@protoc_insertion_point(field_get:WorldBossRankObj.Hurt)
  return hurt_;
}
inline void WorldBossRankObj::set_hurt(::google::protobuf::int32 value) {
  set_has_hurt();
  hurt_ = value;
  // @@protoc_insertion_point(field_set:WorldBossRankObj.Hurt)
}

// -------------------------------------------------------------------

// TopPeoValue

// optional string PlanName = 1;
inline bool TopPeoValue::has_planname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TopPeoValue::set_has_planname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TopPeoValue::clear_has_planname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TopPeoValue::clear_planname() {
  planname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_planname();
}
inline const ::std::string& TopPeoValue::planname() const {
  // @@protoc_insertion_point(field_get:TopPeoValue.PlanName)
  return planname_.GetNoArena();
}
inline void TopPeoValue::set_planname(const ::std::string& value) {
  set_has_planname();
  planname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TopPeoValue.PlanName)
}
#if LANG_CXX11
inline void TopPeoValue::set_planname(::std::string&& value) {
  set_has_planname();
  planname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TopPeoValue.PlanName)
}
#endif
inline void TopPeoValue::set_planname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_planname();
  planname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TopPeoValue.PlanName)
}
inline void TopPeoValue::set_planname(const char* value, size_t size) {
  set_has_planname();
  planname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TopPeoValue.PlanName)
}
inline ::std::string* TopPeoValue::mutable_planname() {
  set_has_planname();
  // @@protoc_insertion_point(field_mutable:TopPeoValue.PlanName)
  return planname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TopPeoValue::release_planname() {
  // @@protoc_insertion_point(field_release:TopPeoValue.PlanName)
  clear_has_planname();
  return planname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TopPeoValue::set_allocated_planname(::std::string* planname) {
  if (planname != NULL) {
    set_has_planname();
  } else {
    clear_has_planname();
  }
  planname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), planname);
  // @@protoc_insertion_point(field_set_allocated:TopPeoValue.PlanName)
}

// optional sint64 UserId = 2 [default = -1];
inline bool TopPeoValue::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TopPeoValue::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TopPeoValue::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TopPeoValue::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
inline ::google::protobuf::int64 TopPeoValue::userid() const {
  // @@protoc_insertion_point(field_get:TopPeoValue.UserId)
  return userid_;
}
inline void TopPeoValue::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:TopPeoValue.UserId)
}

// optional sint32 LV = 3 [default = -1];
inline bool TopPeoValue::has_lv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TopPeoValue::set_has_lv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TopPeoValue::clear_has_lv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TopPeoValue::clear_lv() {
  lv_ = -1;
  clear_has_lv();
}
inline ::google::protobuf::int32 TopPeoValue::lv() const {
  // @@protoc_insertion_point(field_get:TopPeoValue.LV)
  return lv_;
}
inline void TopPeoValue::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:TopPeoValue.LV)
}

// optional sint32 AllRanking = 4 [default = -1];
inline bool TopPeoValue::has_allranking() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TopPeoValue::set_has_allranking() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TopPeoValue::clear_has_allranking() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TopPeoValue::clear_allranking() {
  allranking_ = -1;
  clear_has_allranking();
}
inline ::google::protobuf::int32 TopPeoValue::allranking() const {
  // @@protoc_insertion_point(field_get:TopPeoValue.AllRanking)
  return allranking_;
}
inline void TopPeoValue::set_allranking(::google::protobuf::int32 value) {
  set_has_allranking();
  allranking_ = value;
  // @@protoc_insertion_point(field_set:TopPeoValue.AllRanking)
}

// optional sint32 MyRanking = 6 [default = -1];
inline bool TopPeoValue::has_myranking() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TopPeoValue::set_has_myranking() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TopPeoValue::clear_has_myranking() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TopPeoValue::clear_myranking() {
  myranking_ = -1;
  clear_has_myranking();
}
inline ::google::protobuf::int32 TopPeoValue::myranking() const {
  // @@protoc_insertion_point(field_get:TopPeoValue.MyRanking)
  return myranking_;
}
inline void TopPeoValue::set_myranking(::google::protobuf::int32 value) {
  set_has_myranking();
  myranking_ = value;
  // @@protoc_insertion_point(field_set:TopPeoValue.MyRanking)
}

// -------------------------------------------------------------------

// OneSData

// optional sint32 Type = 1 [default = -1];
inline bool OneSData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneSData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneSData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneSData::clear_type() {
  type_ = -1;
  clear_has_type();
}
inline ::google::protobuf::int32 OneSData::type() const {
  // @@protoc_insertion_point(field_get:OneSData.Type)
  return type_;
}
inline void OneSData::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:OneSData.Type)
}

// optional sint32 SkillID = 2 [default = -1];
inline bool OneSData::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneSData::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneSData::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneSData::clear_skillid() {
  skillid_ = -1;
  clear_has_skillid();
}
inline ::google::protobuf::int32 OneSData::skillid() const {
  // @@protoc_insertion_point(field_get:OneSData.SkillID)
  return skillid_;
}
inline void OneSData::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:OneSData.SkillID)
}

// optional sint32 SkillLv = 3 [default = -1];
inline bool OneSData::has_skilllv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneSData::set_has_skilllv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneSData::clear_has_skilllv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneSData::clear_skilllv() {
  skilllv_ = -1;
  clear_has_skilllv();
}
inline ::google::protobuf::int32 OneSData::skilllv() const {
  // @@protoc_insertion_point(field_get:OneSData.SkillLv)
  return skilllv_;
}
inline void OneSData::set_skilllv(::google::protobuf::int32 value) {
  set_has_skilllv();
  skilllv_ = value;
  // @@protoc_insertion_point(field_set:OneSData.SkillLv)
}

// optional sint32 Index = 4 [default = -1];
inline bool OneSData::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneSData::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneSData::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneSData::clear_index() {
  index_ = -1;
  clear_has_index();
}
inline ::google::protobuf::int32 OneSData::index() const {
  // @@protoc_insertion_point(field_get:OneSData.Index)
  return index_;
}
inline void OneSData::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:OneSData.Index)
}

// -------------------------------------------------------------------

// ActMessage

// optional sint64 ActUserID = 1 [default = -1];
inline bool ActMessage::has_actuserid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActMessage::set_has_actuserid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActMessage::clear_has_actuserid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActMessage::clear_actuserid() {
  actuserid_ = GOOGLE_LONGLONG(-1);
  clear_has_actuserid();
}
inline ::google::protobuf::int64 ActMessage::actuserid() const {
  // @@protoc_insertion_point(field_get:ActMessage.ActUserID)
  return actuserid_;
}
inline void ActMessage::set_actuserid(::google::protobuf::int64 value) {
  set_has_actuserid();
  actuserid_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.ActUserID)
}

// optional sint64 DepUserID = 2 [default = -1];
inline bool ActMessage::has_depuserid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActMessage::set_has_depuserid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActMessage::clear_has_depuserid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActMessage::clear_depuserid() {
  depuserid_ = GOOGLE_LONGLONG(-1);
  clear_has_depuserid();
}
inline ::google::protobuf::int64 ActMessage::depuserid() const {
  // @@protoc_insertion_point(field_get:ActMessage.DepUserID)
  return depuserid_;
}
inline void ActMessage::set_depuserid(::google::protobuf::int64 value) {
  set_has_depuserid();
  depuserid_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.DepUserID)
}

// optional sint32 ActIsCopy = 3 [default = -1];
inline bool ActMessage::has_actiscopy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ActMessage::set_has_actiscopy() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ActMessage::clear_has_actiscopy() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ActMessage::clear_actiscopy() {
  actiscopy_ = -1;
  clear_has_actiscopy();
}
inline ::google::protobuf::int32 ActMessage::actiscopy() const {
  // @@protoc_insertion_point(field_get:ActMessage.ActIsCopy)
  return actiscopy_;
}
inline void ActMessage::set_actiscopy(::google::protobuf::int32 value) {
  set_has_actiscopy();
  actiscopy_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.ActIsCopy)
}

// optional string ActPlanName = 4;
inline bool ActMessage::has_actplanname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActMessage::set_has_actplanname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActMessage::clear_has_actplanname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActMessage::clear_actplanname() {
  actplanname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_actplanname();
}
inline const ::std::string& ActMessage::actplanname() const {
  // @@protoc_insertion_point(field_get:ActMessage.ActPlanName)
  return actplanname_.GetNoArena();
}
inline void ActMessage::set_actplanname(const ::std::string& value) {
  set_has_actplanname();
  actplanname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ActMessage.ActPlanName)
}
#if LANG_CXX11
inline void ActMessage::set_actplanname(::std::string&& value) {
  set_has_actplanname();
  actplanname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ActMessage.ActPlanName)
}
#endif
inline void ActMessage::set_actplanname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_actplanname();
  actplanname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ActMessage.ActPlanName)
}
inline void ActMessage::set_actplanname(const char* value, size_t size) {
  set_has_actplanname();
  actplanname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ActMessage.ActPlanName)
}
inline ::std::string* ActMessage::mutable_actplanname() {
  set_has_actplanname();
  // @@protoc_insertion_point(field_mutable:ActMessage.ActPlanName)
  return actplanname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActMessage::release_actplanname() {
  // @@protoc_insertion_point(field_release:ActMessage.ActPlanName)
  clear_has_actplanname();
  return actplanname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActMessage::set_allocated_actplanname(::std::string* actplanname) {
  if (actplanname != NULL) {
    set_has_actplanname();
  } else {
    clear_has_actplanname();
  }
  actplanname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actplanname);
  // @@protoc_insertion_point(field_set_allocated:ActMessage.ActPlanName)
}

// optional string DepPlanName = 5;
inline bool ActMessage::has_depplanname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActMessage::set_has_depplanname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActMessage::clear_has_depplanname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActMessage::clear_depplanname() {
  depplanname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_depplanname();
}
inline const ::std::string& ActMessage::depplanname() const {
  // @@protoc_insertion_point(field_get:ActMessage.DepPlanName)
  return depplanname_.GetNoArena();
}
inline void ActMessage::set_depplanname(const ::std::string& value) {
  set_has_depplanname();
  depplanname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ActMessage.DepPlanName)
}
#if LANG_CXX11
inline void ActMessage::set_depplanname(::std::string&& value) {
  set_has_depplanname();
  depplanname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ActMessage.DepPlanName)
}
#endif
inline void ActMessage::set_depplanname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_depplanname();
  depplanname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ActMessage.DepPlanName)
}
inline void ActMessage::set_depplanname(const char* value, size_t size) {
  set_has_depplanname();
  depplanname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ActMessage.DepPlanName)
}
inline ::std::string* ActMessage::mutable_depplanname() {
  set_has_depplanname();
  // @@protoc_insertion_point(field_mutable:ActMessage.DepPlanName)
  return depplanname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActMessage::release_depplanname() {
  // @@protoc_insertion_point(field_release:ActMessage.DepPlanName)
  clear_has_depplanname();
  return depplanname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActMessage::set_allocated_depplanname(::std::string* depplanname) {
  if (depplanname != NULL) {
    set_has_depplanname();
  } else {
    clear_has_depplanname();
  }
  depplanname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), depplanname);
  // @@protoc_insertion_point(field_set_allocated:ActMessage.DepPlanName)
}

// optional string Time = 6;
inline bool ActMessage::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActMessage::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActMessage::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActMessage::clear_time() {
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_time();
}
inline const ::std::string& ActMessage::time() const {
  // @@protoc_insertion_point(field_get:ActMessage.Time)
  return time_.GetNoArena();
}
inline void ActMessage::set_time(const ::std::string& value) {
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ActMessage.Time)
}
#if LANG_CXX11
inline void ActMessage::set_time(::std::string&& value) {
  set_has_time();
  time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ActMessage.Time)
}
#endif
inline void ActMessage::set_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ActMessage.Time)
}
inline void ActMessage::set_time(const char* value, size_t size) {
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ActMessage.Time)
}
inline ::std::string* ActMessage::mutable_time() {
  set_has_time();
  // @@protoc_insertion_point(field_mutable:ActMessage.Time)
  return time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActMessage::release_time() {
  // @@protoc_insertion_point(field_release:ActMessage.Time)
  clear_has_time();
  return time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActMessage::set_allocated_time(::std::string* time) {
  if (time != NULL) {
    set_has_time();
  } else {
    clear_has_time();
  }
  time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time);
  // @@protoc_insertion_point(field_set_allocated:ActMessage.Time)
}

// optional sint32 ActRanking = 7 [default = -1];
inline bool ActMessage::has_actranking() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ActMessage::set_has_actranking() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ActMessage::clear_has_actranking() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ActMessage::clear_actranking() {
  actranking_ = -1;
  clear_has_actranking();
}
inline ::google::protobuf::int32 ActMessage::actranking() const {
  // @@protoc_insertion_point(field_get:ActMessage.ActRanking)
  return actranking_;
}
inline void ActMessage::set_actranking(::google::protobuf::int32 value) {
  set_has_actranking();
  actranking_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.ActRanking)
}

// optional sint32 DepRanking = 8 [default = -1];
inline bool ActMessage::has_depranking() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ActMessage::set_has_depranking() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ActMessage::clear_has_depranking() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ActMessage::clear_depranking() {
  depranking_ = -1;
  clear_has_depranking();
}
inline ::google::protobuf::int32 ActMessage::depranking() const {
  // @@protoc_insertion_point(field_get:ActMessage.DepRanking)
  return depranking_;
}
inline void ActMessage::set_depranking(::google::protobuf::int32 value) {
  set_has_depranking();
  depranking_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.DepRanking)
}

// optional sint64 WinUserID = 9 [default = -1];
inline bool ActMessage::has_winuserid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ActMessage::set_has_winuserid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ActMessage::clear_has_winuserid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ActMessage::clear_winuserid() {
  winuserid_ = GOOGLE_LONGLONG(-1);
  clear_has_winuserid();
}
inline ::google::protobuf::int64 ActMessage::winuserid() const {
  // @@protoc_insertion_point(field_get:ActMessage.WinUserID)
  return winuserid_;
}
inline void ActMessage::set_winuserid(::google::protobuf::int64 value) {
  set_has_winuserid();
  winuserid_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.WinUserID)
}

// optional sint32 DepIsCopy = 10 [default = -1];
inline bool ActMessage::has_depiscopy() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ActMessage::set_has_depiscopy() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ActMessage::clear_has_depiscopy() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ActMessage::clear_depiscopy() {
  depiscopy_ = -1;
  clear_has_depiscopy();
}
inline ::google::protobuf::int32 ActMessage::depiscopy() const {
  // @@protoc_insertion_point(field_get:ActMessage.DepIsCopy)
  return depiscopy_;
}
inline void ActMessage::set_depiscopy(::google::protobuf::int32 value) {
  set_has_depiscopy();
  depiscopy_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.DepIsCopy)
}

// optional sint32 ActJobID = 11 [default = -1];
inline bool ActMessage::has_actjobid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ActMessage::set_has_actjobid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ActMessage::clear_has_actjobid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ActMessage::clear_actjobid() {
  actjobid_ = -1;
  clear_has_actjobid();
}
inline ::google::protobuf::int32 ActMessage::actjobid() const {
  // @@protoc_insertion_point(field_get:ActMessage.ActJobID)
  return actjobid_;
}
inline void ActMessage::set_actjobid(::google::protobuf::int32 value) {
  set_has_actjobid();
  actjobid_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.ActJobID)
}

// optional sint32 DepJobID = 12 [default = -1];
inline bool ActMessage::has_depjobid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ActMessage::set_has_depjobid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ActMessage::clear_has_depjobid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ActMessage::clear_depjobid() {
  depjobid_ = -1;
  clear_has_depjobid();
}
inline ::google::protobuf::int32 ActMessage::depjobid() const {
  // @@protoc_insertion_point(field_get:ActMessage.DepJobID)
  return depjobid_;
}
inline void ActMessage::set_depjobid(::google::protobuf::int32 value) {
  set_has_depjobid();
  depjobid_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.DepJobID)
}

// optional sint32 ActChangeSource = 13 [default = -1];
inline bool ActMessage::has_actchangesource() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ActMessage::set_has_actchangesource() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ActMessage::clear_has_actchangesource() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ActMessage::clear_actchangesource() {
  actchangesource_ = -1;
  clear_has_actchangesource();
}
inline ::google::protobuf::int32 ActMessage::actchangesource() const {
  // @@protoc_insertion_point(field_get:ActMessage.ActChangeSource)
  return actchangesource_;
}
inline void ActMessage::set_actchangesource(::google::protobuf::int32 value) {
  set_has_actchangesource();
  actchangesource_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.ActChangeSource)
}

// optional sint32 DepChangeSource = 14 [default = -1];
inline bool ActMessage::has_depchangesource() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ActMessage::set_has_depchangesource() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ActMessage::clear_has_depchangesource() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ActMessage::clear_depchangesource() {
  depchangesource_ = -1;
  clear_has_depchangesource();
}
inline ::google::protobuf::int32 ActMessage::depchangesource() const {
  // @@protoc_insertion_point(field_get:ActMessage.DepChangeSource)
  return depchangesource_;
}
inline void ActMessage::set_depchangesource(::google::protobuf::int32 value) {
  set_has_depchangesource();
  depchangesource_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.DepChangeSource)
}

// optional sint32 ActChangeOver = 15 [default = -1];
inline bool ActMessage::has_actchangeover() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ActMessage::set_has_actchangeover() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ActMessage::clear_has_actchangeover() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ActMessage::clear_actchangeover() {
  actchangeover_ = -1;
  clear_has_actchangeover();
}
inline ::google::protobuf::int32 ActMessage::actchangeover() const {
  // @@protoc_insertion_point(field_get:ActMessage.ActChangeOver)
  return actchangeover_;
}
inline void ActMessage::set_actchangeover(::google::protobuf::int32 value) {
  set_has_actchangeover();
  actchangeover_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.ActChangeOver)
}

// optional sint32 DepChangeOver = 16 [default = -1];
inline bool ActMessage::has_depchangeover() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ActMessage::set_has_depchangeover() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ActMessage::clear_has_depchangeover() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ActMessage::clear_depchangeover() {
  depchangeover_ = -1;
  clear_has_depchangeover();
}
inline ::google::protobuf::int32 ActMessage::depchangeover() const {
  // @@protoc_insertion_point(field_get:ActMessage.DepChangeOver)
  return depchangeover_;
}
inline void ActMessage::set_depchangeover(::google::protobuf::int32 value) {
  set_has_depchangeover();
  depchangeover_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.DepChangeOver)
}

// -------------------------------------------------------------------

// TopJobMess

// optional sint32 JobID = 1 [default = -1];
inline bool TopJobMess::has_jobid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TopJobMess::set_has_jobid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TopJobMess::clear_has_jobid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TopJobMess::clear_jobid() {
  jobid_ = -1;
  clear_has_jobid();
}
inline ::google::protobuf::int32 TopJobMess::jobid() const {
  // @@protoc_insertion_point(field_get:TopJobMess.JobID)
  return jobid_;
}
inline void TopJobMess::set_jobid(::google::protobuf::int32 value) {
  set_has_jobid();
  jobid_ = value;
  // @@protoc_insertion_point(field_set:TopJobMess.JobID)
}

// repeated .TopPeoValue Top = 2;
inline int TopJobMess::top_size() const {
  return top_.size();
}
inline void TopJobMess::clear_top() {
  top_.Clear();
}
inline const ::TopPeoValue& TopJobMess::top(int index) const {
  // @@protoc_insertion_point(field_get:TopJobMess.Top)
  return top_.Get(index);
}
inline ::TopPeoValue* TopJobMess::mutable_top(int index) {
  // @@protoc_insertion_point(field_mutable:TopJobMess.Top)
  return top_.Mutable(index);
}
inline ::TopPeoValue* TopJobMess::add_top() {
  // @@protoc_insertion_point(field_add:TopJobMess.Top)
  return top_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::TopPeoValue >*
TopJobMess::mutable_top() {
  // @@protoc_insertion_point(field_mutable_list:TopJobMess.Top)
  return &top_;
}
inline const ::google::protobuf::RepeatedPtrField< ::TopPeoValue >&
TopJobMess::top() const {
  // @@protoc_insertion_point(field_list:TopJobMess.Top)
  return top_;
}

// -------------------------------------------------------------------

// TopMess

// optional sint32 MyType = 1 [default = -1];
inline bool TopMess::has_mytype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TopMess::set_has_mytype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TopMess::clear_has_mytype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TopMess::clear_mytype() {
  mytype_ = -1;
  clear_has_mytype();
}
inline ::google::protobuf::int32 TopMess::mytype() const {
  // @@protoc_insertion_point(field_get:TopMess.MyType)
  return mytype_;
}
inline void TopMess::set_mytype(::google::protobuf::int32 value) {
  set_has_mytype();
  mytype_ = value;
  // @@protoc_insertion_point(field_set:TopMess.MyType)
}

// repeated .TopJobMess Top = 2;
inline int TopMess::top_size() const {
  return top_.size();
}
inline void TopMess::clear_top() {
  top_.Clear();
}
inline const ::TopJobMess& TopMess::top(int index) const {
  // @@protoc_insertion_point(field_get:TopMess.Top)
  return top_.Get(index);
}
inline ::TopJobMess* TopMess::mutable_top(int index) {
  // @@protoc_insertion_point(field_mutable:TopMess.Top)
  return top_.Mutable(index);
}
inline ::TopJobMess* TopMess::add_top() {
  // @@protoc_insertion_point(field_add:TopMess.Top)
  return top_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::TopJobMess >*
TopMess::mutable_top() {
  // @@protoc_insertion_point(field_mutable_list:TopMess.Top)
  return &top_;
}
inline const ::google::protobuf::RepeatedPtrField< ::TopJobMess >&
TopMess::top() const {
  // @@protoc_insertion_point(field_list:TopMess.Top)
  return top_;
}

// -------------------------------------------------------------------

// TimeTop

// optional sint64 ID = 1 [default = -1];
inline bool TimeTop::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TimeTop::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TimeTop::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TimeTop::clear_id() {
  id_ = GOOGLE_LONGLONG(-1);
  clear_has_id();
}
inline ::google::protobuf::int64 TimeTop::id() const {
  // @@protoc_insertion_point(field_get:TimeTop.ID)
  return id_;
}
inline void TimeTop::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TimeTop.ID)
}

// optional sint32 Ranking = 2 [default = -1];
inline bool TimeTop::has_ranking() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TimeTop::set_has_ranking() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TimeTop::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TimeTop::clear_ranking() {
  ranking_ = -1;
  clear_has_ranking();
}
inline ::google::protobuf::int32 TimeTop::ranking() const {
  // @@protoc_insertion_point(field_get:TimeTop.Ranking)
  return ranking_;
}
inline void TimeTop::set_ranking(::google::protobuf::int32 value) {
  set_has_ranking();
  ranking_ = value;
  // @@protoc_insertion_point(field_set:TimeTop.Ranking)
}

// -------------------------------------------------------------------

// MailHeadObj

// optional sint64 UId = 1 [default = -1];
inline bool MailHeadObj::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailHeadObj::set_has_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailHeadObj::clear_has_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailHeadObj::clear_uid() {
  uid_ = GOOGLE_LONGLONG(-1);
  clear_has_uid();
}
inline ::google::protobuf::int64 MailHeadObj::uid() const {
  // @@protoc_insertion_point(field_get:MailHeadObj.UId)
  return uid_;
}
inline void MailHeadObj::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:MailHeadObj.UId)
}

// optional string TiTleString = 2;
inline bool MailHeadObj::has_titlestring() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailHeadObj::set_has_titlestring() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailHeadObj::clear_has_titlestring() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailHeadObj::clear_titlestring() {
  titlestring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_titlestring();
}
inline const ::std::string& MailHeadObj::titlestring() const {
  // @@protoc_insertion_point(field_get:MailHeadObj.TiTleString)
  return titlestring_.GetNoArena();
}
inline void MailHeadObj::set_titlestring(const ::std::string& value) {
  set_has_titlestring();
  titlestring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MailHeadObj.TiTleString)
}
#if LANG_CXX11
inline void MailHeadObj::set_titlestring(::std::string&& value) {
  set_has_titlestring();
  titlestring_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MailHeadObj.TiTleString)
}
#endif
inline void MailHeadObj::set_titlestring(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_titlestring();
  titlestring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MailHeadObj.TiTleString)
}
inline void MailHeadObj::set_titlestring(const char* value, size_t size) {
  set_has_titlestring();
  titlestring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MailHeadObj.TiTleString)
}
inline ::std::string* MailHeadObj::mutable_titlestring() {
  set_has_titlestring();
  // @@protoc_insertion_point(field_mutable:MailHeadObj.TiTleString)
  return titlestring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailHeadObj::release_titlestring() {
  // @@protoc_insertion_point(field_release:MailHeadObj.TiTleString)
  clear_has_titlestring();
  return titlestring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailHeadObj::set_allocated_titlestring(::std::string* titlestring) {
  if (titlestring != NULL) {
    set_has_titlestring();
  } else {
    clear_has_titlestring();
  }
  titlestring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), titlestring);
  // @@protoc_insertion_point(field_set_allocated:MailHeadObj.TiTleString)
}

// optional sint32 CreateTime = 3 [default = -1];
inline bool MailHeadObj::has_createtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailHeadObj::set_has_createtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailHeadObj::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailHeadObj::clear_createtime() {
  createtime_ = -1;
  clear_has_createtime();
}
inline ::google::protobuf::int32 MailHeadObj::createtime() const {
  // @@protoc_insertion_point(field_get:MailHeadObj.CreateTime)
  return createtime_;
}
inline void MailHeadObj::set_createtime(::google::protobuf::int32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:MailHeadObj.CreateTime)
}

// optional sint32 Type = 4 [default = -1];
inline bool MailHeadObj::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailHeadObj::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailHeadObj::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailHeadObj::clear_type() {
  type_ = -1;
  clear_has_type();
}
inline ::google::protobuf::int32 MailHeadObj::type() const {
  // @@protoc_insertion_point(field_get:MailHeadObj.Type)
  return type_;
}
inline void MailHeadObj::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:MailHeadObj.Type)
}

// optional sint32 Status = 5 [default = 0];
inline bool MailHeadObj::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailHeadObj::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailHeadObj::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailHeadObj::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 MailHeadObj::status() const {
  // @@protoc_insertion_point(field_get:MailHeadObj.Status)
  return status_;
}
inline void MailHeadObj::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:MailHeadObj.Status)
}

// optional bool IsAutoDel = 6 [default = false];
inline bool MailHeadObj::has_isautodel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailHeadObj::set_has_isautodel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailHeadObj::clear_has_isautodel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailHeadObj::clear_isautodel() {
  isautodel_ = false;
  clear_has_isautodel();
}
inline bool MailHeadObj::isautodel() const {
  // @@protoc_insertion_point(field_get:MailHeadObj.IsAutoDel)
  return isautodel_;
}
inline void MailHeadObj::set_isautodel(bool value) {
  set_has_isautodel();
  isautodel_ = value;
  // @@protoc_insertion_point(field_set:MailHeadObj.IsAutoDel)
}

// optional sint64 GUId = 8 [default = -1];
inline bool MailHeadObj::has_guid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MailHeadObj::set_has_guid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MailHeadObj::clear_has_guid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MailHeadObj::clear_guid() {
  guid_ = GOOGLE_LONGLONG(-1);
  clear_has_guid();
}
inline ::google::protobuf::int64 MailHeadObj::guid() const {
  // @@protoc_insertion_point(field_get:MailHeadObj.GUId)
  return guid_;
}
inline void MailHeadObj::set_guid(::google::protobuf::int64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:MailHeadObj.GUId)
}

// -------------------------------------------------------------------

// MailBodyObj

// optional string Text = 2;
inline bool MailBodyObj::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailBodyObj::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailBodyObj::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailBodyObj::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& MailBodyObj::text() const {
  // @@protoc_insertion_point(field_get:MailBodyObj.Text)
  return text_.GetNoArena();
}
inline void MailBodyObj::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MailBodyObj.Text)
}
#if LANG_CXX11
inline void MailBodyObj::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MailBodyObj.Text)
}
#endif
inline void MailBodyObj::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MailBodyObj.Text)
}
inline void MailBodyObj::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MailBodyObj.Text)
}
inline ::std::string* MailBodyObj::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:MailBodyObj.Text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailBodyObj::release_text() {
  // @@protoc_insertion_point(field_release:MailBodyObj.Text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailBodyObj::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:MailBodyObj.Text)
}

// repeated .ChatHyperLink HyperlinkList = 4;
inline int MailBodyObj::hyperlinklist_size() const {
  return hyperlinklist_.size();
}
inline void MailBodyObj::clear_hyperlinklist() {
  hyperlinklist_.Clear();
}
inline const ::ChatHyperLink& MailBodyObj::hyperlinklist(int index) const {
  // @@protoc_insertion_point(field_get:MailBodyObj.HyperlinkList)
  return hyperlinklist_.Get(index);
}
inline ::ChatHyperLink* MailBodyObj::mutable_hyperlinklist(int index) {
  // @@protoc_insertion_point(field_mutable:MailBodyObj.HyperlinkList)
  return hyperlinklist_.Mutable(index);
}
inline ::ChatHyperLink* MailBodyObj::add_hyperlinklist() {
  // @@protoc_insertion_point(field_add:MailBodyObj.HyperlinkList)
  return hyperlinklist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ChatHyperLink >*
MailBodyObj::mutable_hyperlinklist() {
  // @@protoc_insertion_point(field_mutable_list:MailBodyObj.HyperlinkList)
  return &hyperlinklist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ChatHyperLink >&
MailBodyObj::hyperlinklist() const {
  // @@protoc_insertion_point(field_list:MailBodyObj.HyperlinkList)
  return hyperlinklist_;
}

// repeated .KeyValue2IntInt ItemList = 5;
inline int MailBodyObj::itemlist_size() const {
  return itemlist_.size();
}
inline void MailBodyObj::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::KeyValue2IntInt& MailBodyObj::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:MailBodyObj.ItemList)
  return itemlist_.Get(index);
}
inline ::KeyValue2IntInt* MailBodyObj::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:MailBodyObj.ItemList)
  return itemlist_.Mutable(index);
}
inline ::KeyValue2IntInt* MailBodyObj::add_itemlist() {
  // @@protoc_insertion_point(field_add:MailBodyObj.ItemList)
  return itemlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::KeyValue2IntInt >*
MailBodyObj::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:MailBodyObj.ItemList)
  return &itemlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::KeyValue2IntInt >&
MailBodyObj::itemlist() const {
  // @@protoc_insertion_point(field_list:MailBodyObj.ItemList)
  return itemlist_;
}

// optional sint32 Status = 6 [default = 0];
inline bool MailBodyObj::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailBodyObj::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailBodyObj::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailBodyObj::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 MailBodyObj::status() const {
  // @@protoc_insertion_point(field_get:MailBodyObj.Status)
  return status_;
}
inline void MailBodyObj::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:MailBodyObj.Status)
}

// -------------------------------------------------------------------

// ChatHyperLink

// optional sint64 Uid = 1 [default = -1];
inline bool ChatHyperLink::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChatHyperLink::set_has_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChatHyperLink::clear_has_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChatHyperLink::clear_uid() {
  uid_ = GOOGLE_LONGLONG(-1);
  clear_has_uid();
}
inline ::google::protobuf::int64 ChatHyperLink::uid() const {
  // @@protoc_insertion_point(field_get:ChatHyperLink.Uid)
  return uid_;
}
inline void ChatHyperLink::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ChatHyperLink.Uid)
}

// optional sint32 ConfigID = 2 [default = -1];
inline bool ChatHyperLink::has_configid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChatHyperLink::set_has_configid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChatHyperLink::clear_has_configid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChatHyperLink::clear_configid() {
  configid_ = -1;
  clear_has_configid();
}
inline ::google::protobuf::int32 ChatHyperLink::configid() const {
  // @@protoc_insertion_point(field_get:ChatHyperLink.ConfigID)
  return configid_;
}
inline void ChatHyperLink::set_configid(::google::protobuf::int32 value) {
  set_has_configid();
  configid_ = value;
  // @@protoc_insertion_point(field_set:ChatHyperLink.ConfigID)
}

// optional sint32 Type = 3 [default = -1];
inline bool ChatHyperLink::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChatHyperLink::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChatHyperLink::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChatHyperLink::clear_type() {
  type_ = -1;
  clear_has_type();
}
inline ::google::protobuf::int32 ChatHyperLink::type() const {
  // @@protoc_insertion_point(field_get:ChatHyperLink.Type)
  return type_;
}
inline void ChatHyperLink::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ChatHyperLink.Type)
}

// optional string Text = 4;
inline bool ChatHyperLink::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatHyperLink::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatHyperLink::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatHyperLink::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& ChatHyperLink::text() const {
  // @@protoc_insertion_point(field_get:ChatHyperLink.Text)
  return text_.GetNoArena();
}
inline void ChatHyperLink::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatHyperLink.Text)
}
#if LANG_CXX11
inline void ChatHyperLink::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatHyperLink.Text)
}
#endif
inline void ChatHyperLink::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatHyperLink.Text)
}
inline void ChatHyperLink::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatHyperLink.Text)
}
inline ::std::string* ChatHyperLink::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ChatHyperLink.Text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatHyperLink::release_text() {
  // @@protoc_insertion_point(field_release:ChatHyperLink.Text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatHyperLink::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ChatHyperLink.Text)
}

// optional sint64 Userid = 5 [default = -1];
inline bool ChatHyperLink::has_userid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ChatHyperLink::set_has_userid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ChatHyperLink::clear_has_userid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ChatHyperLink::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
inline ::google::protobuf::int64 ChatHyperLink::userid() const {
  // @@protoc_insertion_point(field_get:ChatHyperLink.Userid)
  return userid_;
}
inline void ChatHyperLink::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:ChatHyperLink.Userid)
}

// optional sint32 FunId = 6 [default = -1];
inline bool ChatHyperLink::has_funid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatHyperLink::set_has_funid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatHyperLink::clear_has_funid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatHyperLink::clear_funid() {
  funid_ = -1;
  clear_has_funid();
}
inline ::google::protobuf::int32 ChatHyperLink::funid() const {
  // @@protoc_insertion_point(field_get:ChatHyperLink.FunId)
  return funid_;
}
inline void ChatHyperLink::set_funid(::google::protobuf::int32 value) {
  set_has_funid();
  funid_ = value;
  // @@protoc_insertion_point(field_set:ChatHyperLink.FunId)
}

// optional bytes FunParam = 7;
inline bool ChatHyperLink::has_funparam() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatHyperLink::set_has_funparam() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatHyperLink::clear_has_funparam() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatHyperLink::clear_funparam() {
  funparam_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_funparam();
}
inline const ::std::string& ChatHyperLink::funparam() const {
  // @@protoc_insertion_point(field_get:ChatHyperLink.FunParam)
  return funparam_.GetNoArena();
}
inline void ChatHyperLink::set_funparam(const ::std::string& value) {
  set_has_funparam();
  funparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatHyperLink.FunParam)
}
#if LANG_CXX11
inline void ChatHyperLink::set_funparam(::std::string&& value) {
  set_has_funparam();
  funparam_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatHyperLink.FunParam)
}
#endif
inline void ChatHyperLink::set_funparam(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_funparam();
  funparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatHyperLink.FunParam)
}
inline void ChatHyperLink::set_funparam(const void* value, size_t size) {
  set_has_funparam();
  funparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatHyperLink.FunParam)
}
inline ::std::string* ChatHyperLink::mutable_funparam() {
  set_has_funparam();
  // @@protoc_insertion_point(field_mutable:ChatHyperLink.FunParam)
  return funparam_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatHyperLink::release_funparam() {
  // @@protoc_insertion_point(field_release:ChatHyperLink.FunParam)
  clear_has_funparam();
  return funparam_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatHyperLink::set_allocated_funparam(::std::string* funparam) {
  if (funparam != NULL) {
    set_has_funparam();
  } else {
    clear_has_funparam();
  }
  funparam_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), funparam);
  // @@protoc_insertion_point(field_set_allocated:ChatHyperLink.FunParam)
}

// -------------------------------------------------------------------

// ChatObj

// optional .ChatMsgObj ChatMsg = 1;
inline bool ChatObj::has_chatmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatObj::set_has_chatmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatObj::clear_has_chatmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatObj::clear_chatmsg() {
  if (chatmsg_ != NULL) chatmsg_->::ChatMsgObj::Clear();
  clear_has_chatmsg();
}
inline const ::ChatMsgObj& ChatObj::chatmsg() const {
  const ::ChatMsgObj* p = chatmsg_;
  // @@protoc_insertion_point(field_get:ChatObj.ChatMsg)
  return p != NULL ? *p : *reinterpret_cast<const ::ChatMsgObj*>(
      &::_ChatMsgObj_default_instance_);
}
inline ::ChatMsgObj* ChatObj::mutable_chatmsg() {
  set_has_chatmsg();
  if (chatmsg_ == NULL) {
    chatmsg_ = new ::ChatMsgObj;
  }
  // @@protoc_insertion_point(field_mutable:ChatObj.ChatMsg)
  return chatmsg_;
}
inline ::ChatMsgObj* ChatObj::release_chatmsg() {
  // @@protoc_insertion_point(field_release:ChatObj.ChatMsg)
  clear_has_chatmsg();
  ::ChatMsgObj* temp = chatmsg_;
  chatmsg_ = NULL;
  return temp;
}
inline void ChatObj::set_allocated_chatmsg(::ChatMsgObj* chatmsg) {
  delete chatmsg_;
  chatmsg_ = chatmsg;
  if (chatmsg) {
    set_has_chatmsg();
  } else {
    clear_has_chatmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:ChatObj.ChatMsg)
}

// optional .ChatUserInfoObj UserInfo = 2;
inline bool ChatObj::has_userinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatObj::set_has_userinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatObj::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatObj::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::ChatUserInfoObj::Clear();
  clear_has_userinfo();
}
inline const ::ChatUserInfoObj& ChatObj::userinfo() const {
  const ::ChatUserInfoObj* p = userinfo_;
  // @@protoc_insertion_point(field_get:ChatObj.UserInfo)
  return p != NULL ? *p : *reinterpret_cast<const ::ChatUserInfoObj*>(
      &::_ChatUserInfoObj_default_instance_);
}
inline ::ChatUserInfoObj* ChatObj::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) {
    userinfo_ = new ::ChatUserInfoObj;
  }
  // @@protoc_insertion_point(field_mutable:ChatObj.UserInfo)
  return userinfo_;
}
inline ::ChatUserInfoObj* ChatObj::release_userinfo() {
  // @@protoc_insertion_point(field_release:ChatObj.UserInfo)
  clear_has_userinfo();
  ::ChatUserInfoObj* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void ChatObj::set_allocated_userinfo(::ChatUserInfoObj* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:ChatObj.UserInfo)
}

// -------------------------------------------------------------------

// ChatMsgObj

// optional sint32 Channel = 1 [default = 0];
inline bool ChatMsgObj::has_channel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChatMsgObj::set_has_channel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChatMsgObj::clear_has_channel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChatMsgObj::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
inline ::google::protobuf::int32 ChatMsgObj::channel() const {
  // @@protoc_insertion_point(field_get:ChatMsgObj.Channel)
  return channel_;
}
inline void ChatMsgObj::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:ChatMsgObj.Channel)
}

// optional string Text = 2;
inline bool ChatMsgObj::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatMsgObj::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatMsgObj::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatMsgObj::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& ChatMsgObj::text() const {
  // @@protoc_insertion_point(field_get:ChatMsgObj.Text)
  return text_.GetNoArena();
}
inline void ChatMsgObj::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatMsgObj.Text)
}
#if LANG_CXX11
inline void ChatMsgObj::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatMsgObj.Text)
}
#endif
inline void ChatMsgObj::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatMsgObj.Text)
}
inline void ChatMsgObj::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatMsgObj.Text)
}
inline ::std::string* ChatMsgObj::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ChatMsgObj.Text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatMsgObj::release_text() {
  // @@protoc_insertion_point(field_release:ChatMsgObj.Text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatMsgObj::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ChatMsgObj.Text)
}

// optional bytes Voice = 3;
inline bool ChatMsgObj::has_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatMsgObj::set_has_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatMsgObj::clear_has_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatMsgObj::clear_voice() {
  voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_voice();
}
inline const ::std::string& ChatMsgObj::voice() const {
  // @@protoc_insertion_point(field_get:ChatMsgObj.Voice)
  return voice_.GetNoArena();
}
inline void ChatMsgObj::set_voice(const ::std::string& value) {
  set_has_voice();
  voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatMsgObj.Voice)
}
#if LANG_CXX11
inline void ChatMsgObj::set_voice(::std::string&& value) {
  set_has_voice();
  voice_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatMsgObj.Voice)
}
#endif
inline void ChatMsgObj::set_voice(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_voice();
  voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatMsgObj.Voice)
}
inline void ChatMsgObj::set_voice(const void* value, size_t size) {
  set_has_voice();
  voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatMsgObj.Voice)
}
inline ::std::string* ChatMsgObj::mutable_voice() {
  set_has_voice();
  // @@protoc_insertion_point(field_mutable:ChatMsgObj.Voice)
  return voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatMsgObj::release_voice() {
  // @@protoc_insertion_point(field_release:ChatMsgObj.Voice)
  clear_has_voice();
  return voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatMsgObj::set_allocated_voice(::std::string* voice) {
  if (voice != NULL) {
    set_has_voice();
  } else {
    clear_has_voice();
  }
  voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voice);
  // @@protoc_insertion_point(field_set_allocated:ChatMsgObj.Voice)
}

// optional sint64 TargetUserId = 4 [default = -1];
inline bool ChatMsgObj::has_targetuserid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChatMsgObj::set_has_targetuserid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChatMsgObj::clear_has_targetuserid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChatMsgObj::clear_targetuserid() {
  targetuserid_ = GOOGLE_LONGLONG(-1);
  clear_has_targetuserid();
}
inline ::google::protobuf::int64 ChatMsgObj::targetuserid() const {
  // @@protoc_insertion_point(field_get:ChatMsgObj.TargetUserId)
  return targetuserid_;
}
inline void ChatMsgObj::set_targetuserid(::google::protobuf::int64 value) {
  set_has_targetuserid();
  targetuserid_ = value;
  // @@protoc_insertion_point(field_set:ChatMsgObj.TargetUserId)
}

// optional bytes URL = 5;
inline bool ChatMsgObj::has_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatMsgObj::set_has_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatMsgObj::clear_has_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatMsgObj::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& ChatMsgObj::url() const {
  // @@protoc_insertion_point(field_get:ChatMsgObj.URL)
  return url_.GetNoArena();
}
inline void ChatMsgObj::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatMsgObj.URL)
}
#if LANG_CXX11
inline void ChatMsgObj::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatMsgObj.URL)
}
#endif
inline void ChatMsgObj::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatMsgObj.URL)
}
inline void ChatMsgObj::set_url(const void* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatMsgObj.URL)
}
inline ::std::string* ChatMsgObj::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:ChatMsgObj.URL)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatMsgObj::release_url() {
  // @@protoc_insertion_point(field_release:ChatMsgObj.URL)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatMsgObj::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:ChatMsgObj.URL)
}

// optional sint32 ChildChannel = 6 [default = -1];
inline bool ChatMsgObj::has_childchannel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChatMsgObj::set_has_childchannel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChatMsgObj::clear_has_childchannel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChatMsgObj::clear_childchannel() {
  childchannel_ = -1;
  clear_has_childchannel();
}
inline ::google::protobuf::int32 ChatMsgObj::childchannel() const {
  // @@protoc_insertion_point(field_get:ChatMsgObj.ChildChannel)
  return childchannel_;
}
inline void ChatMsgObj::set_childchannel(::google::protobuf::int32 value) {
  set_has_childchannel();
  childchannel_ = value;
  // @@protoc_insertion_point(field_set:ChatMsgObj.ChildChannel)
}

// -------------------------------------------------------------------

// ChatUserInfoObj

// optional sint64 UserId = 1 [default = -1];
inline bool ChatUserInfoObj::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatUserInfoObj::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatUserInfoObj::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatUserInfoObj::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
inline ::google::protobuf::int64 ChatUserInfoObj::userid() const {
  // @@protoc_insertion_point(field_get:ChatUserInfoObj.UserId)
  return userid_;
}
inline void ChatUserInfoObj::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:ChatUserInfoObj.UserId)
}

// optional string UserName = 2;
inline bool ChatUserInfoObj::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatUserInfoObj::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatUserInfoObj::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatUserInfoObj::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& ChatUserInfoObj::username() const {
  // @@protoc_insertion_point(field_get:ChatUserInfoObj.UserName)
  return username_.GetNoArena();
}
inline void ChatUserInfoObj::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatUserInfoObj.UserName)
}
#if LANG_CXX11
inline void ChatUserInfoObj::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatUserInfoObj.UserName)
}
#endif
inline void ChatUserInfoObj::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatUserInfoObj.UserName)
}
inline void ChatUserInfoObj::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatUserInfoObj.UserName)
}
inline ::std::string* ChatUserInfoObj::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:ChatUserInfoObj.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatUserInfoObj::release_username() {
  // @@protoc_insertion_point(field_release:ChatUserInfoObj.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatUserInfoObj::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:ChatUserInfoObj.UserName)
}

// optional sint32 Prof = 3 [default = -1];
inline bool ChatUserInfoObj::has_prof() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatUserInfoObj::set_has_prof() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatUserInfoObj::clear_has_prof() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatUserInfoObj::clear_prof() {
  prof_ = -1;
  clear_has_prof();
}
inline ::google::protobuf::int32 ChatUserInfoObj::prof() const {
  // @@protoc_insertion_point(field_get:ChatUserInfoObj.Prof)
  return prof_;
}
inline void ChatUserInfoObj::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
  // @@protoc_insertion_point(field_set:ChatUserInfoObj.Prof)
}

// optional sint32 Level = 4 [default = -1];
inline bool ChatUserInfoObj::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChatUserInfoObj::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChatUserInfoObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChatUserInfoObj::clear_level() {
  level_ = -1;
  clear_has_level();
}
inline ::google::protobuf::int32 ChatUserInfoObj::level() const {
  // @@protoc_insertion_point(field_get:ChatUserInfoObj.Level)
  return level_;
}
inline void ChatUserInfoObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ChatUserInfoObj.Level)
}

// -------------------------------------------------------------------

// ChatNetData

// repeated .ChatHyperLink HyperlinkList = 1;
inline int ChatNetData::hyperlinklist_size() const {
  return hyperlinklist_.size();
}
inline void ChatNetData::clear_hyperlinklist() {
  hyperlinklist_.Clear();
}
inline const ::ChatHyperLink& ChatNetData::hyperlinklist(int index) const {
  // @@protoc_insertion_point(field_get:ChatNetData.HyperlinkList)
  return hyperlinklist_.Get(index);
}
inline ::ChatHyperLink* ChatNetData::mutable_hyperlinklist(int index) {
  // @@protoc_insertion_point(field_mutable:ChatNetData.HyperlinkList)
  return hyperlinklist_.Mutable(index);
}
inline ::ChatHyperLink* ChatNetData::add_hyperlinklist() {
  // @@protoc_insertion_point(field_add:ChatNetData.HyperlinkList)
  return hyperlinklist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ChatHyperLink >*
ChatNetData::mutable_hyperlinklist() {
  // @@protoc_insertion_point(field_mutable_list:ChatNetData.HyperlinkList)
  return &hyperlinklist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ChatHyperLink >&
ChatNetData::hyperlinklist() const {
  // @@protoc_insertion_point(field_list:ChatNetData.HyperlinkList)
  return hyperlinklist_;
}

// optional string Text = 2;
inline bool ChatNetData::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatNetData::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatNetData::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatNetData::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& ChatNetData::text() const {
  // @@protoc_insertion_point(field_get:ChatNetData.Text)
  return text_.GetNoArena();
}
inline void ChatNetData::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatNetData.Text)
}
#if LANG_CXX11
inline void ChatNetData::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatNetData.Text)
}
#endif
inline void ChatNetData::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatNetData.Text)
}
inline void ChatNetData::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatNetData.Text)
}
inline ::std::string* ChatNetData::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ChatNetData.Text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatNetData::release_text() {
  // @@protoc_insertion_point(field_release:ChatNetData.Text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatNetData::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ChatNetData.Text)
}

// optional .ChatUserInfoObj UserInfo = 3;
inline bool ChatNetData::has_userinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatNetData::set_has_userinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatNetData::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatNetData::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::ChatUserInfoObj::Clear();
  clear_has_userinfo();
}
inline const ::ChatUserInfoObj& ChatNetData::userinfo() const {
  const ::ChatUserInfoObj* p = userinfo_;
  // @@protoc_insertion_point(field_get:ChatNetData.UserInfo)
  return p != NULL ? *p : *reinterpret_cast<const ::ChatUserInfoObj*>(
      &::_ChatUserInfoObj_default_instance_);
}
inline ::ChatUserInfoObj* ChatNetData::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) {
    userinfo_ = new ::ChatUserInfoObj;
  }
  // @@protoc_insertion_point(field_mutable:ChatNetData.UserInfo)
  return userinfo_;
}
inline ::ChatUserInfoObj* ChatNetData::release_userinfo() {
  // @@protoc_insertion_point(field_release:ChatNetData.UserInfo)
  clear_has_userinfo();
  ::ChatUserInfoObj* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void ChatNetData::set_allocated_userinfo(::ChatUserInfoObj* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:ChatNetData.UserInfo)
}

// optional sint32 Channel = 4 [default = 0];
inline bool ChatNetData::has_channel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatNetData::set_has_channel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatNetData::clear_has_channel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatNetData::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
inline ::google::protobuf::int32 ChatNetData::channel() const {
  // @@protoc_insertion_point(field_get:ChatNetData.Channel)
  return channel_;
}
inline void ChatNetData::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:ChatNetData.Channel)
}

// optional sint32 ChildChannel = 5 [default = -1];
inline bool ChatNetData::has_childchannel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChatNetData::set_has_childchannel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChatNetData::clear_has_childchannel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChatNetData::clear_childchannel() {
  childchannel_ = -1;
  clear_has_childchannel();
}
inline ::google::protobuf::int32 ChatNetData::childchannel() const {
  // @@protoc_insertion_point(field_get:ChatNetData.ChildChannel)
  return childchannel_;
}
inline void ChatNetData::set_childchannel(::google::protobuf::int32 value) {
  set_has_childchannel();
  childchannel_ = value;
  // @@protoc_insertion_point(field_set:ChatNetData.ChildChannel)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PublicStruct_2eproto__INCLUDED
