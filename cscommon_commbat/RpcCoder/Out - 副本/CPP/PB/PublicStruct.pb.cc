// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PublicStruct.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PublicStruct.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class TeamUserObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TeamUserObj>
     _instance;
} _TeamUserObj_default_instance_;
class TeamObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TeamObj>
     _instance;
} _TeamObj_default_instance_;
class TeamApplyUserObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TeamApplyUserObj>
     _instance;
} _TeamApplyUserObj_default_instance_;
class BagRecycleGridObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRecycleGridObj>
     _instance;
} _BagRecycleGridObj_default_instance_;
class KeyValue2DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<KeyValue2>
     _instance;
} _KeyValue2_default_instance_;
class EquipSkillBuff2DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EquipSkillBuff2>
     _instance;
} _EquipSkillBuff2_default_instance_;
class GuildMemberObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildMemberObj>
     _instance;
} _GuildMemberObj_default_instance_;
class GuildInfoObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildInfoObj>
     _instance;
} _GuildInfoObj_default_instance_;
class ApplyListRoleInfoObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ApplyListRoleInfoObj>
     _instance;
} _ApplyListRoleInfoObj_default_instance_;
class GuildListObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildListObj>
     _instance;
} _GuildListObj_default_instance_;
class HeroFightInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HeroFightInfo>
     _instance;
} _HeroFightInfo_default_instance_;
class GuildEventObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildEventObj>
     _instance;
} _GuildEventObj_default_instance_;
class GuildDungeonObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildDungeonObj>
     _instance;
} _GuildDungeonObj_default_instance_;
class GuildWarObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuildWarObj>
     _instance;
} _GuildWarObj_default_instance_;
class BagGridObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagGridObj>
     _instance;
} _BagGridObj_default_instance_;
class DropItemObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DropItemObj>
     _instance;
} _DropItemObj_default_instance_;
class BagEquipObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagEquipObj>
     _instance;
} _BagEquipObj_default_instance_;
class BagAttrIntObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagAttrIntObj>
     _instance;
} _BagAttrIntObj_default_instance_;
class BagAttrFloatObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagAttrFloatObj>
     _instance;
} _BagAttrFloatObj_default_instance_;
class BagGemObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagGemObj>
     _instance;
} _BagGemObj_default_instance_;
class KeyValue2IntIntDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<KeyValue2IntInt>
     _instance;
} _KeyValue2IntInt_default_instance_;
class KeyValue2IntBoolDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<KeyValue2IntBool>
     _instance;
} _KeyValue2IntBool_default_instance_;
class BagExtraAttrObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagExtraAttrObj>
     _instance;
} _BagExtraAttrObj_default_instance_;
class BagExtraAttrIdObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagExtraAttrIdObj>
     _instance;
} _BagExtraAttrIdObj_default_instance_;
class ActivityNpcDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityNpcData>
     _instance;
} _ActivityNpcData_default_instance_;
class WorldBossObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WorldBossObj>
     _instance;
} _WorldBossObj_default_instance_;
class WorldBossRankObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WorldBossRankObj>
     _instance;
} _WorldBossRankObj_default_instance_;
class TopPeoValueDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TopPeoValue>
     _instance;
} _TopPeoValue_default_instance_;
class OneSDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OneSData>
     _instance;
} _OneSData_default_instance_;
class ActMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActMessage>
     _instance;
} _ActMessage_default_instance_;
class TopJobMessDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TopJobMess>
     _instance;
} _TopJobMess_default_instance_;
class TopMessDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TopMess>
     _instance;
} _TopMess_default_instance_;
class TimeTopDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TimeTop>
     _instance;
} _TimeTop_default_instance_;
class MailHeadObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MailHeadObj>
     _instance;
} _MailHeadObj_default_instance_;
class MailBodyObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MailBodyObj>
     _instance;
} _MailBodyObj_default_instance_;
class ChatHyperLinkDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatHyperLink>
     _instance;
} _ChatHyperLink_default_instance_;
class ChatObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatObj>
     _instance;
} _ChatObj_default_instance_;
class ChatMsgObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatMsgObj>
     _instance;
} _ChatMsgObj_default_instance_;
class ChatUserInfoObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatUserInfoObj>
     _instance;
} _ChatUserInfoObj_default_instance_;
class ChatNetDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatNetData>
     _instance;
} _ChatNetData_default_instance_;

namespace protobuf_PublicStruct_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[40];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamUserObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamUserObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamUserObj, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamUserObj, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamUserObj, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamUserObj, iscaptain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamUserObj, prof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamUserObj, hp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamUserObj, maxhp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamUserObj, isfollowing_),
  3,
  0,
  4,
  1,
  5,
  6,
  7,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamObj, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamObj, captainuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamObj, membercount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamObj, teamtarget_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamObj, teammember_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamObj, captainprof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamObj, targetminlv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamObj, targetmaxlv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamObj, ismatching_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamObj, captainlevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamObj, isteamfollow_),
  4,
  3,
  5,
  6,
  ~0u,
  7,
  8,
  9,
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamApplyUserObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamApplyUserObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamApplyUserObj, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamApplyUserObj, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamApplyUserObj, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamApplyUserObj, prof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamApplyUserObj, teamid_),
  2,
  0,
  3,
  4,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRecycleGridObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRecycleGridObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRecycleGridObj, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRecycleGridObj, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRecycleGridObj, num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRecycleGridObj, itemtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRecycleGridObj, pos_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValue2, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValue2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValue2, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValue2, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSkillBuff2, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSkillBuff2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSkillBuff2, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSkillBuff2, lv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipSkillBuff2, cd_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildMemberObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildMemberObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildMemberObj, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildMemberObj, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildMemberObj, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildMemberObj, prof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildMemberObj, duty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildMemberObj, curcontribution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildMemberObj, maxcontribution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildMemberObj, leaguematchescount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildMemberObj, offlinetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildMemberObj, jointime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildMemberObj, dropitemarray_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildMemberObj, isonline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildMemberObj, isguilddungeon_),
  3,
  0,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  ~0u,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, guild_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, guildname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, captainid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, captainname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, funds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, curmembernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, guildmember_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, maintenancecost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, leaguematchesrank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, announcement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, totalmilitary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, applylist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, maxmembernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, halllv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, halllvuptime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, houselv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, houselvuptime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, storeroomlv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, storeroomlvuptime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, kongfuhalllv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, kongfuhalllvuptime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, eventlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, guilddungeonlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, guildwar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildInfoObj, guildopenscience_),
  5,
  0,
  6,
  7,
  1,
  8,
  9,
  ~0u,
  10,
  11,
  2,
  12,
  ~0u,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  4,
  ~0u,
  ~0u,
  3,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApplyListRoleInfoObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApplyListRoleInfoObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApplyListRoleInfoObj, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApplyListRoleInfoObj, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApplyListRoleInfoObj, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApplyListRoleInfoObj, prof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApplyListRoleInfoObj, talentlevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApplyListRoleInfoObj, xiulian_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ApplyListRoleInfoObj, military_),
  6,
  0,
  5,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildListObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildListObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildListObj, guild_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildListObj, guildname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildListObj, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildListObj, curmembernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildListObj, totalmilitary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildListObj, announcement_),
  4,
  0,
  5,
  3,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroFightInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroFightInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroFightInfo, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroFightInfo, objid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroFightInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroFightInfo, deadtimes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroFightInfo, killednum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroFightInfo, totaldamage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroFightInfo, totalendure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroFightInfo, intparaarr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroFightInfo, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroFightInfo, assistkilled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroFightInfo, cmapid_),
  4,
  5,
  0,
  1,
  2,
  7,
  6,
  ~0u,
  8,
  9,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildEventObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildEventObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildEventObj, eventid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildEventObj, param1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildEventObj, param2_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildDungeonObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildDungeonObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildDungeonObj, dungeonid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildDungeonObj, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildDungeonObj, post_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildDungeonObj, host_),
  2,
  0,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildWarObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildWarObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildWarObj, guild_a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildWarObj, guild_b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildWarObj, dungeonid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildWarObj, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildWarObj, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildWarObj, host_),
  2,
  3,
  4,
  0,
  5,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagGridObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagGridObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagGridObj, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagGridObj, num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagGridObj, itemtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagGridObj, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagGridObj, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagGridObj, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagGridObj, bind_),
  2,
  0,
  3,
  4,
  5,
  6,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemObj, configid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemObj, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemObj, num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemObj, itemtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemObj, attrnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemObj, monsterobjid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemObj, posinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemObj, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemObj, ispickup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemObj, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropItemObj, destroytime_),
  6,
  7,
  1,
  8,
  2,
  9,
  0,
  3,
  4,
  10,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEquipObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEquipObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEquipObj, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEquipObj, baseattr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEquipObj, extraattr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEquipObj, enhancelv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEquipObj, equippolishedresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEquipObj, polishedscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEquipObj, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEquipObj, initbaseattr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEquipObj, bagcontainertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEquipObj, gridindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEquipObj, plishedattrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEquipObj, gemarray_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEquipObj, polishedbaseattrresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEquipObj, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEquipObj, gemsuitid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEquipObj, equipscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEquipObj, polishedequipscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagEquipObj, baseattrpolishedinitattr_),
  3,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  4,
  ~0u,
  5,
  6,
  ~0u,
  ~0u,
  ~0u,
  7,
  8,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagAttrIntObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagAttrIntObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagAttrIntObj, attrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagAttrIntObj, attrvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagAttrIntObj, maxattrvalue_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagAttrFloatObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagAttrFloatObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagAttrFloatObj, attrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagAttrFloatObj, attrvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagAttrFloatObj, index_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagGemObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagGemObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagGemObj, gemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagGemObj, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagGemObj, islock_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagGemObj, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagGemObj, type_),
  1,
  2,
  0,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValue2IntInt, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValue2IntInt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValue2IntInt, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValue2IntInt, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValue2IntBool, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValue2IntBool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValue2IntBool, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValue2IntBool, value_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagExtraAttrObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagExtraAttrObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagExtraAttrObj, extraattr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagExtraAttrObj, id_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagExtraAttrIdObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagExtraAttrIdObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagExtraAttrIdObj, attrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagExtraAttrIdObj, id_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityNpcData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityNpcData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityNpcData, dungeonid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityNpcData, posinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityNpcData, npcid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityNpcData, objid_),
  2,
  0,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldBossObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldBossObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldBossObj, dungeonid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldBossObj, monsterid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldBossObj, curhp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldBossObj, isdead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldBossObj, level_),
  1,
  2,
  3,
  0,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldBossRankObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldBossRankObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldBossRankObj, rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldBossRankObj, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldBossRankObj, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldBossRankObj, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldBossRankObj, hurt_),
  1,
  4,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopPeoValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopPeoValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopPeoValue, planname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopPeoValue, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopPeoValue, lv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopPeoValue, allranking_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopPeoValue, myranking_),
  0,
  2,
  3,
  4,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneSData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneSData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneSData, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneSData, skillid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneSData, skilllv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneSData, index_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActMessage, actuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActMessage, depuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActMessage, actiscopy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActMessage, actplanname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActMessage, depplanname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActMessage, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActMessage, actranking_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActMessage, depranking_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActMessage, winuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActMessage, depiscopy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActMessage, actjobid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActMessage, depjobid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActMessage, actchangesource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActMessage, depchangesource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActMessage, actchangeover_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActMessage, depchangeover_),
  3,
  4,
  5,
  0,
  1,
  2,
  6,
  8,
  7,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopJobMess, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopJobMess, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopJobMess, jobid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopJobMess, top_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopMess, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopMess, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopMess, mytype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopMess, top_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeTop, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeTop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeTop, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimeTop, ranking_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailHeadObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailHeadObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailHeadObj, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailHeadObj, titlestring_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailHeadObj, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailHeadObj, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailHeadObj, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailHeadObj, isautodel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailHeadObj, guid_),
  3,
  0,
  4,
  5,
  1,
  2,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBodyObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBodyObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBodyObj, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBodyObj, hyperlinklist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBodyObj, itemlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailBodyObj, status_),
  0,
  ~0u,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatHyperLink, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatHyperLink, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatHyperLink, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatHyperLink, configid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatHyperLink, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatHyperLink, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatHyperLink, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatHyperLink, funid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatHyperLink, funparam_),
  3,
  4,
  5,
  0,
  6,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatObj, chatmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatObj, userinfo_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsgObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsgObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsgObj, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsgObj, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsgObj, voice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsgObj, targetuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsgObj, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsgObj, childchannel_),
  3,
  0,
  1,
  5,
  2,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatUserInfoObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatUserInfoObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatUserInfoObj, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatUserInfoObj, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatUserInfoObj, prof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatUserInfoObj, level_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatNetData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatNetData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatNetData, hyperlinklist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatNetData, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatNetData, userinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatNetData, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatNetData, childchannel_),
  ~0u,
  0,
  1,
  2,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(TeamUserObj)},
  { 21, 37, sizeof(TeamObj)},
  { 48, 58, sizeof(TeamApplyUserObj)},
  { 63, 73, sizeof(BagRecycleGridObj)},
  { 78, 85, sizeof(KeyValue2)},
  { 87, 95, sizeof(EquipSkillBuff2)},
  { 98, 116, sizeof(GuildMemberObj)},
  { 129, 161, sizeof(GuildInfoObj)},
  { 188, 200, sizeof(ApplyListRoleInfoObj)},
  { 207, 218, sizeof(GuildListObj)},
  { 224, 240, sizeof(HeroFightInfo)},
  { 251, 259, sizeof(GuildEventObj)},
  { 262, 271, sizeof(GuildDungeonObj)},
  { 275, 286, sizeof(GuildWarObj)},
  { 292, 304, sizeof(BagGridObj)},
  { 311, 327, sizeof(DropItemObj)},
  { 338, 361, sizeof(BagEquipObj)},
  { 379, 387, sizeof(BagAttrIntObj)},
  { 390, 398, sizeof(BagAttrFloatObj)},
  { 401, 411, sizeof(BagGemObj)},
  { 416, 423, sizeof(KeyValue2IntInt)},
  { 425, 432, sizeof(KeyValue2IntBool)},
  { 434, 441, sizeof(BagExtraAttrObj)},
  { 443, 450, sizeof(BagExtraAttrIdObj)},
  { 452, 461, sizeof(ActivityNpcData)},
  { 465, 475, sizeof(WorldBossObj)},
  { 480, 490, sizeof(WorldBossRankObj)},
  { 495, 505, sizeof(TopPeoValue)},
  { 510, 519, sizeof(OneSData)},
  { 523, 544, sizeof(ActMessage)},
  { 560, 567, sizeof(TopJobMess)},
  { 569, 576, sizeof(TopMess)},
  { 578, 585, sizeof(TimeTop)},
  { 587, 599, sizeof(MailHeadObj)},
  { 606, 615, sizeof(MailBodyObj)},
  { 619, 631, sizeof(ChatHyperLink)},
  { 638, 645, sizeof(ChatObj)},
  { 647, 658, sizeof(ChatMsgObj)},
  { 664, 673, sizeof(ChatUserInfoObj)},
  { 677, 687, sizeof(ChatNetData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TeamUserObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TeamObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TeamApplyUserObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRecycleGridObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_KeyValue2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EquipSkillBuff2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildMemberObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildInfoObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ApplyListRoleInfoObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildListObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HeroFightInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildEventObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildDungeonObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuildWarObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagGridObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DropItemObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagEquipObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagAttrIntObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagAttrFloatObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagGemObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_KeyValue2IntInt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_KeyValue2IntBool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagExtraAttrObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagExtraAttrIdObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityNpcData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WorldBossObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WorldBossRankObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TopPeoValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OneSData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TopJobMess_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TopMess_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TimeTop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MailHeadObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MailBodyObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatHyperLink_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatMsgObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatUserInfoObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatNetData_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "PublicStruct.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 40);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _TeamUserObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TeamUserObj_default_instance_);_TeamObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TeamObj_default_instance_);_TeamApplyUserObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TeamApplyUserObj_default_instance_);_BagRecycleGridObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRecycleGridObj_default_instance_);_KeyValue2_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_KeyValue2_default_instance_);_EquipSkillBuff2_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EquipSkillBuff2_default_instance_);_GuildMemberObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildMemberObj_default_instance_);_GuildInfoObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildInfoObj_default_instance_);_ApplyListRoleInfoObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ApplyListRoleInfoObj_default_instance_);_GuildListObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildListObj_default_instance_);_HeroFightInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HeroFightInfo_default_instance_);_GuildEventObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildEventObj_default_instance_);_GuildDungeonObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildDungeonObj_default_instance_);_GuildWarObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuildWarObj_default_instance_);_BagGridObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagGridObj_default_instance_);_DropItemObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DropItemObj_default_instance_);_BagEquipObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagEquipObj_default_instance_);_BagAttrIntObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagAttrIntObj_default_instance_);_BagAttrFloatObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagAttrFloatObj_default_instance_);_BagGemObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagGemObj_default_instance_);_KeyValue2IntInt_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_KeyValue2IntInt_default_instance_);_KeyValue2IntBool_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_KeyValue2IntBool_default_instance_);_BagExtraAttrObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagExtraAttrObj_default_instance_);_BagExtraAttrIdObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagExtraAttrIdObj_default_instance_);_ActivityNpcData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityNpcData_default_instance_);_WorldBossObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WorldBossObj_default_instance_);_WorldBossRankObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WorldBossRankObj_default_instance_);_TopPeoValue_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TopPeoValue_default_instance_);_OneSData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OneSData_default_instance_);_ActMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActMessage_default_instance_);_TopJobMess_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TopJobMess_default_instance_);_TopMess_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TopMess_default_instance_);_TimeTop_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TimeTop_default_instance_);_MailHeadObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MailHeadObj_default_instance_);_MailBodyObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MailBodyObj_default_instance_);_ChatHyperLink_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatHyperLink_default_instance_);_ChatObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatObj_default_instance_);_ChatMsgObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatMsgObj_default_instance_);_ChatUserInfoObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatUserInfoObj_default_instance_);_ChatNetData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatNetData_default_instance_);_GuildInfoObj_default_instance_._instance.get_mutable()->guildwar_ = const_cast< ::GuildWarObj*>(
      ::GuildWarObj::internal_default_instance());
  _ChatObj_default_instance_._instance.get_mutable()->chatmsg_ = const_cast< ::ChatMsgObj*>(
      ::ChatMsgObj::internal_default_instance());
  _ChatObj_default_instance_._instance.get_mutable()->userinfo_ = const_cast< ::ChatUserInfoObj*>(
      ::ChatUserInfoObj::internal_default_instance());
  _ChatNetData_default_instance_._instance.get_mutable()->userinfo_ = const_cast< ::ChatUserInfoObj*>(
      ::ChatUserInfoObj::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022PublicStruct.proto\"\261\001\n\013TeamUserObj\022\022\n\006"
      "UserId\030\001 \001(\022:\002-1\022\020\n\010UserName\030\002 \001(\t\022\021\n\005Le"
      "vel\030\003 \001(\021:\002-1\022\030\n\tIsCaptain\030\004 \001(\010:\005false\022"
      "\020\n\004Prof\030\005 \001(\021:\002-1\022\016\n\002HP\030\010 \001(\021:\002-1\022\021\n\005Max"
      "HP\030\t \001(\021:\002-1\022\032\n\013IsFollowing\030\n \001(\010:\005false"
      "\"\250\002\n\007TeamObj\022\022\n\006TeamId\030\001 \001(\021:\002-1\022\031\n\rCapt"
      "ainUserId\030\002 \001(\022:\002-1\022\027\n\013MemberCount\030\003 \001(\021"
      ":\002-1\022\026\n\nTeamTarget\030\004 \001(\021:\002-1\022 \n\nTeamMemb"
      "er\030\005 \003(\0132\014.TeamUserObj\022\027\n\013CaptainProf\030\006 "
      "\001(\021:\002-1\022\027\n\013TargetMinLv\030\007 \001(\021:\002-1\022\027\n\013Targ"
      "etMaxLv\030\010 \001(\021:\002-1\022\031\n\nIsMatching\030\t \001(\010:\005f"
      "alse\022\030\n\014CaptainLevel\030\n \001(\021:\002-1\022\033\n\014IsTeam"
      "Follow\030\013 \001(\010:\005false\"q\n\020TeamApplyUserObj\022"
      "\022\n\006UserId\030\001 \001(\022:\002-1\022\020\n\010UserName\030\002 \001(\t\022\021\n"
      "\005Level\030\003 \001(\021:\002-1\022\020\n\004Prof\030\004 \001(\021:\002-1\022\022\n\006Te"
      "amId\030\005 \001(\021:\002-1\"w\n\021BagRecycleGridObj\022\022\n\006I"
      "temId\030\001 \001(\022:\002-1\022\026\n\nTemplateId\030\002 \001(\021:\002-1\022"
      "\017\n\003Num\030\003 \001(\021:\002-1\022\024\n\010ItemType\030\004 \001(\021:\002-1\022\017"
      "\n\003Pos\030\005 \001(\021:\002-1\"/\n\tKeyValue2\022\017\n\003Key\030\001 \001("
      "\021:\002-1\022\021\n\005Value\030\002 \001(\002:\002-1\"A\n\017EquipSkillBu"
      "ff2\022\016\n\002Id\030\001 \001(\021:\002-1\022\016\n\002LV\030\002 \001(\021:\002-1\022\016\n\002C"
      "d\030\003 \001(\021:\002-1\"\304\002\n\016GuildMemberObj\022\022\n\006UserId"
      "\030\001 \001(\022:\002-1\022\020\n\010UserName\030\002 \001(\t\022\021\n\005Level\030\003 "
      "\001(\021:\002-1\022\020\n\004Prof\030\t \001(\021:\002-1\022\020\n\004Duty\030\n \001(\021:"
      "\002-1\022\033\n\017CurContribution\030\013 \001(\021:\002-1\022\033\n\017MaxC"
      "ontribution\030\014 \001(\021:\002-1\022\036\n\022LeagueMatchesCo"
      "unt\030\r \001(\021:\002-1\022\027\n\013OfflineTime\030\016 \001(\021:\002-1\022\024"
      "\n\010JoinTime\030\017 \001(\021:\002-1\022\025\n\rDropItemArray\030\020 "
      "\003(\021\022\026\n\010IsOnline\030\021 \001(\010:\004true\022\035\n\016IsGuildDu"
      "ngeon\030\022 \001(\010:\005false\"\342\005\n\014GuildInfoObj\022\021\n\005G"
      "uild\030\001 \001(\021:\002-1\022\021\n\tGuildName\030\002 \001(\t\022\020\n\005Lev"
      "el\030\003 \001(\021:\0011\022\025\n\tCaptainId\030\005 \001(\022:\002-1\022\023\n\013Ca"
      "ptainName\030\006 \001(\t\022\021\n\005Funds\030\007 \001(\021:\002-1\022\027\n\014Cu"
      "rMemberNum\030\010 \001(\021:\0011\022$\n\013GuildMember\030\n \003(\013"
      "2\017.GuildMemberObj\022\033\n\017MaintenanceCost\030\013 \001"
      "(\021:\002-1\022\035\n\021LeagueMatchesRank\030\014 \001(\021:\002-1\022\024\n"
      "\014Announcement\030\r \001(\t\022\031\n\rTotalMilitary\030\016 \001"
      "(\021:\002-1\022(\n\tApplyList\030\017 \003(\0132\025.ApplyListRol"
      "eInfoObj\022\030\n\014MaxMemberNum\030\020 \001(\021:\002-1\022\021\n\006Ha"
      "llLv\030\021 \001(\021:\0011\022\030\n\014HallLvupTime\030\022 \001(\021:\002-1\022"
      "\022\n\007HouseLv\030\023 \001(\021:\0011\022\031\n\rHouseLvupTime\030\024 \001"
      "(\021:\002-1\022\026\n\013StoreroomLv\030\025 \001(\021:\0011\022\035\n\021Storer"
      "oomLvupTime\030\026 \001(\021:\002-1\022\027\n\014KongfuHallLv\030\027 "
      "\001(\021:\0011\022\036\n\022KongfuHallLvupTime\030\030 \001(\021:\002-1\022\026"
      "\n\nCreateTime\030\031 \001(\021:\002-1\022!\n\tEventList\030\032 \003("
      "\0132\016.GuildEventObj\022*\n\020GuildDungeonList\030\033 "
      "\003(\0132\020.GuildDungeonObj\022\036\n\010GuildWar\030\034 \001(\0132"
      "\014.GuildWarObj\022\030\n\020GuildOpenScience\030\035 \003(\021\""
      "\240\001\n\024ApplyListRoleInfoObj\022\022\n\006UserId\030\001 \001(\022"
      ":\002-1\022\020\n\010UserName\030\002 \001(\t\022\020\n\005Level\030\003 \001(\021:\0011"
      "\022\017\n\004Prof\030\004 \001(\021:\0010\022\026\n\013TalentLevel\030\005 \001(\021:\001"
      "0\022\022\n\007Xiulian\030\006 \001(\021:\0010\022\023\n\010Military\030\007 \001(\021:"
      "\0010\"\217\001\n\014GuildListObj\022\021\n\005Guild\030\001 \001(\021:\002-1\022\021"
      "\n\tGuildName\030\002 \001(\t\022\020\n\005Level\030\003 \001(\021:\0011\022\027\n\014C"
      "urMemberNum\030\004 \001(\021:\0011\022\030\n\rTotalMilitary\030\005 "
      "\001(\021:\0010\022\024\n\014Announcement\030\006 \001(\t\"\367\001\n\rHeroFig"
      "htInfo\022\022\n\006UserId\030\001 \001(\022:\002-1\022\021\n\005ObjId\030\002 \001("
      "\021:\002-1\022\014\n\004Name\030\003 \001(\t\022\024\n\tDeadTimes\030\004 \001(\021:\001"
      "0\022\024\n\tKilledNum\030\005 \001(\021:\0010\022\027\n\013TotalDamage\030\006"
      " \001(\022:\002-1\022\027\n\013TotalEndure\030\007 \001(\021:\002-1\022\022\n\nInt"
      "ParaArr\030\010 \003(\021\022\021\n\005Level\030\t \001(\021:\002-1\022\030\n\014Assi"
      "stKilled\030\n \001(\021:\002-1\022\022\n\006CmapId\030\013 \001(\021:\002-1\"D"
      "\n\rGuildEventObj\022\023\n\007EventId\030\001 \001(\021:\002-1\022\016\n\006"
      "Param1\030\002 \001(\t\022\016\n\006Param2\030\003 \001(\t\"U\n\017GuildDun"
      "geonObj\022\025\n\tDungeonId\030\001 \001(\021:\002-1\022\013\n\003Key\030\002 "
      "\001(\t\022\020\n\004Post\030\003 \001(\021:\002-1\022\014\n\004Host\030\004 \001(\t\"{\n\013G"
      "uildWarObj\022\023\n\007Guild_A\030\002 \001(\021:\002-1\022\023\n\007Guild"
      "_B\030\003 \001(\021:\002-1\022\025\n\tDungeonId\030\004 \001(\021:\002-1\022\013\n\003K"
      "ey\030\005 \001(\t\022\020\n\004Port\030\006 \001(\021:\002-1\022\014\n\004Host\030\007 \001(\t"
      "\"\226\001\n\nBagGridObj\022\026\n\nTemplateID\030\001 \001(\021:\002-1\022"
      "\016\n\003Num\030\002 \001(\021:\0010\022\024\n\010ItemType\030\003 \001(\021:\002-1\022\017\n"
      "\003Pos\030\004 \001(\021:\002-1\022\021\n\005Value\030\005 \001(\021:\002-1\022\021\n\005Ind"
      "ex\030\006 \001(\022:\002-1\022\023\n\004Bind\030\007 \001(\010:\005false\"\365\001\n\013Dr"
      "opItemObj\022\024\n\010ConfigId\030\001 \001(\021:\002-1\022\017\n\003UId\030\002"
      " \001(\021:\002-1\022\016\n\003Num\030\004 \001(\021:\0010\022\024\n\010ItemType\030\005 \001"
      "(\021:\002-1\022\022\n\007AttrNum\030\010 \001(\021:\0010\022\030\n\014MonsterObj"
      "Id\030\t \001(\021:\002-1\022\017\n\007PosInfo\030\n \001(\014\022\025\n\nCreateT"
      "ime\030\013 \001(\021:\0010\022\027\n\010IsPickup\030\014 \001(\010:\005false\022\022\n"
      "\006ItemId\030\r \001(\022:\002-1\022\026\n\013DestroyTime\030\016 \001(\021:\001"
      "0\"\302\004\n\013BagEquipObj\022\022\n\006ItemID\030\001 \001(\022:\002-1\022 \n"
      "\010BaseAttr\030\002 \003(\0132\016.BagAttrIntObj\022#\n\tExtra"
      "Attr\030\003 \003(\0132\020.BagExtraAttrObj\022\021\n\tEnhanceL"
      "v\030\004 \003(\021\022-\n\023EquipPolishedResult\030\005 \003(\0132\020.B"
      "agExtraAttrObj\022\030\n\rPolishedScore\030\006 \001(\021:\0010"
      "\022\021\n\005Index\030\007 \001(\022:\002-1\022$\n\014InitBaseAttr\030\010 \003("
      "\0132\016.BagAttrIntObj\022\034\n\020BagContainerType\030\t "
      "\001(\021:\002-1\022\025\n\tGridIndex\030\n \001(\021:\002-1\022)\n\rPlishe"
      "dAttrId\030\013 \003(\0132\022.BagExtraAttrIdObj\022\034\n\010Gem"
      "Array\030\014 \003(\0132\n.BagGemObj\022.\n\026PolishedBaseA"
      "ttrResult\030\r \003(\0132\016.BagAttrIntObj\022\026\n\nTempl"
      "ateId\030\016 \001(\021:\002-1\022\025\n\tGemSuitId\030\017 \001(\021:\002-1\022\025"
      "\n\nEquipScore\030\020 \001(\021:\0010\022\035\n\022PolishedEquipSc"
      "ore\030\021 \001(\021:\0010\0220\n\030BaseAttrPolishedInitAttr"
      "\030\022 \003(\0132\016.BagAttrIntObj\"T\n\rBagAttrIntObj\022"
      "\022\n\006AttrId\030\001 \001(\021:\002-1\022\025\n\tAttrValue\030\002 \001(\021:\002"
      "-1\022\030\n\014MaxAttrValue\030\003 \001(\021:\002-1\"O\n\017BagAttrF"
      "loatObj\022\022\n\006AttrId\030\001 \001(\021:\002-1\022\025\n\tAttrValue"
      "\030\002 \001(\002:\002-1\022\021\n\005Index\030\003 \001(\021:\002-1\"k\n\tBagGemO"
      "bj\022\021\n\005GemId\030\001 \001(\021:\002-1\022\017\n\003Pos\030\002 \001(\021:\002-1\022\025"
      "\n\006IsLock\030\003 \001(\010:\005false\022\021\n\005Level\030\004 \001(\021:\002-1"
      "\022\020\n\004Type\030\005 \001(\021:\002-1\"5\n\017KeyValue2IntInt\022\017\n"
      "\003Key\030\001 \001(\021:\002-1\022\021\n\005Value\030\002 \001(\021:\002-1\"9\n\020Key"
      "Value2IntBool\022\017\n\003Key\030\001 \001(\021:\002-1\022\024\n\005Value\030"
      "\002 \001(\010:\005false\"F\n\017BagExtraAttrObj\022#\n\tExtra"
      "Attr\030\001 \003(\0132\020.BagAttrFloatObj\022\016\n\002Id\030\002 \001(\021"
      ":\002-1\"3\n\021BagExtraAttrIdObj\022\016\n\006AttrId\030\001 \003("
      "\021\022\016\n\002Id\030\002 \001(\021:\002-1\"_\n\017ActivityNpcData\022\025\n\t"
      "DungeonId\030\001 \001(\021:\002-1\022\017\n\007PosInfo\030\002 \001(\014\022\021\n\005"
      "NPCId\030\003 \001(\021:\002-1\022\021\n\005ObjId\030\004 \001(\021:\002-1\"x\n\014Wo"
      "rldBossObj\022\025\n\tDungeonId\030\001 \001(\021:\002-1\022\025\n\tMon"
      "sterId\030\002 \001(\021:\002-1\022\021\n\005CurHP\030\003 \001(\021:\002-1\022\025\n\006I"
      "sDead\030\004 \001(\010:\005false\022\020\n\005Level\030\007 \001(\021:\0011\"l\n\020"
      "WorldBossRankObj\022\017\n\004Rank\030\001 \001(\021:\0010\022\022\n\006Use"
      "rId\030\002 \001(\022:\002-1\022\020\n\010UserName\030\003 \001(\t\022\020\n\005Level"
      "\030\005 \001(\021:\0010\022\017\n\004Hurt\030\006 \001(\021:\0010\"r\n\013TopPeoValu"
      "e\022\020\n\010PlanName\030\001 \001(\t\022\022\n\006UserId\030\002 \001(\022:\002-1\022"
      "\016\n\002LV\030\003 \001(\021:\002-1\022\026\n\nAllRanking\030\004 \001(\021:\002-1\022"
      "\025\n\tMyRanking\030\006 \001(\021:\002-1\"Y\n\010OneSData\022\020\n\004Ty"
      "pe\030\001 \001(\021:\002-1\022\023\n\007SkillID\030\002 \001(\021:\002-1\022\023\n\007Ski"
      "llLv\030\003 \001(\021:\002-1\022\021\n\005Index\030\004 \001(\021:\002-1\"\203\003\n\nAc"
      "tMessage\022\025\n\tActUserID\030\001 \001(\022:\002-1\022\025\n\tDepUs"
      "erID\030\002 \001(\022:\002-1\022\025\n\tActIsCopy\030\003 \001(\021:\002-1\022\023\n"
      "\013ActPlanName\030\004 \001(\t\022\023\n\013DepPlanName\030\005 \001(\t\022"
      "\014\n\004Time\030\006 \001(\t\022\026\n\nActRanking\030\007 \001(\021:\002-1\022\026\n"
      "\nDepRanking\030\010 \001(\021:\002-1\022\025\n\tWinUserID\030\t \001(\022"
      ":\002-1\022\025\n\tDepIsCopy\030\n \001(\021:\002-1\022\024\n\010ActJobID\030"
      "\013 \001(\021:\002-1\022\024\n\010DepJobID\030\014 \001(\021:\002-1\022\033\n\017ActCh"
      "angeSource\030\r \001(\021:\002-1\022\033\n\017DepChangeSource\030"
      "\016 \001(\021:\002-1\022\031\n\rActChangeOver\030\017 \001(\021:\002-1\022\031\n\r"
      "DepChangeOver\030\020 \001(\021:\002-1\":\n\nTopJobMess\022\021\n"
      "\005JobID\030\001 \001(\021:\002-1\022\031\n\003Top\030\002 \003(\0132\014.TopPeoVa"
      "lue\"7\n\007TopMess\022\022\n\006MyType\030\001 \001(\021:\002-1\022\030\n\003To"
      "p\030\002 \003(\0132\013.TopJobMess\".\n\007TimeTop\022\016\n\002ID\030\001 "
      "\001(\022:\002-1\022\023\n\007Ranking\030\002 \001(\021:\002-1\"\234\001\n\013MailHea"
      "dObj\022\017\n\003UId\030\001 \001(\022:\002-1\022\023\n\013TiTleString\030\002 \001"
      "(\t\022\026\n\nCreateTime\030\003 \001(\021:\002-1\022\020\n\004Type\030\004 \001(\021"
      ":\002-1\022\021\n\006Status\030\005 \001(\021:\0010\022\030\n\tIsAutoDel\030\006 \001"
      "(\010:\005false\022\020\n\004GUId\030\010 \001(\022:\002-1\"y\n\013MailBodyO"
      "bj\022\014\n\004Text\030\002 \001(\t\022%\n\rHyperlinkList\030\004 \003(\0132"
      "\016.ChatHyperLink\022\"\n\010ItemList\030\005 \003(\0132\020.KeyV"
      "alue2IntInt\022\021\n\006Status\030\006 \001(\021:\0010\"\217\001\n\rChatH"
      "yperLink\022\017\n\003Uid\030\001 \001(\022:\002-1\022\024\n\010ConfigID\030\002 "
      "\001(\021:\002-1\022\020\n\004Type\030\003 \001(\021:\002-1\022\014\n\004Text\030\004 \001(\t\022"
      "\022\n\006Userid\030\005 \001(\022:\002-1\022\021\n\005FunId\030\006 \001(\021:\002-1\022\020"
      "\n\010FunParam\030\007 \001(\014\"K\n\007ChatObj\022\034\n\007ChatMsg\030\001"
      " \001(\0132\013.ChatMsgObj\022\"\n\010UserInfo\030\002 \001(\0132\020.Ch"
      "atUserInfoObj\"~\n\nChatMsgObj\022\022\n\007Channel\030\001"
      " \001(\021:\0010\022\014\n\004Text\030\002 \001(\t\022\r\n\005Voice\030\003 \001(\014\022\030\n\014"
      "TargetUserId\030\004 \001(\022:\002-1\022\013\n\003URL\030\005 \001(\014\022\030\n\014C"
      "hildChannel\030\006 \001(\021:\002-1\"\\\n\017ChatUserInfoObj"
      "\022\022\n\006UserId\030\001 \001(\022:\002-1\022\020\n\010UserName\030\002 \001(\t\022\020"
      "\n\004Prof\030\003 \001(\021:\002-1\022\021\n\005Level\030\004 \001(\021:\002-1\"\224\001\n\013"
      "ChatNetData\022%\n\rHyperlinkList\030\001 \003(\0132\016.Cha"
      "tHyperLink\022\014\n\004Text\030\002 \001(\t\022\"\n\010UserInfo\030\003 \001"
      "(\0132\020.ChatUserInfoObj\022\022\n\007Channel\030\004 \001(\021:\0010"
      "\022\030\n\014ChildChannel\030\005 \001(\021:\002-1"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6226);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PublicStruct.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_PublicStruct_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamUserObj::kUserIdFieldNumber;
const int TeamUserObj::kUserNameFieldNumber;
const int TeamUserObj::kLevelFieldNumber;
const int TeamUserObj::kIsCaptainFieldNumber;
const int TeamUserObj::kProfFieldNumber;
const int TeamUserObj::kHPFieldNumber;
const int TeamUserObj::kMaxHPFieldNumber;
const int TeamUserObj::kIsFollowingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamUserObj::TeamUserObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TeamUserObj)
}
TeamUserObj::TeamUserObj(const TeamUserObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  ::memcpy(&iscaptain_, &from.iscaptain_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxhp_) -
    reinterpret_cast<char*>(&iscaptain_)) + sizeof(maxhp_));
  // @@protoc_insertion_point(copy_constructor:TeamUserObj)
}

void TeamUserObj::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&iscaptain_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isfollowing_) -
      reinterpret_cast<char*>(&iscaptain_)) + sizeof(isfollowing_));
  userid_ = GOOGLE_LONGLONG(-1);
  level_ = -1;
  prof_ = -1;
  hp_ = -1;
  maxhp_ = -1;
}

TeamUserObj::~TeamUserObj() {
  // @@protoc_insertion_point(destructor:TeamUserObj)
  SharedDtor();
}

void TeamUserObj::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TeamUserObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamUserObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TeamUserObj& TeamUserObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

TeamUserObj* TeamUserObj::New(::google::protobuf::Arena* arena) const {
  TeamUserObj* n = new TeamUserObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamUserObj::Clear() {
// @@protoc_insertion_point(message_clear_start:TeamUserObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_username()) {
    GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*username_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 254u) {
    ::memset(&iscaptain_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isfollowing_) -
        reinterpret_cast<char*>(&iscaptain_)) + sizeof(isfollowing_));
    userid_ = GOOGLE_LONGLONG(-1);
    level_ = -1;
    prof_ = -1;
    hp_ = -1;
    maxhp_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TeamUserObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TeamUserObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 UserId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string UserName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TeamUserObj.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Level = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsCaptain = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_iscaptain();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &iscaptain_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Prof = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_prof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &prof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 HP = 8 [default = -1];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_hp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &hp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 MaxHP = 9 [default = -1];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_maxhp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &maxhp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsFollowing = 10 [default = false];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_isfollowing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isfollowing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TeamUserObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TeamUserObj)
  return false;
#undef DO_
}

void TeamUserObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TeamUserObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->userid(), output);
  }

  // optional string UserName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TeamUserObj.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional sint32 Level = 3 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->level(), output);
  }

  // optional bool IsCaptain = 4 [default = false];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->iscaptain(), output);
  }

  // optional sint32 Prof = 5 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->prof(), output);
  }

  // optional sint32 HP = 8 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->hp(), output);
  }

  // optional sint32 MaxHP = 9 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(9, this->maxhp(), output);
  }

  // optional bool IsFollowing = 10 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->isfollowing(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TeamUserObj)
}

::google::protobuf::uint8* TeamUserObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TeamUserObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->userid(), target);
  }

  // optional string UserName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TeamUserObj.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional sint32 Level = 3 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->level(), target);
  }

  // optional bool IsCaptain = 4 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->iscaptain(), target);
  }

  // optional sint32 Prof = 5 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->prof(), target);
  }

  // optional sint32 HP = 8 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->hp(), target);
  }

  // optional sint32 MaxHP = 9 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(9, this->maxhp(), target);
  }

  // optional bool IsFollowing = 10 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->isfollowing(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeamUserObj)
  return target;
}

size_t TeamUserObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeamUserObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string UserName = 2;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional bool IsCaptain = 4 [default = false];
    if (has_iscaptain()) {
      total_size += 1 + 1;
    }

    // optional bool IsFollowing = 10 [default = false];
    if (has_isfollowing()) {
      total_size += 1 + 1;
    }

    // optional sint64 UserId = 1 [default = -1];
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->userid());
    }

    // optional sint32 Level = 3 [default = -1];
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->level());
    }

    // optional sint32 Prof = 5 [default = -1];
    if (has_prof()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->prof());
    }

    // optional sint32 HP = 8 [default = -1];
    if (has_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->hp());
    }

    // optional sint32 MaxHP = 9 [default = -1];
    if (has_maxhp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->maxhp());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamUserObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeamUserObj)
  GOOGLE_DCHECK_NE(&from, this);
  const TeamUserObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamUserObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeamUserObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeamUserObj)
    MergeFrom(*source);
  }
}

void TeamUserObj::MergeFrom(const TeamUserObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeamUserObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      iscaptain_ = from.iscaptain_;
    }
    if (cached_has_bits & 0x00000004u) {
      isfollowing_ = from.isfollowing_;
    }
    if (cached_has_bits & 0x00000008u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000010u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000020u) {
      prof_ = from.prof_;
    }
    if (cached_has_bits & 0x00000040u) {
      hp_ = from.hp_;
    }
    if (cached_has_bits & 0x00000080u) {
      maxhp_ = from.maxhp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TeamUserObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeamUserObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamUserObj::CopyFrom(const TeamUserObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeamUserObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TeamUserObj::IsInitialized() const {
  return true;
}

void TeamUserObj::Swap(TeamUserObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamUserObj::InternalSwap(TeamUserObj* other) {
  using std::swap;
  username_.Swap(&other->username_);
  swap(iscaptain_, other->iscaptain_);
  swap(isfollowing_, other->isfollowing_);
  swap(userid_, other->userid_);
  swap(level_, other->level_);
  swap(prof_, other->prof_);
  swap(hp_, other->hp_);
  swap(maxhp_, other->maxhp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamUserObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamUserObj

// optional sint64 UserId = 1 [default = -1];
bool TeamUserObj::has_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TeamUserObj::set_has_userid() {
  _has_bits_[0] |= 0x00000008u;
}
void TeamUserObj::clear_has_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
void TeamUserObj::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 TeamUserObj::userid() const {
  // @@protoc_insertion_point(field_get:TeamUserObj.UserId)
  return userid_;
}
void TeamUserObj::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:TeamUserObj.UserId)
}

// optional string UserName = 2;
bool TeamUserObj::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TeamUserObj::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void TeamUserObj::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void TeamUserObj::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& TeamUserObj::username() const {
  // @@protoc_insertion_point(field_get:TeamUserObj.UserName)
  return username_.GetNoArena();
}
void TeamUserObj::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TeamUserObj.UserName)
}
#if LANG_CXX11
void TeamUserObj::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TeamUserObj.UserName)
}
#endif
void TeamUserObj::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TeamUserObj.UserName)
}
void TeamUserObj::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TeamUserObj.UserName)
}
::std::string* TeamUserObj::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:TeamUserObj.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TeamUserObj::release_username() {
  // @@protoc_insertion_point(field_release:TeamUserObj.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TeamUserObj::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:TeamUserObj.UserName)
}

// optional sint32 Level = 3 [default = -1];
bool TeamUserObj::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TeamUserObj::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
void TeamUserObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
void TeamUserObj::clear_level() {
  level_ = -1;
  clear_has_level();
}
::google::protobuf::int32 TeamUserObj::level() const {
  // @@protoc_insertion_point(field_get:TeamUserObj.Level)
  return level_;
}
void TeamUserObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TeamUserObj.Level)
}

// optional bool IsCaptain = 4 [default = false];
bool TeamUserObj::has_iscaptain() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TeamUserObj::set_has_iscaptain() {
  _has_bits_[0] |= 0x00000002u;
}
void TeamUserObj::clear_has_iscaptain() {
  _has_bits_[0] &= ~0x00000002u;
}
void TeamUserObj::clear_iscaptain() {
  iscaptain_ = false;
  clear_has_iscaptain();
}
bool TeamUserObj::iscaptain() const {
  // @@protoc_insertion_point(field_get:TeamUserObj.IsCaptain)
  return iscaptain_;
}
void TeamUserObj::set_iscaptain(bool value) {
  set_has_iscaptain();
  iscaptain_ = value;
  // @@protoc_insertion_point(field_set:TeamUserObj.IsCaptain)
}

// optional sint32 Prof = 5 [default = -1];
bool TeamUserObj::has_prof() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TeamUserObj::set_has_prof() {
  _has_bits_[0] |= 0x00000020u;
}
void TeamUserObj::clear_has_prof() {
  _has_bits_[0] &= ~0x00000020u;
}
void TeamUserObj::clear_prof() {
  prof_ = -1;
  clear_has_prof();
}
::google::protobuf::int32 TeamUserObj::prof() const {
  // @@protoc_insertion_point(field_get:TeamUserObj.Prof)
  return prof_;
}
void TeamUserObj::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
  // @@protoc_insertion_point(field_set:TeamUserObj.Prof)
}

// optional sint32 HP = 8 [default = -1];
bool TeamUserObj::has_hp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void TeamUserObj::set_has_hp() {
  _has_bits_[0] |= 0x00000040u;
}
void TeamUserObj::clear_has_hp() {
  _has_bits_[0] &= ~0x00000040u;
}
void TeamUserObj::clear_hp() {
  hp_ = -1;
  clear_has_hp();
}
::google::protobuf::int32 TeamUserObj::hp() const {
  // @@protoc_insertion_point(field_get:TeamUserObj.HP)
  return hp_;
}
void TeamUserObj::set_hp(::google::protobuf::int32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:TeamUserObj.HP)
}

// optional sint32 MaxHP = 9 [default = -1];
bool TeamUserObj::has_maxhp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void TeamUserObj::set_has_maxhp() {
  _has_bits_[0] |= 0x00000080u;
}
void TeamUserObj::clear_has_maxhp() {
  _has_bits_[0] &= ~0x00000080u;
}
void TeamUserObj::clear_maxhp() {
  maxhp_ = -1;
  clear_has_maxhp();
}
::google::protobuf::int32 TeamUserObj::maxhp() const {
  // @@protoc_insertion_point(field_get:TeamUserObj.MaxHP)
  return maxhp_;
}
void TeamUserObj::set_maxhp(::google::protobuf::int32 value) {
  set_has_maxhp();
  maxhp_ = value;
  // @@protoc_insertion_point(field_set:TeamUserObj.MaxHP)
}

// optional bool IsFollowing = 10 [default = false];
bool TeamUserObj::has_isfollowing() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TeamUserObj::set_has_isfollowing() {
  _has_bits_[0] |= 0x00000004u;
}
void TeamUserObj::clear_has_isfollowing() {
  _has_bits_[0] &= ~0x00000004u;
}
void TeamUserObj::clear_isfollowing() {
  isfollowing_ = false;
  clear_has_isfollowing();
}
bool TeamUserObj::isfollowing() const {
  // @@protoc_insertion_point(field_get:TeamUserObj.IsFollowing)
  return isfollowing_;
}
void TeamUserObj::set_isfollowing(bool value) {
  set_has_isfollowing();
  isfollowing_ = value;
  // @@protoc_insertion_point(field_set:TeamUserObj.IsFollowing)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamObj::kTeamIdFieldNumber;
const int TeamObj::kCaptainUserIdFieldNumber;
const int TeamObj::kMemberCountFieldNumber;
const int TeamObj::kTeamTargetFieldNumber;
const int TeamObj::kTeamMemberFieldNumber;
const int TeamObj::kCaptainProfFieldNumber;
const int TeamObj::kTargetMinLvFieldNumber;
const int TeamObj::kTargetMaxLvFieldNumber;
const int TeamObj::kIsMatchingFieldNumber;
const int TeamObj::kCaptainLevelFieldNumber;
const int TeamObj::kIsTeamFollowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamObj::TeamObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TeamObj)
}
TeamObj::TeamObj(const TeamObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      teammember_(from.teammember_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ismatching_, &from.ismatching_,
    static_cast<size_t>(reinterpret_cast<char*>(&targetmaxlv_) -
    reinterpret_cast<char*>(&ismatching_)) + sizeof(targetmaxlv_));
  // @@protoc_insertion_point(copy_constructor:TeamObj)
}

void TeamObj::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&ismatching_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isteamfollow_) -
      reinterpret_cast<char*>(&ismatching_)) + sizeof(isteamfollow_));
  captainlevel_ = -1;
  captainuserid_ = GOOGLE_LONGLONG(-1);
  teamid_ = -1;
  membercount_ = -1;
  teamtarget_ = -1;
  captainprof_ = -1;
  targetminlv_ = -1;
  targetmaxlv_ = -1;
}

TeamObj::~TeamObj() {
  // @@protoc_insertion_point(destructor:TeamObj)
  SharedDtor();
}

void TeamObj::SharedDtor() {
}

void TeamObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TeamObj& TeamObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

TeamObj* TeamObj::New(::google::protobuf::Arena* arena) const {
  TeamObj* n = new TeamObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamObj::Clear() {
// @@protoc_insertion_point(message_clear_start:TeamObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  teammember_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&ismatching_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isteamfollow_) -
        reinterpret_cast<char*>(&ismatching_)) + sizeof(isteamfollow_));
    captainlevel_ = -1;
    captainuserid_ = GOOGLE_LONGLONG(-1);
    teamid_ = -1;
    membercount_ = -1;
    teamtarget_ = -1;
    captainprof_ = -1;
  }
  if (cached_has_bits & 768u) {
    targetminlv_ = -1;
    targetmaxlv_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TeamObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TeamObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 TeamId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_teamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 CaptainUserId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_captainuserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &captainuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 MemberCount = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_membercount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &membercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TeamTarget = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_teamtarget();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &teamtarget_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TeamUserObj TeamMember = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_teammember()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 CaptainProf = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_captainprof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &captainprof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TargetMinLv = 7 [default = -1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_targetminlv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &targetminlv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TargetMaxLv = 8 [default = -1];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_targetmaxlv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &targetmaxlv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsMatching = 9 [default = false];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_ismatching();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ismatching_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 CaptainLevel = 10 [default = -1];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_captainlevel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &captainlevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsTeamFollow = 11 [default = false];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_isteamfollow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isteamfollow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TeamObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TeamObj)
  return false;
#undef DO_
}

void TeamObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TeamObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TeamId = 1 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->teamid(), output);
  }

  // optional sint64 CaptainUserId = 2 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->captainuserid(), output);
  }

  // optional sint32 MemberCount = 3 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->membercount(), output);
  }

  // optional sint32 TeamTarget = 4 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->teamtarget(), output);
  }

  // repeated .TeamUserObj TeamMember = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->teammember_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->teammember(static_cast<int>(i)), output);
  }

  // optional sint32 CaptainProf = 6 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->captainprof(), output);
  }

  // optional sint32 TargetMinLv = 7 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->targetminlv(), output);
  }

  // optional sint32 TargetMaxLv = 8 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->targetmaxlv(), output);
  }

  // optional bool IsMatching = 9 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->ismatching(), output);
  }

  // optional sint32 CaptainLevel = 10 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(10, this->captainlevel(), output);
  }

  // optional bool IsTeamFollow = 11 [default = false];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->isteamfollow(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TeamObj)
}

::google::protobuf::uint8* TeamObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TeamObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TeamId = 1 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->teamid(), target);
  }

  // optional sint64 CaptainUserId = 2 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->captainuserid(), target);
  }

  // optional sint32 MemberCount = 3 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->membercount(), target);
  }

  // optional sint32 TeamTarget = 4 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->teamtarget(), target);
  }

  // repeated .TeamUserObj TeamMember = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->teammember_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->teammember(static_cast<int>(i)), deterministic, target);
  }

  // optional sint32 CaptainProf = 6 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->captainprof(), target);
  }

  // optional sint32 TargetMinLv = 7 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->targetminlv(), target);
  }

  // optional sint32 TargetMaxLv = 8 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->targetmaxlv(), target);
  }

  // optional bool IsMatching = 9 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->ismatching(), target);
  }

  // optional sint32 CaptainLevel = 10 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(10, this->captainlevel(), target);
  }

  // optional bool IsTeamFollow = 11 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->isteamfollow(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeamObj)
  return target;
}

size_t TeamObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeamObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .TeamUserObj TeamMember = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->teammember_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->teammember(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional bool IsMatching = 9 [default = false];
    if (has_ismatching()) {
      total_size += 1 + 1;
    }

    // optional bool IsTeamFollow = 11 [default = false];
    if (has_isteamfollow()) {
      total_size += 1 + 1;
    }

    // optional sint32 CaptainLevel = 10 [default = -1];
    if (has_captainlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->captainlevel());
    }

    // optional sint64 CaptainUserId = 2 [default = -1];
    if (has_captainuserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->captainuserid());
    }

    // optional sint32 TeamId = 1 [default = -1];
    if (has_teamid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->teamid());
    }

    // optional sint32 MemberCount = 3 [default = -1];
    if (has_membercount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->membercount());
    }

    // optional sint32 TeamTarget = 4 [default = -1];
    if (has_teamtarget()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->teamtarget());
    }

    // optional sint32 CaptainProf = 6 [default = -1];
    if (has_captainprof()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->captainprof());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional sint32 TargetMinLv = 7 [default = -1];
    if (has_targetminlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->targetminlv());
    }

    // optional sint32 TargetMaxLv = 8 [default = -1];
    if (has_targetmaxlv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->targetmaxlv());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeamObj)
  GOOGLE_DCHECK_NE(&from, this);
  const TeamObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeamObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeamObj)
    MergeFrom(*source);
  }
}

void TeamObj::MergeFrom(const TeamObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeamObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  teammember_.MergeFrom(from.teammember_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      ismatching_ = from.ismatching_;
    }
    if (cached_has_bits & 0x00000002u) {
      isteamfollow_ = from.isteamfollow_;
    }
    if (cached_has_bits & 0x00000004u) {
      captainlevel_ = from.captainlevel_;
    }
    if (cached_has_bits & 0x00000008u) {
      captainuserid_ = from.captainuserid_;
    }
    if (cached_has_bits & 0x00000010u) {
      teamid_ = from.teamid_;
    }
    if (cached_has_bits & 0x00000020u) {
      membercount_ = from.membercount_;
    }
    if (cached_has_bits & 0x00000040u) {
      teamtarget_ = from.teamtarget_;
    }
    if (cached_has_bits & 0x00000080u) {
      captainprof_ = from.captainprof_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      targetminlv_ = from.targetminlv_;
    }
    if (cached_has_bits & 0x00000200u) {
      targetmaxlv_ = from.targetmaxlv_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TeamObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeamObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamObj::CopyFrom(const TeamObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeamObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TeamObj::IsInitialized() const {
  return true;
}

void TeamObj::Swap(TeamObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamObj::InternalSwap(TeamObj* other) {
  using std::swap;
  teammember_.InternalSwap(&other->teammember_);
  swap(ismatching_, other->ismatching_);
  swap(isteamfollow_, other->isteamfollow_);
  swap(captainlevel_, other->captainlevel_);
  swap(captainuserid_, other->captainuserid_);
  swap(teamid_, other->teamid_);
  swap(membercount_, other->membercount_);
  swap(teamtarget_, other->teamtarget_);
  swap(captainprof_, other->captainprof_);
  swap(targetminlv_, other->targetminlv_);
  swap(targetmaxlv_, other->targetmaxlv_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamObj

// optional sint32 TeamId = 1 [default = -1];
bool TeamObj::has_teamid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TeamObj::set_has_teamid() {
  _has_bits_[0] |= 0x00000010u;
}
void TeamObj::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000010u;
}
void TeamObj::clear_teamid() {
  teamid_ = -1;
  clear_has_teamid();
}
::google::protobuf::int32 TeamObj::teamid() const {
  // @@protoc_insertion_point(field_get:TeamObj.TeamId)
  return teamid_;
}
void TeamObj::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:TeamObj.TeamId)
}

// optional sint64 CaptainUserId = 2 [default = -1];
bool TeamObj::has_captainuserid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TeamObj::set_has_captainuserid() {
  _has_bits_[0] |= 0x00000008u;
}
void TeamObj::clear_has_captainuserid() {
  _has_bits_[0] &= ~0x00000008u;
}
void TeamObj::clear_captainuserid() {
  captainuserid_ = GOOGLE_LONGLONG(-1);
  clear_has_captainuserid();
}
::google::protobuf::int64 TeamObj::captainuserid() const {
  // @@protoc_insertion_point(field_get:TeamObj.CaptainUserId)
  return captainuserid_;
}
void TeamObj::set_captainuserid(::google::protobuf::int64 value) {
  set_has_captainuserid();
  captainuserid_ = value;
  // @@protoc_insertion_point(field_set:TeamObj.CaptainUserId)
}

// optional sint32 MemberCount = 3 [default = -1];
bool TeamObj::has_membercount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TeamObj::set_has_membercount() {
  _has_bits_[0] |= 0x00000020u;
}
void TeamObj::clear_has_membercount() {
  _has_bits_[0] &= ~0x00000020u;
}
void TeamObj::clear_membercount() {
  membercount_ = -1;
  clear_has_membercount();
}
::google::protobuf::int32 TeamObj::membercount() const {
  // @@protoc_insertion_point(field_get:TeamObj.MemberCount)
  return membercount_;
}
void TeamObj::set_membercount(::google::protobuf::int32 value) {
  set_has_membercount();
  membercount_ = value;
  // @@protoc_insertion_point(field_set:TeamObj.MemberCount)
}

// optional sint32 TeamTarget = 4 [default = -1];
bool TeamObj::has_teamtarget() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void TeamObj::set_has_teamtarget() {
  _has_bits_[0] |= 0x00000040u;
}
void TeamObj::clear_has_teamtarget() {
  _has_bits_[0] &= ~0x00000040u;
}
void TeamObj::clear_teamtarget() {
  teamtarget_ = -1;
  clear_has_teamtarget();
}
::google::protobuf::int32 TeamObj::teamtarget() const {
  // @@protoc_insertion_point(field_get:TeamObj.TeamTarget)
  return teamtarget_;
}
void TeamObj::set_teamtarget(::google::protobuf::int32 value) {
  set_has_teamtarget();
  teamtarget_ = value;
  // @@protoc_insertion_point(field_set:TeamObj.TeamTarget)
}

// repeated .TeamUserObj TeamMember = 5;
int TeamObj::teammember_size() const {
  return teammember_.size();
}
void TeamObj::clear_teammember() {
  teammember_.Clear();
}
const ::TeamUserObj& TeamObj::teammember(int index) const {
  // @@protoc_insertion_point(field_get:TeamObj.TeamMember)
  return teammember_.Get(index);
}
::TeamUserObj* TeamObj::mutable_teammember(int index) {
  // @@protoc_insertion_point(field_mutable:TeamObj.TeamMember)
  return teammember_.Mutable(index);
}
::TeamUserObj* TeamObj::add_teammember() {
  // @@protoc_insertion_point(field_add:TeamObj.TeamMember)
  return teammember_.Add();
}
::google::protobuf::RepeatedPtrField< ::TeamUserObj >*
TeamObj::mutable_teammember() {
  // @@protoc_insertion_point(field_mutable_list:TeamObj.TeamMember)
  return &teammember_;
}
const ::google::protobuf::RepeatedPtrField< ::TeamUserObj >&
TeamObj::teammember() const {
  // @@protoc_insertion_point(field_list:TeamObj.TeamMember)
  return teammember_;
}

// optional sint32 CaptainProf = 6 [default = -1];
bool TeamObj::has_captainprof() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void TeamObj::set_has_captainprof() {
  _has_bits_[0] |= 0x00000080u;
}
void TeamObj::clear_has_captainprof() {
  _has_bits_[0] &= ~0x00000080u;
}
void TeamObj::clear_captainprof() {
  captainprof_ = -1;
  clear_has_captainprof();
}
::google::protobuf::int32 TeamObj::captainprof() const {
  // @@protoc_insertion_point(field_get:TeamObj.CaptainProf)
  return captainprof_;
}
void TeamObj::set_captainprof(::google::protobuf::int32 value) {
  set_has_captainprof();
  captainprof_ = value;
  // @@protoc_insertion_point(field_set:TeamObj.CaptainProf)
}

// optional sint32 TargetMinLv = 7 [default = -1];
bool TeamObj::has_targetminlv() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void TeamObj::set_has_targetminlv() {
  _has_bits_[0] |= 0x00000100u;
}
void TeamObj::clear_has_targetminlv() {
  _has_bits_[0] &= ~0x00000100u;
}
void TeamObj::clear_targetminlv() {
  targetminlv_ = -1;
  clear_has_targetminlv();
}
::google::protobuf::int32 TeamObj::targetminlv() const {
  // @@protoc_insertion_point(field_get:TeamObj.TargetMinLv)
  return targetminlv_;
}
void TeamObj::set_targetminlv(::google::protobuf::int32 value) {
  set_has_targetminlv();
  targetminlv_ = value;
  // @@protoc_insertion_point(field_set:TeamObj.TargetMinLv)
}

// optional sint32 TargetMaxLv = 8 [default = -1];
bool TeamObj::has_targetmaxlv() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void TeamObj::set_has_targetmaxlv() {
  _has_bits_[0] |= 0x00000200u;
}
void TeamObj::clear_has_targetmaxlv() {
  _has_bits_[0] &= ~0x00000200u;
}
void TeamObj::clear_targetmaxlv() {
  targetmaxlv_ = -1;
  clear_has_targetmaxlv();
}
::google::protobuf::int32 TeamObj::targetmaxlv() const {
  // @@protoc_insertion_point(field_get:TeamObj.TargetMaxLv)
  return targetmaxlv_;
}
void TeamObj::set_targetmaxlv(::google::protobuf::int32 value) {
  set_has_targetmaxlv();
  targetmaxlv_ = value;
  // @@protoc_insertion_point(field_set:TeamObj.TargetMaxLv)
}

// optional bool IsMatching = 9 [default = false];
bool TeamObj::has_ismatching() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TeamObj::set_has_ismatching() {
  _has_bits_[0] |= 0x00000001u;
}
void TeamObj::clear_has_ismatching() {
  _has_bits_[0] &= ~0x00000001u;
}
void TeamObj::clear_ismatching() {
  ismatching_ = false;
  clear_has_ismatching();
}
bool TeamObj::ismatching() const {
  // @@protoc_insertion_point(field_get:TeamObj.IsMatching)
  return ismatching_;
}
void TeamObj::set_ismatching(bool value) {
  set_has_ismatching();
  ismatching_ = value;
  // @@protoc_insertion_point(field_set:TeamObj.IsMatching)
}

// optional sint32 CaptainLevel = 10 [default = -1];
bool TeamObj::has_captainlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TeamObj::set_has_captainlevel() {
  _has_bits_[0] |= 0x00000004u;
}
void TeamObj::clear_has_captainlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
void TeamObj::clear_captainlevel() {
  captainlevel_ = -1;
  clear_has_captainlevel();
}
::google::protobuf::int32 TeamObj::captainlevel() const {
  // @@protoc_insertion_point(field_get:TeamObj.CaptainLevel)
  return captainlevel_;
}
void TeamObj::set_captainlevel(::google::protobuf::int32 value) {
  set_has_captainlevel();
  captainlevel_ = value;
  // @@protoc_insertion_point(field_set:TeamObj.CaptainLevel)
}

// optional bool IsTeamFollow = 11 [default = false];
bool TeamObj::has_isteamfollow() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TeamObj::set_has_isteamfollow() {
  _has_bits_[0] |= 0x00000002u;
}
void TeamObj::clear_has_isteamfollow() {
  _has_bits_[0] &= ~0x00000002u;
}
void TeamObj::clear_isteamfollow() {
  isteamfollow_ = false;
  clear_has_isteamfollow();
}
bool TeamObj::isteamfollow() const {
  // @@protoc_insertion_point(field_get:TeamObj.IsTeamFollow)
  return isteamfollow_;
}
void TeamObj::set_isteamfollow(bool value) {
  set_has_isteamfollow();
  isteamfollow_ = value;
  // @@protoc_insertion_point(field_set:TeamObj.IsTeamFollow)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamApplyUserObj::kUserIdFieldNumber;
const int TeamApplyUserObj::kUserNameFieldNumber;
const int TeamApplyUserObj::kLevelFieldNumber;
const int TeamApplyUserObj::kProfFieldNumber;
const int TeamApplyUserObj::kTeamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamApplyUserObj::TeamApplyUserObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TeamApplyUserObj)
}
TeamApplyUserObj::TeamApplyUserObj(const TeamApplyUserObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  ::memcpy(&teamid_, &from.teamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&prof_) -
    reinterpret_cast<char*>(&teamid_)) + sizeof(prof_));
  // @@protoc_insertion_point(copy_constructor:TeamApplyUserObj)
}

void TeamApplyUserObj::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  teamid_ = -1;
  userid_ = GOOGLE_LONGLONG(-1);
  level_ = -1;
  prof_ = -1;
}

TeamApplyUserObj::~TeamApplyUserObj() {
  // @@protoc_insertion_point(destructor:TeamApplyUserObj)
  SharedDtor();
}

void TeamApplyUserObj::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TeamApplyUserObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamApplyUserObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TeamApplyUserObj& TeamApplyUserObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

TeamApplyUserObj* TeamApplyUserObj::New(::google::protobuf::Arena* arena) const {
  TeamApplyUserObj* n = new TeamApplyUserObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamApplyUserObj::Clear() {
// @@protoc_insertion_point(message_clear_start:TeamApplyUserObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    teamid_ = -1;
    userid_ = GOOGLE_LONGLONG(-1);
    level_ = -1;
    prof_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TeamApplyUserObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TeamApplyUserObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 UserId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string UserName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TeamApplyUserObj.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Level = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Prof = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_prof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &prof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TeamId = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_teamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TeamApplyUserObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TeamApplyUserObj)
  return false;
#undef DO_
}

void TeamApplyUserObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TeamApplyUserObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->userid(), output);
  }

  // optional string UserName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TeamApplyUserObj.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional sint32 Level = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->level(), output);
  }

  // optional sint32 Prof = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->prof(), output);
  }

  // optional sint32 TeamId = 5 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->teamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TeamApplyUserObj)
}

::google::protobuf::uint8* TeamApplyUserObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TeamApplyUserObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->userid(), target);
  }

  // optional string UserName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TeamApplyUserObj.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional sint32 Level = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->level(), target);
  }

  // optional sint32 Prof = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->prof(), target);
  }

  // optional sint32 TeamId = 5 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->teamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeamApplyUserObj)
  return target;
}

size_t TeamApplyUserObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeamApplyUserObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string UserName = 2;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional sint32 TeamId = 5 [default = -1];
    if (has_teamid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->teamid());
    }

    // optional sint64 UserId = 1 [default = -1];
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->userid());
    }

    // optional sint32 Level = 3 [default = -1];
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->level());
    }

    // optional sint32 Prof = 4 [default = -1];
    if (has_prof()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->prof());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamApplyUserObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeamApplyUserObj)
  GOOGLE_DCHECK_NE(&from, this);
  const TeamApplyUserObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamApplyUserObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeamApplyUserObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeamApplyUserObj)
    MergeFrom(*source);
  }
}

void TeamApplyUserObj::MergeFrom(const TeamApplyUserObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeamApplyUserObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      teamid_ = from.teamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000008u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000010u) {
      prof_ = from.prof_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TeamApplyUserObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeamApplyUserObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamApplyUserObj::CopyFrom(const TeamApplyUserObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeamApplyUserObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TeamApplyUserObj::IsInitialized() const {
  return true;
}

void TeamApplyUserObj::Swap(TeamApplyUserObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamApplyUserObj::InternalSwap(TeamApplyUserObj* other) {
  using std::swap;
  username_.Swap(&other->username_);
  swap(teamid_, other->teamid_);
  swap(userid_, other->userid_);
  swap(level_, other->level_);
  swap(prof_, other->prof_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamApplyUserObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamApplyUserObj

// optional sint64 UserId = 1 [default = -1];
bool TeamApplyUserObj::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TeamApplyUserObj::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
void TeamApplyUserObj::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
void TeamApplyUserObj::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 TeamApplyUserObj::userid() const {
  // @@protoc_insertion_point(field_get:TeamApplyUserObj.UserId)
  return userid_;
}
void TeamApplyUserObj::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:TeamApplyUserObj.UserId)
}

// optional string UserName = 2;
bool TeamApplyUserObj::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TeamApplyUserObj::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void TeamApplyUserObj::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void TeamApplyUserObj::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& TeamApplyUserObj::username() const {
  // @@protoc_insertion_point(field_get:TeamApplyUserObj.UserName)
  return username_.GetNoArena();
}
void TeamApplyUserObj::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TeamApplyUserObj.UserName)
}
#if LANG_CXX11
void TeamApplyUserObj::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TeamApplyUserObj.UserName)
}
#endif
void TeamApplyUserObj::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TeamApplyUserObj.UserName)
}
void TeamApplyUserObj::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TeamApplyUserObj.UserName)
}
::std::string* TeamApplyUserObj::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:TeamApplyUserObj.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TeamApplyUserObj::release_username() {
  // @@protoc_insertion_point(field_release:TeamApplyUserObj.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TeamApplyUserObj::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:TeamApplyUserObj.UserName)
}

// optional sint32 Level = 3 [default = -1];
bool TeamApplyUserObj::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TeamApplyUserObj::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
void TeamApplyUserObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
void TeamApplyUserObj::clear_level() {
  level_ = -1;
  clear_has_level();
}
::google::protobuf::int32 TeamApplyUserObj::level() const {
  // @@protoc_insertion_point(field_get:TeamApplyUserObj.Level)
  return level_;
}
void TeamApplyUserObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:TeamApplyUserObj.Level)
}

// optional sint32 Prof = 4 [default = -1];
bool TeamApplyUserObj::has_prof() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TeamApplyUserObj::set_has_prof() {
  _has_bits_[0] |= 0x00000010u;
}
void TeamApplyUserObj::clear_has_prof() {
  _has_bits_[0] &= ~0x00000010u;
}
void TeamApplyUserObj::clear_prof() {
  prof_ = -1;
  clear_has_prof();
}
::google::protobuf::int32 TeamApplyUserObj::prof() const {
  // @@protoc_insertion_point(field_get:TeamApplyUserObj.Prof)
  return prof_;
}
void TeamApplyUserObj::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
  // @@protoc_insertion_point(field_set:TeamApplyUserObj.Prof)
}

// optional sint32 TeamId = 5 [default = -1];
bool TeamApplyUserObj::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TeamApplyUserObj::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
void TeamApplyUserObj::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
void TeamApplyUserObj::clear_teamid() {
  teamid_ = -1;
  clear_has_teamid();
}
::google::protobuf::int32 TeamApplyUserObj::teamid() const {
  // @@protoc_insertion_point(field_get:TeamApplyUserObj.TeamId)
  return teamid_;
}
void TeamApplyUserObj::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:TeamApplyUserObj.TeamId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRecycleGridObj::kItemIdFieldNumber;
const int BagRecycleGridObj::kTemplateIdFieldNumber;
const int BagRecycleGridObj::kNumFieldNumber;
const int BagRecycleGridObj::kItemTypeFieldNumber;
const int BagRecycleGridObj::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRecycleGridObj::BagRecycleGridObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRecycleGridObj)
}
BagRecycleGridObj::BagRecycleGridObj(const BagRecycleGridObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&itemid_, &from.itemid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&itemid_)) + sizeof(pos_));
  // @@protoc_insertion_point(copy_constructor:BagRecycleGridObj)
}

void BagRecycleGridObj::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = GOOGLE_LONGLONG(-1);
  templateid_ = -1;
  num_ = -1;
  itemtype_ = -1;
  pos_ = -1;
}

BagRecycleGridObj::~BagRecycleGridObj() {
  // @@protoc_insertion_point(destructor:BagRecycleGridObj)
  SharedDtor();
}

void BagRecycleGridObj::SharedDtor() {
}

void BagRecycleGridObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRecycleGridObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRecycleGridObj& BagRecycleGridObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRecycleGridObj* BagRecycleGridObj::New(::google::protobuf::Arena* arena) const {
  BagRecycleGridObj* n = new BagRecycleGridObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRecycleGridObj::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRecycleGridObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    itemid_ = GOOGLE_LONGLONG(-1);
    templateid_ = -1;
    num_ = -1;
    itemtype_ = -1;
    pos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRecycleGridObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRecycleGridObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 ItemId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TemplateId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Num = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ItemType = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_itemtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRecycleGridObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRecycleGridObj)
  return false;
#undef DO_
}

void BagRecycleGridObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRecycleGridObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 ItemId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->itemid(), output);
  }

  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->templateid(), output);
  }

  // optional sint32 Num = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->num(), output);
  }

  // optional sint32 ItemType = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->itemtype(), output);
  }

  // optional sint32 Pos = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->pos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRecycleGridObj)
}

::google::protobuf::uint8* BagRecycleGridObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRecycleGridObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 ItemId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->itemid(), target);
  }

  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->templateid(), target);
  }

  // optional sint32 Num = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->num(), target);
  }

  // optional sint32 ItemType = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->itemtype(), target);
  }

  // optional sint32 Pos = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->pos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRecycleGridObj)
  return target;
}

size_t BagRecycleGridObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRecycleGridObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional sint64 ItemId = 1 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->itemid());
    }

    // optional sint32 TemplateId = 2 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 Num = 3 [default = -1];
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->num());
    }

    // optional sint32 ItemType = 4 [default = -1];
    if (has_itemtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemtype());
    }

    // optional sint32 Pos = 5 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRecycleGridObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRecycleGridObj)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRecycleGridObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRecycleGridObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRecycleGridObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRecycleGridObj)
    MergeFrom(*source);
  }
}

void BagRecycleGridObj::MergeFrom(const BagRecycleGridObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRecycleGridObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      itemid_ = from.itemid_;
    }
    if (cached_has_bits & 0x00000002u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000004u) {
      num_ = from.num_;
    }
    if (cached_has_bits & 0x00000008u) {
      itemtype_ = from.itemtype_;
    }
    if (cached_has_bits & 0x00000010u) {
      pos_ = from.pos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRecycleGridObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRecycleGridObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRecycleGridObj::CopyFrom(const BagRecycleGridObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRecycleGridObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRecycleGridObj::IsInitialized() const {
  return true;
}

void BagRecycleGridObj::Swap(BagRecycleGridObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRecycleGridObj::InternalSwap(BagRecycleGridObj* other) {
  using std::swap;
  swap(itemid_, other->itemid_);
  swap(templateid_, other->templateid_);
  swap(num_, other->num_);
  swap(itemtype_, other->itemtype_);
  swap(pos_, other->pos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRecycleGridObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRecycleGridObj

// optional sint64 ItemId = 1 [default = -1];
bool BagRecycleGridObj::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRecycleGridObj::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRecycleGridObj::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRecycleGridObj::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(-1);
  clear_has_itemid();
}
::google::protobuf::int64 BagRecycleGridObj::itemid() const {
  // @@protoc_insertion_point(field_get:BagRecycleGridObj.ItemId)
  return itemid_;
}
void BagRecycleGridObj::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagRecycleGridObj.ItemId)
}

// optional sint32 TemplateId = 2 [default = -1];
bool BagRecycleGridObj::has_templateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRecycleGridObj::set_has_templateid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRecycleGridObj::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRecycleGridObj::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagRecycleGridObj::templateid() const {
  // @@protoc_insertion_point(field_get:BagRecycleGridObj.TemplateId)
  return templateid_;
}
void BagRecycleGridObj::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRecycleGridObj.TemplateId)
}

// optional sint32 Num = 3 [default = -1];
bool BagRecycleGridObj::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRecycleGridObj::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRecycleGridObj::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRecycleGridObj::clear_num() {
  num_ = -1;
  clear_has_num();
}
::google::protobuf::int32 BagRecycleGridObj::num() const {
  // @@protoc_insertion_point(field_get:BagRecycleGridObj.Num)
  return num_;
}
void BagRecycleGridObj::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:BagRecycleGridObj.Num)
}

// optional sint32 ItemType = 4 [default = -1];
bool BagRecycleGridObj::has_itemtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRecycleGridObj::set_has_itemtype() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRecycleGridObj::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRecycleGridObj::clear_itemtype() {
  itemtype_ = -1;
  clear_has_itemtype();
}
::google::protobuf::int32 BagRecycleGridObj::itemtype() const {
  // @@protoc_insertion_point(field_get:BagRecycleGridObj.ItemType)
  return itemtype_;
}
void BagRecycleGridObj::set_itemtype(::google::protobuf::int32 value) {
  set_has_itemtype();
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:BagRecycleGridObj.ItemType)
}

// optional sint32 Pos = 5 [default = -1];
bool BagRecycleGridObj::has_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BagRecycleGridObj::set_has_pos() {
  _has_bits_[0] |= 0x00000010u;
}
void BagRecycleGridObj::clear_has_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
void BagRecycleGridObj::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRecycleGridObj::pos() const {
  // @@protoc_insertion_point(field_get:BagRecycleGridObj.Pos)
  return pos_;
}
void BagRecycleGridObj::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRecycleGridObj.Pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyValue2::kKeyFieldNumber;
const int KeyValue2::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyValue2::KeyValue2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyValue2)
}
KeyValue2::KeyValue2(const KeyValue2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&key_, &from.key_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&key_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:KeyValue2)
}

void KeyValue2::SharedCtor() {
  _cached_size_ = 0;
  key_ = -1;
  value_ = -1;
}

KeyValue2::~KeyValue2() {
  // @@protoc_insertion_point(destructor:KeyValue2)
  SharedDtor();
}

void KeyValue2::SharedDtor() {
}

void KeyValue2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyValue2::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyValue2& KeyValue2::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

KeyValue2* KeyValue2::New(::google::protobuf::Arena* arena) const {
  KeyValue2* n = new KeyValue2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeyValue2::Clear() {
// @@protoc_insertion_point(message_clear_start:KeyValue2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    key_ = -1;
    value_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool KeyValue2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KeyValue2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Key = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_key();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float Value = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KeyValue2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KeyValue2)
  return false;
#undef DO_
}

void KeyValue2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KeyValue2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Key = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->key(), output);
  }

  // optional float Value = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:KeyValue2)
}

::google::protobuf::uint8* KeyValue2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KeyValue2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Key = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->key(), target);
  }

  // optional float Value = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyValue2)
  return target;
}

size_t KeyValue2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeyValue2)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Key = 1 [default = -1];
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->key());
    }

    // optional float Value = 2 [default = -1];
    if (has_value()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyValue2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeyValue2)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyValue2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyValue2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeyValue2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeyValue2)
    MergeFrom(*source);
  }
}

void KeyValue2::MergeFrom(const KeyValue2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeyValue2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_ = from.key_;
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void KeyValue2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeyValue2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValue2::CopyFrom(const KeyValue2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeyValue2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValue2::IsInitialized() const {
  return true;
}

void KeyValue2::Swap(KeyValue2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyValue2::InternalSwap(KeyValue2* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeyValue2::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeyValue2

// optional sint32 Key = 1 [default = -1];
bool KeyValue2::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void KeyValue2::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void KeyValue2::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void KeyValue2::clear_key() {
  key_ = -1;
  clear_has_key();
}
::google::protobuf::int32 KeyValue2::key() const {
  // @@protoc_insertion_point(field_get:KeyValue2.Key)
  return key_;
}
void KeyValue2::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:KeyValue2.Key)
}

// optional float Value = 2 [default = -1];
bool KeyValue2::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void KeyValue2::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void KeyValue2::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void KeyValue2::clear_value() {
  value_ = -1;
  clear_has_value();
}
float KeyValue2::value() const {
  // @@protoc_insertion_point(field_get:KeyValue2.Value)
  return value_;
}
void KeyValue2::set_value(float value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:KeyValue2.Value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EquipSkillBuff2::kIdFieldNumber;
const int EquipSkillBuff2::kLVFieldNumber;
const int EquipSkillBuff2::kCdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EquipSkillBuff2::EquipSkillBuff2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:EquipSkillBuff2)
}
EquipSkillBuff2::EquipSkillBuff2(const EquipSkillBuff2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cd_, &from.cd_,
    static_cast<size_t>(reinterpret_cast<char*>(&lv_) -
    reinterpret_cast<char*>(&cd_)) + sizeof(lv_));
  // @@protoc_insertion_point(copy_constructor:EquipSkillBuff2)
}

void EquipSkillBuff2::SharedCtor() {
  _cached_size_ = 0;
  cd_ = -1;
  id_ = -1;
  lv_ = -1;
}

EquipSkillBuff2::~EquipSkillBuff2() {
  // @@protoc_insertion_point(destructor:EquipSkillBuff2)
  SharedDtor();
}

void EquipSkillBuff2::SharedDtor() {
}

void EquipSkillBuff2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipSkillBuff2::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EquipSkillBuff2& EquipSkillBuff2::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

EquipSkillBuff2* EquipSkillBuff2::New(::google::protobuf::Arena* arena) const {
  EquipSkillBuff2* n = new EquipSkillBuff2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EquipSkillBuff2::Clear() {
// @@protoc_insertion_point(message_clear_start:EquipSkillBuff2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    cd_ = -1;
    id_ = -1;
    lv_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EquipSkillBuff2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EquipSkillBuff2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Id = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 LV = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_lv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &lv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Cd = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_cd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &cd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EquipSkillBuff2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EquipSkillBuff2)
  return false;
#undef DO_
}

void EquipSkillBuff2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EquipSkillBuff2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Id = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->id(), output);
  }

  // optional sint32 LV = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->lv(), output);
  }

  // optional sint32 Cd = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->cd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EquipSkillBuff2)
}

::google::protobuf::uint8* EquipSkillBuff2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EquipSkillBuff2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Id = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->id(), target);
  }

  // optional sint32 LV = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->lv(), target);
  }

  // optional sint32 Cd = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->cd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EquipSkillBuff2)
  return target;
}

size_t EquipSkillBuff2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EquipSkillBuff2)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 Cd = 3 [default = -1];
    if (has_cd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->cd());
    }

    // optional sint32 Id = 1 [default = -1];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->id());
    }

    // optional sint32 LV = 2 [default = -1];
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->lv());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipSkillBuff2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EquipSkillBuff2)
  GOOGLE_DCHECK_NE(&from, this);
  const EquipSkillBuff2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EquipSkillBuff2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EquipSkillBuff2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EquipSkillBuff2)
    MergeFrom(*source);
  }
}

void EquipSkillBuff2::MergeFrom(const EquipSkillBuff2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EquipSkillBuff2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      cd_ = from.cd_;
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      lv_ = from.lv_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EquipSkillBuff2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EquipSkillBuff2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipSkillBuff2::CopyFrom(const EquipSkillBuff2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EquipSkillBuff2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipSkillBuff2::IsInitialized() const {
  return true;
}

void EquipSkillBuff2::Swap(EquipSkillBuff2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EquipSkillBuff2::InternalSwap(EquipSkillBuff2* other) {
  using std::swap;
  swap(cd_, other->cd_);
  swap(id_, other->id_);
  swap(lv_, other->lv_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EquipSkillBuff2::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EquipSkillBuff2

// optional sint32 Id = 1 [default = -1];
bool EquipSkillBuff2::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EquipSkillBuff2::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void EquipSkillBuff2::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void EquipSkillBuff2::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 EquipSkillBuff2::id() const {
  // @@protoc_insertion_point(field_get:EquipSkillBuff2.Id)
  return id_;
}
void EquipSkillBuff2::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:EquipSkillBuff2.Id)
}

// optional sint32 LV = 2 [default = -1];
bool EquipSkillBuff2::has_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void EquipSkillBuff2::set_has_lv() {
  _has_bits_[0] |= 0x00000004u;
}
void EquipSkillBuff2::clear_has_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
void EquipSkillBuff2::clear_lv() {
  lv_ = -1;
  clear_has_lv();
}
::google::protobuf::int32 EquipSkillBuff2::lv() const {
  // @@protoc_insertion_point(field_get:EquipSkillBuff2.LV)
  return lv_;
}
void EquipSkillBuff2::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:EquipSkillBuff2.LV)
}

// optional sint32 Cd = 3 [default = -1];
bool EquipSkillBuff2::has_cd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EquipSkillBuff2::set_has_cd() {
  _has_bits_[0] |= 0x00000001u;
}
void EquipSkillBuff2::clear_has_cd() {
  _has_bits_[0] &= ~0x00000001u;
}
void EquipSkillBuff2::clear_cd() {
  cd_ = -1;
  clear_has_cd();
}
::google::protobuf::int32 EquipSkillBuff2::cd() const {
  // @@protoc_insertion_point(field_get:EquipSkillBuff2.Cd)
  return cd_;
}
void EquipSkillBuff2::set_cd(::google::protobuf::int32 value) {
  set_has_cd();
  cd_ = value;
  // @@protoc_insertion_point(field_set:EquipSkillBuff2.Cd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildMemberObj::kUserIdFieldNumber;
const int GuildMemberObj::kUserNameFieldNumber;
const int GuildMemberObj::kLevelFieldNumber;
const int GuildMemberObj::kProfFieldNumber;
const int GuildMemberObj::kDutyFieldNumber;
const int GuildMemberObj::kCurContributionFieldNumber;
const int GuildMemberObj::kMaxContributionFieldNumber;
const int GuildMemberObj::kLeagueMatchesCountFieldNumber;
const int GuildMemberObj::kOfflineTimeFieldNumber;
const int GuildMemberObj::kJoinTimeFieldNumber;
const int GuildMemberObj::kDropItemArrayFieldNumber;
const int GuildMemberObj::kIsOnlineFieldNumber;
const int GuildMemberObj::kIsGuildDungeonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildMemberObj::GuildMemberObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildMemberObj)
}
GuildMemberObj::GuildMemberObj(const GuildMemberObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      dropitemarray_(from.dropitemarray_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  ::memcpy(&isguilddungeon_, &from.isguilddungeon_,
    static_cast<size_t>(reinterpret_cast<char*>(&jointime_) -
    reinterpret_cast<char*>(&isguilddungeon_)) + sizeof(jointime_));
  // @@protoc_insertion_point(copy_constructor:GuildMemberObj)
}

void GuildMemberObj::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isguilddungeon_ = false;
  isonline_ = true;
  userid_ = GOOGLE_LONGLONG(-1);
  level_ = -1;
  prof_ = -1;
  duty_ = -1;
  curcontribution_ = -1;
  maxcontribution_ = -1;
  leaguematchescount_ = -1;
  offlinetime_ = -1;
  jointime_ = -1;
}

GuildMemberObj::~GuildMemberObj() {
  // @@protoc_insertion_point(destructor:GuildMemberObj)
  SharedDtor();
}

void GuildMemberObj::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GuildMemberObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildMemberObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildMemberObj& GuildMemberObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildMemberObj* GuildMemberObj::New(::google::protobuf::Arena* arena) const {
  GuildMemberObj* n = new GuildMemberObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildMemberObj::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildMemberObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dropitemarray_.Clear();
  if (has_username()) {
    GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*username_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 254u) {
    isguilddungeon_ = false;
    isonline_ = true;
    userid_ = GOOGLE_LONGLONG(-1);
    level_ = -1;
    prof_ = -1;
    duty_ = -1;
    curcontribution_ = -1;
  }
  if (cached_has_bits & 3840u) {
    maxcontribution_ = -1;
    leaguematchescount_ = -1;
    offlinetime_ = -1;
    jointime_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildMemberObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildMemberObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 UserId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string UserName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildMemberObj.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Level = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Prof = 9 [default = -1];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_prof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &prof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Duty = 10 [default = -1];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_duty();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &duty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 CurContribution = 11 [default = -1];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_curcontribution();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &curcontribution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 MaxContribution = 12 [default = -1];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_maxcontribution();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &maxcontribution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 LeagueMatchesCount = 13 [default = -1];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_leaguematchescount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &leaguematchescount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 OfflineTime = 14 [default = -1];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_offlinetime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &offlinetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 JoinTime = 15 [default = -1];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_jointime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &jointime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 DropItemArray = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 128u, input, this->mutable_dropitemarray())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_dropitemarray())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsOnline = 17 [default = true];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_isonline();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isonline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsGuildDungeon = 18 [default = false];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_isguilddungeon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isguilddungeon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildMemberObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildMemberObj)
  return false;
#undef DO_
}

void GuildMemberObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildMemberObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->userid(), output);
  }

  // optional string UserName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildMemberObj.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional sint32 Level = 3 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->level(), output);
  }

  // optional sint32 Prof = 9 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(9, this->prof(), output);
  }

  // optional sint32 Duty = 10 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(10, this->duty(), output);
  }

  // optional sint32 CurContribution = 11 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(11, this->curcontribution(), output);
  }

  // optional sint32 MaxContribution = 12 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(12, this->maxcontribution(), output);
  }

  // optional sint32 LeagueMatchesCount = 13 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(13, this->leaguematchescount(), output);
  }

  // optional sint32 OfflineTime = 14 [default = -1];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(14, this->offlinetime(), output);
  }

  // optional sint32 JoinTime = 15 [default = -1];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(15, this->jointime(), output);
  }

  // repeated sint32 DropItemArray = 16;
  for (int i = 0, n = this->dropitemarray_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      16, this->dropitemarray(i), output);
  }

  // optional bool IsOnline = 17 [default = true];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->isonline(), output);
  }

  // optional bool IsGuildDungeon = 18 [default = false];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->isguilddungeon(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildMemberObj)
}

::google::protobuf::uint8* GuildMemberObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildMemberObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->userid(), target);
  }

  // optional string UserName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildMemberObj.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional sint32 Level = 3 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->level(), target);
  }

  // optional sint32 Prof = 9 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(9, this->prof(), target);
  }

  // optional sint32 Duty = 10 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(10, this->duty(), target);
  }

  // optional sint32 CurContribution = 11 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(11, this->curcontribution(), target);
  }

  // optional sint32 MaxContribution = 12 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(12, this->maxcontribution(), target);
  }

  // optional sint32 LeagueMatchesCount = 13 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(13, this->leaguematchescount(), target);
  }

  // optional sint32 OfflineTime = 14 [default = -1];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(14, this->offlinetime(), target);
  }

  // optional sint32 JoinTime = 15 [default = -1];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(15, this->jointime(), target);
  }

  // repeated sint32 DropItemArray = 16;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSInt32ToArray(16, this->dropitemarray_, target);

  // optional bool IsOnline = 17 [default = true];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->isonline(), target);
  }

  // optional bool IsGuildDungeon = 18 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->isguilddungeon(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildMemberObj)
  return target;
}

size_t GuildMemberObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildMemberObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated sint32 DropItemArray = 16;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->dropitemarray_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->dropitemarray_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string UserName = 2;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional bool IsGuildDungeon = 18 [default = false];
    if (has_isguilddungeon()) {
      total_size += 2 + 1;
    }

    // optional bool IsOnline = 17 [default = true];
    if (has_isonline()) {
      total_size += 2 + 1;
    }

    // optional sint64 UserId = 1 [default = -1];
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->userid());
    }

    // optional sint32 Level = 3 [default = -1];
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->level());
    }

    // optional sint32 Prof = 9 [default = -1];
    if (has_prof()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->prof());
    }

    // optional sint32 Duty = 10 [default = -1];
    if (has_duty()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->duty());
    }

    // optional sint32 CurContribution = 11 [default = -1];
    if (has_curcontribution()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->curcontribution());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional sint32 MaxContribution = 12 [default = -1];
    if (has_maxcontribution()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->maxcontribution());
    }

    // optional sint32 LeagueMatchesCount = 13 [default = -1];
    if (has_leaguematchescount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->leaguematchescount());
    }

    // optional sint32 OfflineTime = 14 [default = -1];
    if (has_offlinetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->offlinetime());
    }

    // optional sint32 JoinTime = 15 [default = -1];
    if (has_jointime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->jointime());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildMemberObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildMemberObj)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildMemberObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildMemberObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildMemberObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildMemberObj)
    MergeFrom(*source);
  }
}

void GuildMemberObj::MergeFrom(const GuildMemberObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildMemberObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dropitemarray_.MergeFrom(from.dropitemarray_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      isguilddungeon_ = from.isguilddungeon_;
    }
    if (cached_has_bits & 0x00000004u) {
      isonline_ = from.isonline_;
    }
    if (cached_has_bits & 0x00000008u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000010u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000020u) {
      prof_ = from.prof_;
    }
    if (cached_has_bits & 0x00000040u) {
      duty_ = from.duty_;
    }
    if (cached_has_bits & 0x00000080u) {
      curcontribution_ = from.curcontribution_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      maxcontribution_ = from.maxcontribution_;
    }
    if (cached_has_bits & 0x00000200u) {
      leaguematchescount_ = from.leaguematchescount_;
    }
    if (cached_has_bits & 0x00000400u) {
      offlinetime_ = from.offlinetime_;
    }
    if (cached_has_bits & 0x00000800u) {
      jointime_ = from.jointime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildMemberObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildMemberObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildMemberObj::CopyFrom(const GuildMemberObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildMemberObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildMemberObj::IsInitialized() const {
  return true;
}

void GuildMemberObj::Swap(GuildMemberObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildMemberObj::InternalSwap(GuildMemberObj* other) {
  using std::swap;
  dropitemarray_.InternalSwap(&other->dropitemarray_);
  username_.Swap(&other->username_);
  swap(isguilddungeon_, other->isguilddungeon_);
  swap(isonline_, other->isonline_);
  swap(userid_, other->userid_);
  swap(level_, other->level_);
  swap(prof_, other->prof_);
  swap(duty_, other->duty_);
  swap(curcontribution_, other->curcontribution_);
  swap(maxcontribution_, other->maxcontribution_);
  swap(leaguematchescount_, other->leaguematchescount_);
  swap(offlinetime_, other->offlinetime_);
  swap(jointime_, other->jointime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildMemberObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildMemberObj

// optional sint64 UserId = 1 [default = -1];
bool GuildMemberObj::has_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GuildMemberObj::set_has_userid() {
  _has_bits_[0] |= 0x00000008u;
}
void GuildMemberObj::clear_has_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
void GuildMemberObj::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 GuildMemberObj::userid() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.UserId)
  return userid_;
}
void GuildMemberObj::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.UserId)
}

// optional string UserName = 2;
bool GuildMemberObj::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildMemberObj::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildMemberObj::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildMemberObj::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& GuildMemberObj::username() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.UserName)
  return username_.GetNoArena();
}
void GuildMemberObj::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildMemberObj.UserName)
}
#if LANG_CXX11
void GuildMemberObj::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildMemberObj.UserName)
}
#endif
void GuildMemberObj::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildMemberObj.UserName)
}
void GuildMemberObj::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildMemberObj.UserName)
}
::std::string* GuildMemberObj::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:GuildMemberObj.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildMemberObj::release_username() {
  // @@protoc_insertion_point(field_release:GuildMemberObj.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildMemberObj::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:GuildMemberObj.UserName)
}

// optional sint32 Level = 3 [default = -1];
bool GuildMemberObj::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GuildMemberObj::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
void GuildMemberObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
void GuildMemberObj::clear_level() {
  level_ = -1;
  clear_has_level();
}
::google::protobuf::int32 GuildMemberObj::level() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.Level)
  return level_;
}
void GuildMemberObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.Level)
}

// optional sint32 Prof = 9 [default = -1];
bool GuildMemberObj::has_prof() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GuildMemberObj::set_has_prof() {
  _has_bits_[0] |= 0x00000020u;
}
void GuildMemberObj::clear_has_prof() {
  _has_bits_[0] &= ~0x00000020u;
}
void GuildMemberObj::clear_prof() {
  prof_ = -1;
  clear_has_prof();
}
::google::protobuf::int32 GuildMemberObj::prof() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.Prof)
  return prof_;
}
void GuildMemberObj::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.Prof)
}

// optional sint32 Duty = 10 [default = -1];
bool GuildMemberObj::has_duty() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void GuildMemberObj::set_has_duty() {
  _has_bits_[0] |= 0x00000040u;
}
void GuildMemberObj::clear_has_duty() {
  _has_bits_[0] &= ~0x00000040u;
}
void GuildMemberObj::clear_duty() {
  duty_ = -1;
  clear_has_duty();
}
::google::protobuf::int32 GuildMemberObj::duty() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.Duty)
  return duty_;
}
void GuildMemberObj::set_duty(::google::protobuf::int32 value) {
  set_has_duty();
  duty_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.Duty)
}

// optional sint32 CurContribution = 11 [default = -1];
bool GuildMemberObj::has_curcontribution() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void GuildMemberObj::set_has_curcontribution() {
  _has_bits_[0] |= 0x00000080u;
}
void GuildMemberObj::clear_has_curcontribution() {
  _has_bits_[0] &= ~0x00000080u;
}
void GuildMemberObj::clear_curcontribution() {
  curcontribution_ = -1;
  clear_has_curcontribution();
}
::google::protobuf::int32 GuildMemberObj::curcontribution() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.CurContribution)
  return curcontribution_;
}
void GuildMemberObj::set_curcontribution(::google::protobuf::int32 value) {
  set_has_curcontribution();
  curcontribution_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.CurContribution)
}

// optional sint32 MaxContribution = 12 [default = -1];
bool GuildMemberObj::has_maxcontribution() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void GuildMemberObj::set_has_maxcontribution() {
  _has_bits_[0] |= 0x00000100u;
}
void GuildMemberObj::clear_has_maxcontribution() {
  _has_bits_[0] &= ~0x00000100u;
}
void GuildMemberObj::clear_maxcontribution() {
  maxcontribution_ = -1;
  clear_has_maxcontribution();
}
::google::protobuf::int32 GuildMemberObj::maxcontribution() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.MaxContribution)
  return maxcontribution_;
}
void GuildMemberObj::set_maxcontribution(::google::protobuf::int32 value) {
  set_has_maxcontribution();
  maxcontribution_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.MaxContribution)
}

// optional sint32 LeagueMatchesCount = 13 [default = -1];
bool GuildMemberObj::has_leaguematchescount() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void GuildMemberObj::set_has_leaguematchescount() {
  _has_bits_[0] |= 0x00000200u;
}
void GuildMemberObj::clear_has_leaguematchescount() {
  _has_bits_[0] &= ~0x00000200u;
}
void GuildMemberObj::clear_leaguematchescount() {
  leaguematchescount_ = -1;
  clear_has_leaguematchescount();
}
::google::protobuf::int32 GuildMemberObj::leaguematchescount() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.LeagueMatchesCount)
  return leaguematchescount_;
}
void GuildMemberObj::set_leaguematchescount(::google::protobuf::int32 value) {
  set_has_leaguematchescount();
  leaguematchescount_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.LeagueMatchesCount)
}

// optional sint32 OfflineTime = 14 [default = -1];
bool GuildMemberObj::has_offlinetime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void GuildMemberObj::set_has_offlinetime() {
  _has_bits_[0] |= 0x00000400u;
}
void GuildMemberObj::clear_has_offlinetime() {
  _has_bits_[0] &= ~0x00000400u;
}
void GuildMemberObj::clear_offlinetime() {
  offlinetime_ = -1;
  clear_has_offlinetime();
}
::google::protobuf::int32 GuildMemberObj::offlinetime() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.OfflineTime)
  return offlinetime_;
}
void GuildMemberObj::set_offlinetime(::google::protobuf::int32 value) {
  set_has_offlinetime();
  offlinetime_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.OfflineTime)
}

// optional sint32 JoinTime = 15 [default = -1];
bool GuildMemberObj::has_jointime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void GuildMemberObj::set_has_jointime() {
  _has_bits_[0] |= 0x00000800u;
}
void GuildMemberObj::clear_has_jointime() {
  _has_bits_[0] &= ~0x00000800u;
}
void GuildMemberObj::clear_jointime() {
  jointime_ = -1;
  clear_has_jointime();
}
::google::protobuf::int32 GuildMemberObj::jointime() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.JoinTime)
  return jointime_;
}
void GuildMemberObj::set_jointime(::google::protobuf::int32 value) {
  set_has_jointime();
  jointime_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.JoinTime)
}

// repeated sint32 DropItemArray = 16;
int GuildMemberObj::dropitemarray_size() const {
  return dropitemarray_.size();
}
void GuildMemberObj::clear_dropitemarray() {
  dropitemarray_.Clear();
}
::google::protobuf::int32 GuildMemberObj::dropitemarray(int index) const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.DropItemArray)
  return dropitemarray_.Get(index);
}
void GuildMemberObj::set_dropitemarray(int index, ::google::protobuf::int32 value) {
  dropitemarray_.Set(index, value);
  // @@protoc_insertion_point(field_set:GuildMemberObj.DropItemArray)
}
void GuildMemberObj::add_dropitemarray(::google::protobuf::int32 value) {
  dropitemarray_.Add(value);
  // @@protoc_insertion_point(field_add:GuildMemberObj.DropItemArray)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GuildMemberObj::dropitemarray() const {
  // @@protoc_insertion_point(field_list:GuildMemberObj.DropItemArray)
  return dropitemarray_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GuildMemberObj::mutable_dropitemarray() {
  // @@protoc_insertion_point(field_mutable_list:GuildMemberObj.DropItemArray)
  return &dropitemarray_;
}

// optional bool IsOnline = 17 [default = true];
bool GuildMemberObj::has_isonline() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GuildMemberObj::set_has_isonline() {
  _has_bits_[0] |= 0x00000004u;
}
void GuildMemberObj::clear_has_isonline() {
  _has_bits_[0] &= ~0x00000004u;
}
void GuildMemberObj::clear_isonline() {
  isonline_ = true;
  clear_has_isonline();
}
bool GuildMemberObj::isonline() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.IsOnline)
  return isonline_;
}
void GuildMemberObj::set_isonline(bool value) {
  set_has_isonline();
  isonline_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.IsOnline)
}

// optional bool IsGuildDungeon = 18 [default = false];
bool GuildMemberObj::has_isguilddungeon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildMemberObj::set_has_isguilddungeon() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildMemberObj::clear_has_isguilddungeon() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildMemberObj::clear_isguilddungeon() {
  isguilddungeon_ = false;
  clear_has_isguilddungeon();
}
bool GuildMemberObj::isguilddungeon() const {
  // @@protoc_insertion_point(field_get:GuildMemberObj.IsGuildDungeon)
  return isguilddungeon_;
}
void GuildMemberObj::set_isguilddungeon(bool value) {
  set_has_isguilddungeon();
  isguilddungeon_ = value;
  // @@protoc_insertion_point(field_set:GuildMemberObj.IsGuildDungeon)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildInfoObj::kGuildFieldNumber;
const int GuildInfoObj::kGuildNameFieldNumber;
const int GuildInfoObj::kLevelFieldNumber;
const int GuildInfoObj::kCaptainIdFieldNumber;
const int GuildInfoObj::kCaptainNameFieldNumber;
const int GuildInfoObj::kFundsFieldNumber;
const int GuildInfoObj::kCurMemberNumFieldNumber;
const int GuildInfoObj::kGuildMemberFieldNumber;
const int GuildInfoObj::kMaintenanceCostFieldNumber;
const int GuildInfoObj::kLeagueMatchesRankFieldNumber;
const int GuildInfoObj::kAnnouncementFieldNumber;
const int GuildInfoObj::kTotalMilitaryFieldNumber;
const int GuildInfoObj::kApplyListFieldNumber;
const int GuildInfoObj::kMaxMemberNumFieldNumber;
const int GuildInfoObj::kHallLvFieldNumber;
const int GuildInfoObj::kHallLvupTimeFieldNumber;
const int GuildInfoObj::kHouseLvFieldNumber;
const int GuildInfoObj::kHouseLvupTimeFieldNumber;
const int GuildInfoObj::kStoreroomLvFieldNumber;
const int GuildInfoObj::kStoreroomLvupTimeFieldNumber;
const int GuildInfoObj::kKongfuHallLvFieldNumber;
const int GuildInfoObj::kKongfuHallLvupTimeFieldNumber;
const int GuildInfoObj::kCreateTimeFieldNumber;
const int GuildInfoObj::kEventListFieldNumber;
const int GuildInfoObj::kGuildDungeonListFieldNumber;
const int GuildInfoObj::kGuildWarFieldNumber;
const int GuildInfoObj::kGuildOpenScienceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildInfoObj::GuildInfoObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildInfoObj)
}
GuildInfoObj::GuildInfoObj(const GuildInfoObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      guildmember_(from.guildmember_),
      applylist_(from.applylist_),
      eventlist_(from.eventlist_),
      guilddungeonlist_(from.guilddungeonlist_),
      guildopenscience_(from.guildopenscience_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guildname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guildname()) {
    guildname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guildname_);
  }
  captainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_captainname()) {
    captainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.captainname_);
  }
  announcement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_announcement()) {
    announcement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.announcement_);
  }
  if (from.has_guildwar()) {
    guildwar_ = new ::GuildWarObj(*from.guildwar_);
  } else {
    guildwar_ = NULL;
  }
  ::memcpy(&createtime_, &from.createtime_,
    static_cast<size_t>(reinterpret_cast<char*>(&kongfuhalllvuptime_) -
    reinterpret_cast<char*>(&createtime_)) + sizeof(kongfuhalllvuptime_));
  // @@protoc_insertion_point(copy_constructor:GuildInfoObj)
}

void GuildInfoObj::SharedCtor() {
  _cached_size_ = 0;
  guildname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  captainname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  announcement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guildwar_ = NULL;
  createtime_ = -1;
  guild_ = -1;
  level_ = 1;
  captainid_ = GOOGLE_LONGLONG(-1);
  funds_ = -1;
  curmembernum_ = 1;
  maintenancecost_ = -1;
  leaguematchesrank_ = -1;
  totalmilitary_ = -1;
  maxmembernum_ = -1;
  halllv_ = 1;
  halllvuptime_ = -1;
  houselv_ = 1;
  houselvuptime_ = -1;
  storeroomlv_ = 1;
  storeroomlvuptime_ = -1;
  kongfuhalllv_ = 1;
  kongfuhalllvuptime_ = -1;
}

GuildInfoObj::~GuildInfoObj() {
  // @@protoc_insertion_point(destructor:GuildInfoObj)
  SharedDtor();
}

void GuildInfoObj::SharedDtor() {
  guildname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  captainname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  announcement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete guildwar_;
}

void GuildInfoObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildInfoObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildInfoObj& GuildInfoObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildInfoObj* GuildInfoObj::New(::google::protobuf::Arena* arena) const {
  GuildInfoObj* n = new GuildInfoObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildInfoObj::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildInfoObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guildmember_.Clear();
  applylist_.Clear();
  eventlist_.Clear();
  guilddungeonlist_.Clear();
  guildopenscience_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!guildname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*guildname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!captainname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*captainname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!announcement_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*announcement_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(guildwar_ != NULL);
      guildwar_->::GuildWarObj::Clear();
    }
    createtime_ = -1;
    guild_ = -1;
    level_ = 1;
    captainid_ = GOOGLE_LONGLONG(-1);
  }
  if (cached_has_bits & 65280u) {
    funds_ = -1;
    curmembernum_ = 1;
    maintenancecost_ = -1;
    leaguematchesrank_ = -1;
    totalmilitary_ = -1;
    maxmembernum_ = -1;
    halllv_ = 1;
    halllvuptime_ = -1;
  }
  if (cached_has_bits & 4128768u) {
    houselv_ = 1;
    houselvuptime_ = -1;
    storeroomlv_ = 1;
    storeroomlvuptime_ = -1;
    kongfuhalllv_ = 1;
    kongfuhalllvuptime_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildInfoObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildInfoObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Guild = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_guild();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &guild_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string GuildName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guildname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guildname().data(), static_cast<int>(this->guildname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildInfoObj.GuildName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Level = 3 [default = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 CaptainId = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_captainid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &captainid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string CaptainName = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_captainname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->captainname().data(), static_cast<int>(this->captainname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildInfoObj.CaptainName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Funds = 7 [default = -1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_funds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &funds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 CurMemberNum = 8 [default = 1];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_curmembernum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &curmembernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GuildMemberObj GuildMember = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_guildmember()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 MaintenanceCost = 11 [default = -1];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_maintenancecost();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &maintenancecost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 LeagueMatchesRank = 12 [default = -1];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_leaguematchesrank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &leaguematchesrank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Announcement = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_announcement()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->announcement().data(), static_cast<int>(this->announcement().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildInfoObj.Announcement");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TotalMilitary = 14 [default = -1];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_totalmilitary();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &totalmilitary_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ApplyListRoleInfoObj ApplyList = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_applylist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 MaxMemberNum = 16 [default = -1];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_maxmembernum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &maxmembernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 HallLv = 17 [default = 1];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_halllv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &halllv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 HallLvupTime = 18 [default = -1];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_halllvuptime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &halllvuptime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 HouseLv = 19 [default = 1];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_houselv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &houselv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 HouseLvupTime = 20 [default = -1];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_houselvuptime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &houselvuptime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 StoreroomLv = 21 [default = 1];
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_storeroomlv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &storeroomlv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 StoreroomLvupTime = 22 [default = -1];
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_storeroomlvuptime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &storeroomlvuptime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 KongfuHallLv = 23 [default = 1];
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_kongfuhalllv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &kongfuhalllv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 KongfuHallLvupTime = 24 [default = -1];
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          set_has_kongfuhalllvuptime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &kongfuhalllvuptime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 CreateTime = 25 [default = -1];
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          set_has_createtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GuildEventObj EventList = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_eventlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .GuildDungeonObj GuildDungeonList = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_guilddungeonlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .GuildWarObj GuildWar = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_guildwar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 GuildOpenScience = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 232u, input, this->mutable_guildopenscience())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_guildopenscience())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildInfoObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildInfoObj)
  return false;
#undef DO_
}

void GuildInfoObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildInfoObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Guild = 1 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->guild(), output);
  }

  // optional string GuildName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guildname().data(), static_cast<int>(this->guildname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildInfoObj.GuildName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->guildname(), output);
  }

  // optional sint32 Level = 3 [default = 1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->level(), output);
  }

  // optional sint64 CaptainId = 5 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(5, this->captainid(), output);
  }

  // optional string CaptainName = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->captainname().data(), static_cast<int>(this->captainname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildInfoObj.CaptainName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->captainname(), output);
  }

  // optional sint32 Funds = 7 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->funds(), output);
  }

  // optional sint32 CurMemberNum = 8 [default = 1];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->curmembernum(), output);
  }

  // repeated .GuildMemberObj GuildMember = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->guildmember_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->guildmember(static_cast<int>(i)), output);
  }

  // optional sint32 MaintenanceCost = 11 [default = -1];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(11, this->maintenancecost(), output);
  }

  // optional sint32 LeagueMatchesRank = 12 [default = -1];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(12, this->leaguematchesrank(), output);
  }

  // optional string Announcement = 13;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->announcement().data(), static_cast<int>(this->announcement().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildInfoObj.Announcement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->announcement(), output);
  }

  // optional sint32 TotalMilitary = 14 [default = -1];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(14, this->totalmilitary(), output);
  }

  // repeated .ApplyListRoleInfoObj ApplyList = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->applylist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->applylist(static_cast<int>(i)), output);
  }

  // optional sint32 MaxMemberNum = 16 [default = -1];
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(16, this->maxmembernum(), output);
  }

  // optional sint32 HallLv = 17 [default = 1];
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(17, this->halllv(), output);
  }

  // optional sint32 HallLvupTime = 18 [default = -1];
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(18, this->halllvuptime(), output);
  }

  // optional sint32 HouseLv = 19 [default = 1];
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(19, this->houselv(), output);
  }

  // optional sint32 HouseLvupTime = 20 [default = -1];
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(20, this->houselvuptime(), output);
  }

  // optional sint32 StoreroomLv = 21 [default = 1];
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(21, this->storeroomlv(), output);
  }

  // optional sint32 StoreroomLvupTime = 22 [default = -1];
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(22, this->storeroomlvuptime(), output);
  }

  // optional sint32 KongfuHallLv = 23 [default = 1];
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(23, this->kongfuhalllv(), output);
  }

  // optional sint32 KongfuHallLvupTime = 24 [default = -1];
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(24, this->kongfuhalllvuptime(), output);
  }

  // optional sint32 CreateTime = 25 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(25, this->createtime(), output);
  }

  // repeated .GuildEventObj EventList = 26;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->eventlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->eventlist(static_cast<int>(i)), output);
  }

  // repeated .GuildDungeonObj GuildDungeonList = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->guilddungeonlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->guilddungeonlist(static_cast<int>(i)), output);
  }

  // optional .GuildWarObj GuildWar = 28;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, *this->guildwar_, output);
  }

  // repeated sint32 GuildOpenScience = 29;
  for (int i = 0, n = this->guildopenscience_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      29, this->guildopenscience(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildInfoObj)
}

::google::protobuf::uint8* GuildInfoObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildInfoObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Guild = 1 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->guild(), target);
  }

  // optional string GuildName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guildname().data(), static_cast<int>(this->guildname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildInfoObj.GuildName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->guildname(), target);
  }

  // optional sint32 Level = 3 [default = 1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->level(), target);
  }

  // optional sint64 CaptainId = 5 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(5, this->captainid(), target);
  }

  // optional string CaptainName = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->captainname().data(), static_cast<int>(this->captainname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildInfoObj.CaptainName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->captainname(), target);
  }

  // optional sint32 Funds = 7 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->funds(), target);
  }

  // optional sint32 CurMemberNum = 8 [default = 1];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->curmembernum(), target);
  }

  // repeated .GuildMemberObj GuildMember = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->guildmember_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->guildmember(static_cast<int>(i)), deterministic, target);
  }

  // optional sint32 MaintenanceCost = 11 [default = -1];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(11, this->maintenancecost(), target);
  }

  // optional sint32 LeagueMatchesRank = 12 [default = -1];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(12, this->leaguematchesrank(), target);
  }

  // optional string Announcement = 13;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->announcement().data(), static_cast<int>(this->announcement().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildInfoObj.Announcement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->announcement(), target);
  }

  // optional sint32 TotalMilitary = 14 [default = -1];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(14, this->totalmilitary(), target);
  }

  // repeated .ApplyListRoleInfoObj ApplyList = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->applylist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, this->applylist(static_cast<int>(i)), deterministic, target);
  }

  // optional sint32 MaxMemberNum = 16 [default = -1];
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(16, this->maxmembernum(), target);
  }

  // optional sint32 HallLv = 17 [default = 1];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(17, this->halllv(), target);
  }

  // optional sint32 HallLvupTime = 18 [default = -1];
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(18, this->halllvuptime(), target);
  }

  // optional sint32 HouseLv = 19 [default = 1];
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(19, this->houselv(), target);
  }

  // optional sint32 HouseLvupTime = 20 [default = -1];
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(20, this->houselvuptime(), target);
  }

  // optional sint32 StoreroomLv = 21 [default = 1];
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(21, this->storeroomlv(), target);
  }

  // optional sint32 StoreroomLvupTime = 22 [default = -1];
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(22, this->storeroomlvuptime(), target);
  }

  // optional sint32 KongfuHallLv = 23 [default = 1];
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(23, this->kongfuhalllv(), target);
  }

  // optional sint32 KongfuHallLvupTime = 24 [default = -1];
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(24, this->kongfuhalllvuptime(), target);
  }

  // optional sint32 CreateTime = 25 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(25, this->createtime(), target);
  }

  // repeated .GuildEventObj EventList = 26;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->eventlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        26, this->eventlist(static_cast<int>(i)), deterministic, target);
  }

  // repeated .GuildDungeonObj GuildDungeonList = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->guilddungeonlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        27, this->guilddungeonlist(static_cast<int>(i)), deterministic, target);
  }

  // optional .GuildWarObj GuildWar = 28;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        28, *this->guildwar_, deterministic, target);
  }

  // repeated sint32 GuildOpenScience = 29;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSInt32ToArray(29, this->guildopenscience_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildInfoObj)
  return target;
}

size_t GuildInfoObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildInfoObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .GuildMemberObj GuildMember = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->guildmember_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->guildmember(static_cast<int>(i)));
    }
  }

  // repeated .ApplyListRoleInfoObj ApplyList = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->applylist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->applylist(static_cast<int>(i)));
    }
  }

  // repeated .GuildEventObj EventList = 26;
  {
    unsigned int count = static_cast<unsigned int>(this->eventlist_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->eventlist(static_cast<int>(i)));
    }
  }

  // repeated .GuildDungeonObj GuildDungeonList = 27;
  {
    unsigned int count = static_cast<unsigned int>(this->guilddungeonlist_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->guilddungeonlist(static_cast<int>(i)));
    }
  }

  // repeated sint32 GuildOpenScience = 29;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->guildopenscience_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->guildopenscience_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string GuildName = 2;
    if (has_guildname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guildname());
    }

    // optional string CaptainName = 6;
    if (has_captainname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->captainname());
    }

    // optional string Announcement = 13;
    if (has_announcement()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->announcement());
    }

    // optional .GuildWarObj GuildWar = 28;
    if (has_guildwar()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->guildwar_);
    }

    // optional sint32 CreateTime = 25 [default = -1];
    if (has_createtime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->createtime());
    }

    // optional sint32 Guild = 1 [default = -1];
    if (has_guild()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->guild());
    }

    // optional sint32 Level = 3 [default = 1];
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->level());
    }

    // optional sint64 CaptainId = 5 [default = -1];
    if (has_captainid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->captainid());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional sint32 Funds = 7 [default = -1];
    if (has_funds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->funds());
    }

    // optional sint32 CurMemberNum = 8 [default = 1];
    if (has_curmembernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->curmembernum());
    }

    // optional sint32 MaintenanceCost = 11 [default = -1];
    if (has_maintenancecost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->maintenancecost());
    }

    // optional sint32 LeagueMatchesRank = 12 [default = -1];
    if (has_leaguematchesrank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->leaguematchesrank());
    }

    // optional sint32 TotalMilitary = 14 [default = -1];
    if (has_totalmilitary()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->totalmilitary());
    }

    // optional sint32 MaxMemberNum = 16 [default = -1];
    if (has_maxmembernum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->maxmembernum());
    }

    // optional sint32 HallLv = 17 [default = 1];
    if (has_halllv()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->halllv());
    }

    // optional sint32 HallLvupTime = 18 [default = -1];
    if (has_halllvuptime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->halllvuptime());
    }

  }
  if (_has_bits_[16 / 32] & 4128768u) {
    // optional sint32 HouseLv = 19 [default = 1];
    if (has_houselv()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->houselv());
    }

    // optional sint32 HouseLvupTime = 20 [default = -1];
    if (has_houselvuptime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->houselvuptime());
    }

    // optional sint32 StoreroomLv = 21 [default = 1];
    if (has_storeroomlv()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->storeroomlv());
    }

    // optional sint32 StoreroomLvupTime = 22 [default = -1];
    if (has_storeroomlvuptime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->storeroomlvuptime());
    }

    // optional sint32 KongfuHallLv = 23 [default = 1];
    if (has_kongfuhalllv()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->kongfuhalllv());
    }

    // optional sint32 KongfuHallLvupTime = 24 [default = -1];
    if (has_kongfuhalllvuptime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->kongfuhalllvuptime());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildInfoObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildInfoObj)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildInfoObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildInfoObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildInfoObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildInfoObj)
    MergeFrom(*source);
  }
}

void GuildInfoObj::MergeFrom(const GuildInfoObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildInfoObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  guildmember_.MergeFrom(from.guildmember_);
  applylist_.MergeFrom(from.applylist_);
  eventlist_.MergeFrom(from.eventlist_);
  guilddungeonlist_.MergeFrom(from.guilddungeonlist_);
  guildopenscience_.MergeFrom(from.guildopenscience_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_guildname();
      guildname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guildname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_captainname();
      captainname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.captainname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_announcement();
      announcement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.announcement_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_guildwar()->::GuildWarObj::MergeFrom(from.guildwar());
    }
    if (cached_has_bits & 0x00000010u) {
      createtime_ = from.createtime_;
    }
    if (cached_has_bits & 0x00000020u) {
      guild_ = from.guild_;
    }
    if (cached_has_bits & 0x00000040u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000080u) {
      captainid_ = from.captainid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      funds_ = from.funds_;
    }
    if (cached_has_bits & 0x00000200u) {
      curmembernum_ = from.curmembernum_;
    }
    if (cached_has_bits & 0x00000400u) {
      maintenancecost_ = from.maintenancecost_;
    }
    if (cached_has_bits & 0x00000800u) {
      leaguematchesrank_ = from.leaguematchesrank_;
    }
    if (cached_has_bits & 0x00001000u) {
      totalmilitary_ = from.totalmilitary_;
    }
    if (cached_has_bits & 0x00002000u) {
      maxmembernum_ = from.maxmembernum_;
    }
    if (cached_has_bits & 0x00004000u) {
      halllv_ = from.halllv_;
    }
    if (cached_has_bits & 0x00008000u) {
      halllvuptime_ = from.halllvuptime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 4128768u) {
    if (cached_has_bits & 0x00010000u) {
      houselv_ = from.houselv_;
    }
    if (cached_has_bits & 0x00020000u) {
      houselvuptime_ = from.houselvuptime_;
    }
    if (cached_has_bits & 0x00040000u) {
      storeroomlv_ = from.storeroomlv_;
    }
    if (cached_has_bits & 0x00080000u) {
      storeroomlvuptime_ = from.storeroomlvuptime_;
    }
    if (cached_has_bits & 0x00100000u) {
      kongfuhalllv_ = from.kongfuhalllv_;
    }
    if (cached_has_bits & 0x00200000u) {
      kongfuhalllvuptime_ = from.kongfuhalllvuptime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildInfoObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildInfoObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildInfoObj::CopyFrom(const GuildInfoObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildInfoObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildInfoObj::IsInitialized() const {
  return true;
}

void GuildInfoObj::Swap(GuildInfoObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildInfoObj::InternalSwap(GuildInfoObj* other) {
  using std::swap;
  guildmember_.InternalSwap(&other->guildmember_);
  applylist_.InternalSwap(&other->applylist_);
  eventlist_.InternalSwap(&other->eventlist_);
  guilddungeonlist_.InternalSwap(&other->guilddungeonlist_);
  guildopenscience_.InternalSwap(&other->guildopenscience_);
  guildname_.Swap(&other->guildname_);
  captainname_.Swap(&other->captainname_);
  announcement_.Swap(&other->announcement_);
  swap(guildwar_, other->guildwar_);
  swap(createtime_, other->createtime_);
  swap(guild_, other->guild_);
  swap(level_, other->level_);
  swap(captainid_, other->captainid_);
  swap(funds_, other->funds_);
  swap(curmembernum_, other->curmembernum_);
  swap(maintenancecost_, other->maintenancecost_);
  swap(leaguematchesrank_, other->leaguematchesrank_);
  swap(totalmilitary_, other->totalmilitary_);
  swap(maxmembernum_, other->maxmembernum_);
  swap(halllv_, other->halllv_);
  swap(halllvuptime_, other->halllvuptime_);
  swap(houselv_, other->houselv_);
  swap(houselvuptime_, other->houselvuptime_);
  swap(storeroomlv_, other->storeroomlv_);
  swap(storeroomlvuptime_, other->storeroomlvuptime_);
  swap(kongfuhalllv_, other->kongfuhalllv_);
  swap(kongfuhalllvuptime_, other->kongfuhalllvuptime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildInfoObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildInfoObj

// optional sint32 Guild = 1 [default = -1];
bool GuildInfoObj::has_guild() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GuildInfoObj::set_has_guild() {
  _has_bits_[0] |= 0x00000020u;
}
void GuildInfoObj::clear_has_guild() {
  _has_bits_[0] &= ~0x00000020u;
}
void GuildInfoObj::clear_guild() {
  guild_ = -1;
  clear_has_guild();
}
::google::protobuf::int32 GuildInfoObj::guild() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.Guild)
  return guild_;
}
void GuildInfoObj::set_guild(::google::protobuf::int32 value) {
  set_has_guild();
  guild_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.Guild)
}

// optional string GuildName = 2;
bool GuildInfoObj::has_guildname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildInfoObj::set_has_guildname() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildInfoObj::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildInfoObj::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guildname();
}
const ::std::string& GuildInfoObj::guildname() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.GuildName)
  return guildname_.GetNoArena();
}
void GuildInfoObj::set_guildname(const ::std::string& value) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildInfoObj.GuildName)
}
#if LANG_CXX11
void GuildInfoObj::set_guildname(::std::string&& value) {
  set_has_guildname();
  guildname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildInfoObj.GuildName)
}
#endif
void GuildInfoObj::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildInfoObj.GuildName)
}
void GuildInfoObj::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildInfoObj.GuildName)
}
::std::string* GuildInfoObj::mutable_guildname() {
  set_has_guildname();
  // @@protoc_insertion_point(field_mutable:GuildInfoObj.GuildName)
  return guildname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildInfoObj::release_guildname() {
  // @@protoc_insertion_point(field_release:GuildInfoObj.GuildName)
  clear_has_guildname();
  return guildname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildInfoObj::set_allocated_guildname(::std::string* guildname) {
  if (guildname != NULL) {
    set_has_guildname();
  } else {
    clear_has_guildname();
  }
  guildname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:GuildInfoObj.GuildName)
}

// optional sint32 Level = 3 [default = 1];
bool GuildInfoObj::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void GuildInfoObj::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
void GuildInfoObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
void GuildInfoObj::clear_level() {
  level_ = 1;
  clear_has_level();
}
::google::protobuf::int32 GuildInfoObj::level() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.Level)
  return level_;
}
void GuildInfoObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.Level)
}

// optional sint64 CaptainId = 5 [default = -1];
bool GuildInfoObj::has_captainid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void GuildInfoObj::set_has_captainid() {
  _has_bits_[0] |= 0x00000080u;
}
void GuildInfoObj::clear_has_captainid() {
  _has_bits_[0] &= ~0x00000080u;
}
void GuildInfoObj::clear_captainid() {
  captainid_ = GOOGLE_LONGLONG(-1);
  clear_has_captainid();
}
::google::protobuf::int64 GuildInfoObj::captainid() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.CaptainId)
  return captainid_;
}
void GuildInfoObj::set_captainid(::google::protobuf::int64 value) {
  set_has_captainid();
  captainid_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.CaptainId)
}

// optional string CaptainName = 6;
bool GuildInfoObj::has_captainname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildInfoObj::set_has_captainname() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildInfoObj::clear_has_captainname() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildInfoObj::clear_captainname() {
  captainname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_captainname();
}
const ::std::string& GuildInfoObj::captainname() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.CaptainName)
  return captainname_.GetNoArena();
}
void GuildInfoObj::set_captainname(const ::std::string& value) {
  set_has_captainname();
  captainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildInfoObj.CaptainName)
}
#if LANG_CXX11
void GuildInfoObj::set_captainname(::std::string&& value) {
  set_has_captainname();
  captainname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildInfoObj.CaptainName)
}
#endif
void GuildInfoObj::set_captainname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_captainname();
  captainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildInfoObj.CaptainName)
}
void GuildInfoObj::set_captainname(const char* value, size_t size) {
  set_has_captainname();
  captainname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildInfoObj.CaptainName)
}
::std::string* GuildInfoObj::mutable_captainname() {
  set_has_captainname();
  // @@protoc_insertion_point(field_mutable:GuildInfoObj.CaptainName)
  return captainname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildInfoObj::release_captainname() {
  // @@protoc_insertion_point(field_release:GuildInfoObj.CaptainName)
  clear_has_captainname();
  return captainname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildInfoObj::set_allocated_captainname(::std::string* captainname) {
  if (captainname != NULL) {
    set_has_captainname();
  } else {
    clear_has_captainname();
  }
  captainname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), captainname);
  // @@protoc_insertion_point(field_set_allocated:GuildInfoObj.CaptainName)
}

// optional sint32 Funds = 7 [default = -1];
bool GuildInfoObj::has_funds() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void GuildInfoObj::set_has_funds() {
  _has_bits_[0] |= 0x00000100u;
}
void GuildInfoObj::clear_has_funds() {
  _has_bits_[0] &= ~0x00000100u;
}
void GuildInfoObj::clear_funds() {
  funds_ = -1;
  clear_has_funds();
}
::google::protobuf::int32 GuildInfoObj::funds() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.Funds)
  return funds_;
}
void GuildInfoObj::set_funds(::google::protobuf::int32 value) {
  set_has_funds();
  funds_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.Funds)
}

// optional sint32 CurMemberNum = 8 [default = 1];
bool GuildInfoObj::has_curmembernum() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void GuildInfoObj::set_has_curmembernum() {
  _has_bits_[0] |= 0x00000200u;
}
void GuildInfoObj::clear_has_curmembernum() {
  _has_bits_[0] &= ~0x00000200u;
}
void GuildInfoObj::clear_curmembernum() {
  curmembernum_ = 1;
  clear_has_curmembernum();
}
::google::protobuf::int32 GuildInfoObj::curmembernum() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.CurMemberNum)
  return curmembernum_;
}
void GuildInfoObj::set_curmembernum(::google::protobuf::int32 value) {
  set_has_curmembernum();
  curmembernum_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.CurMemberNum)
}

// repeated .GuildMemberObj GuildMember = 10;
int GuildInfoObj::guildmember_size() const {
  return guildmember_.size();
}
void GuildInfoObj::clear_guildmember() {
  guildmember_.Clear();
}
const ::GuildMemberObj& GuildInfoObj::guildmember(int index) const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.GuildMember)
  return guildmember_.Get(index);
}
::GuildMemberObj* GuildInfoObj::mutable_guildmember(int index) {
  // @@protoc_insertion_point(field_mutable:GuildInfoObj.GuildMember)
  return guildmember_.Mutable(index);
}
::GuildMemberObj* GuildInfoObj::add_guildmember() {
  // @@protoc_insertion_point(field_add:GuildInfoObj.GuildMember)
  return guildmember_.Add();
}
::google::protobuf::RepeatedPtrField< ::GuildMemberObj >*
GuildInfoObj::mutable_guildmember() {
  // @@protoc_insertion_point(field_mutable_list:GuildInfoObj.GuildMember)
  return &guildmember_;
}
const ::google::protobuf::RepeatedPtrField< ::GuildMemberObj >&
GuildInfoObj::guildmember() const {
  // @@protoc_insertion_point(field_list:GuildInfoObj.GuildMember)
  return guildmember_;
}

// optional sint32 MaintenanceCost = 11 [default = -1];
bool GuildInfoObj::has_maintenancecost() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void GuildInfoObj::set_has_maintenancecost() {
  _has_bits_[0] |= 0x00000400u;
}
void GuildInfoObj::clear_has_maintenancecost() {
  _has_bits_[0] &= ~0x00000400u;
}
void GuildInfoObj::clear_maintenancecost() {
  maintenancecost_ = -1;
  clear_has_maintenancecost();
}
::google::protobuf::int32 GuildInfoObj::maintenancecost() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.MaintenanceCost)
  return maintenancecost_;
}
void GuildInfoObj::set_maintenancecost(::google::protobuf::int32 value) {
  set_has_maintenancecost();
  maintenancecost_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.MaintenanceCost)
}

// optional sint32 LeagueMatchesRank = 12 [default = -1];
bool GuildInfoObj::has_leaguematchesrank() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void GuildInfoObj::set_has_leaguematchesrank() {
  _has_bits_[0] |= 0x00000800u;
}
void GuildInfoObj::clear_has_leaguematchesrank() {
  _has_bits_[0] &= ~0x00000800u;
}
void GuildInfoObj::clear_leaguematchesrank() {
  leaguematchesrank_ = -1;
  clear_has_leaguematchesrank();
}
::google::protobuf::int32 GuildInfoObj::leaguematchesrank() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.LeagueMatchesRank)
  return leaguematchesrank_;
}
void GuildInfoObj::set_leaguematchesrank(::google::protobuf::int32 value) {
  set_has_leaguematchesrank();
  leaguematchesrank_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.LeagueMatchesRank)
}

// optional string Announcement = 13;
bool GuildInfoObj::has_announcement() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GuildInfoObj::set_has_announcement() {
  _has_bits_[0] |= 0x00000004u;
}
void GuildInfoObj::clear_has_announcement() {
  _has_bits_[0] &= ~0x00000004u;
}
void GuildInfoObj::clear_announcement() {
  announcement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_announcement();
}
const ::std::string& GuildInfoObj::announcement() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.Announcement)
  return announcement_.GetNoArena();
}
void GuildInfoObj::set_announcement(const ::std::string& value) {
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildInfoObj.Announcement)
}
#if LANG_CXX11
void GuildInfoObj::set_announcement(::std::string&& value) {
  set_has_announcement();
  announcement_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildInfoObj.Announcement)
}
#endif
void GuildInfoObj::set_announcement(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildInfoObj.Announcement)
}
void GuildInfoObj::set_announcement(const char* value, size_t size) {
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildInfoObj.Announcement)
}
::std::string* GuildInfoObj::mutable_announcement() {
  set_has_announcement();
  // @@protoc_insertion_point(field_mutable:GuildInfoObj.Announcement)
  return announcement_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildInfoObj::release_announcement() {
  // @@protoc_insertion_point(field_release:GuildInfoObj.Announcement)
  clear_has_announcement();
  return announcement_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildInfoObj::set_allocated_announcement(::std::string* announcement) {
  if (announcement != NULL) {
    set_has_announcement();
  } else {
    clear_has_announcement();
  }
  announcement_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), announcement);
  // @@protoc_insertion_point(field_set_allocated:GuildInfoObj.Announcement)
}

// optional sint32 TotalMilitary = 14 [default = -1];
bool GuildInfoObj::has_totalmilitary() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void GuildInfoObj::set_has_totalmilitary() {
  _has_bits_[0] |= 0x00001000u;
}
void GuildInfoObj::clear_has_totalmilitary() {
  _has_bits_[0] &= ~0x00001000u;
}
void GuildInfoObj::clear_totalmilitary() {
  totalmilitary_ = -1;
  clear_has_totalmilitary();
}
::google::protobuf::int32 GuildInfoObj::totalmilitary() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.TotalMilitary)
  return totalmilitary_;
}
void GuildInfoObj::set_totalmilitary(::google::protobuf::int32 value) {
  set_has_totalmilitary();
  totalmilitary_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.TotalMilitary)
}

// repeated .ApplyListRoleInfoObj ApplyList = 15;
int GuildInfoObj::applylist_size() const {
  return applylist_.size();
}
void GuildInfoObj::clear_applylist() {
  applylist_.Clear();
}
const ::ApplyListRoleInfoObj& GuildInfoObj::applylist(int index) const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.ApplyList)
  return applylist_.Get(index);
}
::ApplyListRoleInfoObj* GuildInfoObj::mutable_applylist(int index) {
  // @@protoc_insertion_point(field_mutable:GuildInfoObj.ApplyList)
  return applylist_.Mutable(index);
}
::ApplyListRoleInfoObj* GuildInfoObj::add_applylist() {
  // @@protoc_insertion_point(field_add:GuildInfoObj.ApplyList)
  return applylist_.Add();
}
::google::protobuf::RepeatedPtrField< ::ApplyListRoleInfoObj >*
GuildInfoObj::mutable_applylist() {
  // @@protoc_insertion_point(field_mutable_list:GuildInfoObj.ApplyList)
  return &applylist_;
}
const ::google::protobuf::RepeatedPtrField< ::ApplyListRoleInfoObj >&
GuildInfoObj::applylist() const {
  // @@protoc_insertion_point(field_list:GuildInfoObj.ApplyList)
  return applylist_;
}

// optional sint32 MaxMemberNum = 16 [default = -1];
bool GuildInfoObj::has_maxmembernum() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void GuildInfoObj::set_has_maxmembernum() {
  _has_bits_[0] |= 0x00002000u;
}
void GuildInfoObj::clear_has_maxmembernum() {
  _has_bits_[0] &= ~0x00002000u;
}
void GuildInfoObj::clear_maxmembernum() {
  maxmembernum_ = -1;
  clear_has_maxmembernum();
}
::google::protobuf::int32 GuildInfoObj::maxmembernum() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.MaxMemberNum)
  return maxmembernum_;
}
void GuildInfoObj::set_maxmembernum(::google::protobuf::int32 value) {
  set_has_maxmembernum();
  maxmembernum_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.MaxMemberNum)
}

// optional sint32 HallLv = 17 [default = 1];
bool GuildInfoObj::has_halllv() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void GuildInfoObj::set_has_halllv() {
  _has_bits_[0] |= 0x00004000u;
}
void GuildInfoObj::clear_has_halllv() {
  _has_bits_[0] &= ~0x00004000u;
}
void GuildInfoObj::clear_halllv() {
  halllv_ = 1;
  clear_has_halllv();
}
::google::protobuf::int32 GuildInfoObj::halllv() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.HallLv)
  return halllv_;
}
void GuildInfoObj::set_halllv(::google::protobuf::int32 value) {
  set_has_halllv();
  halllv_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.HallLv)
}

// optional sint32 HallLvupTime = 18 [default = -1];
bool GuildInfoObj::has_halllvuptime() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void GuildInfoObj::set_has_halllvuptime() {
  _has_bits_[0] |= 0x00008000u;
}
void GuildInfoObj::clear_has_halllvuptime() {
  _has_bits_[0] &= ~0x00008000u;
}
void GuildInfoObj::clear_halllvuptime() {
  halllvuptime_ = -1;
  clear_has_halllvuptime();
}
::google::protobuf::int32 GuildInfoObj::halllvuptime() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.HallLvupTime)
  return halllvuptime_;
}
void GuildInfoObj::set_halllvuptime(::google::protobuf::int32 value) {
  set_has_halllvuptime();
  halllvuptime_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.HallLvupTime)
}

// optional sint32 HouseLv = 19 [default = 1];
bool GuildInfoObj::has_houselv() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void GuildInfoObj::set_has_houselv() {
  _has_bits_[0] |= 0x00010000u;
}
void GuildInfoObj::clear_has_houselv() {
  _has_bits_[0] &= ~0x00010000u;
}
void GuildInfoObj::clear_houselv() {
  houselv_ = 1;
  clear_has_houselv();
}
::google::protobuf::int32 GuildInfoObj::houselv() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.HouseLv)
  return houselv_;
}
void GuildInfoObj::set_houselv(::google::protobuf::int32 value) {
  set_has_houselv();
  houselv_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.HouseLv)
}

// optional sint32 HouseLvupTime = 20 [default = -1];
bool GuildInfoObj::has_houselvuptime() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void GuildInfoObj::set_has_houselvuptime() {
  _has_bits_[0] |= 0x00020000u;
}
void GuildInfoObj::clear_has_houselvuptime() {
  _has_bits_[0] &= ~0x00020000u;
}
void GuildInfoObj::clear_houselvuptime() {
  houselvuptime_ = -1;
  clear_has_houselvuptime();
}
::google::protobuf::int32 GuildInfoObj::houselvuptime() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.HouseLvupTime)
  return houselvuptime_;
}
void GuildInfoObj::set_houselvuptime(::google::protobuf::int32 value) {
  set_has_houselvuptime();
  houselvuptime_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.HouseLvupTime)
}

// optional sint32 StoreroomLv = 21 [default = 1];
bool GuildInfoObj::has_storeroomlv() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void GuildInfoObj::set_has_storeroomlv() {
  _has_bits_[0] |= 0x00040000u;
}
void GuildInfoObj::clear_has_storeroomlv() {
  _has_bits_[0] &= ~0x00040000u;
}
void GuildInfoObj::clear_storeroomlv() {
  storeroomlv_ = 1;
  clear_has_storeroomlv();
}
::google::protobuf::int32 GuildInfoObj::storeroomlv() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.StoreroomLv)
  return storeroomlv_;
}
void GuildInfoObj::set_storeroomlv(::google::protobuf::int32 value) {
  set_has_storeroomlv();
  storeroomlv_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.StoreroomLv)
}

// optional sint32 StoreroomLvupTime = 22 [default = -1];
bool GuildInfoObj::has_storeroomlvuptime() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void GuildInfoObj::set_has_storeroomlvuptime() {
  _has_bits_[0] |= 0x00080000u;
}
void GuildInfoObj::clear_has_storeroomlvuptime() {
  _has_bits_[0] &= ~0x00080000u;
}
void GuildInfoObj::clear_storeroomlvuptime() {
  storeroomlvuptime_ = -1;
  clear_has_storeroomlvuptime();
}
::google::protobuf::int32 GuildInfoObj::storeroomlvuptime() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.StoreroomLvupTime)
  return storeroomlvuptime_;
}
void GuildInfoObj::set_storeroomlvuptime(::google::protobuf::int32 value) {
  set_has_storeroomlvuptime();
  storeroomlvuptime_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.StoreroomLvupTime)
}

// optional sint32 KongfuHallLv = 23 [default = 1];
bool GuildInfoObj::has_kongfuhalllv() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void GuildInfoObj::set_has_kongfuhalllv() {
  _has_bits_[0] |= 0x00100000u;
}
void GuildInfoObj::clear_has_kongfuhalllv() {
  _has_bits_[0] &= ~0x00100000u;
}
void GuildInfoObj::clear_kongfuhalllv() {
  kongfuhalllv_ = 1;
  clear_has_kongfuhalllv();
}
::google::protobuf::int32 GuildInfoObj::kongfuhalllv() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.KongfuHallLv)
  return kongfuhalllv_;
}
void GuildInfoObj::set_kongfuhalllv(::google::protobuf::int32 value) {
  set_has_kongfuhalllv();
  kongfuhalllv_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.KongfuHallLv)
}

// optional sint32 KongfuHallLvupTime = 24 [default = -1];
bool GuildInfoObj::has_kongfuhalllvuptime() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void GuildInfoObj::set_has_kongfuhalllvuptime() {
  _has_bits_[0] |= 0x00200000u;
}
void GuildInfoObj::clear_has_kongfuhalllvuptime() {
  _has_bits_[0] &= ~0x00200000u;
}
void GuildInfoObj::clear_kongfuhalllvuptime() {
  kongfuhalllvuptime_ = -1;
  clear_has_kongfuhalllvuptime();
}
::google::protobuf::int32 GuildInfoObj::kongfuhalllvuptime() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.KongfuHallLvupTime)
  return kongfuhalllvuptime_;
}
void GuildInfoObj::set_kongfuhalllvuptime(::google::protobuf::int32 value) {
  set_has_kongfuhalllvuptime();
  kongfuhalllvuptime_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.KongfuHallLvupTime)
}

// optional sint32 CreateTime = 25 [default = -1];
bool GuildInfoObj::has_createtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GuildInfoObj::set_has_createtime() {
  _has_bits_[0] |= 0x00000010u;
}
void GuildInfoObj::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000010u;
}
void GuildInfoObj::clear_createtime() {
  createtime_ = -1;
  clear_has_createtime();
}
::google::protobuf::int32 GuildInfoObj::createtime() const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.CreateTime)
  return createtime_;
}
void GuildInfoObj::set_createtime(::google::protobuf::int32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:GuildInfoObj.CreateTime)
}

// repeated .GuildEventObj EventList = 26;
int GuildInfoObj::eventlist_size() const {
  return eventlist_.size();
}
void GuildInfoObj::clear_eventlist() {
  eventlist_.Clear();
}
const ::GuildEventObj& GuildInfoObj::eventlist(int index) const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.EventList)
  return eventlist_.Get(index);
}
::GuildEventObj* GuildInfoObj::mutable_eventlist(int index) {
  // @@protoc_insertion_point(field_mutable:GuildInfoObj.EventList)
  return eventlist_.Mutable(index);
}
::GuildEventObj* GuildInfoObj::add_eventlist() {
  // @@protoc_insertion_point(field_add:GuildInfoObj.EventList)
  return eventlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::GuildEventObj >*
GuildInfoObj::mutable_eventlist() {
  // @@protoc_insertion_point(field_mutable_list:GuildInfoObj.EventList)
  return &eventlist_;
}
const ::google::protobuf::RepeatedPtrField< ::GuildEventObj >&
GuildInfoObj::eventlist() const {
  // @@protoc_insertion_point(field_list:GuildInfoObj.EventList)
  return eventlist_;
}

// repeated .GuildDungeonObj GuildDungeonList = 27;
int GuildInfoObj::guilddungeonlist_size() const {
  return guilddungeonlist_.size();
}
void GuildInfoObj::clear_guilddungeonlist() {
  guilddungeonlist_.Clear();
}
const ::GuildDungeonObj& GuildInfoObj::guilddungeonlist(int index) const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.GuildDungeonList)
  return guilddungeonlist_.Get(index);
}
::GuildDungeonObj* GuildInfoObj::mutable_guilddungeonlist(int index) {
  // @@protoc_insertion_point(field_mutable:GuildInfoObj.GuildDungeonList)
  return guilddungeonlist_.Mutable(index);
}
::GuildDungeonObj* GuildInfoObj::add_guilddungeonlist() {
  // @@protoc_insertion_point(field_add:GuildInfoObj.GuildDungeonList)
  return guilddungeonlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::GuildDungeonObj >*
GuildInfoObj::mutable_guilddungeonlist() {
  // @@protoc_insertion_point(field_mutable_list:GuildInfoObj.GuildDungeonList)
  return &guilddungeonlist_;
}
const ::google::protobuf::RepeatedPtrField< ::GuildDungeonObj >&
GuildInfoObj::guilddungeonlist() const {
  // @@protoc_insertion_point(field_list:GuildInfoObj.GuildDungeonList)
  return guilddungeonlist_;
}

// optional .GuildWarObj GuildWar = 28;
bool GuildInfoObj::has_guildwar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GuildInfoObj::set_has_guildwar() {
  _has_bits_[0] |= 0x00000008u;
}
void GuildInfoObj::clear_has_guildwar() {
  _has_bits_[0] &= ~0x00000008u;
}
void GuildInfoObj::clear_guildwar() {
  if (guildwar_ != NULL) guildwar_->::GuildWarObj::Clear();
  clear_has_guildwar();
}
const ::GuildWarObj& GuildInfoObj::guildwar() const {
  const ::GuildWarObj* p = guildwar_;
  // @@protoc_insertion_point(field_get:GuildInfoObj.GuildWar)
  return p != NULL ? *p : *reinterpret_cast<const ::GuildWarObj*>(
      &::_GuildWarObj_default_instance_);
}
::GuildWarObj* GuildInfoObj::mutable_guildwar() {
  set_has_guildwar();
  if (guildwar_ == NULL) {
    guildwar_ = new ::GuildWarObj;
  }
  // @@protoc_insertion_point(field_mutable:GuildInfoObj.GuildWar)
  return guildwar_;
}
::GuildWarObj* GuildInfoObj::release_guildwar() {
  // @@protoc_insertion_point(field_release:GuildInfoObj.GuildWar)
  clear_has_guildwar();
  ::GuildWarObj* temp = guildwar_;
  guildwar_ = NULL;
  return temp;
}
void GuildInfoObj::set_allocated_guildwar(::GuildWarObj* guildwar) {
  delete guildwar_;
  guildwar_ = guildwar;
  if (guildwar) {
    set_has_guildwar();
  } else {
    clear_has_guildwar();
  }
  // @@protoc_insertion_point(field_set_allocated:GuildInfoObj.GuildWar)
}

// repeated sint32 GuildOpenScience = 29;
int GuildInfoObj::guildopenscience_size() const {
  return guildopenscience_.size();
}
void GuildInfoObj::clear_guildopenscience() {
  guildopenscience_.Clear();
}
::google::protobuf::int32 GuildInfoObj::guildopenscience(int index) const {
  // @@protoc_insertion_point(field_get:GuildInfoObj.GuildOpenScience)
  return guildopenscience_.Get(index);
}
void GuildInfoObj::set_guildopenscience(int index, ::google::protobuf::int32 value) {
  guildopenscience_.Set(index, value);
  // @@protoc_insertion_point(field_set:GuildInfoObj.GuildOpenScience)
}
void GuildInfoObj::add_guildopenscience(::google::protobuf::int32 value) {
  guildopenscience_.Add(value);
  // @@protoc_insertion_point(field_add:GuildInfoObj.GuildOpenScience)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GuildInfoObj::guildopenscience() const {
  // @@protoc_insertion_point(field_list:GuildInfoObj.GuildOpenScience)
  return guildopenscience_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GuildInfoObj::mutable_guildopenscience() {
  // @@protoc_insertion_point(field_mutable_list:GuildInfoObj.GuildOpenScience)
  return &guildopenscience_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApplyListRoleInfoObj::kUserIdFieldNumber;
const int ApplyListRoleInfoObj::kUserNameFieldNumber;
const int ApplyListRoleInfoObj::kLevelFieldNumber;
const int ApplyListRoleInfoObj::kProfFieldNumber;
const int ApplyListRoleInfoObj::kTalentLevelFieldNumber;
const int ApplyListRoleInfoObj::kXiulianFieldNumber;
const int ApplyListRoleInfoObj::kMilitaryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApplyListRoleInfoObj::ApplyListRoleInfoObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ApplyListRoleInfoObj)
}
ApplyListRoleInfoObj::ApplyListRoleInfoObj(const ApplyListRoleInfoObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  ::memcpy(&prof_, &from.prof_,
    static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&prof_)) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:ApplyListRoleInfoObj)
}

void ApplyListRoleInfoObj::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&prof_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&military_) -
      reinterpret_cast<char*>(&prof_)) + sizeof(military_));
  level_ = 1;
  userid_ = GOOGLE_LONGLONG(-1);
}

ApplyListRoleInfoObj::~ApplyListRoleInfoObj() {
  // @@protoc_insertion_point(destructor:ApplyListRoleInfoObj)
  SharedDtor();
}

void ApplyListRoleInfoObj::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ApplyListRoleInfoObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ApplyListRoleInfoObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ApplyListRoleInfoObj& ApplyListRoleInfoObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

ApplyListRoleInfoObj* ApplyListRoleInfoObj::New(::google::protobuf::Arena* arena) const {
  ApplyListRoleInfoObj* n = new ApplyListRoleInfoObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ApplyListRoleInfoObj::Clear() {
// @@protoc_insertion_point(message_clear_start:ApplyListRoleInfoObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_username()) {
    GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*username_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 126u) {
    ::memset(&prof_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&military_) -
        reinterpret_cast<char*>(&prof_)) + sizeof(military_));
    level_ = 1;
    userid_ = GOOGLE_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ApplyListRoleInfoObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ApplyListRoleInfoObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 UserId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string UserName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ApplyListRoleInfoObj.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Level = 3 [default = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Prof = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_prof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &prof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TalentLevel = 5 [default = 0];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_talentlevel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &talentlevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Xiulian = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_xiulian();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &xiulian_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Military = 7 [default = 0];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_military();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &military_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ApplyListRoleInfoObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ApplyListRoleInfoObj)
  return false;
#undef DO_
}

void ApplyListRoleInfoObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ApplyListRoleInfoObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->userid(), output);
  }

  // optional string UserName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ApplyListRoleInfoObj.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional sint32 Level = 3 [default = 1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->level(), output);
  }

  // optional sint32 Prof = 4 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->prof(), output);
  }

  // optional sint32 TalentLevel = 5 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->talentlevel(), output);
  }

  // optional sint32 Xiulian = 6 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->xiulian(), output);
  }

  // optional sint32 Military = 7 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->military(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ApplyListRoleInfoObj)
}

::google::protobuf::uint8* ApplyListRoleInfoObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ApplyListRoleInfoObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->userid(), target);
  }

  // optional string UserName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ApplyListRoleInfoObj.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional sint32 Level = 3 [default = 1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->level(), target);
  }

  // optional sint32 Prof = 4 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->prof(), target);
  }

  // optional sint32 TalentLevel = 5 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->talentlevel(), target);
  }

  // optional sint32 Xiulian = 6 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->xiulian(), target);
  }

  // optional sint32 Military = 7 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->military(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ApplyListRoleInfoObj)
  return target;
}

size_t ApplyListRoleInfoObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ApplyListRoleInfoObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string UserName = 2;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional sint32 Prof = 4 [default = 0];
    if (has_prof()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->prof());
    }

    // optional sint32 TalentLevel = 5 [default = 0];
    if (has_talentlevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->talentlevel());
    }

    // optional sint32 Xiulian = 6 [default = 0];
    if (has_xiulian()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->xiulian());
    }

    // optional sint32 Military = 7 [default = 0];
    if (has_military()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->military());
    }

    // optional sint32 Level = 3 [default = 1];
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->level());
    }

    // optional sint64 UserId = 1 [default = -1];
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ApplyListRoleInfoObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ApplyListRoleInfoObj)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplyListRoleInfoObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ApplyListRoleInfoObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ApplyListRoleInfoObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ApplyListRoleInfoObj)
    MergeFrom(*source);
  }
}

void ApplyListRoleInfoObj::MergeFrom(const ApplyListRoleInfoObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ApplyListRoleInfoObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      prof_ = from.prof_;
    }
    if (cached_has_bits & 0x00000004u) {
      talentlevel_ = from.talentlevel_;
    }
    if (cached_has_bits & 0x00000008u) {
      xiulian_ = from.xiulian_;
    }
    if (cached_has_bits & 0x00000010u) {
      military_ = from.military_;
    }
    if (cached_has_bits & 0x00000020u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000040u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ApplyListRoleInfoObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ApplyListRoleInfoObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplyListRoleInfoObj::CopyFrom(const ApplyListRoleInfoObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ApplyListRoleInfoObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplyListRoleInfoObj::IsInitialized() const {
  return true;
}

void ApplyListRoleInfoObj::Swap(ApplyListRoleInfoObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApplyListRoleInfoObj::InternalSwap(ApplyListRoleInfoObj* other) {
  using std::swap;
  username_.Swap(&other->username_);
  swap(prof_, other->prof_);
  swap(talentlevel_, other->talentlevel_);
  swap(xiulian_, other->xiulian_);
  swap(military_, other->military_);
  swap(level_, other->level_);
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ApplyListRoleInfoObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ApplyListRoleInfoObj

// optional sint64 UserId = 1 [default = -1];
bool ApplyListRoleInfoObj::has_userid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ApplyListRoleInfoObj::set_has_userid() {
  _has_bits_[0] |= 0x00000040u;
}
void ApplyListRoleInfoObj::clear_has_userid() {
  _has_bits_[0] &= ~0x00000040u;
}
void ApplyListRoleInfoObj::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 ApplyListRoleInfoObj::userid() const {
  // @@protoc_insertion_point(field_get:ApplyListRoleInfoObj.UserId)
  return userid_;
}
void ApplyListRoleInfoObj::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:ApplyListRoleInfoObj.UserId)
}

// optional string UserName = 2;
bool ApplyListRoleInfoObj::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ApplyListRoleInfoObj::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void ApplyListRoleInfoObj::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void ApplyListRoleInfoObj::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& ApplyListRoleInfoObj::username() const {
  // @@protoc_insertion_point(field_get:ApplyListRoleInfoObj.UserName)
  return username_.GetNoArena();
}
void ApplyListRoleInfoObj::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ApplyListRoleInfoObj.UserName)
}
#if LANG_CXX11
void ApplyListRoleInfoObj::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ApplyListRoleInfoObj.UserName)
}
#endif
void ApplyListRoleInfoObj::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ApplyListRoleInfoObj.UserName)
}
void ApplyListRoleInfoObj::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ApplyListRoleInfoObj.UserName)
}
::std::string* ApplyListRoleInfoObj::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:ApplyListRoleInfoObj.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ApplyListRoleInfoObj::release_username() {
  // @@protoc_insertion_point(field_release:ApplyListRoleInfoObj.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ApplyListRoleInfoObj::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:ApplyListRoleInfoObj.UserName)
}

// optional sint32 Level = 3 [default = 1];
bool ApplyListRoleInfoObj::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ApplyListRoleInfoObj::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
void ApplyListRoleInfoObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
void ApplyListRoleInfoObj::clear_level() {
  level_ = 1;
  clear_has_level();
}
::google::protobuf::int32 ApplyListRoleInfoObj::level() const {
  // @@protoc_insertion_point(field_get:ApplyListRoleInfoObj.Level)
  return level_;
}
void ApplyListRoleInfoObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ApplyListRoleInfoObj.Level)
}

// optional sint32 Prof = 4 [default = 0];
bool ApplyListRoleInfoObj::has_prof() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ApplyListRoleInfoObj::set_has_prof() {
  _has_bits_[0] |= 0x00000002u;
}
void ApplyListRoleInfoObj::clear_has_prof() {
  _has_bits_[0] &= ~0x00000002u;
}
void ApplyListRoleInfoObj::clear_prof() {
  prof_ = 0;
  clear_has_prof();
}
::google::protobuf::int32 ApplyListRoleInfoObj::prof() const {
  // @@protoc_insertion_point(field_get:ApplyListRoleInfoObj.Prof)
  return prof_;
}
void ApplyListRoleInfoObj::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
  // @@protoc_insertion_point(field_set:ApplyListRoleInfoObj.Prof)
}

// optional sint32 TalentLevel = 5 [default = 0];
bool ApplyListRoleInfoObj::has_talentlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ApplyListRoleInfoObj::set_has_talentlevel() {
  _has_bits_[0] |= 0x00000004u;
}
void ApplyListRoleInfoObj::clear_has_talentlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
void ApplyListRoleInfoObj::clear_talentlevel() {
  talentlevel_ = 0;
  clear_has_talentlevel();
}
::google::protobuf::int32 ApplyListRoleInfoObj::talentlevel() const {
  // @@protoc_insertion_point(field_get:ApplyListRoleInfoObj.TalentLevel)
  return talentlevel_;
}
void ApplyListRoleInfoObj::set_talentlevel(::google::protobuf::int32 value) {
  set_has_talentlevel();
  talentlevel_ = value;
  // @@protoc_insertion_point(field_set:ApplyListRoleInfoObj.TalentLevel)
}

// optional sint32 Xiulian = 6 [default = 0];
bool ApplyListRoleInfoObj::has_xiulian() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ApplyListRoleInfoObj::set_has_xiulian() {
  _has_bits_[0] |= 0x00000008u;
}
void ApplyListRoleInfoObj::clear_has_xiulian() {
  _has_bits_[0] &= ~0x00000008u;
}
void ApplyListRoleInfoObj::clear_xiulian() {
  xiulian_ = 0;
  clear_has_xiulian();
}
::google::protobuf::int32 ApplyListRoleInfoObj::xiulian() const {
  // @@protoc_insertion_point(field_get:ApplyListRoleInfoObj.Xiulian)
  return xiulian_;
}
void ApplyListRoleInfoObj::set_xiulian(::google::protobuf::int32 value) {
  set_has_xiulian();
  xiulian_ = value;
  // @@protoc_insertion_point(field_set:ApplyListRoleInfoObj.Xiulian)
}

// optional sint32 Military = 7 [default = 0];
bool ApplyListRoleInfoObj::has_military() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ApplyListRoleInfoObj::set_has_military() {
  _has_bits_[0] |= 0x00000010u;
}
void ApplyListRoleInfoObj::clear_has_military() {
  _has_bits_[0] &= ~0x00000010u;
}
void ApplyListRoleInfoObj::clear_military() {
  military_ = 0;
  clear_has_military();
}
::google::protobuf::int32 ApplyListRoleInfoObj::military() const {
  // @@protoc_insertion_point(field_get:ApplyListRoleInfoObj.Military)
  return military_;
}
void ApplyListRoleInfoObj::set_military(::google::protobuf::int32 value) {
  set_has_military();
  military_ = value;
  // @@protoc_insertion_point(field_set:ApplyListRoleInfoObj.Military)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildListObj::kGuildFieldNumber;
const int GuildListObj::kGuildNameFieldNumber;
const int GuildListObj::kLevelFieldNumber;
const int GuildListObj::kCurMemberNumFieldNumber;
const int GuildListObj::kTotalMilitaryFieldNumber;
const int GuildListObj::kAnnouncementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildListObj::GuildListObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildListObj)
}
GuildListObj::GuildListObj(const GuildListObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guildname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guildname()) {
    guildname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guildname_);
  }
  announcement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_announcement()) {
    announcement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.announcement_);
  }
  ::memcpy(&totalmilitary_, &from.totalmilitary_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&totalmilitary_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:GuildListObj)
}

void GuildListObj::SharedCtor() {
  _cached_size_ = 0;
  guildname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  announcement_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  totalmilitary_ = 0;
  curmembernum_ = 1;
  guild_ = -1;
  level_ = 1;
}

GuildListObj::~GuildListObj() {
  // @@protoc_insertion_point(destructor:GuildListObj)
  SharedDtor();
}

void GuildListObj::SharedDtor() {
  guildname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  announcement_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GuildListObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildListObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildListObj& GuildListObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildListObj* GuildListObj::New(::google::protobuf::Arena* arena) const {
  GuildListObj* n = new GuildListObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildListObj::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildListObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!guildname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*guildname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!announcement_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*announcement_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 60u) {
    totalmilitary_ = 0;
    curmembernum_ = 1;
    guild_ = -1;
    level_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildListObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildListObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Guild = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_guild();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &guild_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string GuildName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guildname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guildname().data(), static_cast<int>(this->guildname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildListObj.GuildName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Level = 3 [default = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 CurMemberNum = 4 [default = 1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_curmembernum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &curmembernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TotalMilitary = 5 [default = 0];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_totalmilitary();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &totalmilitary_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Announcement = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_announcement()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->announcement().data(), static_cast<int>(this->announcement().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildListObj.Announcement");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildListObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildListObj)
  return false;
#undef DO_
}

void GuildListObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildListObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Guild = 1 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->guild(), output);
  }

  // optional string GuildName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guildname().data(), static_cast<int>(this->guildname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildListObj.GuildName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->guildname(), output);
  }

  // optional sint32 Level = 3 [default = 1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->level(), output);
  }

  // optional sint32 CurMemberNum = 4 [default = 1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->curmembernum(), output);
  }

  // optional sint32 TotalMilitary = 5 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->totalmilitary(), output);
  }

  // optional string Announcement = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->announcement().data(), static_cast<int>(this->announcement().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildListObj.Announcement");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->announcement(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildListObj)
}

::google::protobuf::uint8* GuildListObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildListObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Guild = 1 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->guild(), target);
  }

  // optional string GuildName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guildname().data(), static_cast<int>(this->guildname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildListObj.GuildName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->guildname(), target);
  }

  // optional sint32 Level = 3 [default = 1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->level(), target);
  }

  // optional sint32 CurMemberNum = 4 [default = 1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->curmembernum(), target);
  }

  // optional sint32 TotalMilitary = 5 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->totalmilitary(), target);
  }

  // optional string Announcement = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->announcement().data(), static_cast<int>(this->announcement().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildListObj.Announcement");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->announcement(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildListObj)
  return target;
}

size_t GuildListObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildListObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string GuildName = 2;
    if (has_guildname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guildname());
    }

    // optional string Announcement = 6;
    if (has_announcement()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->announcement());
    }

    // optional sint32 TotalMilitary = 5 [default = 0];
    if (has_totalmilitary()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->totalmilitary());
    }

    // optional sint32 CurMemberNum = 4 [default = 1];
    if (has_curmembernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->curmembernum());
    }

    // optional sint32 Guild = 1 [default = -1];
    if (has_guild()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->guild());
    }

    // optional sint32 Level = 3 [default = 1];
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->level());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildListObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildListObj)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildListObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildListObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildListObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildListObj)
    MergeFrom(*source);
  }
}

void GuildListObj::MergeFrom(const GuildListObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildListObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_guildname();
      guildname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guildname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_announcement();
      announcement_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.announcement_);
    }
    if (cached_has_bits & 0x00000004u) {
      totalmilitary_ = from.totalmilitary_;
    }
    if (cached_has_bits & 0x00000008u) {
      curmembernum_ = from.curmembernum_;
    }
    if (cached_has_bits & 0x00000010u) {
      guild_ = from.guild_;
    }
    if (cached_has_bits & 0x00000020u) {
      level_ = from.level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildListObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildListObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildListObj::CopyFrom(const GuildListObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildListObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildListObj::IsInitialized() const {
  return true;
}

void GuildListObj::Swap(GuildListObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildListObj::InternalSwap(GuildListObj* other) {
  using std::swap;
  guildname_.Swap(&other->guildname_);
  announcement_.Swap(&other->announcement_);
  swap(totalmilitary_, other->totalmilitary_);
  swap(curmembernum_, other->curmembernum_);
  swap(guild_, other->guild_);
  swap(level_, other->level_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildListObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildListObj

// optional sint32 Guild = 1 [default = -1];
bool GuildListObj::has_guild() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GuildListObj::set_has_guild() {
  _has_bits_[0] |= 0x00000010u;
}
void GuildListObj::clear_has_guild() {
  _has_bits_[0] &= ~0x00000010u;
}
void GuildListObj::clear_guild() {
  guild_ = -1;
  clear_has_guild();
}
::google::protobuf::int32 GuildListObj::guild() const {
  // @@protoc_insertion_point(field_get:GuildListObj.Guild)
  return guild_;
}
void GuildListObj::set_guild(::google::protobuf::int32 value) {
  set_has_guild();
  guild_ = value;
  // @@protoc_insertion_point(field_set:GuildListObj.Guild)
}

// optional string GuildName = 2;
bool GuildListObj::has_guildname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildListObj::set_has_guildname() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildListObj::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildListObj::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guildname();
}
const ::std::string& GuildListObj::guildname() const {
  // @@protoc_insertion_point(field_get:GuildListObj.GuildName)
  return guildname_.GetNoArena();
}
void GuildListObj::set_guildname(const ::std::string& value) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildListObj.GuildName)
}
#if LANG_CXX11
void GuildListObj::set_guildname(::std::string&& value) {
  set_has_guildname();
  guildname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildListObj.GuildName)
}
#endif
void GuildListObj::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildListObj.GuildName)
}
void GuildListObj::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildListObj.GuildName)
}
::std::string* GuildListObj::mutable_guildname() {
  set_has_guildname();
  // @@protoc_insertion_point(field_mutable:GuildListObj.GuildName)
  return guildname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildListObj::release_guildname() {
  // @@protoc_insertion_point(field_release:GuildListObj.GuildName)
  clear_has_guildname();
  return guildname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildListObj::set_allocated_guildname(::std::string* guildname) {
  if (guildname != NULL) {
    set_has_guildname();
  } else {
    clear_has_guildname();
  }
  guildname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:GuildListObj.GuildName)
}

// optional sint32 Level = 3 [default = 1];
bool GuildListObj::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GuildListObj::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
void GuildListObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
void GuildListObj::clear_level() {
  level_ = 1;
  clear_has_level();
}
::google::protobuf::int32 GuildListObj::level() const {
  // @@protoc_insertion_point(field_get:GuildListObj.Level)
  return level_;
}
void GuildListObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:GuildListObj.Level)
}

// optional sint32 CurMemberNum = 4 [default = 1];
bool GuildListObj::has_curmembernum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GuildListObj::set_has_curmembernum() {
  _has_bits_[0] |= 0x00000008u;
}
void GuildListObj::clear_has_curmembernum() {
  _has_bits_[0] &= ~0x00000008u;
}
void GuildListObj::clear_curmembernum() {
  curmembernum_ = 1;
  clear_has_curmembernum();
}
::google::protobuf::int32 GuildListObj::curmembernum() const {
  // @@protoc_insertion_point(field_get:GuildListObj.CurMemberNum)
  return curmembernum_;
}
void GuildListObj::set_curmembernum(::google::protobuf::int32 value) {
  set_has_curmembernum();
  curmembernum_ = value;
  // @@protoc_insertion_point(field_set:GuildListObj.CurMemberNum)
}

// optional sint32 TotalMilitary = 5 [default = 0];
bool GuildListObj::has_totalmilitary() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GuildListObj::set_has_totalmilitary() {
  _has_bits_[0] |= 0x00000004u;
}
void GuildListObj::clear_has_totalmilitary() {
  _has_bits_[0] &= ~0x00000004u;
}
void GuildListObj::clear_totalmilitary() {
  totalmilitary_ = 0;
  clear_has_totalmilitary();
}
::google::protobuf::int32 GuildListObj::totalmilitary() const {
  // @@protoc_insertion_point(field_get:GuildListObj.TotalMilitary)
  return totalmilitary_;
}
void GuildListObj::set_totalmilitary(::google::protobuf::int32 value) {
  set_has_totalmilitary();
  totalmilitary_ = value;
  // @@protoc_insertion_point(field_set:GuildListObj.TotalMilitary)
}

// optional string Announcement = 6;
bool GuildListObj::has_announcement() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildListObj::set_has_announcement() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildListObj::clear_has_announcement() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildListObj::clear_announcement() {
  announcement_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_announcement();
}
const ::std::string& GuildListObj::announcement() const {
  // @@protoc_insertion_point(field_get:GuildListObj.Announcement)
  return announcement_.GetNoArena();
}
void GuildListObj::set_announcement(const ::std::string& value) {
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildListObj.Announcement)
}
#if LANG_CXX11
void GuildListObj::set_announcement(::std::string&& value) {
  set_has_announcement();
  announcement_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildListObj.Announcement)
}
#endif
void GuildListObj::set_announcement(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildListObj.Announcement)
}
void GuildListObj::set_announcement(const char* value, size_t size) {
  set_has_announcement();
  announcement_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildListObj.Announcement)
}
::std::string* GuildListObj::mutable_announcement() {
  set_has_announcement();
  // @@protoc_insertion_point(field_mutable:GuildListObj.Announcement)
  return announcement_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildListObj::release_announcement() {
  // @@protoc_insertion_point(field_release:GuildListObj.Announcement)
  clear_has_announcement();
  return announcement_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildListObj::set_allocated_announcement(::std::string* announcement) {
  if (announcement != NULL) {
    set_has_announcement();
  } else {
    clear_has_announcement();
  }
  announcement_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), announcement);
  // @@protoc_insertion_point(field_set_allocated:GuildListObj.Announcement)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeroFightInfo::kUserIdFieldNumber;
const int HeroFightInfo::kObjIdFieldNumber;
const int HeroFightInfo::kNameFieldNumber;
const int HeroFightInfo::kDeadTimesFieldNumber;
const int HeroFightInfo::kKilledNumFieldNumber;
const int HeroFightInfo::kTotalDamageFieldNumber;
const int HeroFightInfo::kTotalEndureFieldNumber;
const int HeroFightInfo::kIntParaArrFieldNumber;
const int HeroFightInfo::kLevelFieldNumber;
const int HeroFightInfo::kAssistKilledFieldNumber;
const int HeroFightInfo::kCmapIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeroFightInfo::HeroFightInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:HeroFightInfo)
}
HeroFightInfo::HeroFightInfo(const HeroFightInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      intparaarr_(from.intparaarr_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&deadtimes_, &from.deadtimes_,
    static_cast<size_t>(reinterpret_cast<char*>(&assistkilled_) -
    reinterpret_cast<char*>(&deadtimes_)) + sizeof(assistkilled_));
  // @@protoc_insertion_point(copy_constructor:HeroFightInfo)
}

void HeroFightInfo::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&deadtimes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&killednum_) -
      reinterpret_cast<char*>(&deadtimes_)) + sizeof(killednum_));
  cmapid_ = -1;
  userid_ = GOOGLE_LONGLONG(-1);
  objid_ = -1;
  totalendure_ = -1;
  totaldamage_ = GOOGLE_LONGLONG(-1);
  level_ = -1;
  assistkilled_ = -1;
}

HeroFightInfo::~HeroFightInfo() {
  // @@protoc_insertion_point(destructor:HeroFightInfo)
  SharedDtor();
}

void HeroFightInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HeroFightInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroFightInfo::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeroFightInfo& HeroFightInfo::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

HeroFightInfo* HeroFightInfo::New(::google::protobuf::Arena* arena) const {
  HeroFightInfo* n = new HeroFightInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeroFightInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:HeroFightInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  intparaarr_.Clear();
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 254u) {
    ::memset(&deadtimes_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&killednum_) -
        reinterpret_cast<char*>(&deadtimes_)) + sizeof(killednum_));
    cmapid_ = -1;
    userid_ = GOOGLE_LONGLONG(-1);
    objid_ = -1;
    totalendure_ = -1;
    totaldamage_ = GOOGLE_LONGLONG(-1);
  }
  if (cached_has_bits & 768u) {
    level_ = -1;
    assistkilled_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HeroFightInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HeroFightInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 UserId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ObjId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_objid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &objid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "HeroFightInfo.Name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 DeadTimes = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_deadtimes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &deadtimes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 KilledNum = 5 [default = 0];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_killednum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &killednum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 TotalDamage = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_totaldamage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &totaldamage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TotalEndure = 7 [default = -1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_totalendure();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &totalendure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 IntParaArr = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 64u, input, this->mutable_intparaarr())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_intparaarr())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Level = 9 [default = -1];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 AssistKilled = 10 [default = -1];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_assistkilled();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &assistkilled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 CmapId = 11 [default = -1];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_cmapid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &cmapid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HeroFightInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HeroFightInfo)
  return false;
#undef DO_
}

void HeroFightInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HeroFightInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->userid(), output);
  }

  // optional sint32 ObjId = 2 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->objid(), output);
  }

  // optional string Name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "HeroFightInfo.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional sint32 DeadTimes = 4 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->deadtimes(), output);
  }

  // optional sint32 KilledNum = 5 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->killednum(), output);
  }

  // optional sint64 TotalDamage = 6 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(6, this->totaldamage(), output);
  }

  // optional sint32 TotalEndure = 7 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->totalendure(), output);
  }

  // repeated sint32 IntParaArr = 8;
  for (int i = 0, n = this->intparaarr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      8, this->intparaarr(i), output);
  }

  // optional sint32 Level = 9 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(9, this->level(), output);
  }

  // optional sint32 AssistKilled = 10 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(10, this->assistkilled(), output);
  }

  // optional sint32 CmapId = 11 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(11, this->cmapid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HeroFightInfo)
}

::google::protobuf::uint8* HeroFightInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HeroFightInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->userid(), target);
  }

  // optional sint32 ObjId = 2 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->objid(), target);
  }

  // optional string Name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "HeroFightInfo.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional sint32 DeadTimes = 4 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->deadtimes(), target);
  }

  // optional sint32 KilledNum = 5 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->killednum(), target);
  }

  // optional sint64 TotalDamage = 6 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(6, this->totaldamage(), target);
  }

  // optional sint32 TotalEndure = 7 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->totalendure(), target);
  }

  // repeated sint32 IntParaArr = 8;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSInt32ToArray(8, this->intparaarr_, target);

  // optional sint32 Level = 9 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(9, this->level(), target);
  }

  // optional sint32 AssistKilled = 10 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(10, this->assistkilled(), target);
  }

  // optional sint32 CmapId = 11 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(11, this->cmapid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HeroFightInfo)
  return target;
}

size_t HeroFightInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HeroFightInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated sint32 IntParaArr = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->intparaarr_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->intparaarr_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string Name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional sint32 DeadTimes = 4 [default = 0];
    if (has_deadtimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->deadtimes());
    }

    // optional sint32 KilledNum = 5 [default = 0];
    if (has_killednum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->killednum());
    }

    // optional sint32 CmapId = 11 [default = -1];
    if (has_cmapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->cmapid());
    }

    // optional sint64 UserId = 1 [default = -1];
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->userid());
    }

    // optional sint32 ObjId = 2 [default = -1];
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->objid());
    }

    // optional sint32 TotalEndure = 7 [default = -1];
    if (has_totalendure()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->totalendure());
    }

    // optional sint64 TotalDamage = 6 [default = -1];
    if (has_totaldamage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->totaldamage());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional sint32 Level = 9 [default = -1];
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->level());
    }

    // optional sint32 AssistKilled = 10 [default = -1];
    if (has_assistkilled()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->assistkilled());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroFightInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HeroFightInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const HeroFightInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeroFightInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HeroFightInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HeroFightInfo)
    MergeFrom(*source);
  }
}

void HeroFightInfo::MergeFrom(const HeroFightInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HeroFightInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  intparaarr_.MergeFrom(from.intparaarr_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      deadtimes_ = from.deadtimes_;
    }
    if (cached_has_bits & 0x00000004u) {
      killednum_ = from.killednum_;
    }
    if (cached_has_bits & 0x00000008u) {
      cmapid_ = from.cmapid_;
    }
    if (cached_has_bits & 0x00000010u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000020u) {
      objid_ = from.objid_;
    }
    if (cached_has_bits & 0x00000040u) {
      totalendure_ = from.totalendure_;
    }
    if (cached_has_bits & 0x00000080u) {
      totaldamage_ = from.totaldamage_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000200u) {
      assistkilled_ = from.assistkilled_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void HeroFightInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HeroFightInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroFightInfo::CopyFrom(const HeroFightInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HeroFightInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroFightInfo::IsInitialized() const {
  return true;
}

void HeroFightInfo::Swap(HeroFightInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeroFightInfo::InternalSwap(HeroFightInfo* other) {
  using std::swap;
  intparaarr_.InternalSwap(&other->intparaarr_);
  name_.Swap(&other->name_);
  swap(deadtimes_, other->deadtimes_);
  swap(killednum_, other->killednum_);
  swap(cmapid_, other->cmapid_);
  swap(userid_, other->userid_);
  swap(objid_, other->objid_);
  swap(totalendure_, other->totalendure_);
  swap(totaldamage_, other->totaldamage_);
  swap(level_, other->level_);
  swap(assistkilled_, other->assistkilled_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeroFightInfo::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeroFightInfo

// optional sint64 UserId = 1 [default = -1];
bool HeroFightInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void HeroFightInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000010u;
}
void HeroFightInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000010u;
}
void HeroFightInfo::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 HeroFightInfo::userid() const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.UserId)
  return userid_;
}
void HeroFightInfo::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:HeroFightInfo.UserId)
}

// optional sint32 ObjId = 2 [default = -1];
bool HeroFightInfo::has_objid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void HeroFightInfo::set_has_objid() {
  _has_bits_[0] |= 0x00000020u;
}
void HeroFightInfo::clear_has_objid() {
  _has_bits_[0] &= ~0x00000020u;
}
void HeroFightInfo::clear_objid() {
  objid_ = -1;
  clear_has_objid();
}
::google::protobuf::int32 HeroFightInfo::objid() const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.ObjId)
  return objid_;
}
void HeroFightInfo::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:HeroFightInfo.ObjId)
}

// optional string Name = 3;
bool HeroFightInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HeroFightInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void HeroFightInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void HeroFightInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& HeroFightInfo::name() const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.Name)
  return name_.GetNoArena();
}
void HeroFightInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HeroFightInfo.Name)
}
#if LANG_CXX11
void HeroFightInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:HeroFightInfo.Name)
}
#endif
void HeroFightInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HeroFightInfo.Name)
}
void HeroFightInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HeroFightInfo.Name)
}
::std::string* HeroFightInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:HeroFightInfo.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HeroFightInfo::release_name() {
  // @@protoc_insertion_point(field_release:HeroFightInfo.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HeroFightInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:HeroFightInfo.Name)
}

// optional sint32 DeadTimes = 4 [default = 0];
bool HeroFightInfo::has_deadtimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HeroFightInfo::set_has_deadtimes() {
  _has_bits_[0] |= 0x00000002u;
}
void HeroFightInfo::clear_has_deadtimes() {
  _has_bits_[0] &= ~0x00000002u;
}
void HeroFightInfo::clear_deadtimes() {
  deadtimes_ = 0;
  clear_has_deadtimes();
}
::google::protobuf::int32 HeroFightInfo::deadtimes() const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.DeadTimes)
  return deadtimes_;
}
void HeroFightInfo::set_deadtimes(::google::protobuf::int32 value) {
  set_has_deadtimes();
  deadtimes_ = value;
  // @@protoc_insertion_point(field_set:HeroFightInfo.DeadTimes)
}

// optional sint32 KilledNum = 5 [default = 0];
bool HeroFightInfo::has_killednum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void HeroFightInfo::set_has_killednum() {
  _has_bits_[0] |= 0x00000004u;
}
void HeroFightInfo::clear_has_killednum() {
  _has_bits_[0] &= ~0x00000004u;
}
void HeroFightInfo::clear_killednum() {
  killednum_ = 0;
  clear_has_killednum();
}
::google::protobuf::int32 HeroFightInfo::killednum() const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.KilledNum)
  return killednum_;
}
void HeroFightInfo::set_killednum(::google::protobuf::int32 value) {
  set_has_killednum();
  killednum_ = value;
  // @@protoc_insertion_point(field_set:HeroFightInfo.KilledNum)
}

// optional sint64 TotalDamage = 6 [default = -1];
bool HeroFightInfo::has_totaldamage() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void HeroFightInfo::set_has_totaldamage() {
  _has_bits_[0] |= 0x00000080u;
}
void HeroFightInfo::clear_has_totaldamage() {
  _has_bits_[0] &= ~0x00000080u;
}
void HeroFightInfo::clear_totaldamage() {
  totaldamage_ = GOOGLE_LONGLONG(-1);
  clear_has_totaldamage();
}
::google::protobuf::int64 HeroFightInfo::totaldamage() const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.TotalDamage)
  return totaldamage_;
}
void HeroFightInfo::set_totaldamage(::google::protobuf::int64 value) {
  set_has_totaldamage();
  totaldamage_ = value;
  // @@protoc_insertion_point(field_set:HeroFightInfo.TotalDamage)
}

// optional sint32 TotalEndure = 7 [default = -1];
bool HeroFightInfo::has_totalendure() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void HeroFightInfo::set_has_totalendure() {
  _has_bits_[0] |= 0x00000040u;
}
void HeroFightInfo::clear_has_totalendure() {
  _has_bits_[0] &= ~0x00000040u;
}
void HeroFightInfo::clear_totalendure() {
  totalendure_ = -1;
  clear_has_totalendure();
}
::google::protobuf::int32 HeroFightInfo::totalendure() const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.TotalEndure)
  return totalendure_;
}
void HeroFightInfo::set_totalendure(::google::protobuf::int32 value) {
  set_has_totalendure();
  totalendure_ = value;
  // @@protoc_insertion_point(field_set:HeroFightInfo.TotalEndure)
}

// repeated sint32 IntParaArr = 8;
int HeroFightInfo::intparaarr_size() const {
  return intparaarr_.size();
}
void HeroFightInfo::clear_intparaarr() {
  intparaarr_.Clear();
}
::google::protobuf::int32 HeroFightInfo::intparaarr(int index) const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.IntParaArr)
  return intparaarr_.Get(index);
}
void HeroFightInfo::set_intparaarr(int index, ::google::protobuf::int32 value) {
  intparaarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:HeroFightInfo.IntParaArr)
}
void HeroFightInfo::add_intparaarr(::google::protobuf::int32 value) {
  intparaarr_.Add(value);
  // @@protoc_insertion_point(field_add:HeroFightInfo.IntParaArr)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HeroFightInfo::intparaarr() const {
  // @@protoc_insertion_point(field_list:HeroFightInfo.IntParaArr)
  return intparaarr_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HeroFightInfo::mutable_intparaarr() {
  // @@protoc_insertion_point(field_mutable_list:HeroFightInfo.IntParaArr)
  return &intparaarr_;
}

// optional sint32 Level = 9 [default = -1];
bool HeroFightInfo::has_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void HeroFightInfo::set_has_level() {
  _has_bits_[0] |= 0x00000100u;
}
void HeroFightInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000100u;
}
void HeroFightInfo::clear_level() {
  level_ = -1;
  clear_has_level();
}
::google::protobuf::int32 HeroFightInfo::level() const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.Level)
  return level_;
}
void HeroFightInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:HeroFightInfo.Level)
}

// optional sint32 AssistKilled = 10 [default = -1];
bool HeroFightInfo::has_assistkilled() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void HeroFightInfo::set_has_assistkilled() {
  _has_bits_[0] |= 0x00000200u;
}
void HeroFightInfo::clear_has_assistkilled() {
  _has_bits_[0] &= ~0x00000200u;
}
void HeroFightInfo::clear_assistkilled() {
  assistkilled_ = -1;
  clear_has_assistkilled();
}
::google::protobuf::int32 HeroFightInfo::assistkilled() const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.AssistKilled)
  return assistkilled_;
}
void HeroFightInfo::set_assistkilled(::google::protobuf::int32 value) {
  set_has_assistkilled();
  assistkilled_ = value;
  // @@protoc_insertion_point(field_set:HeroFightInfo.AssistKilled)
}

// optional sint32 CmapId = 11 [default = -1];
bool HeroFightInfo::has_cmapid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void HeroFightInfo::set_has_cmapid() {
  _has_bits_[0] |= 0x00000008u;
}
void HeroFightInfo::clear_has_cmapid() {
  _has_bits_[0] &= ~0x00000008u;
}
void HeroFightInfo::clear_cmapid() {
  cmapid_ = -1;
  clear_has_cmapid();
}
::google::protobuf::int32 HeroFightInfo::cmapid() const {
  // @@protoc_insertion_point(field_get:HeroFightInfo.CmapId)
  return cmapid_;
}
void HeroFightInfo::set_cmapid(::google::protobuf::int32 value) {
  set_has_cmapid();
  cmapid_ = value;
  // @@protoc_insertion_point(field_set:HeroFightInfo.CmapId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildEventObj::kEventIdFieldNumber;
const int GuildEventObj::kParam1FieldNumber;
const int GuildEventObj::kParam2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildEventObj::GuildEventObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildEventObj)
}
GuildEventObj::GuildEventObj(const GuildEventObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  param1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_param1()) {
    param1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param1_);
  }
  param2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_param2()) {
    param2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param2_);
  }
  eventid_ = from.eventid_;
  // @@protoc_insertion_point(copy_constructor:GuildEventObj)
}

void GuildEventObj::SharedCtor() {
  _cached_size_ = 0;
  param1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eventid_ = -1;
}

GuildEventObj::~GuildEventObj() {
  // @@protoc_insertion_point(destructor:GuildEventObj)
  SharedDtor();
}

void GuildEventObj::SharedDtor() {
  param1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  param2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GuildEventObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildEventObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildEventObj& GuildEventObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildEventObj* GuildEventObj::New(::google::protobuf::Arena* arena) const {
  GuildEventObj* n = new GuildEventObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildEventObj::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildEventObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!param1_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*param1_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!param2_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*param2_.UnsafeRawStringPointer())->clear();
    }
    eventid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildEventObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildEventObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 EventId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eventid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &eventid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Param1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param1().data(), static_cast<int>(this->param1().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildEventObj.Param1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Param2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->param2().data(), static_cast<int>(this->param2().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildEventObj.Param2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildEventObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildEventObj)
  return false;
#undef DO_
}

void GuildEventObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildEventObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 EventId = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->eventid(), output);
  }

  // optional string Param1 = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param1().data(), static_cast<int>(this->param1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildEventObj.Param1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->param1(), output);
  }

  // optional string Param2 = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param2().data(), static_cast<int>(this->param2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildEventObj.Param2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->param2(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildEventObj)
}

::google::protobuf::uint8* GuildEventObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildEventObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 EventId = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->eventid(), target);
  }

  // optional string Param1 = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param1().data(), static_cast<int>(this->param1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildEventObj.Param1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->param1(), target);
  }

  // optional string Param2 = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->param2().data(), static_cast<int>(this->param2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildEventObj.Param2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->param2(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildEventObj)
  return target;
}

size_t GuildEventObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildEventObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string Param1 = 2;
    if (has_param1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param1());
    }

    // optional string Param2 = 3;
    if (has_param2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param2());
    }

    // optional sint32 EventId = 1 [default = -1];
    if (has_eventid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->eventid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildEventObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildEventObj)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildEventObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildEventObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildEventObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildEventObj)
    MergeFrom(*source);
  }
}

void GuildEventObj::MergeFrom(const GuildEventObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildEventObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_param1();
      param1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param1_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_param2();
      param2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.param2_);
    }
    if (cached_has_bits & 0x00000004u) {
      eventid_ = from.eventid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildEventObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildEventObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildEventObj::CopyFrom(const GuildEventObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildEventObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildEventObj::IsInitialized() const {
  return true;
}

void GuildEventObj::Swap(GuildEventObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildEventObj::InternalSwap(GuildEventObj* other) {
  using std::swap;
  param1_.Swap(&other->param1_);
  param2_.Swap(&other->param2_);
  swap(eventid_, other->eventid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildEventObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildEventObj

// optional sint32 EventId = 1 [default = -1];
bool GuildEventObj::has_eventid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GuildEventObj::set_has_eventid() {
  _has_bits_[0] |= 0x00000004u;
}
void GuildEventObj::clear_has_eventid() {
  _has_bits_[0] &= ~0x00000004u;
}
void GuildEventObj::clear_eventid() {
  eventid_ = -1;
  clear_has_eventid();
}
::google::protobuf::int32 GuildEventObj::eventid() const {
  // @@protoc_insertion_point(field_get:GuildEventObj.EventId)
  return eventid_;
}
void GuildEventObj::set_eventid(::google::protobuf::int32 value) {
  set_has_eventid();
  eventid_ = value;
  // @@protoc_insertion_point(field_set:GuildEventObj.EventId)
}

// optional string Param1 = 2;
bool GuildEventObj::has_param1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildEventObj::set_has_param1() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildEventObj::clear_has_param1() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildEventObj::clear_param1() {
  param1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param1();
}
const ::std::string& GuildEventObj::param1() const {
  // @@protoc_insertion_point(field_get:GuildEventObj.Param1)
  return param1_.GetNoArena();
}
void GuildEventObj::set_param1(const ::std::string& value) {
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildEventObj.Param1)
}
#if LANG_CXX11
void GuildEventObj::set_param1(::std::string&& value) {
  set_has_param1();
  param1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildEventObj.Param1)
}
#endif
void GuildEventObj::set_param1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildEventObj.Param1)
}
void GuildEventObj::set_param1(const char* value, size_t size) {
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildEventObj.Param1)
}
::std::string* GuildEventObj::mutable_param1() {
  set_has_param1();
  // @@protoc_insertion_point(field_mutable:GuildEventObj.Param1)
  return param1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildEventObj::release_param1() {
  // @@protoc_insertion_point(field_release:GuildEventObj.Param1)
  clear_has_param1();
  return param1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildEventObj::set_allocated_param1(::std::string* param1) {
  if (param1 != NULL) {
    set_has_param1();
  } else {
    clear_has_param1();
  }
  param1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param1);
  // @@protoc_insertion_point(field_set_allocated:GuildEventObj.Param1)
}

// optional string Param2 = 3;
bool GuildEventObj::has_param2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildEventObj::set_has_param2() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildEventObj::clear_has_param2() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildEventObj::clear_param2() {
  param2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param2();
}
const ::std::string& GuildEventObj::param2() const {
  // @@protoc_insertion_point(field_get:GuildEventObj.Param2)
  return param2_.GetNoArena();
}
void GuildEventObj::set_param2(const ::std::string& value) {
  set_has_param2();
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildEventObj.Param2)
}
#if LANG_CXX11
void GuildEventObj::set_param2(::std::string&& value) {
  set_has_param2();
  param2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildEventObj.Param2)
}
#endif
void GuildEventObj::set_param2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_param2();
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildEventObj.Param2)
}
void GuildEventObj::set_param2(const char* value, size_t size) {
  set_has_param2();
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildEventObj.Param2)
}
::std::string* GuildEventObj::mutable_param2() {
  set_has_param2();
  // @@protoc_insertion_point(field_mutable:GuildEventObj.Param2)
  return param2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildEventObj::release_param2() {
  // @@protoc_insertion_point(field_release:GuildEventObj.Param2)
  clear_has_param2();
  return param2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildEventObj::set_allocated_param2(::std::string* param2) {
  if (param2 != NULL) {
    set_has_param2();
  } else {
    clear_has_param2();
  }
  param2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param2);
  // @@protoc_insertion_point(field_set_allocated:GuildEventObj.Param2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildDungeonObj::kDungeonIdFieldNumber;
const int GuildDungeonObj::kKeyFieldNumber;
const int GuildDungeonObj::kPostFieldNumber;
const int GuildDungeonObj::kHostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildDungeonObj::GuildDungeonObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildDungeonObj)
}
GuildDungeonObj::GuildDungeonObj(const GuildDungeonObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host()) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  ::memcpy(&dungeonid_, &from.dungeonid_,
    static_cast<size_t>(reinterpret_cast<char*>(&post_) -
    reinterpret_cast<char*>(&dungeonid_)) + sizeof(post_));
  // @@protoc_insertion_point(copy_constructor:GuildDungeonObj)
}

void GuildDungeonObj::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dungeonid_ = -1;
  post_ = -1;
}

GuildDungeonObj::~GuildDungeonObj() {
  // @@protoc_insertion_point(destructor:GuildDungeonObj)
  SharedDtor();
}

void GuildDungeonObj::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GuildDungeonObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildDungeonObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildDungeonObj& GuildDungeonObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildDungeonObj* GuildDungeonObj::New(::google::protobuf::Arena* arena) const {
  GuildDungeonObj* n = new GuildDungeonObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildDungeonObj::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildDungeonObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*key_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!host_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*host_.UnsafeRawStringPointer())->clear();
    }
    dungeonid_ = -1;
    post_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildDungeonObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildDungeonObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 DungeonId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dungeonid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &dungeonid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildDungeonObj.Key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Post = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_post();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &post_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Host = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host().data(), static_cast<int>(this->host().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildDungeonObj.Host");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildDungeonObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildDungeonObj)
  return false;
#undef DO_
}

void GuildDungeonObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildDungeonObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 DungeonId = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->dungeonid(), output);
  }

  // optional string Key = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildDungeonObj.Key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // optional sint32 Post = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->post(), output);
  }

  // optional string Host = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildDungeonObj.Host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->host(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildDungeonObj)
}

::google::protobuf::uint8* GuildDungeonObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildDungeonObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 DungeonId = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->dungeonid(), target);
  }

  // optional string Key = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildDungeonObj.Key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // optional sint32 Post = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->post(), target);
  }

  // optional string Host = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildDungeonObj.Host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->host(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildDungeonObj)
  return target;
}

size_t GuildDungeonObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildDungeonObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string Key = 2;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string Host = 4;
    if (has_host()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host());
    }

    // optional sint32 DungeonId = 1 [default = -1];
    if (has_dungeonid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->dungeonid());
    }

    // optional sint32 Post = 3 [default = -1];
    if (has_post()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->post());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildDungeonObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildDungeonObj)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildDungeonObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildDungeonObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildDungeonObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildDungeonObj)
    MergeFrom(*source);
  }
}

void GuildDungeonObj::MergeFrom(const GuildDungeonObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildDungeonObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_host();
      host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
    }
    if (cached_has_bits & 0x00000004u) {
      dungeonid_ = from.dungeonid_;
    }
    if (cached_has_bits & 0x00000008u) {
      post_ = from.post_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildDungeonObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildDungeonObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildDungeonObj::CopyFrom(const GuildDungeonObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildDungeonObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildDungeonObj::IsInitialized() const {
  return true;
}

void GuildDungeonObj::Swap(GuildDungeonObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildDungeonObj::InternalSwap(GuildDungeonObj* other) {
  using std::swap;
  key_.Swap(&other->key_);
  host_.Swap(&other->host_);
  swap(dungeonid_, other->dungeonid_);
  swap(post_, other->post_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildDungeonObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildDungeonObj

// optional sint32 DungeonId = 1 [default = -1];
bool GuildDungeonObj::has_dungeonid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GuildDungeonObj::set_has_dungeonid() {
  _has_bits_[0] |= 0x00000004u;
}
void GuildDungeonObj::clear_has_dungeonid() {
  _has_bits_[0] &= ~0x00000004u;
}
void GuildDungeonObj::clear_dungeonid() {
  dungeonid_ = -1;
  clear_has_dungeonid();
}
::google::protobuf::int32 GuildDungeonObj::dungeonid() const {
  // @@protoc_insertion_point(field_get:GuildDungeonObj.DungeonId)
  return dungeonid_;
}
void GuildDungeonObj::set_dungeonid(::google::protobuf::int32 value) {
  set_has_dungeonid();
  dungeonid_ = value;
  // @@protoc_insertion_point(field_set:GuildDungeonObj.DungeonId)
}

// optional string Key = 2;
bool GuildDungeonObj::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildDungeonObj::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildDungeonObj::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildDungeonObj::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
const ::std::string& GuildDungeonObj::key() const {
  // @@protoc_insertion_point(field_get:GuildDungeonObj.Key)
  return key_.GetNoArena();
}
void GuildDungeonObj::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildDungeonObj.Key)
}
#if LANG_CXX11
void GuildDungeonObj::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildDungeonObj.Key)
}
#endif
void GuildDungeonObj::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildDungeonObj.Key)
}
void GuildDungeonObj::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildDungeonObj.Key)
}
::std::string* GuildDungeonObj::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:GuildDungeonObj.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildDungeonObj::release_key() {
  // @@protoc_insertion_point(field_release:GuildDungeonObj.Key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildDungeonObj::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:GuildDungeonObj.Key)
}

// optional sint32 Post = 3 [default = -1];
bool GuildDungeonObj::has_post() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GuildDungeonObj::set_has_post() {
  _has_bits_[0] |= 0x00000008u;
}
void GuildDungeonObj::clear_has_post() {
  _has_bits_[0] &= ~0x00000008u;
}
void GuildDungeonObj::clear_post() {
  post_ = -1;
  clear_has_post();
}
::google::protobuf::int32 GuildDungeonObj::post() const {
  // @@protoc_insertion_point(field_get:GuildDungeonObj.Post)
  return post_;
}
void GuildDungeonObj::set_post(::google::protobuf::int32 value) {
  set_has_post();
  post_ = value;
  // @@protoc_insertion_point(field_set:GuildDungeonObj.Post)
}

// optional string Host = 4;
bool GuildDungeonObj::has_host() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildDungeonObj::set_has_host() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildDungeonObj::clear_has_host() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildDungeonObj::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
const ::std::string& GuildDungeonObj::host() const {
  // @@protoc_insertion_point(field_get:GuildDungeonObj.Host)
  return host_.GetNoArena();
}
void GuildDungeonObj::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildDungeonObj.Host)
}
#if LANG_CXX11
void GuildDungeonObj::set_host(::std::string&& value) {
  set_has_host();
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildDungeonObj.Host)
}
#endif
void GuildDungeonObj::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildDungeonObj.Host)
}
void GuildDungeonObj::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildDungeonObj.Host)
}
::std::string* GuildDungeonObj::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:GuildDungeonObj.Host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildDungeonObj::release_host() {
  // @@protoc_insertion_point(field_release:GuildDungeonObj.Host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildDungeonObj::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:GuildDungeonObj.Host)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuildWarObj::kGuildAFieldNumber;
const int GuildWarObj::kGuildBFieldNumber;
const int GuildWarObj::kDungeonIdFieldNumber;
const int GuildWarObj::kKeyFieldNumber;
const int GuildWarObj::kPortFieldNumber;
const int GuildWarObj::kHostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuildWarObj::GuildWarObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuildWarObj)
}
GuildWarObj::GuildWarObj(const GuildWarObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host()) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  ::memcpy(&guild_a_, &from.guild_a_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&guild_a_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:GuildWarObj)
}

void GuildWarObj::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guild_a_ = -1;
  guild_b_ = -1;
  dungeonid_ = -1;
  port_ = -1;
}

GuildWarObj::~GuildWarObj() {
  // @@protoc_insertion_point(destructor:GuildWarObj)
  SharedDtor();
}

void GuildWarObj::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GuildWarObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildWarObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuildWarObj& GuildWarObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuildWarObj* GuildWarObj::New(::google::protobuf::Arena* arena) const {
  GuildWarObj* n = new GuildWarObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuildWarObj::Clear() {
// @@protoc_insertion_point(message_clear_start:GuildWarObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*key_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!host_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*host_.UnsafeRawStringPointer())->clear();
    }
    guild_a_ = -1;
    guild_b_ = -1;
    dungeonid_ = -1;
    port_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuildWarObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuildWarObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Guild_A = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_guild_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &guild_a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Guild_B = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_guild_b();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &guild_b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 DungeonId = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_dungeonid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &dungeonid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildWarObj.Key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Port = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Host = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host().data(), static_cast<int>(this->host().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuildWarObj.Host");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuildWarObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuildWarObj)
  return false;
#undef DO_
}

void GuildWarObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuildWarObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Guild_A = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->guild_a(), output);
  }

  // optional sint32 Guild_B = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->guild_b(), output);
  }

  // optional sint32 DungeonId = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->dungeonid(), output);
  }

  // optional string Key = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildWarObj.Key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->key(), output);
  }

  // optional sint32 Port = 6 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->port(), output);
  }

  // optional string Host = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildWarObj.Host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->host(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuildWarObj)
}

::google::protobuf::uint8* GuildWarObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuildWarObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Guild_A = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->guild_a(), target);
  }

  // optional sint32 Guild_B = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->guild_b(), target);
  }

  // optional sint32 DungeonId = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->dungeonid(), target);
  }

  // optional string Key = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildWarObj.Key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->key(), target);
  }

  // optional sint32 Port = 6 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->port(), target);
  }

  // optional string Host = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuildWarObj.Host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->host(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuildWarObj)
  return target;
}

size_t GuildWarObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuildWarObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string Key = 5;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string Host = 7;
    if (has_host()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host());
    }

    // optional sint32 Guild_A = 2 [default = -1];
    if (has_guild_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->guild_a());
    }

    // optional sint32 Guild_B = 3 [default = -1];
    if (has_guild_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->guild_b());
    }

    // optional sint32 DungeonId = 4 [default = -1];
    if (has_dungeonid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->dungeonid());
    }

    // optional sint32 Port = 6 [default = -1];
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildWarObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuildWarObj)
  GOOGLE_DCHECK_NE(&from, this);
  const GuildWarObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuildWarObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuildWarObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuildWarObj)
    MergeFrom(*source);
  }
}

void GuildWarObj::MergeFrom(const GuildWarObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuildWarObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_host();
      host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
    }
    if (cached_has_bits & 0x00000004u) {
      guild_a_ = from.guild_a_;
    }
    if (cached_has_bits & 0x00000008u) {
      guild_b_ = from.guild_b_;
    }
    if (cached_has_bits & 0x00000010u) {
      dungeonid_ = from.dungeonid_;
    }
    if (cached_has_bits & 0x00000020u) {
      port_ = from.port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuildWarObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuildWarObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildWarObj::CopyFrom(const GuildWarObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuildWarObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildWarObj::IsInitialized() const {
  return true;
}

void GuildWarObj::Swap(GuildWarObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuildWarObj::InternalSwap(GuildWarObj* other) {
  using std::swap;
  key_.Swap(&other->key_);
  host_.Swap(&other->host_);
  swap(guild_a_, other->guild_a_);
  swap(guild_b_, other->guild_b_);
  swap(dungeonid_, other->dungeonid_);
  swap(port_, other->port_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuildWarObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuildWarObj

// optional sint32 Guild_A = 2 [default = -1];
bool GuildWarObj::has_guild_a() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GuildWarObj::set_has_guild_a() {
  _has_bits_[0] |= 0x00000004u;
}
void GuildWarObj::clear_has_guild_a() {
  _has_bits_[0] &= ~0x00000004u;
}
void GuildWarObj::clear_guild_a() {
  guild_a_ = -1;
  clear_has_guild_a();
}
::google::protobuf::int32 GuildWarObj::guild_a() const {
  // @@protoc_insertion_point(field_get:GuildWarObj.Guild_A)
  return guild_a_;
}
void GuildWarObj::set_guild_a(::google::protobuf::int32 value) {
  set_has_guild_a();
  guild_a_ = value;
  // @@protoc_insertion_point(field_set:GuildWarObj.Guild_A)
}

// optional sint32 Guild_B = 3 [default = -1];
bool GuildWarObj::has_guild_b() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GuildWarObj::set_has_guild_b() {
  _has_bits_[0] |= 0x00000008u;
}
void GuildWarObj::clear_has_guild_b() {
  _has_bits_[0] &= ~0x00000008u;
}
void GuildWarObj::clear_guild_b() {
  guild_b_ = -1;
  clear_has_guild_b();
}
::google::protobuf::int32 GuildWarObj::guild_b() const {
  // @@protoc_insertion_point(field_get:GuildWarObj.Guild_B)
  return guild_b_;
}
void GuildWarObj::set_guild_b(::google::protobuf::int32 value) {
  set_has_guild_b();
  guild_b_ = value;
  // @@protoc_insertion_point(field_set:GuildWarObj.Guild_B)
}

// optional sint32 DungeonId = 4 [default = -1];
bool GuildWarObj::has_dungeonid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GuildWarObj::set_has_dungeonid() {
  _has_bits_[0] |= 0x00000010u;
}
void GuildWarObj::clear_has_dungeonid() {
  _has_bits_[0] &= ~0x00000010u;
}
void GuildWarObj::clear_dungeonid() {
  dungeonid_ = -1;
  clear_has_dungeonid();
}
::google::protobuf::int32 GuildWarObj::dungeonid() const {
  // @@protoc_insertion_point(field_get:GuildWarObj.DungeonId)
  return dungeonid_;
}
void GuildWarObj::set_dungeonid(::google::protobuf::int32 value) {
  set_has_dungeonid();
  dungeonid_ = value;
  // @@protoc_insertion_point(field_set:GuildWarObj.DungeonId)
}

// optional string Key = 5;
bool GuildWarObj::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GuildWarObj::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void GuildWarObj::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void GuildWarObj::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
const ::std::string& GuildWarObj::key() const {
  // @@protoc_insertion_point(field_get:GuildWarObj.Key)
  return key_.GetNoArena();
}
void GuildWarObj::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildWarObj.Key)
}
#if LANG_CXX11
void GuildWarObj::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildWarObj.Key)
}
#endif
void GuildWarObj::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildWarObj.Key)
}
void GuildWarObj::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildWarObj.Key)
}
::std::string* GuildWarObj::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:GuildWarObj.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildWarObj::release_key() {
  // @@protoc_insertion_point(field_release:GuildWarObj.Key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildWarObj::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:GuildWarObj.Key)
}

// optional sint32 Port = 6 [default = -1];
bool GuildWarObj::has_port() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GuildWarObj::set_has_port() {
  _has_bits_[0] |= 0x00000020u;
}
void GuildWarObj::clear_has_port() {
  _has_bits_[0] &= ~0x00000020u;
}
void GuildWarObj::clear_port() {
  port_ = -1;
  clear_has_port();
}
::google::protobuf::int32 GuildWarObj::port() const {
  // @@protoc_insertion_point(field_get:GuildWarObj.Port)
  return port_;
}
void GuildWarObj::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:GuildWarObj.Port)
}

// optional string Host = 7;
bool GuildWarObj::has_host() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GuildWarObj::set_has_host() {
  _has_bits_[0] |= 0x00000002u;
}
void GuildWarObj::clear_has_host() {
  _has_bits_[0] &= ~0x00000002u;
}
void GuildWarObj::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
const ::std::string& GuildWarObj::host() const {
  // @@protoc_insertion_point(field_get:GuildWarObj.Host)
  return host_.GetNoArena();
}
void GuildWarObj::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuildWarObj.Host)
}
#if LANG_CXX11
void GuildWarObj::set_host(::std::string&& value) {
  set_has_host();
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuildWarObj.Host)
}
#endif
void GuildWarObj::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuildWarObj.Host)
}
void GuildWarObj::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuildWarObj.Host)
}
::std::string* GuildWarObj::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:GuildWarObj.Host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GuildWarObj::release_host() {
  // @@protoc_insertion_point(field_release:GuildWarObj.Host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GuildWarObj::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:GuildWarObj.Host)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagGridObj::kTemplateIDFieldNumber;
const int BagGridObj::kNumFieldNumber;
const int BagGridObj::kItemTypeFieldNumber;
const int BagGridObj::kPosFieldNumber;
const int BagGridObj::kValueFieldNumber;
const int BagGridObj::kIndexFieldNumber;
const int BagGridObj::kBindFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagGridObj::BagGridObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagGridObj)
}
BagGridObj::BagGridObj(const BagGridObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&num_, &from.num_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&num_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:BagGridObj)
}

void BagGridObj::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bind_) -
      reinterpret_cast<char*>(&num_)) + sizeof(bind_));
  templateid_ = -1;
  itemtype_ = -1;
  pos_ = -1;
  value_ = -1;
  index_ = GOOGLE_LONGLONG(-1);
}

BagGridObj::~BagGridObj() {
  // @@protoc_insertion_point(destructor:BagGridObj)
  SharedDtor();
}

void BagGridObj::SharedDtor() {
}

void BagGridObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagGridObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagGridObj& BagGridObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagGridObj* BagGridObj::New(::google::protobuf::Arena* arena) const {
  BagGridObj* n = new BagGridObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagGridObj::Clear() {
// @@protoc_insertion_point(message_clear_start:BagGridObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&num_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bind_) -
        reinterpret_cast<char*>(&num_)) + sizeof(bind_));
    templateid_ = -1;
    itemtype_ = -1;
    pos_ = -1;
    value_ = -1;
    index_ = GOOGLE_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagGridObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagGridObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 TemplateID = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Num = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ItemType = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_itemtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Value = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 Index = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool Bind = 7 [default = false];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_bind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagGridObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagGridObj)
  return false;
#undef DO_
}

void BagGridObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagGridObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateID = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->templateid(), output);
  }

  // optional sint32 Num = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->num(), output);
  }

  // optional sint32 ItemType = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->itemtype(), output);
  }

  // optional sint32 Pos = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->pos(), output);
  }

  // optional sint32 Value = 5 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->value(), output);
  }

  // optional sint64 Index = 6 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(6, this->index(), output);
  }

  // optional bool Bind = 7 [default = false];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->bind(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagGridObj)
}

::google::protobuf::uint8* BagGridObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagGridObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateID = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->templateid(), target);
  }

  // optional sint32 Num = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->num(), target);
  }

  // optional sint32 ItemType = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->itemtype(), target);
  }

  // optional sint32 Pos = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->pos(), target);
  }

  // optional sint32 Value = 5 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->value(), target);
  }

  // optional sint64 Index = 6 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(6, this->index(), target);
  }

  // optional bool Bind = 7 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->bind(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagGridObj)
  return target;
}

size_t BagGridObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagGridObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional sint32 Num = 2 [default = 0];
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->num());
    }

    // optional bool Bind = 7 [default = false];
    if (has_bind()) {
      total_size += 1 + 1;
    }

    // optional sint32 TemplateID = 1 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 ItemType = 3 [default = -1];
    if (has_itemtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemtype());
    }

    // optional sint32 Pos = 4 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 Value = 5 [default = -1];
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->value());
    }

    // optional sint64 Index = 6 [default = -1];
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagGridObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagGridObj)
  GOOGLE_DCHECK_NE(&from, this);
  const BagGridObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagGridObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagGridObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagGridObj)
    MergeFrom(*source);
  }
}

void BagGridObj::MergeFrom(const BagGridObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagGridObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      num_ = from.num_;
    }
    if (cached_has_bits & 0x00000002u) {
      bind_ = from.bind_;
    }
    if (cached_has_bits & 0x00000004u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000008u) {
      itemtype_ = from.itemtype_;
    }
    if (cached_has_bits & 0x00000010u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000020u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000040u) {
      index_ = from.index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagGridObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagGridObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagGridObj::CopyFrom(const BagGridObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagGridObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagGridObj::IsInitialized() const {
  return true;
}

void BagGridObj::Swap(BagGridObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagGridObj::InternalSwap(BagGridObj* other) {
  using std::swap;
  swap(num_, other->num_);
  swap(bind_, other->bind_);
  swap(templateid_, other->templateid_);
  swap(itemtype_, other->itemtype_);
  swap(pos_, other->pos_);
  swap(value_, other->value_);
  swap(index_, other->index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagGridObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagGridObj

// optional sint32 TemplateID = 1 [default = -1];
bool BagGridObj::has_templateid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagGridObj::set_has_templateid() {
  _has_bits_[0] |= 0x00000004u;
}
void BagGridObj::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagGridObj::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagGridObj::templateid() const {
  // @@protoc_insertion_point(field_get:BagGridObj.TemplateID)
  return templateid_;
}
void BagGridObj::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.TemplateID)
}

// optional sint32 Num = 2 [default = 0];
bool BagGridObj::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagGridObj::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
void BagGridObj::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagGridObj::clear_num() {
  num_ = 0;
  clear_has_num();
}
::google::protobuf::int32 BagGridObj::num() const {
  // @@protoc_insertion_point(field_get:BagGridObj.Num)
  return num_;
}
void BagGridObj::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.Num)
}

// optional sint32 ItemType = 3 [default = -1];
bool BagGridObj::has_itemtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagGridObj::set_has_itemtype() {
  _has_bits_[0] |= 0x00000008u;
}
void BagGridObj::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagGridObj::clear_itemtype() {
  itemtype_ = -1;
  clear_has_itemtype();
}
::google::protobuf::int32 BagGridObj::itemtype() const {
  // @@protoc_insertion_point(field_get:BagGridObj.ItemType)
  return itemtype_;
}
void BagGridObj::set_itemtype(::google::protobuf::int32 value) {
  set_has_itemtype();
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.ItemType)
}

// optional sint32 Pos = 4 [default = -1];
bool BagGridObj::has_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BagGridObj::set_has_pos() {
  _has_bits_[0] |= 0x00000010u;
}
void BagGridObj::clear_has_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
void BagGridObj::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagGridObj::pos() const {
  // @@protoc_insertion_point(field_get:BagGridObj.Pos)
  return pos_;
}
void BagGridObj::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.Pos)
}

// optional sint32 Value = 5 [default = -1];
bool BagGridObj::has_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BagGridObj::set_has_value() {
  _has_bits_[0] |= 0x00000020u;
}
void BagGridObj::clear_has_value() {
  _has_bits_[0] &= ~0x00000020u;
}
void BagGridObj::clear_value() {
  value_ = -1;
  clear_has_value();
}
::google::protobuf::int32 BagGridObj::value() const {
  // @@protoc_insertion_point(field_get:BagGridObj.Value)
  return value_;
}
void BagGridObj::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.Value)
}

// optional sint64 Index = 6 [default = -1];
bool BagGridObj::has_index() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BagGridObj::set_has_index() {
  _has_bits_[0] |= 0x00000040u;
}
void BagGridObj::clear_has_index() {
  _has_bits_[0] &= ~0x00000040u;
}
void BagGridObj::clear_index() {
  index_ = GOOGLE_LONGLONG(-1);
  clear_has_index();
}
::google::protobuf::int64 BagGridObj::index() const {
  // @@protoc_insertion_point(field_get:BagGridObj.Index)
  return index_;
}
void BagGridObj::set_index(::google::protobuf::int64 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.Index)
}

// optional bool Bind = 7 [default = false];
bool BagGridObj::has_bind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagGridObj::set_has_bind() {
  _has_bits_[0] |= 0x00000002u;
}
void BagGridObj::clear_has_bind() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagGridObj::clear_bind() {
  bind_ = false;
  clear_has_bind();
}
bool BagGridObj::bind() const {
  // @@protoc_insertion_point(field_get:BagGridObj.Bind)
  return bind_;
}
void BagGridObj::set_bind(bool value) {
  set_has_bind();
  bind_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.Bind)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropItemObj::kConfigIdFieldNumber;
const int DropItemObj::kUIdFieldNumber;
const int DropItemObj::kNumFieldNumber;
const int DropItemObj::kItemTypeFieldNumber;
const int DropItemObj::kAttrNumFieldNumber;
const int DropItemObj::kMonsterObjIdFieldNumber;
const int DropItemObj::kPosInfoFieldNumber;
const int DropItemObj::kCreateTimeFieldNumber;
const int DropItemObj::kIsPickupFieldNumber;
const int DropItemObj::kItemIdFieldNumber;
const int DropItemObj::kDestroyTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropItemObj::DropItemObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DropItemObj)
}
DropItemObj::DropItemObj(const DropItemObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  posinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_posinfo()) {
    posinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.posinfo_);
  }
  ::memcpy(&num_, &from.num_,
    static_cast<size_t>(reinterpret_cast<char*>(&itemid_) -
    reinterpret_cast<char*>(&num_)) + sizeof(itemid_));
  // @@protoc_insertion_point(copy_constructor:DropItemObj)
}

void DropItemObj::SharedCtor() {
  _cached_size_ = 0;
  posinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&destroytime_) -
      reinterpret_cast<char*>(&num_)) + sizeof(destroytime_));
  configid_ = -1;
  uid_ = -1;
  itemtype_ = -1;
  monsterobjid_ = -1;
  itemid_ = GOOGLE_LONGLONG(-1);
}

DropItemObj::~DropItemObj() {
  // @@protoc_insertion_point(destructor:DropItemObj)
  SharedDtor();
}

void DropItemObj::SharedDtor() {
  posinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DropItemObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DropItemObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropItemObj& DropItemObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

DropItemObj* DropItemObj::New(::google::protobuf::Arena* arena) const {
  DropItemObj* n = new DropItemObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DropItemObj::Clear() {
// @@protoc_insertion_point(message_clear_start:DropItemObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_posinfo()) {
    GOOGLE_DCHECK(!posinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*posinfo_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 254u) {
    ::memset(&num_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&destroytime_) -
        reinterpret_cast<char*>(&num_)) + sizeof(destroytime_));
    configid_ = -1;
    uid_ = -1;
  }
  if (cached_has_bits & 1792u) {
    itemtype_ = -1;
    monsterobjid_ = -1;
    itemid_ = GOOGLE_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DropItemObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DropItemObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 ConfigId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_configid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &configid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 UId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Num = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ItemType = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_itemtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 AttrNum = 8 [default = 0];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_attrnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &attrnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 MonsterObjId = 9 [default = -1];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_monsterobjid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &monsterobjid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes PosInfo = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_posinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 CreateTime = 11 [default = 0];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_createtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsPickup = 12 [default = false];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_ispickup();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ispickup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 ItemId = 13 [default = -1];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 DestroyTime = 14 [default = 0];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_destroytime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &destroytime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DropItemObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DropItemObj)
  return false;
#undef DO_
}

void DropItemObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DropItemObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ConfigId = 1 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->configid(), output);
  }

  // optional sint32 UId = 2 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->uid(), output);
  }

  // optional sint32 Num = 4 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->num(), output);
  }

  // optional sint32 ItemType = 5 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->itemtype(), output);
  }

  // optional sint32 AttrNum = 8 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->attrnum(), output);
  }

  // optional sint32 MonsterObjId = 9 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(9, this->monsterobjid(), output);
  }

  // optional bytes PosInfo = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->posinfo(), output);
  }

  // optional sint32 CreateTime = 11 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(11, this->createtime(), output);
  }

  // optional bool IsPickup = 12 [default = false];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->ispickup(), output);
  }

  // optional sint64 ItemId = 13 [default = -1];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(13, this->itemid(), output);
  }

  // optional sint32 DestroyTime = 14 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(14, this->destroytime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DropItemObj)
}

::google::protobuf::uint8* DropItemObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DropItemObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ConfigId = 1 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->configid(), target);
  }

  // optional sint32 UId = 2 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->uid(), target);
  }

  // optional sint32 Num = 4 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->num(), target);
  }

  // optional sint32 ItemType = 5 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->itemtype(), target);
  }

  // optional sint32 AttrNum = 8 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->attrnum(), target);
  }

  // optional sint32 MonsterObjId = 9 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(9, this->monsterobjid(), target);
  }

  // optional bytes PosInfo = 10;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->posinfo(), target);
  }

  // optional sint32 CreateTime = 11 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(11, this->createtime(), target);
  }

  // optional bool IsPickup = 12 [default = false];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->ispickup(), target);
  }

  // optional sint64 ItemId = 13 [default = -1];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(13, this->itemid(), target);
  }

  // optional sint32 DestroyTime = 14 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(14, this->destroytime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DropItemObj)
  return target;
}

size_t DropItemObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DropItemObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes PosInfo = 10;
    if (has_posinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->posinfo());
    }

    // optional sint32 Num = 4 [default = 0];
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->num());
    }

    // optional sint32 AttrNum = 8 [default = 0];
    if (has_attrnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->attrnum());
    }

    // optional sint32 CreateTime = 11 [default = 0];
    if (has_createtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->createtime());
    }

    // optional bool IsPickup = 12 [default = false];
    if (has_ispickup()) {
      total_size += 1 + 1;
    }

    // optional sint32 DestroyTime = 14 [default = 0];
    if (has_destroytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->destroytime());
    }

    // optional sint32 ConfigId = 1 [default = -1];
    if (has_configid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->configid());
    }

    // optional sint32 UId = 2 [default = -1];
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->uid());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional sint32 ItemType = 5 [default = -1];
    if (has_itemtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemtype());
    }

    // optional sint32 MonsterObjId = 9 [default = -1];
    if (has_monsterobjid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->monsterobjid());
    }

    // optional sint64 ItemId = 13 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->itemid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DropItemObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DropItemObj)
  GOOGLE_DCHECK_NE(&from, this);
  const DropItemObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropItemObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DropItemObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DropItemObj)
    MergeFrom(*source);
  }
}

void DropItemObj::MergeFrom(const DropItemObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DropItemObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_posinfo();
      posinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.posinfo_);
    }
    if (cached_has_bits & 0x00000002u) {
      num_ = from.num_;
    }
    if (cached_has_bits & 0x00000004u) {
      attrnum_ = from.attrnum_;
    }
    if (cached_has_bits & 0x00000008u) {
      createtime_ = from.createtime_;
    }
    if (cached_has_bits & 0x00000010u) {
      ispickup_ = from.ispickup_;
    }
    if (cached_has_bits & 0x00000020u) {
      destroytime_ = from.destroytime_;
    }
    if (cached_has_bits & 0x00000040u) {
      configid_ = from.configid_;
    }
    if (cached_has_bits & 0x00000080u) {
      uid_ = from.uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      itemtype_ = from.itemtype_;
    }
    if (cached_has_bits & 0x00000200u) {
      monsterobjid_ = from.monsterobjid_;
    }
    if (cached_has_bits & 0x00000400u) {
      itemid_ = from.itemid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DropItemObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DropItemObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropItemObj::CopyFrom(const DropItemObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DropItemObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropItemObj::IsInitialized() const {
  return true;
}

void DropItemObj::Swap(DropItemObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropItemObj::InternalSwap(DropItemObj* other) {
  using std::swap;
  posinfo_.Swap(&other->posinfo_);
  swap(num_, other->num_);
  swap(attrnum_, other->attrnum_);
  swap(createtime_, other->createtime_);
  swap(ispickup_, other->ispickup_);
  swap(destroytime_, other->destroytime_);
  swap(configid_, other->configid_);
  swap(uid_, other->uid_);
  swap(itemtype_, other->itemtype_);
  swap(monsterobjid_, other->monsterobjid_);
  swap(itemid_, other->itemid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DropItemObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DropItemObj

// optional sint32 ConfigId = 1 [default = -1];
bool DropItemObj::has_configid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void DropItemObj::set_has_configid() {
  _has_bits_[0] |= 0x00000040u;
}
void DropItemObj::clear_has_configid() {
  _has_bits_[0] &= ~0x00000040u;
}
void DropItemObj::clear_configid() {
  configid_ = -1;
  clear_has_configid();
}
::google::protobuf::int32 DropItemObj::configid() const {
  // @@protoc_insertion_point(field_get:DropItemObj.ConfigId)
  return configid_;
}
void DropItemObj::set_configid(::google::protobuf::int32 value) {
  set_has_configid();
  configid_ = value;
  // @@protoc_insertion_point(field_set:DropItemObj.ConfigId)
}

// optional sint32 UId = 2 [default = -1];
bool DropItemObj::has_uid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void DropItemObj::set_has_uid() {
  _has_bits_[0] |= 0x00000080u;
}
void DropItemObj::clear_has_uid() {
  _has_bits_[0] &= ~0x00000080u;
}
void DropItemObj::clear_uid() {
  uid_ = -1;
  clear_has_uid();
}
::google::protobuf::int32 DropItemObj::uid() const {
  // @@protoc_insertion_point(field_get:DropItemObj.UId)
  return uid_;
}
void DropItemObj::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:DropItemObj.UId)
}

// optional sint32 Num = 4 [default = 0];
bool DropItemObj::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DropItemObj::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
void DropItemObj::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void DropItemObj::clear_num() {
  num_ = 0;
  clear_has_num();
}
::google::protobuf::int32 DropItemObj::num() const {
  // @@protoc_insertion_point(field_get:DropItemObj.Num)
  return num_;
}
void DropItemObj::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:DropItemObj.Num)
}

// optional sint32 ItemType = 5 [default = -1];
bool DropItemObj::has_itemtype() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void DropItemObj::set_has_itemtype() {
  _has_bits_[0] |= 0x00000100u;
}
void DropItemObj::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000100u;
}
void DropItemObj::clear_itemtype() {
  itemtype_ = -1;
  clear_has_itemtype();
}
::google::protobuf::int32 DropItemObj::itemtype() const {
  // @@protoc_insertion_point(field_get:DropItemObj.ItemType)
  return itemtype_;
}
void DropItemObj::set_itemtype(::google::protobuf::int32 value) {
  set_has_itemtype();
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:DropItemObj.ItemType)
}

// optional sint32 AttrNum = 8 [default = 0];
bool DropItemObj::has_attrnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DropItemObj::set_has_attrnum() {
  _has_bits_[0] |= 0x00000004u;
}
void DropItemObj::clear_has_attrnum() {
  _has_bits_[0] &= ~0x00000004u;
}
void DropItemObj::clear_attrnum() {
  attrnum_ = 0;
  clear_has_attrnum();
}
::google::protobuf::int32 DropItemObj::attrnum() const {
  // @@protoc_insertion_point(field_get:DropItemObj.AttrNum)
  return attrnum_;
}
void DropItemObj::set_attrnum(::google::protobuf::int32 value) {
  set_has_attrnum();
  attrnum_ = value;
  // @@protoc_insertion_point(field_set:DropItemObj.AttrNum)
}

// optional sint32 MonsterObjId = 9 [default = -1];
bool DropItemObj::has_monsterobjid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void DropItemObj::set_has_monsterobjid() {
  _has_bits_[0] |= 0x00000200u;
}
void DropItemObj::clear_has_monsterobjid() {
  _has_bits_[0] &= ~0x00000200u;
}
void DropItemObj::clear_monsterobjid() {
  monsterobjid_ = -1;
  clear_has_monsterobjid();
}
::google::protobuf::int32 DropItemObj::monsterobjid() const {
  // @@protoc_insertion_point(field_get:DropItemObj.MonsterObjId)
  return monsterobjid_;
}
void DropItemObj::set_monsterobjid(::google::protobuf::int32 value) {
  set_has_monsterobjid();
  monsterobjid_ = value;
  // @@protoc_insertion_point(field_set:DropItemObj.MonsterObjId)
}

// optional bytes PosInfo = 10;
bool DropItemObj::has_posinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DropItemObj::set_has_posinfo() {
  _has_bits_[0] |= 0x00000001u;
}
void DropItemObj::clear_has_posinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
void DropItemObj::clear_posinfo() {
  posinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_posinfo();
}
const ::std::string& DropItemObj::posinfo() const {
  // @@protoc_insertion_point(field_get:DropItemObj.PosInfo)
  return posinfo_.GetNoArena();
}
void DropItemObj::set_posinfo(const ::std::string& value) {
  set_has_posinfo();
  posinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DropItemObj.PosInfo)
}
#if LANG_CXX11
void DropItemObj::set_posinfo(::std::string&& value) {
  set_has_posinfo();
  posinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DropItemObj.PosInfo)
}
#endif
void DropItemObj::set_posinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_posinfo();
  posinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DropItemObj.PosInfo)
}
void DropItemObj::set_posinfo(const void* value, size_t size) {
  set_has_posinfo();
  posinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DropItemObj.PosInfo)
}
::std::string* DropItemObj::mutable_posinfo() {
  set_has_posinfo();
  // @@protoc_insertion_point(field_mutable:DropItemObj.PosInfo)
  return posinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DropItemObj::release_posinfo() {
  // @@protoc_insertion_point(field_release:DropItemObj.PosInfo)
  clear_has_posinfo();
  return posinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DropItemObj::set_allocated_posinfo(::std::string* posinfo) {
  if (posinfo != NULL) {
    set_has_posinfo();
  } else {
    clear_has_posinfo();
  }
  posinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), posinfo);
  // @@protoc_insertion_point(field_set_allocated:DropItemObj.PosInfo)
}

// optional sint32 CreateTime = 11 [default = 0];
bool DropItemObj::has_createtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DropItemObj::set_has_createtime() {
  _has_bits_[0] |= 0x00000008u;
}
void DropItemObj::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000008u;
}
void DropItemObj::clear_createtime() {
  createtime_ = 0;
  clear_has_createtime();
}
::google::protobuf::int32 DropItemObj::createtime() const {
  // @@protoc_insertion_point(field_get:DropItemObj.CreateTime)
  return createtime_;
}
void DropItemObj::set_createtime(::google::protobuf::int32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:DropItemObj.CreateTime)
}

// optional bool IsPickup = 12 [default = false];
bool DropItemObj::has_ispickup() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DropItemObj::set_has_ispickup() {
  _has_bits_[0] |= 0x00000010u;
}
void DropItemObj::clear_has_ispickup() {
  _has_bits_[0] &= ~0x00000010u;
}
void DropItemObj::clear_ispickup() {
  ispickup_ = false;
  clear_has_ispickup();
}
bool DropItemObj::ispickup() const {
  // @@protoc_insertion_point(field_get:DropItemObj.IsPickup)
  return ispickup_;
}
void DropItemObj::set_ispickup(bool value) {
  set_has_ispickup();
  ispickup_ = value;
  // @@protoc_insertion_point(field_set:DropItemObj.IsPickup)
}

// optional sint64 ItemId = 13 [default = -1];
bool DropItemObj::has_itemid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void DropItemObj::set_has_itemid() {
  _has_bits_[0] |= 0x00000400u;
}
void DropItemObj::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000400u;
}
void DropItemObj::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(-1);
  clear_has_itemid();
}
::google::protobuf::int64 DropItemObj::itemid() const {
  // @@protoc_insertion_point(field_get:DropItemObj.ItemId)
  return itemid_;
}
void DropItemObj::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:DropItemObj.ItemId)
}

// optional sint32 DestroyTime = 14 [default = 0];
bool DropItemObj::has_destroytime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void DropItemObj::set_has_destroytime() {
  _has_bits_[0] |= 0x00000020u;
}
void DropItemObj::clear_has_destroytime() {
  _has_bits_[0] &= ~0x00000020u;
}
void DropItemObj::clear_destroytime() {
  destroytime_ = 0;
  clear_has_destroytime();
}
::google::protobuf::int32 DropItemObj::destroytime() const {
  // @@protoc_insertion_point(field_get:DropItemObj.DestroyTime)
  return destroytime_;
}
void DropItemObj::set_destroytime(::google::protobuf::int32 value) {
  set_has_destroytime();
  destroytime_ = value;
  // @@protoc_insertion_point(field_set:DropItemObj.DestroyTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagEquipObj::kItemIDFieldNumber;
const int BagEquipObj::kBaseAttrFieldNumber;
const int BagEquipObj::kExtraAttrFieldNumber;
const int BagEquipObj::kEnhanceLvFieldNumber;
const int BagEquipObj::kEquipPolishedResultFieldNumber;
const int BagEquipObj::kPolishedScoreFieldNumber;
const int BagEquipObj::kIndexFieldNumber;
const int BagEquipObj::kInitBaseAttrFieldNumber;
const int BagEquipObj::kBagContainerTypeFieldNumber;
const int BagEquipObj::kGridIndexFieldNumber;
const int BagEquipObj::kPlishedAttrIdFieldNumber;
const int BagEquipObj::kGemArrayFieldNumber;
const int BagEquipObj::kPolishedBaseAttrResultFieldNumber;
const int BagEquipObj::kTemplateIdFieldNumber;
const int BagEquipObj::kGemSuitIdFieldNumber;
const int BagEquipObj::kEquipScoreFieldNumber;
const int BagEquipObj::kPolishedEquipScoreFieldNumber;
const int BagEquipObj::kBaseAttrPolishedInitAttrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagEquipObj::BagEquipObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagEquipObj)
}
BagEquipObj::BagEquipObj(const BagEquipObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      baseattr_(from.baseattr_),
      extraattr_(from.extraattr_),
      enhancelv_(from.enhancelv_),
      equippolishedresult_(from.equippolishedresult_),
      initbaseattr_(from.initbaseattr_),
      plishedattrid_(from.plishedattrid_),
      gemarray_(from.gemarray_),
      polishedbaseattrresult_(from.polishedbaseattrresult_),
      baseattrpolishedinitattr_(from.baseattrpolishedinitattr_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&polishedscore_, &from.polishedscore_,
    static_cast<size_t>(reinterpret_cast<char*>(&gemsuitid_) -
    reinterpret_cast<char*>(&polishedscore_)) + sizeof(gemsuitid_));
  // @@protoc_insertion_point(copy_constructor:BagEquipObj)
}

void BagEquipObj::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&polishedscore_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&polishedequipscore_) -
      reinterpret_cast<char*>(&polishedscore_)) + sizeof(polishedequipscore_));
  itemid_ = GOOGLE_LONGLONG(-1);
  index_ = GOOGLE_LONGLONG(-1);
  bagcontainertype_ = -1;
  gridindex_ = -1;
  templateid_ = -1;
  gemsuitid_ = -1;
}

BagEquipObj::~BagEquipObj() {
  // @@protoc_insertion_point(destructor:BagEquipObj)
  SharedDtor();
}

void BagEquipObj::SharedDtor() {
}

void BagEquipObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagEquipObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagEquipObj& BagEquipObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagEquipObj* BagEquipObj::New(::google::protobuf::Arena* arena) const {
  BagEquipObj* n = new BagEquipObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagEquipObj::Clear() {
// @@protoc_insertion_point(message_clear_start:BagEquipObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  baseattr_.Clear();
  extraattr_.Clear();
  enhancelv_.Clear();
  equippolishedresult_.Clear();
  initbaseattr_.Clear();
  plishedattrid_.Clear();
  gemarray_.Clear();
  polishedbaseattrresult_.Clear();
  baseattrpolishedinitattr_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&polishedscore_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&polishedequipscore_) -
        reinterpret_cast<char*>(&polishedscore_)) + sizeof(polishedequipscore_));
    itemid_ = GOOGLE_LONGLONG(-1);
    index_ = GOOGLE_LONGLONG(-1);
    bagcontainertype_ = -1;
    gridindex_ = -1;
    templateid_ = -1;
  }
  gemsuitid_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagEquipObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagEquipObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 ItemID = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BagAttrIntObj BaseAttr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_baseattr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BagExtraAttrObj ExtraAttr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_extraattr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 EnhanceLv = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 32u, input, this->mutable_enhancelv())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_enhancelv())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BagExtraAttrObj EquipPolishedResult = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equippolishedresult()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 PolishedScore = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_polishedscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &polishedscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 Index = 7 [default = -1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BagAttrIntObj InitBaseAttr = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_initbaseattr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType = 9 [default = -1];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_bagcontainertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 GridIndex = 10 [default = -1];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_gridindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &gridindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BagExtraAttrIdObj PlishedAttrId = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_plishedattrid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BagGemObj GemArray = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gemarray()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BagAttrIntObj PolishedBaseAttrResult = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_polishedbaseattrresult()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TemplateId = 14 [default = -1];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 GemSuitId = 15 [default = -1];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_gemsuitid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &gemsuitid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 EquipScore = 16 [default = 0];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_equipscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &equipscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 PolishedEquipScore = 17 [default = 0];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_polishedequipscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &polishedequipscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BagAttrIntObj BaseAttrPolishedInitAttr = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_baseattrpolishedinitattr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagEquipObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagEquipObj)
  return false;
#undef DO_
}

void BagEquipObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagEquipObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 ItemID = 1 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->itemid(), output);
  }

  // repeated .BagAttrIntObj BaseAttr = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->baseattr_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->baseattr(static_cast<int>(i)), output);
  }

  // repeated .BagExtraAttrObj ExtraAttr = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extraattr_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->extraattr(static_cast<int>(i)), output);
  }

  // repeated sint32 EnhanceLv = 4;
  for (int i = 0, n = this->enhancelv_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      4, this->enhancelv(i), output);
  }

  // repeated .BagExtraAttrObj EquipPolishedResult = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->equippolishedresult_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->equippolishedresult(static_cast<int>(i)), output);
  }

  // optional sint32 PolishedScore = 6 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->polishedscore(), output);
  }

  // optional sint64 Index = 7 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(7, this->index(), output);
  }

  // repeated .BagAttrIntObj InitBaseAttr = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->initbaseattr_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->initbaseattr(static_cast<int>(i)), output);
  }

  // optional sint32 BagContainerType = 9 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(9, this->bagcontainertype(), output);
  }

  // optional sint32 GridIndex = 10 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(10, this->gridindex(), output);
  }

  // repeated .BagExtraAttrIdObj PlishedAttrId = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->plishedattrid_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->plishedattrid(static_cast<int>(i)), output);
  }

  // repeated .BagGemObj GemArray = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gemarray_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->gemarray(static_cast<int>(i)), output);
  }

  // repeated .BagAttrIntObj PolishedBaseAttrResult = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polishedbaseattrresult_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->polishedbaseattrresult(static_cast<int>(i)), output);
  }

  // optional sint32 TemplateId = 14 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(14, this->templateid(), output);
  }

  // optional sint32 GemSuitId = 15 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(15, this->gemsuitid(), output);
  }

  // optional sint32 EquipScore = 16 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(16, this->equipscore(), output);
  }

  // optional sint32 PolishedEquipScore = 17 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(17, this->polishedequipscore(), output);
  }

  // repeated .BagAttrIntObj BaseAttrPolishedInitAttr = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->baseattrpolishedinitattr_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->baseattrpolishedinitattr(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagEquipObj)
}

::google::protobuf::uint8* BagEquipObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagEquipObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 ItemID = 1 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->itemid(), target);
  }

  // repeated .BagAttrIntObj BaseAttr = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->baseattr_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->baseattr(static_cast<int>(i)), deterministic, target);
  }

  // repeated .BagExtraAttrObj ExtraAttr = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extraattr_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->extraattr(static_cast<int>(i)), deterministic, target);
  }

  // repeated sint32 EnhanceLv = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSInt32ToArray(4, this->enhancelv_, target);

  // repeated .BagExtraAttrObj EquipPolishedResult = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->equippolishedresult_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->equippolishedresult(static_cast<int>(i)), deterministic, target);
  }

  // optional sint32 PolishedScore = 6 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->polishedscore(), target);
  }

  // optional sint64 Index = 7 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(7, this->index(), target);
  }

  // repeated .BagAttrIntObj InitBaseAttr = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->initbaseattr_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->initbaseattr(static_cast<int>(i)), deterministic, target);
  }

  // optional sint32 BagContainerType = 9 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(9, this->bagcontainertype(), target);
  }

  // optional sint32 GridIndex = 10 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(10, this->gridindex(), target);
  }

  // repeated .BagExtraAttrIdObj PlishedAttrId = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->plishedattrid_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->plishedattrid(static_cast<int>(i)), deterministic, target);
  }

  // repeated .BagGemObj GemArray = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gemarray_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, this->gemarray(static_cast<int>(i)), deterministic, target);
  }

  // repeated .BagAttrIntObj PolishedBaseAttrResult = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polishedbaseattrresult_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->polishedbaseattrresult(static_cast<int>(i)), deterministic, target);
  }

  // optional sint32 TemplateId = 14 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(14, this->templateid(), target);
  }

  // optional sint32 GemSuitId = 15 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(15, this->gemsuitid(), target);
  }

  // optional sint32 EquipScore = 16 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(16, this->equipscore(), target);
  }

  // optional sint32 PolishedEquipScore = 17 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(17, this->polishedequipscore(), target);
  }

  // repeated .BagAttrIntObj BaseAttrPolishedInitAttr = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->baseattrpolishedinitattr_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, this->baseattrpolishedinitattr(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagEquipObj)
  return target;
}

size_t BagEquipObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagEquipObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .BagAttrIntObj BaseAttr = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->baseattr_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->baseattr(static_cast<int>(i)));
    }
  }

  // repeated .BagExtraAttrObj ExtraAttr = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->extraattr_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->extraattr(static_cast<int>(i)));
    }
  }

  // repeated sint32 EnhanceLv = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->enhancelv_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->enhancelv_size());
    total_size += data_size;
  }

  // repeated .BagExtraAttrObj EquipPolishedResult = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->equippolishedresult_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equippolishedresult(static_cast<int>(i)));
    }
  }

  // repeated .BagAttrIntObj InitBaseAttr = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->initbaseattr_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->initbaseattr(static_cast<int>(i)));
    }
  }

  // repeated .BagExtraAttrIdObj PlishedAttrId = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->plishedattrid_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->plishedattrid(static_cast<int>(i)));
    }
  }

  // repeated .BagGemObj GemArray = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->gemarray_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gemarray(static_cast<int>(i)));
    }
  }

  // repeated .BagAttrIntObj PolishedBaseAttrResult = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->polishedbaseattrresult_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->polishedbaseattrresult(static_cast<int>(i)));
    }
  }

  // repeated .BagAttrIntObj BaseAttrPolishedInitAttr = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->baseattrpolishedinitattr_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->baseattrpolishedinitattr(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional sint32 PolishedScore = 6 [default = 0];
    if (has_polishedscore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->polishedscore());
    }

    // optional sint32 EquipScore = 16 [default = 0];
    if (has_equipscore()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->equipscore());
    }

    // optional sint32 PolishedEquipScore = 17 [default = 0];
    if (has_polishedequipscore()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->polishedequipscore());
    }

    // optional sint64 ItemID = 1 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->itemid());
    }

    // optional sint64 Index = 7 [default = -1];
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->index());
    }

    // optional sint32 BagContainerType = 9 [default = -1];
    if (has_bagcontainertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype());
    }

    // optional sint32 GridIndex = 10 [default = -1];
    if (has_gridindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->gridindex());
    }

    // optional sint32 TemplateId = 14 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

  }
  // optional sint32 GemSuitId = 15 [default = -1];
  if (has_gemsuitid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->gemsuitid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagEquipObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagEquipObj)
  GOOGLE_DCHECK_NE(&from, this);
  const BagEquipObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagEquipObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagEquipObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagEquipObj)
    MergeFrom(*source);
  }
}

void BagEquipObj::MergeFrom(const BagEquipObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagEquipObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  baseattr_.MergeFrom(from.baseattr_);
  extraattr_.MergeFrom(from.extraattr_);
  enhancelv_.MergeFrom(from.enhancelv_);
  equippolishedresult_.MergeFrom(from.equippolishedresult_);
  initbaseattr_.MergeFrom(from.initbaseattr_);
  plishedattrid_.MergeFrom(from.plishedattrid_);
  gemarray_.MergeFrom(from.gemarray_);
  polishedbaseattrresult_.MergeFrom(from.polishedbaseattrresult_);
  baseattrpolishedinitattr_.MergeFrom(from.baseattrpolishedinitattr_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      polishedscore_ = from.polishedscore_;
    }
    if (cached_has_bits & 0x00000002u) {
      equipscore_ = from.equipscore_;
    }
    if (cached_has_bits & 0x00000004u) {
      polishedequipscore_ = from.polishedequipscore_;
    }
    if (cached_has_bits & 0x00000008u) {
      itemid_ = from.itemid_;
    }
    if (cached_has_bits & 0x00000010u) {
      index_ = from.index_;
    }
    if (cached_has_bits & 0x00000020u) {
      bagcontainertype_ = from.bagcontainertype_;
    }
    if (cached_has_bits & 0x00000040u) {
      gridindex_ = from.gridindex_;
    }
    if (cached_has_bits & 0x00000080u) {
      templateid_ = from.templateid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_gemsuitid(from.gemsuitid());
  }
}

void BagEquipObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagEquipObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagEquipObj::CopyFrom(const BagEquipObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagEquipObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagEquipObj::IsInitialized() const {
  return true;
}

void BagEquipObj::Swap(BagEquipObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagEquipObj::InternalSwap(BagEquipObj* other) {
  using std::swap;
  baseattr_.InternalSwap(&other->baseattr_);
  extraattr_.InternalSwap(&other->extraattr_);
  enhancelv_.InternalSwap(&other->enhancelv_);
  equippolishedresult_.InternalSwap(&other->equippolishedresult_);
  initbaseattr_.InternalSwap(&other->initbaseattr_);
  plishedattrid_.InternalSwap(&other->plishedattrid_);
  gemarray_.InternalSwap(&other->gemarray_);
  polishedbaseattrresult_.InternalSwap(&other->polishedbaseattrresult_);
  baseattrpolishedinitattr_.InternalSwap(&other->baseattrpolishedinitattr_);
  swap(polishedscore_, other->polishedscore_);
  swap(equipscore_, other->equipscore_);
  swap(polishedequipscore_, other->polishedequipscore_);
  swap(itemid_, other->itemid_);
  swap(index_, other->index_);
  swap(bagcontainertype_, other->bagcontainertype_);
  swap(gridindex_, other->gridindex_);
  swap(templateid_, other->templateid_);
  swap(gemsuitid_, other->gemsuitid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagEquipObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagEquipObj

// optional sint64 ItemID = 1 [default = -1];
bool BagEquipObj::has_itemid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagEquipObj::set_has_itemid() {
  _has_bits_[0] |= 0x00000008u;
}
void BagEquipObj::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagEquipObj::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(-1);
  clear_has_itemid();
}
::google::protobuf::int64 BagEquipObj::itemid() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.ItemID)
  return itemid_;
}
void BagEquipObj::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.ItemID)
}

// repeated .BagAttrIntObj BaseAttr = 2;
int BagEquipObj::baseattr_size() const {
  return baseattr_.size();
}
void BagEquipObj::clear_baseattr() {
  baseattr_.Clear();
}
const ::BagAttrIntObj& BagEquipObj::baseattr(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.BaseAttr)
  return baseattr_.Get(index);
}
::BagAttrIntObj* BagEquipObj::mutable_baseattr(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.BaseAttr)
  return baseattr_.Mutable(index);
}
::BagAttrIntObj* BagEquipObj::add_baseattr() {
  // @@protoc_insertion_point(field_add:BagEquipObj.BaseAttr)
  return baseattr_.Add();
}
::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >*
BagEquipObj::mutable_baseattr() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.BaseAttr)
  return &baseattr_;
}
const ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >&
BagEquipObj::baseattr() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.BaseAttr)
  return baseattr_;
}

// repeated .BagExtraAttrObj ExtraAttr = 3;
int BagEquipObj::extraattr_size() const {
  return extraattr_.size();
}
void BagEquipObj::clear_extraattr() {
  extraattr_.Clear();
}
const ::BagExtraAttrObj& BagEquipObj::extraattr(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.ExtraAttr)
  return extraattr_.Get(index);
}
::BagExtraAttrObj* BagEquipObj::mutable_extraattr(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.ExtraAttr)
  return extraattr_.Mutable(index);
}
::BagExtraAttrObj* BagEquipObj::add_extraattr() {
  // @@protoc_insertion_point(field_add:BagEquipObj.ExtraAttr)
  return extraattr_.Add();
}
::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj >*
BagEquipObj::mutable_extraattr() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.ExtraAttr)
  return &extraattr_;
}
const ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj >&
BagEquipObj::extraattr() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.ExtraAttr)
  return extraattr_;
}

// repeated sint32 EnhanceLv = 4;
int BagEquipObj::enhancelv_size() const {
  return enhancelv_.size();
}
void BagEquipObj::clear_enhancelv() {
  enhancelv_.Clear();
}
::google::protobuf::int32 BagEquipObj::enhancelv(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.EnhanceLv)
  return enhancelv_.Get(index);
}
void BagEquipObj::set_enhancelv(int index, ::google::protobuf::int32 value) {
  enhancelv_.Set(index, value);
  // @@protoc_insertion_point(field_set:BagEquipObj.EnhanceLv)
}
void BagEquipObj::add_enhancelv(::google::protobuf::int32 value) {
  enhancelv_.Add(value);
  // @@protoc_insertion_point(field_add:BagEquipObj.EnhanceLv)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BagEquipObj::enhancelv() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.EnhanceLv)
  return enhancelv_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BagEquipObj::mutable_enhancelv() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.EnhanceLv)
  return &enhancelv_;
}

// repeated .BagExtraAttrObj EquipPolishedResult = 5;
int BagEquipObj::equippolishedresult_size() const {
  return equippolishedresult_.size();
}
void BagEquipObj::clear_equippolishedresult() {
  equippolishedresult_.Clear();
}
const ::BagExtraAttrObj& BagEquipObj::equippolishedresult(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.EquipPolishedResult)
  return equippolishedresult_.Get(index);
}
::BagExtraAttrObj* BagEquipObj::mutable_equippolishedresult(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.EquipPolishedResult)
  return equippolishedresult_.Mutable(index);
}
::BagExtraAttrObj* BagEquipObj::add_equippolishedresult() {
  // @@protoc_insertion_point(field_add:BagEquipObj.EquipPolishedResult)
  return equippolishedresult_.Add();
}
::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj >*
BagEquipObj::mutable_equippolishedresult() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.EquipPolishedResult)
  return &equippolishedresult_;
}
const ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj >&
BagEquipObj::equippolishedresult() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.EquipPolishedResult)
  return equippolishedresult_;
}

// optional sint32 PolishedScore = 6 [default = 0];
bool BagEquipObj::has_polishedscore() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagEquipObj::set_has_polishedscore() {
  _has_bits_[0] |= 0x00000001u;
}
void BagEquipObj::clear_has_polishedscore() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagEquipObj::clear_polishedscore() {
  polishedscore_ = 0;
  clear_has_polishedscore();
}
::google::protobuf::int32 BagEquipObj::polishedscore() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.PolishedScore)
  return polishedscore_;
}
void BagEquipObj::set_polishedscore(::google::protobuf::int32 value) {
  set_has_polishedscore();
  polishedscore_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.PolishedScore)
}

// optional sint64 Index = 7 [default = -1];
bool BagEquipObj::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BagEquipObj::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
void BagEquipObj::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
void BagEquipObj::clear_index() {
  index_ = GOOGLE_LONGLONG(-1);
  clear_has_index();
}
::google::protobuf::int64 BagEquipObj::index() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.Index)
  return index_;
}
void BagEquipObj::set_index(::google::protobuf::int64 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.Index)
}

// repeated .BagAttrIntObj InitBaseAttr = 8;
int BagEquipObj::initbaseattr_size() const {
  return initbaseattr_.size();
}
void BagEquipObj::clear_initbaseattr() {
  initbaseattr_.Clear();
}
const ::BagAttrIntObj& BagEquipObj::initbaseattr(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.InitBaseAttr)
  return initbaseattr_.Get(index);
}
::BagAttrIntObj* BagEquipObj::mutable_initbaseattr(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.InitBaseAttr)
  return initbaseattr_.Mutable(index);
}
::BagAttrIntObj* BagEquipObj::add_initbaseattr() {
  // @@protoc_insertion_point(field_add:BagEquipObj.InitBaseAttr)
  return initbaseattr_.Add();
}
::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >*
BagEquipObj::mutable_initbaseattr() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.InitBaseAttr)
  return &initbaseattr_;
}
const ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >&
BagEquipObj::initbaseattr() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.InitBaseAttr)
  return initbaseattr_;
}

// optional sint32 BagContainerType = 9 [default = -1];
bool BagEquipObj::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BagEquipObj::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000020u;
}
void BagEquipObj::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000020u;
}
void BagEquipObj::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
::google::protobuf::int32 BagEquipObj::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.BagContainerType)
  return bagcontainertype_;
}
void BagEquipObj::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.BagContainerType)
}

// optional sint32 GridIndex = 10 [default = -1];
bool BagEquipObj::has_gridindex() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BagEquipObj::set_has_gridindex() {
  _has_bits_[0] |= 0x00000040u;
}
void BagEquipObj::clear_has_gridindex() {
  _has_bits_[0] &= ~0x00000040u;
}
void BagEquipObj::clear_gridindex() {
  gridindex_ = -1;
  clear_has_gridindex();
}
::google::protobuf::int32 BagEquipObj::gridindex() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.GridIndex)
  return gridindex_;
}
void BagEquipObj::set_gridindex(::google::protobuf::int32 value) {
  set_has_gridindex();
  gridindex_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.GridIndex)
}

// repeated .BagExtraAttrIdObj PlishedAttrId = 11;
int BagEquipObj::plishedattrid_size() const {
  return plishedattrid_.size();
}
void BagEquipObj::clear_plishedattrid() {
  plishedattrid_.Clear();
}
const ::BagExtraAttrIdObj& BagEquipObj::plishedattrid(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.PlishedAttrId)
  return plishedattrid_.Get(index);
}
::BagExtraAttrIdObj* BagEquipObj::mutable_plishedattrid(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.PlishedAttrId)
  return plishedattrid_.Mutable(index);
}
::BagExtraAttrIdObj* BagEquipObj::add_plishedattrid() {
  // @@protoc_insertion_point(field_add:BagEquipObj.PlishedAttrId)
  return plishedattrid_.Add();
}
::google::protobuf::RepeatedPtrField< ::BagExtraAttrIdObj >*
BagEquipObj::mutable_plishedattrid() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.PlishedAttrId)
  return &plishedattrid_;
}
const ::google::protobuf::RepeatedPtrField< ::BagExtraAttrIdObj >&
BagEquipObj::plishedattrid() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.PlishedAttrId)
  return plishedattrid_;
}

// repeated .BagGemObj GemArray = 12;
int BagEquipObj::gemarray_size() const {
  return gemarray_.size();
}
void BagEquipObj::clear_gemarray() {
  gemarray_.Clear();
}
const ::BagGemObj& BagEquipObj::gemarray(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.GemArray)
  return gemarray_.Get(index);
}
::BagGemObj* BagEquipObj::mutable_gemarray(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.GemArray)
  return gemarray_.Mutable(index);
}
::BagGemObj* BagEquipObj::add_gemarray() {
  // @@protoc_insertion_point(field_add:BagEquipObj.GemArray)
  return gemarray_.Add();
}
::google::protobuf::RepeatedPtrField< ::BagGemObj >*
BagEquipObj::mutable_gemarray() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.GemArray)
  return &gemarray_;
}
const ::google::protobuf::RepeatedPtrField< ::BagGemObj >&
BagEquipObj::gemarray() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.GemArray)
  return gemarray_;
}

// repeated .BagAttrIntObj PolishedBaseAttrResult = 13;
int BagEquipObj::polishedbaseattrresult_size() const {
  return polishedbaseattrresult_.size();
}
void BagEquipObj::clear_polishedbaseattrresult() {
  polishedbaseattrresult_.Clear();
}
const ::BagAttrIntObj& BagEquipObj::polishedbaseattrresult(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.PolishedBaseAttrResult)
  return polishedbaseattrresult_.Get(index);
}
::BagAttrIntObj* BagEquipObj::mutable_polishedbaseattrresult(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.PolishedBaseAttrResult)
  return polishedbaseattrresult_.Mutable(index);
}
::BagAttrIntObj* BagEquipObj::add_polishedbaseattrresult() {
  // @@protoc_insertion_point(field_add:BagEquipObj.PolishedBaseAttrResult)
  return polishedbaseattrresult_.Add();
}
::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >*
BagEquipObj::mutable_polishedbaseattrresult() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.PolishedBaseAttrResult)
  return &polishedbaseattrresult_;
}
const ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >&
BagEquipObj::polishedbaseattrresult() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.PolishedBaseAttrResult)
  return polishedbaseattrresult_;
}

// optional sint32 TemplateId = 14 [default = -1];
bool BagEquipObj::has_templateid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void BagEquipObj::set_has_templateid() {
  _has_bits_[0] |= 0x00000080u;
}
void BagEquipObj::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000080u;
}
void BagEquipObj::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagEquipObj::templateid() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.TemplateId)
  return templateid_;
}
void BagEquipObj::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.TemplateId)
}

// optional sint32 GemSuitId = 15 [default = -1];
bool BagEquipObj::has_gemsuitid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void BagEquipObj::set_has_gemsuitid() {
  _has_bits_[0] |= 0x00000100u;
}
void BagEquipObj::clear_has_gemsuitid() {
  _has_bits_[0] &= ~0x00000100u;
}
void BagEquipObj::clear_gemsuitid() {
  gemsuitid_ = -1;
  clear_has_gemsuitid();
}
::google::protobuf::int32 BagEquipObj::gemsuitid() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.GemSuitId)
  return gemsuitid_;
}
void BagEquipObj::set_gemsuitid(::google::protobuf::int32 value) {
  set_has_gemsuitid();
  gemsuitid_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.GemSuitId)
}

// optional sint32 EquipScore = 16 [default = 0];
bool BagEquipObj::has_equipscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagEquipObj::set_has_equipscore() {
  _has_bits_[0] |= 0x00000002u;
}
void BagEquipObj::clear_has_equipscore() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagEquipObj::clear_equipscore() {
  equipscore_ = 0;
  clear_has_equipscore();
}
::google::protobuf::int32 BagEquipObj::equipscore() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.EquipScore)
  return equipscore_;
}
void BagEquipObj::set_equipscore(::google::protobuf::int32 value) {
  set_has_equipscore();
  equipscore_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.EquipScore)
}

// optional sint32 PolishedEquipScore = 17 [default = 0];
bool BagEquipObj::has_polishedequipscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagEquipObj::set_has_polishedequipscore() {
  _has_bits_[0] |= 0x00000004u;
}
void BagEquipObj::clear_has_polishedequipscore() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagEquipObj::clear_polishedequipscore() {
  polishedequipscore_ = 0;
  clear_has_polishedequipscore();
}
::google::protobuf::int32 BagEquipObj::polishedequipscore() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.PolishedEquipScore)
  return polishedequipscore_;
}
void BagEquipObj::set_polishedequipscore(::google::protobuf::int32 value) {
  set_has_polishedequipscore();
  polishedequipscore_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.PolishedEquipScore)
}

// repeated .BagAttrIntObj BaseAttrPolishedInitAttr = 18;
int BagEquipObj::baseattrpolishedinitattr_size() const {
  return baseattrpolishedinitattr_.size();
}
void BagEquipObj::clear_baseattrpolishedinitattr() {
  baseattrpolishedinitattr_.Clear();
}
const ::BagAttrIntObj& BagEquipObj::baseattrpolishedinitattr(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.BaseAttrPolishedInitAttr)
  return baseattrpolishedinitattr_.Get(index);
}
::BagAttrIntObj* BagEquipObj::mutable_baseattrpolishedinitattr(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.BaseAttrPolishedInitAttr)
  return baseattrpolishedinitattr_.Mutable(index);
}
::BagAttrIntObj* BagEquipObj::add_baseattrpolishedinitattr() {
  // @@protoc_insertion_point(field_add:BagEquipObj.BaseAttrPolishedInitAttr)
  return baseattrpolishedinitattr_.Add();
}
::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >*
BagEquipObj::mutable_baseattrpolishedinitattr() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.BaseAttrPolishedInitAttr)
  return &baseattrpolishedinitattr_;
}
const ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >&
BagEquipObj::baseattrpolishedinitattr() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.BaseAttrPolishedInitAttr)
  return baseattrpolishedinitattr_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagAttrIntObj::kAttrIdFieldNumber;
const int BagAttrIntObj::kAttrValueFieldNumber;
const int BagAttrIntObj::kMaxAttrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagAttrIntObj::BagAttrIntObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagAttrIntObj)
}
BagAttrIntObj::BagAttrIntObj(const BagAttrIntObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&maxattrvalue_, &from.maxattrvalue_,
    static_cast<size_t>(reinterpret_cast<char*>(&attrvalue_) -
    reinterpret_cast<char*>(&maxattrvalue_)) + sizeof(attrvalue_));
  // @@protoc_insertion_point(copy_constructor:BagAttrIntObj)
}

void BagAttrIntObj::SharedCtor() {
  _cached_size_ = 0;
  maxattrvalue_ = -1;
  attrid_ = -1;
  attrvalue_ = -1;
}

BagAttrIntObj::~BagAttrIntObj() {
  // @@protoc_insertion_point(destructor:BagAttrIntObj)
  SharedDtor();
}

void BagAttrIntObj::SharedDtor() {
}

void BagAttrIntObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagAttrIntObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagAttrIntObj& BagAttrIntObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagAttrIntObj* BagAttrIntObj::New(::google::protobuf::Arena* arena) const {
  BagAttrIntObj* n = new BagAttrIntObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagAttrIntObj::Clear() {
// @@protoc_insertion_point(message_clear_start:BagAttrIntObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    maxattrvalue_ = -1;
    attrid_ = -1;
    attrvalue_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagAttrIntObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagAttrIntObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 AttrId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_attrid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &attrid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 AttrValue = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_attrvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &attrvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 MaxAttrValue = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_maxattrvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &maxattrvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagAttrIntObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagAttrIntObj)
  return false;
#undef DO_
}

void BagAttrIntObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagAttrIntObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 AttrId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->attrid(), output);
  }

  // optional sint32 AttrValue = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->attrvalue(), output);
  }

  // optional sint32 MaxAttrValue = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->maxattrvalue(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagAttrIntObj)
}

::google::protobuf::uint8* BagAttrIntObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagAttrIntObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 AttrId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->attrid(), target);
  }

  // optional sint32 AttrValue = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->attrvalue(), target);
  }

  // optional sint32 MaxAttrValue = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->maxattrvalue(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagAttrIntObj)
  return target;
}

size_t BagAttrIntObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagAttrIntObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 MaxAttrValue = 3 [default = -1];
    if (has_maxattrvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->maxattrvalue());
    }

    // optional sint32 AttrId = 1 [default = -1];
    if (has_attrid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->attrid());
    }

    // optional sint32 AttrValue = 2 [default = -1];
    if (has_attrvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->attrvalue());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagAttrIntObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagAttrIntObj)
  GOOGLE_DCHECK_NE(&from, this);
  const BagAttrIntObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagAttrIntObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagAttrIntObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagAttrIntObj)
    MergeFrom(*source);
  }
}

void BagAttrIntObj::MergeFrom(const BagAttrIntObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagAttrIntObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      maxattrvalue_ = from.maxattrvalue_;
    }
    if (cached_has_bits & 0x00000002u) {
      attrid_ = from.attrid_;
    }
    if (cached_has_bits & 0x00000004u) {
      attrvalue_ = from.attrvalue_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagAttrIntObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagAttrIntObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagAttrIntObj::CopyFrom(const BagAttrIntObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagAttrIntObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagAttrIntObj::IsInitialized() const {
  return true;
}

void BagAttrIntObj::Swap(BagAttrIntObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagAttrIntObj::InternalSwap(BagAttrIntObj* other) {
  using std::swap;
  swap(maxattrvalue_, other->maxattrvalue_);
  swap(attrid_, other->attrid_);
  swap(attrvalue_, other->attrvalue_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagAttrIntObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagAttrIntObj

// optional sint32 AttrId = 1 [default = -1];
bool BagAttrIntObj::has_attrid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagAttrIntObj::set_has_attrid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagAttrIntObj::clear_has_attrid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagAttrIntObj::clear_attrid() {
  attrid_ = -1;
  clear_has_attrid();
}
::google::protobuf::int32 BagAttrIntObj::attrid() const {
  // @@protoc_insertion_point(field_get:BagAttrIntObj.AttrId)
  return attrid_;
}
void BagAttrIntObj::set_attrid(::google::protobuf::int32 value) {
  set_has_attrid();
  attrid_ = value;
  // @@protoc_insertion_point(field_set:BagAttrIntObj.AttrId)
}

// optional sint32 AttrValue = 2 [default = -1];
bool BagAttrIntObj::has_attrvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagAttrIntObj::set_has_attrvalue() {
  _has_bits_[0] |= 0x00000004u;
}
void BagAttrIntObj::clear_has_attrvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagAttrIntObj::clear_attrvalue() {
  attrvalue_ = -1;
  clear_has_attrvalue();
}
::google::protobuf::int32 BagAttrIntObj::attrvalue() const {
  // @@protoc_insertion_point(field_get:BagAttrIntObj.AttrValue)
  return attrvalue_;
}
void BagAttrIntObj::set_attrvalue(::google::protobuf::int32 value) {
  set_has_attrvalue();
  attrvalue_ = value;
  // @@protoc_insertion_point(field_set:BagAttrIntObj.AttrValue)
}

// optional sint32 MaxAttrValue = 3 [default = -1];
bool BagAttrIntObj::has_maxattrvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagAttrIntObj::set_has_maxattrvalue() {
  _has_bits_[0] |= 0x00000001u;
}
void BagAttrIntObj::clear_has_maxattrvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagAttrIntObj::clear_maxattrvalue() {
  maxattrvalue_ = -1;
  clear_has_maxattrvalue();
}
::google::protobuf::int32 BagAttrIntObj::maxattrvalue() const {
  // @@protoc_insertion_point(field_get:BagAttrIntObj.MaxAttrValue)
  return maxattrvalue_;
}
void BagAttrIntObj::set_maxattrvalue(::google::protobuf::int32 value) {
  set_has_maxattrvalue();
  maxattrvalue_ = value;
  // @@protoc_insertion_point(field_set:BagAttrIntObj.MaxAttrValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagAttrFloatObj::kAttrIdFieldNumber;
const int BagAttrFloatObj::kAttrValueFieldNumber;
const int BagAttrFloatObj::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagAttrFloatObj::BagAttrFloatObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagAttrFloatObj)
}
BagAttrFloatObj::BagAttrFloatObj(const BagAttrFloatObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&attrvalue_) -
    reinterpret_cast<char*>(&index_)) + sizeof(attrvalue_));
  // @@protoc_insertion_point(copy_constructor:BagAttrFloatObj)
}

void BagAttrFloatObj::SharedCtor() {
  _cached_size_ = 0;
  index_ = -1;
  attrid_ = -1;
  attrvalue_ = -1;
}

BagAttrFloatObj::~BagAttrFloatObj() {
  // @@protoc_insertion_point(destructor:BagAttrFloatObj)
  SharedDtor();
}

void BagAttrFloatObj::SharedDtor() {
}

void BagAttrFloatObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagAttrFloatObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagAttrFloatObj& BagAttrFloatObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagAttrFloatObj* BagAttrFloatObj::New(::google::protobuf::Arena* arena) const {
  BagAttrFloatObj* n = new BagAttrFloatObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagAttrFloatObj::Clear() {
// @@protoc_insertion_point(message_clear_start:BagAttrFloatObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    index_ = -1;
    attrid_ = -1;
    attrvalue_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagAttrFloatObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagAttrFloatObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 AttrId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_attrid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &attrid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float AttrValue = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_attrvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &attrvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Index = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagAttrFloatObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagAttrFloatObj)
  return false;
#undef DO_
}

void BagAttrFloatObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagAttrFloatObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 AttrId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->attrid(), output);
  }

  // optional float AttrValue = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->attrvalue(), output);
  }

  // optional sint32 Index = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagAttrFloatObj)
}

::google::protobuf::uint8* BagAttrFloatObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagAttrFloatObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 AttrId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->attrid(), target);
  }

  // optional float AttrValue = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->attrvalue(), target);
  }

  // optional sint32 Index = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagAttrFloatObj)
  return target;
}

size_t BagAttrFloatObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagAttrFloatObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 Index = 3 [default = -1];
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->index());
    }

    // optional sint32 AttrId = 1 [default = -1];
    if (has_attrid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->attrid());
    }

    // optional float AttrValue = 2 [default = -1];
    if (has_attrvalue()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagAttrFloatObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagAttrFloatObj)
  GOOGLE_DCHECK_NE(&from, this);
  const BagAttrFloatObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagAttrFloatObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagAttrFloatObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagAttrFloatObj)
    MergeFrom(*source);
  }
}

void BagAttrFloatObj::MergeFrom(const BagAttrFloatObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagAttrFloatObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      index_ = from.index_;
    }
    if (cached_has_bits & 0x00000002u) {
      attrid_ = from.attrid_;
    }
    if (cached_has_bits & 0x00000004u) {
      attrvalue_ = from.attrvalue_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagAttrFloatObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagAttrFloatObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagAttrFloatObj::CopyFrom(const BagAttrFloatObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagAttrFloatObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagAttrFloatObj::IsInitialized() const {
  return true;
}

void BagAttrFloatObj::Swap(BagAttrFloatObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagAttrFloatObj::InternalSwap(BagAttrFloatObj* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(attrid_, other->attrid_);
  swap(attrvalue_, other->attrvalue_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagAttrFloatObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagAttrFloatObj

// optional sint32 AttrId = 1 [default = -1];
bool BagAttrFloatObj::has_attrid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagAttrFloatObj::set_has_attrid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagAttrFloatObj::clear_has_attrid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagAttrFloatObj::clear_attrid() {
  attrid_ = -1;
  clear_has_attrid();
}
::google::protobuf::int32 BagAttrFloatObj::attrid() const {
  // @@protoc_insertion_point(field_get:BagAttrFloatObj.AttrId)
  return attrid_;
}
void BagAttrFloatObj::set_attrid(::google::protobuf::int32 value) {
  set_has_attrid();
  attrid_ = value;
  // @@protoc_insertion_point(field_set:BagAttrFloatObj.AttrId)
}

// optional float AttrValue = 2 [default = -1];
bool BagAttrFloatObj::has_attrvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagAttrFloatObj::set_has_attrvalue() {
  _has_bits_[0] |= 0x00000004u;
}
void BagAttrFloatObj::clear_has_attrvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagAttrFloatObj::clear_attrvalue() {
  attrvalue_ = -1;
  clear_has_attrvalue();
}
float BagAttrFloatObj::attrvalue() const {
  // @@protoc_insertion_point(field_get:BagAttrFloatObj.AttrValue)
  return attrvalue_;
}
void BagAttrFloatObj::set_attrvalue(float value) {
  set_has_attrvalue();
  attrvalue_ = value;
  // @@protoc_insertion_point(field_set:BagAttrFloatObj.AttrValue)
}

// optional sint32 Index = 3 [default = -1];
bool BagAttrFloatObj::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagAttrFloatObj::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
void BagAttrFloatObj::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagAttrFloatObj::clear_index() {
  index_ = -1;
  clear_has_index();
}
::google::protobuf::int32 BagAttrFloatObj::index() const {
  // @@protoc_insertion_point(field_get:BagAttrFloatObj.Index)
  return index_;
}
void BagAttrFloatObj::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:BagAttrFloatObj.Index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagGemObj::kGemIdFieldNumber;
const int BagGemObj::kPosFieldNumber;
const int BagGemObj::kIsLockFieldNumber;
const int BagGemObj::kLevelFieldNumber;
const int BagGemObj::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagGemObj::BagGemObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagGemObj)
}
BagGemObj::BagGemObj(const BagGemObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&islock_, &from.islock_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&islock_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:BagGemObj)
}

void BagGemObj::SharedCtor() {
  _cached_size_ = 0;
  islock_ = false;
  gemid_ = -1;
  pos_ = -1;
  level_ = -1;
  type_ = -1;
}

BagGemObj::~BagGemObj() {
  // @@protoc_insertion_point(destructor:BagGemObj)
  SharedDtor();
}

void BagGemObj::SharedDtor() {
}

void BagGemObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagGemObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagGemObj& BagGemObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagGemObj* BagGemObj::New(::google::protobuf::Arena* arena) const {
  BagGemObj* n = new BagGemObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagGemObj::Clear() {
// @@protoc_insertion_point(message_clear_start:BagGemObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    islock_ = false;
    gemid_ = -1;
    pos_ = -1;
    level_ = -1;
    type_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagGemObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagGemObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 GemId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_gemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &gemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsLock = 3 [default = false];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_islock();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islock_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Level = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Type = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagGemObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagGemObj)
  return false;
#undef DO_
}

void BagGemObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagGemObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 GemId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->gemid(), output);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->pos(), output);
  }

  // optional bool IsLock = 3 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->islock(), output);
  }

  // optional sint32 Level = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->level(), output);
  }

  // optional sint32 Type = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagGemObj)
}

::google::protobuf::uint8* BagGemObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagGemObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 GemId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->gemid(), target);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->pos(), target);
  }

  // optional bool IsLock = 3 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->islock(), target);
  }

  // optional sint32 Level = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->level(), target);
  }

  // optional sint32 Type = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagGemObj)
  return target;
}

size_t BagGemObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagGemObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bool IsLock = 3 [default = false];
    if (has_islock()) {
      total_size += 1 + 1;
    }

    // optional sint32 GemId = 1 [default = -1];
    if (has_gemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->gemid());
    }

    // optional sint32 Pos = 2 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 Level = 4 [default = -1];
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->level());
    }

    // optional sint32 Type = 5 [default = -1];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagGemObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagGemObj)
  GOOGLE_DCHECK_NE(&from, this);
  const BagGemObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagGemObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagGemObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagGemObj)
    MergeFrom(*source);
  }
}

void BagGemObj::MergeFrom(const BagGemObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagGemObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      islock_ = from.islock_;
    }
    if (cached_has_bits & 0x00000002u) {
      gemid_ = from.gemid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000008u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000010u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagGemObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagGemObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagGemObj::CopyFrom(const BagGemObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagGemObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagGemObj::IsInitialized() const {
  return true;
}

void BagGemObj::Swap(BagGemObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagGemObj::InternalSwap(BagGemObj* other) {
  using std::swap;
  swap(islock_, other->islock_);
  swap(gemid_, other->gemid_);
  swap(pos_, other->pos_);
  swap(level_, other->level_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagGemObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagGemObj

// optional sint32 GemId = 1 [default = -1];
bool BagGemObj::has_gemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagGemObj::set_has_gemid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagGemObj::clear_has_gemid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagGemObj::clear_gemid() {
  gemid_ = -1;
  clear_has_gemid();
}
::google::protobuf::int32 BagGemObj::gemid() const {
  // @@protoc_insertion_point(field_get:BagGemObj.GemId)
  return gemid_;
}
void BagGemObj::set_gemid(::google::protobuf::int32 value) {
  set_has_gemid();
  gemid_ = value;
  // @@protoc_insertion_point(field_set:BagGemObj.GemId)
}

// optional sint32 Pos = 2 [default = -1];
bool BagGemObj::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagGemObj::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void BagGemObj::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagGemObj::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagGemObj::pos() const {
  // @@protoc_insertion_point(field_get:BagGemObj.Pos)
  return pos_;
}
void BagGemObj::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagGemObj.Pos)
}

// optional bool IsLock = 3 [default = false];
bool BagGemObj::has_islock() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagGemObj::set_has_islock() {
  _has_bits_[0] |= 0x00000001u;
}
void BagGemObj::clear_has_islock() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagGemObj::clear_islock() {
  islock_ = false;
  clear_has_islock();
}
bool BagGemObj::islock() const {
  // @@protoc_insertion_point(field_get:BagGemObj.IsLock)
  return islock_;
}
void BagGemObj::set_islock(bool value) {
  set_has_islock();
  islock_ = value;
  // @@protoc_insertion_point(field_set:BagGemObj.IsLock)
}

// optional sint32 Level = 4 [default = -1];
bool BagGemObj::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagGemObj::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
void BagGemObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagGemObj::clear_level() {
  level_ = -1;
  clear_has_level();
}
::google::protobuf::int32 BagGemObj::level() const {
  // @@protoc_insertion_point(field_get:BagGemObj.Level)
  return level_;
}
void BagGemObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:BagGemObj.Level)
}

// optional sint32 Type = 5 [default = -1];
bool BagGemObj::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BagGemObj::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
void BagGemObj::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void BagGemObj::clear_type() {
  type_ = -1;
  clear_has_type();
}
::google::protobuf::int32 BagGemObj::type() const {
  // @@protoc_insertion_point(field_get:BagGemObj.Type)
  return type_;
}
void BagGemObj::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:BagGemObj.Type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyValue2IntInt::kKeyFieldNumber;
const int KeyValue2IntInt::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyValue2IntInt::KeyValue2IntInt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyValue2IntInt)
}
KeyValue2IntInt::KeyValue2IntInt(const KeyValue2IntInt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&key_, &from.key_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&key_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:KeyValue2IntInt)
}

void KeyValue2IntInt::SharedCtor() {
  _cached_size_ = 0;
  key_ = -1;
  value_ = -1;
}

KeyValue2IntInt::~KeyValue2IntInt() {
  // @@protoc_insertion_point(destructor:KeyValue2IntInt)
  SharedDtor();
}

void KeyValue2IntInt::SharedDtor() {
}

void KeyValue2IntInt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyValue2IntInt::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyValue2IntInt& KeyValue2IntInt::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

KeyValue2IntInt* KeyValue2IntInt::New(::google::protobuf::Arena* arena) const {
  KeyValue2IntInt* n = new KeyValue2IntInt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeyValue2IntInt::Clear() {
// @@protoc_insertion_point(message_clear_start:KeyValue2IntInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    key_ = -1;
    value_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool KeyValue2IntInt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KeyValue2IntInt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Key = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_key();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Value = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KeyValue2IntInt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KeyValue2IntInt)
  return false;
#undef DO_
}

void KeyValue2IntInt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KeyValue2IntInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Key = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->key(), output);
  }

  // optional sint32 Value = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:KeyValue2IntInt)
}

::google::protobuf::uint8* KeyValue2IntInt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KeyValue2IntInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Key = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->key(), target);
  }

  // optional sint32 Value = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyValue2IntInt)
  return target;
}

size_t KeyValue2IntInt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeyValue2IntInt)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Key = 1 [default = -1];
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->key());
    }

    // optional sint32 Value = 2 [default = -1];
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyValue2IntInt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeyValue2IntInt)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyValue2IntInt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyValue2IntInt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeyValue2IntInt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeyValue2IntInt)
    MergeFrom(*source);
  }
}

void KeyValue2IntInt::MergeFrom(const KeyValue2IntInt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeyValue2IntInt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      key_ = from.key_;
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void KeyValue2IntInt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeyValue2IntInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValue2IntInt::CopyFrom(const KeyValue2IntInt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeyValue2IntInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValue2IntInt::IsInitialized() const {
  return true;
}

void KeyValue2IntInt::Swap(KeyValue2IntInt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyValue2IntInt::InternalSwap(KeyValue2IntInt* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeyValue2IntInt::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeyValue2IntInt

// optional sint32 Key = 1 [default = -1];
bool KeyValue2IntInt::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void KeyValue2IntInt::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void KeyValue2IntInt::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void KeyValue2IntInt::clear_key() {
  key_ = -1;
  clear_has_key();
}
::google::protobuf::int32 KeyValue2IntInt::key() const {
  // @@protoc_insertion_point(field_get:KeyValue2IntInt.Key)
  return key_;
}
void KeyValue2IntInt::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:KeyValue2IntInt.Key)
}

// optional sint32 Value = 2 [default = -1];
bool KeyValue2IntInt::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void KeyValue2IntInt::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void KeyValue2IntInt::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void KeyValue2IntInt::clear_value() {
  value_ = -1;
  clear_has_value();
}
::google::protobuf::int32 KeyValue2IntInt::value() const {
  // @@protoc_insertion_point(field_get:KeyValue2IntInt.Value)
  return value_;
}
void KeyValue2IntInt::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:KeyValue2IntInt.Value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyValue2IntBool::kKeyFieldNumber;
const int KeyValue2IntBool::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyValue2IntBool::KeyValue2IntBool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyValue2IntBool)
}
KeyValue2IntBool::KeyValue2IntBool(const KeyValue2IntBool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&key_) -
    reinterpret_cast<char*>(&value_)) + sizeof(key_));
  // @@protoc_insertion_point(copy_constructor:KeyValue2IntBool)
}

void KeyValue2IntBool::SharedCtor() {
  _cached_size_ = 0;
  value_ = false;
  key_ = -1;
}

KeyValue2IntBool::~KeyValue2IntBool() {
  // @@protoc_insertion_point(destructor:KeyValue2IntBool)
  SharedDtor();
}

void KeyValue2IntBool::SharedDtor() {
}

void KeyValue2IntBool::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyValue2IntBool::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyValue2IntBool& KeyValue2IntBool::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

KeyValue2IntBool* KeyValue2IntBool::New(::google::protobuf::Arena* arena) const {
  KeyValue2IntBool* n = new KeyValue2IntBool;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeyValue2IntBool::Clear() {
// @@protoc_insertion_point(message_clear_start:KeyValue2IntBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    value_ = false;
    key_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool KeyValue2IntBool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KeyValue2IntBool)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Key = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_key();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool Value = 2 [default = false];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KeyValue2IntBool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KeyValue2IntBool)
  return false;
#undef DO_
}

void KeyValue2IntBool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KeyValue2IntBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Key = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->key(), output);
  }

  // optional bool Value = 2 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:KeyValue2IntBool)
}

::google::protobuf::uint8* KeyValue2IntBool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KeyValue2IntBool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Key = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->key(), target);
  }

  // optional bool Value = 2 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyValue2IntBool)
  return target;
}

size_t KeyValue2IntBool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeyValue2IntBool)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bool Value = 2 [default = false];
    if (has_value()) {
      total_size += 1 + 1;
    }

    // optional sint32 Key = 1 [default = -1];
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->key());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyValue2IntBool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeyValue2IntBool)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyValue2IntBool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyValue2IntBool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeyValue2IntBool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeyValue2IntBool)
    MergeFrom(*source);
  }
}

void KeyValue2IntBool::MergeFrom(const KeyValue2IntBool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeyValue2IntBool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000002u) {
      key_ = from.key_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void KeyValue2IntBool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeyValue2IntBool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValue2IntBool::CopyFrom(const KeyValue2IntBool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeyValue2IntBool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValue2IntBool::IsInitialized() const {
  return true;
}

void KeyValue2IntBool::Swap(KeyValue2IntBool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyValue2IntBool::InternalSwap(KeyValue2IntBool* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(key_, other->key_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeyValue2IntBool::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeyValue2IntBool

// optional sint32 Key = 1 [default = -1];
bool KeyValue2IntBool::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void KeyValue2IntBool::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
void KeyValue2IntBool::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
void KeyValue2IntBool::clear_key() {
  key_ = -1;
  clear_has_key();
}
::google::protobuf::int32 KeyValue2IntBool::key() const {
  // @@protoc_insertion_point(field_get:KeyValue2IntBool.Key)
  return key_;
}
void KeyValue2IntBool::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:KeyValue2IntBool.Key)
}

// optional bool Value = 2 [default = false];
bool KeyValue2IntBool::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void KeyValue2IntBool::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
void KeyValue2IntBool::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
void KeyValue2IntBool::clear_value() {
  value_ = false;
  clear_has_value();
}
bool KeyValue2IntBool::value() const {
  // @@protoc_insertion_point(field_get:KeyValue2IntBool.Value)
  return value_;
}
void KeyValue2IntBool::set_value(bool value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:KeyValue2IntBool.Value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagExtraAttrObj::kExtraAttrFieldNumber;
const int BagExtraAttrObj::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagExtraAttrObj::BagExtraAttrObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagExtraAttrObj)
}
BagExtraAttrObj::BagExtraAttrObj(const BagExtraAttrObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      extraattr_(from.extraattr_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:BagExtraAttrObj)
}

void BagExtraAttrObj::SharedCtor() {
  _cached_size_ = 0;
  id_ = -1;
}

BagExtraAttrObj::~BagExtraAttrObj() {
  // @@protoc_insertion_point(destructor:BagExtraAttrObj)
  SharedDtor();
}

void BagExtraAttrObj::SharedDtor() {
}

void BagExtraAttrObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagExtraAttrObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagExtraAttrObj& BagExtraAttrObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagExtraAttrObj* BagExtraAttrObj::New(::google::protobuf::Arena* arena) const {
  BagExtraAttrObj* n = new BagExtraAttrObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagExtraAttrObj::Clear() {
// @@protoc_insertion_point(message_clear_start:BagExtraAttrObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extraattr_.Clear();
  id_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagExtraAttrObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagExtraAttrObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .BagAttrFloatObj ExtraAttr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_extraattr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Id = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagExtraAttrObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagExtraAttrObj)
  return false;
#undef DO_
}

void BagExtraAttrObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagExtraAttrObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .BagAttrFloatObj ExtraAttr = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extraattr_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->extraattr(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional sint32 Id = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagExtraAttrObj)
}

::google::protobuf::uint8* BagExtraAttrObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagExtraAttrObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .BagAttrFloatObj ExtraAttr = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extraattr_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->extraattr(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional sint32 Id = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagExtraAttrObj)
  return target;
}

size_t BagExtraAttrObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagExtraAttrObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .BagAttrFloatObj ExtraAttr = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->extraattr_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->extraattr(static_cast<int>(i)));
    }
  }

  // optional sint32 Id = 2 [default = -1];
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagExtraAttrObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagExtraAttrObj)
  GOOGLE_DCHECK_NE(&from, this);
  const BagExtraAttrObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagExtraAttrObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagExtraAttrObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagExtraAttrObj)
    MergeFrom(*source);
  }
}

void BagExtraAttrObj::MergeFrom(const BagExtraAttrObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagExtraAttrObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extraattr_.MergeFrom(from.extraattr_);
  if (from.has_id()) {
    set_id(from.id());
  }
}

void BagExtraAttrObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagExtraAttrObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagExtraAttrObj::CopyFrom(const BagExtraAttrObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagExtraAttrObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagExtraAttrObj::IsInitialized() const {
  return true;
}

void BagExtraAttrObj::Swap(BagExtraAttrObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagExtraAttrObj::InternalSwap(BagExtraAttrObj* other) {
  using std::swap;
  extraattr_.InternalSwap(&other->extraattr_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagExtraAttrObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagExtraAttrObj

// repeated .BagAttrFloatObj ExtraAttr = 1;
int BagExtraAttrObj::extraattr_size() const {
  return extraattr_.size();
}
void BagExtraAttrObj::clear_extraattr() {
  extraattr_.Clear();
}
const ::BagAttrFloatObj& BagExtraAttrObj::extraattr(int index) const {
  // @@protoc_insertion_point(field_get:BagExtraAttrObj.ExtraAttr)
  return extraattr_.Get(index);
}
::BagAttrFloatObj* BagExtraAttrObj::mutable_extraattr(int index) {
  // @@protoc_insertion_point(field_mutable:BagExtraAttrObj.ExtraAttr)
  return extraattr_.Mutable(index);
}
::BagAttrFloatObj* BagExtraAttrObj::add_extraattr() {
  // @@protoc_insertion_point(field_add:BagExtraAttrObj.ExtraAttr)
  return extraattr_.Add();
}
::google::protobuf::RepeatedPtrField< ::BagAttrFloatObj >*
BagExtraAttrObj::mutable_extraattr() {
  // @@protoc_insertion_point(field_mutable_list:BagExtraAttrObj.ExtraAttr)
  return &extraattr_;
}
const ::google::protobuf::RepeatedPtrField< ::BagAttrFloatObj >&
BagExtraAttrObj::extraattr() const {
  // @@protoc_insertion_point(field_list:BagExtraAttrObj.ExtraAttr)
  return extraattr_;
}

// optional sint32 Id = 2 [default = -1];
bool BagExtraAttrObj::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagExtraAttrObj::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void BagExtraAttrObj::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagExtraAttrObj::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 BagExtraAttrObj::id() const {
  // @@protoc_insertion_point(field_get:BagExtraAttrObj.Id)
  return id_;
}
void BagExtraAttrObj::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BagExtraAttrObj.Id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagExtraAttrIdObj::kAttrIdFieldNumber;
const int BagExtraAttrIdObj::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagExtraAttrIdObj::BagExtraAttrIdObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagExtraAttrIdObj)
}
BagExtraAttrIdObj::BagExtraAttrIdObj(const BagExtraAttrIdObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      attrid_(from.attrid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:BagExtraAttrIdObj)
}

void BagExtraAttrIdObj::SharedCtor() {
  _cached_size_ = 0;
  id_ = -1;
}

BagExtraAttrIdObj::~BagExtraAttrIdObj() {
  // @@protoc_insertion_point(destructor:BagExtraAttrIdObj)
  SharedDtor();
}

void BagExtraAttrIdObj::SharedDtor() {
}

void BagExtraAttrIdObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagExtraAttrIdObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagExtraAttrIdObj& BagExtraAttrIdObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagExtraAttrIdObj* BagExtraAttrIdObj::New(::google::protobuf::Arena* arena) const {
  BagExtraAttrIdObj* n = new BagExtraAttrIdObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagExtraAttrIdObj::Clear() {
// @@protoc_insertion_point(message_clear_start:BagExtraAttrIdObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attrid_.Clear();
  id_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagExtraAttrIdObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagExtraAttrIdObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 AttrId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 8u, input, this->mutable_attrid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_attrid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Id = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagExtraAttrIdObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagExtraAttrIdObj)
  return false;
#undef DO_
}

void BagExtraAttrIdObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagExtraAttrIdObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 AttrId = 1;
  for (int i = 0, n = this->attrid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      1, this->attrid(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional sint32 Id = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagExtraAttrIdObj)
}

::google::protobuf::uint8* BagExtraAttrIdObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagExtraAttrIdObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 AttrId = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSInt32ToArray(1, this->attrid_, target);

  cached_has_bits = _has_bits_[0];
  // optional sint32 Id = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagExtraAttrIdObj)
  return target;
}

size_t BagExtraAttrIdObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagExtraAttrIdObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated sint32 AttrId = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->attrid_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->attrid_size());
    total_size += data_size;
  }

  // optional sint32 Id = 2 [default = -1];
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagExtraAttrIdObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagExtraAttrIdObj)
  GOOGLE_DCHECK_NE(&from, this);
  const BagExtraAttrIdObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagExtraAttrIdObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagExtraAttrIdObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagExtraAttrIdObj)
    MergeFrom(*source);
  }
}

void BagExtraAttrIdObj::MergeFrom(const BagExtraAttrIdObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagExtraAttrIdObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attrid_.MergeFrom(from.attrid_);
  if (from.has_id()) {
    set_id(from.id());
  }
}

void BagExtraAttrIdObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagExtraAttrIdObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagExtraAttrIdObj::CopyFrom(const BagExtraAttrIdObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagExtraAttrIdObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagExtraAttrIdObj::IsInitialized() const {
  return true;
}

void BagExtraAttrIdObj::Swap(BagExtraAttrIdObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagExtraAttrIdObj::InternalSwap(BagExtraAttrIdObj* other) {
  using std::swap;
  attrid_.InternalSwap(&other->attrid_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagExtraAttrIdObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagExtraAttrIdObj

// repeated sint32 AttrId = 1;
int BagExtraAttrIdObj::attrid_size() const {
  return attrid_.size();
}
void BagExtraAttrIdObj::clear_attrid() {
  attrid_.Clear();
}
::google::protobuf::int32 BagExtraAttrIdObj::attrid(int index) const {
  // @@protoc_insertion_point(field_get:BagExtraAttrIdObj.AttrId)
  return attrid_.Get(index);
}
void BagExtraAttrIdObj::set_attrid(int index, ::google::protobuf::int32 value) {
  attrid_.Set(index, value);
  // @@protoc_insertion_point(field_set:BagExtraAttrIdObj.AttrId)
}
void BagExtraAttrIdObj::add_attrid(::google::protobuf::int32 value) {
  attrid_.Add(value);
  // @@protoc_insertion_point(field_add:BagExtraAttrIdObj.AttrId)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BagExtraAttrIdObj::attrid() const {
  // @@protoc_insertion_point(field_list:BagExtraAttrIdObj.AttrId)
  return attrid_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BagExtraAttrIdObj::mutable_attrid() {
  // @@protoc_insertion_point(field_mutable_list:BagExtraAttrIdObj.AttrId)
  return &attrid_;
}

// optional sint32 Id = 2 [default = -1];
bool BagExtraAttrIdObj::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagExtraAttrIdObj::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void BagExtraAttrIdObj::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagExtraAttrIdObj::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 BagExtraAttrIdObj::id() const {
  // @@protoc_insertion_point(field_get:BagExtraAttrIdObj.Id)
  return id_;
}
void BagExtraAttrIdObj::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BagExtraAttrIdObj.Id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityNpcData::kDungeonIdFieldNumber;
const int ActivityNpcData::kPosInfoFieldNumber;
const int ActivityNpcData::kNPCIdFieldNumber;
const int ActivityNpcData::kObjIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityNpcData::ActivityNpcData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityNpcData)
}
ActivityNpcData::ActivityNpcData(const ActivityNpcData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  posinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_posinfo()) {
    posinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.posinfo_);
  }
  ::memcpy(&objid_, &from.objid_,
    static_cast<size_t>(reinterpret_cast<char*>(&npcid_) -
    reinterpret_cast<char*>(&objid_)) + sizeof(npcid_));
  // @@protoc_insertion_point(copy_constructor:ActivityNpcData)
}

void ActivityNpcData::SharedCtor() {
  _cached_size_ = 0;
  posinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  objid_ = -1;
  dungeonid_ = -1;
  npcid_ = -1;
}

ActivityNpcData::~ActivityNpcData() {
  // @@protoc_insertion_point(destructor:ActivityNpcData)
  SharedDtor();
}

void ActivityNpcData::SharedDtor() {
  posinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ActivityNpcData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityNpcData::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityNpcData& ActivityNpcData::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityNpcData* ActivityNpcData::New(::google::protobuf::Arena* arena) const {
  ActivityNpcData* n = new ActivityNpcData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityNpcData::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityNpcData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!posinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*posinfo_.UnsafeRawStringPointer())->clear();
    }
    objid_ = -1;
    dungeonid_ = -1;
    npcid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityNpcData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityNpcData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 DungeonId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dungeonid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &dungeonid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes PosInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_posinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 NPCId = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_npcid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &npcid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ObjId = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_objid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &objid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityNpcData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityNpcData)
  return false;
#undef DO_
}

void ActivityNpcData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityNpcData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 DungeonId = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->dungeonid(), output);
  }

  // optional bytes PosInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->posinfo(), output);
  }

  // optional sint32 NPCId = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->npcid(), output);
  }

  // optional sint32 ObjId = 4 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->objid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityNpcData)
}

::google::protobuf::uint8* ActivityNpcData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityNpcData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 DungeonId = 1 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->dungeonid(), target);
  }

  // optional bytes PosInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->posinfo(), target);
  }

  // optional sint32 NPCId = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->npcid(), target);
  }

  // optional sint32 ObjId = 4 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->objid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityNpcData)
  return target;
}

size_t ActivityNpcData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityNpcData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes PosInfo = 2;
    if (has_posinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->posinfo());
    }

    // optional sint32 ObjId = 4 [default = -1];
    if (has_objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->objid());
    }

    // optional sint32 DungeonId = 1 [default = -1];
    if (has_dungeonid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->dungeonid());
    }

    // optional sint32 NPCId = 3 [default = -1];
    if (has_npcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->npcid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityNpcData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityNpcData)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityNpcData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityNpcData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityNpcData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityNpcData)
    MergeFrom(*source);
  }
}

void ActivityNpcData::MergeFrom(const ActivityNpcData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityNpcData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_posinfo();
      posinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.posinfo_);
    }
    if (cached_has_bits & 0x00000002u) {
      objid_ = from.objid_;
    }
    if (cached_has_bits & 0x00000004u) {
      dungeonid_ = from.dungeonid_;
    }
    if (cached_has_bits & 0x00000008u) {
      npcid_ = from.npcid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ActivityNpcData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityNpcData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityNpcData::CopyFrom(const ActivityNpcData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityNpcData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityNpcData::IsInitialized() const {
  return true;
}

void ActivityNpcData::Swap(ActivityNpcData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityNpcData::InternalSwap(ActivityNpcData* other) {
  using std::swap;
  posinfo_.Swap(&other->posinfo_);
  swap(objid_, other->objid_);
  swap(dungeonid_, other->dungeonid_);
  swap(npcid_, other->npcid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityNpcData::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityNpcData

// optional sint32 DungeonId = 1 [default = -1];
bool ActivityNpcData::has_dungeonid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ActivityNpcData::set_has_dungeonid() {
  _has_bits_[0] |= 0x00000004u;
}
void ActivityNpcData::clear_has_dungeonid() {
  _has_bits_[0] &= ~0x00000004u;
}
void ActivityNpcData::clear_dungeonid() {
  dungeonid_ = -1;
  clear_has_dungeonid();
}
::google::protobuf::int32 ActivityNpcData::dungeonid() const {
  // @@protoc_insertion_point(field_get:ActivityNpcData.DungeonId)
  return dungeonid_;
}
void ActivityNpcData::set_dungeonid(::google::protobuf::int32 value) {
  set_has_dungeonid();
  dungeonid_ = value;
  // @@protoc_insertion_point(field_set:ActivityNpcData.DungeonId)
}

// optional bytes PosInfo = 2;
bool ActivityNpcData::has_posinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityNpcData::set_has_posinfo() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityNpcData::clear_has_posinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityNpcData::clear_posinfo() {
  posinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_posinfo();
}
const ::std::string& ActivityNpcData::posinfo() const {
  // @@protoc_insertion_point(field_get:ActivityNpcData.PosInfo)
  return posinfo_.GetNoArena();
}
void ActivityNpcData::set_posinfo(const ::std::string& value) {
  set_has_posinfo();
  posinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ActivityNpcData.PosInfo)
}
#if LANG_CXX11
void ActivityNpcData::set_posinfo(::std::string&& value) {
  set_has_posinfo();
  posinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ActivityNpcData.PosInfo)
}
#endif
void ActivityNpcData::set_posinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_posinfo();
  posinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ActivityNpcData.PosInfo)
}
void ActivityNpcData::set_posinfo(const void* value, size_t size) {
  set_has_posinfo();
  posinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ActivityNpcData.PosInfo)
}
::std::string* ActivityNpcData::mutable_posinfo() {
  set_has_posinfo();
  // @@protoc_insertion_point(field_mutable:ActivityNpcData.PosInfo)
  return posinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ActivityNpcData::release_posinfo() {
  // @@protoc_insertion_point(field_release:ActivityNpcData.PosInfo)
  clear_has_posinfo();
  return posinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ActivityNpcData::set_allocated_posinfo(::std::string* posinfo) {
  if (posinfo != NULL) {
    set_has_posinfo();
  } else {
    clear_has_posinfo();
  }
  posinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), posinfo);
  // @@protoc_insertion_point(field_set_allocated:ActivityNpcData.PosInfo)
}

// optional sint32 NPCId = 3 [default = -1];
bool ActivityNpcData::has_npcid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ActivityNpcData::set_has_npcid() {
  _has_bits_[0] |= 0x00000008u;
}
void ActivityNpcData::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000008u;
}
void ActivityNpcData::clear_npcid() {
  npcid_ = -1;
  clear_has_npcid();
}
::google::protobuf::int32 ActivityNpcData::npcid() const {
  // @@protoc_insertion_point(field_get:ActivityNpcData.NPCId)
  return npcid_;
}
void ActivityNpcData::set_npcid(::google::protobuf::int32 value) {
  set_has_npcid();
  npcid_ = value;
  // @@protoc_insertion_point(field_set:ActivityNpcData.NPCId)
}

// optional sint32 ObjId = 4 [default = -1];
bool ActivityNpcData::has_objid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ActivityNpcData::set_has_objid() {
  _has_bits_[0] |= 0x00000002u;
}
void ActivityNpcData::clear_has_objid() {
  _has_bits_[0] &= ~0x00000002u;
}
void ActivityNpcData::clear_objid() {
  objid_ = -1;
  clear_has_objid();
}
::google::protobuf::int32 ActivityNpcData::objid() const {
  // @@protoc_insertion_point(field_get:ActivityNpcData.ObjId)
  return objid_;
}
void ActivityNpcData::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
  // @@protoc_insertion_point(field_set:ActivityNpcData.ObjId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorldBossObj::kDungeonIdFieldNumber;
const int WorldBossObj::kMonsterIdFieldNumber;
const int WorldBossObj::kCurHPFieldNumber;
const int WorldBossObj::kIsDeadFieldNumber;
const int WorldBossObj::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorldBossObj::WorldBossObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WorldBossObj)
}
WorldBossObj::WorldBossObj(const WorldBossObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isdead_, &from.isdead_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&isdead_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:WorldBossObj)
}

void WorldBossObj::SharedCtor() {
  _cached_size_ = 0;
  isdead_ = false;
  dungeonid_ = -1;
  monsterid_ = -1;
  curhp_ = -1;
  level_ = 1;
}

WorldBossObj::~WorldBossObj() {
  // @@protoc_insertion_point(destructor:WorldBossObj)
  SharedDtor();
}

void WorldBossObj::SharedDtor() {
}

void WorldBossObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldBossObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorldBossObj& WorldBossObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

WorldBossObj* WorldBossObj::New(::google::protobuf::Arena* arena) const {
  WorldBossObj* n = new WorldBossObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorldBossObj::Clear() {
// @@protoc_insertion_point(message_clear_start:WorldBossObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    isdead_ = false;
    dungeonid_ = -1;
    monsterid_ = -1;
    curhp_ = -1;
    level_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WorldBossObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WorldBossObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 DungeonId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dungeonid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &dungeonid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 MonsterId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_monsterid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &monsterid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 CurHP = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_curhp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &curhp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsDead = 4 [default = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_isdead();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdead_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Level = 7 [default = 1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WorldBossObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WorldBossObj)
  return false;
#undef DO_
}

void WorldBossObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WorldBossObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 DungeonId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->dungeonid(), output);
  }

  // optional sint32 MonsterId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->monsterid(), output);
  }

  // optional sint32 CurHP = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->curhp(), output);
  }

  // optional bool IsDead = 4 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->isdead(), output);
  }

  // optional sint32 Level = 7 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->level(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WorldBossObj)
}

::google::protobuf::uint8* WorldBossObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WorldBossObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 DungeonId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->dungeonid(), target);
  }

  // optional sint32 MonsterId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->monsterid(), target);
  }

  // optional sint32 CurHP = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->curhp(), target);
  }

  // optional bool IsDead = 4 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->isdead(), target);
  }

  // optional sint32 Level = 7 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->level(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WorldBossObj)
  return target;
}

size_t WorldBossObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WorldBossObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bool IsDead = 4 [default = false];
    if (has_isdead()) {
      total_size += 1 + 1;
    }

    // optional sint32 DungeonId = 1 [default = -1];
    if (has_dungeonid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->dungeonid());
    }

    // optional sint32 MonsterId = 2 [default = -1];
    if (has_monsterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->monsterid());
    }

    // optional sint32 CurHP = 3 [default = -1];
    if (has_curhp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->curhp());
    }

    // optional sint32 Level = 7 [default = 1];
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->level());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldBossObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WorldBossObj)
  GOOGLE_DCHECK_NE(&from, this);
  const WorldBossObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldBossObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WorldBossObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WorldBossObj)
    MergeFrom(*source);
  }
}

void WorldBossObj::MergeFrom(const WorldBossObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WorldBossObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      isdead_ = from.isdead_;
    }
    if (cached_has_bits & 0x00000002u) {
      dungeonid_ = from.dungeonid_;
    }
    if (cached_has_bits & 0x00000004u) {
      monsterid_ = from.monsterid_;
    }
    if (cached_has_bits & 0x00000008u) {
      curhp_ = from.curhp_;
    }
    if (cached_has_bits & 0x00000010u) {
      level_ = from.level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WorldBossObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WorldBossObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldBossObj::CopyFrom(const WorldBossObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WorldBossObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorldBossObj::IsInitialized() const {
  return true;
}

void WorldBossObj::Swap(WorldBossObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldBossObj::InternalSwap(WorldBossObj* other) {
  using std::swap;
  swap(isdead_, other->isdead_);
  swap(dungeonid_, other->dungeonid_);
  swap(monsterid_, other->monsterid_);
  swap(curhp_, other->curhp_);
  swap(level_, other->level_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorldBossObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorldBossObj

// optional sint32 DungeonId = 1 [default = -1];
bool WorldBossObj::has_dungeonid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void WorldBossObj::set_has_dungeonid() {
  _has_bits_[0] |= 0x00000002u;
}
void WorldBossObj::clear_has_dungeonid() {
  _has_bits_[0] &= ~0x00000002u;
}
void WorldBossObj::clear_dungeonid() {
  dungeonid_ = -1;
  clear_has_dungeonid();
}
::google::protobuf::int32 WorldBossObj::dungeonid() const {
  // @@protoc_insertion_point(field_get:WorldBossObj.DungeonId)
  return dungeonid_;
}
void WorldBossObj::set_dungeonid(::google::protobuf::int32 value) {
  set_has_dungeonid();
  dungeonid_ = value;
  // @@protoc_insertion_point(field_set:WorldBossObj.DungeonId)
}

// optional sint32 MonsterId = 2 [default = -1];
bool WorldBossObj::has_monsterid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void WorldBossObj::set_has_monsterid() {
  _has_bits_[0] |= 0x00000004u;
}
void WorldBossObj::clear_has_monsterid() {
  _has_bits_[0] &= ~0x00000004u;
}
void WorldBossObj::clear_monsterid() {
  monsterid_ = -1;
  clear_has_monsterid();
}
::google::protobuf::int32 WorldBossObj::monsterid() const {
  // @@protoc_insertion_point(field_get:WorldBossObj.MonsterId)
  return monsterid_;
}
void WorldBossObj::set_monsterid(::google::protobuf::int32 value) {
  set_has_monsterid();
  monsterid_ = value;
  // @@protoc_insertion_point(field_set:WorldBossObj.MonsterId)
}

// optional sint32 CurHP = 3 [default = -1];
bool WorldBossObj::has_curhp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void WorldBossObj::set_has_curhp() {
  _has_bits_[0] |= 0x00000008u;
}
void WorldBossObj::clear_has_curhp() {
  _has_bits_[0] &= ~0x00000008u;
}
void WorldBossObj::clear_curhp() {
  curhp_ = -1;
  clear_has_curhp();
}
::google::protobuf::int32 WorldBossObj::curhp() const {
  // @@protoc_insertion_point(field_get:WorldBossObj.CurHP)
  return curhp_;
}
void WorldBossObj::set_curhp(::google::protobuf::int32 value) {
  set_has_curhp();
  curhp_ = value;
  // @@protoc_insertion_point(field_set:WorldBossObj.CurHP)
}

// optional bool IsDead = 4 [default = false];
bool WorldBossObj::has_isdead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void WorldBossObj::set_has_isdead() {
  _has_bits_[0] |= 0x00000001u;
}
void WorldBossObj::clear_has_isdead() {
  _has_bits_[0] &= ~0x00000001u;
}
void WorldBossObj::clear_isdead() {
  isdead_ = false;
  clear_has_isdead();
}
bool WorldBossObj::isdead() const {
  // @@protoc_insertion_point(field_get:WorldBossObj.IsDead)
  return isdead_;
}
void WorldBossObj::set_isdead(bool value) {
  set_has_isdead();
  isdead_ = value;
  // @@protoc_insertion_point(field_set:WorldBossObj.IsDead)
}

// optional sint32 Level = 7 [default = 1];
bool WorldBossObj::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void WorldBossObj::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
void WorldBossObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
void WorldBossObj::clear_level() {
  level_ = 1;
  clear_has_level();
}
::google::protobuf::int32 WorldBossObj::level() const {
  // @@protoc_insertion_point(field_get:WorldBossObj.Level)
  return level_;
}
void WorldBossObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:WorldBossObj.Level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorldBossRankObj::kRankFieldNumber;
const int WorldBossRankObj::kUserIdFieldNumber;
const int WorldBossRankObj::kUserNameFieldNumber;
const int WorldBossRankObj::kLevelFieldNumber;
const int WorldBossRankObj::kHurtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorldBossRankObj::WorldBossRankObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WorldBossRankObj)
}
WorldBossRankObj::WorldBossRankObj(const WorldBossRankObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  ::memcpy(&rank_, &from.rank_,
    static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&rank_)) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:WorldBossRankObj)
}

void WorldBossRankObj::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rank_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hurt_) -
      reinterpret_cast<char*>(&rank_)) + sizeof(hurt_));
  userid_ = GOOGLE_LONGLONG(-1);
}

WorldBossRankObj::~WorldBossRankObj() {
  // @@protoc_insertion_point(destructor:WorldBossRankObj)
  SharedDtor();
}

void WorldBossRankObj::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WorldBossRankObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldBossRankObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorldBossRankObj& WorldBossRankObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

WorldBossRankObj* WorldBossRankObj::New(::google::protobuf::Arena* arena) const {
  WorldBossRankObj* n = new WorldBossRankObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorldBossRankObj::Clear() {
// @@protoc_insertion_point(message_clear_start:WorldBossRankObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_username()) {
    GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*username_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 30u) {
    ::memset(&rank_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hurt_) -
        reinterpret_cast<char*>(&rank_)) + sizeof(hurt_));
    userid_ = GOOGLE_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WorldBossRankObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WorldBossRankObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Rank = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_rank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 UserId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string UserName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "WorldBossRankObj.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Level = 5 [default = 0];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Hurt = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_hurt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &hurt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WorldBossRankObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WorldBossRankObj)
  return false;
#undef DO_
}

void WorldBossRankObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WorldBossRankObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Rank = 1 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->rank(), output);
  }

  // optional sint64 UserId = 2 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->userid(), output);
  }

  // optional string UserName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WorldBossRankObj.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  // optional sint32 Level = 5 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->level(), output);
  }

  // optional sint32 Hurt = 6 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->hurt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WorldBossRankObj)
}

::google::protobuf::uint8* WorldBossRankObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WorldBossRankObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Rank = 1 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->rank(), target);
  }

  // optional sint64 UserId = 2 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->userid(), target);
  }

  // optional string UserName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WorldBossRankObj.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  // optional sint32 Level = 5 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->level(), target);
  }

  // optional sint32 Hurt = 6 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->hurt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WorldBossRankObj)
  return target;
}

size_t WorldBossRankObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WorldBossRankObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string UserName = 3;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional sint32 Rank = 1 [default = 0];
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->rank());
    }

    // optional sint32 Level = 5 [default = 0];
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->level());
    }

    // optional sint32 Hurt = 6 [default = 0];
    if (has_hurt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->hurt());
    }

    // optional sint64 UserId = 2 [default = -1];
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldBossRankObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WorldBossRankObj)
  GOOGLE_DCHECK_NE(&from, this);
  const WorldBossRankObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldBossRankObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WorldBossRankObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WorldBossRankObj)
    MergeFrom(*source);
  }
}

void WorldBossRankObj::MergeFrom(const WorldBossRankObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WorldBossRankObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      rank_ = from.rank_;
    }
    if (cached_has_bits & 0x00000004u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000008u) {
      hurt_ = from.hurt_;
    }
    if (cached_has_bits & 0x00000010u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WorldBossRankObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WorldBossRankObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldBossRankObj::CopyFrom(const WorldBossRankObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WorldBossRankObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorldBossRankObj::IsInitialized() const {
  return true;
}

void WorldBossRankObj::Swap(WorldBossRankObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldBossRankObj::InternalSwap(WorldBossRankObj* other) {
  using std::swap;
  username_.Swap(&other->username_);
  swap(rank_, other->rank_);
  swap(level_, other->level_);
  swap(hurt_, other->hurt_);
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorldBossRankObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorldBossRankObj

// optional sint32 Rank = 1 [default = 0];
bool WorldBossRankObj::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void WorldBossRankObj::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
void WorldBossRankObj::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
void WorldBossRankObj::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
::google::protobuf::int32 WorldBossRankObj::rank() const {
  // @@protoc_insertion_point(field_get:WorldBossRankObj.Rank)
  return rank_;
}
void WorldBossRankObj::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:WorldBossRankObj.Rank)
}

// optional sint64 UserId = 2 [default = -1];
bool WorldBossRankObj::has_userid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void WorldBossRankObj::set_has_userid() {
  _has_bits_[0] |= 0x00000010u;
}
void WorldBossRankObj::clear_has_userid() {
  _has_bits_[0] &= ~0x00000010u;
}
void WorldBossRankObj::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 WorldBossRankObj::userid() const {
  // @@protoc_insertion_point(field_get:WorldBossRankObj.UserId)
  return userid_;
}
void WorldBossRankObj::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:WorldBossRankObj.UserId)
}

// optional string UserName = 3;
bool WorldBossRankObj::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void WorldBossRankObj::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void WorldBossRankObj::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void WorldBossRankObj::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& WorldBossRankObj::username() const {
  // @@protoc_insertion_point(field_get:WorldBossRankObj.UserName)
  return username_.GetNoArena();
}
void WorldBossRankObj::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WorldBossRankObj.UserName)
}
#if LANG_CXX11
void WorldBossRankObj::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WorldBossRankObj.UserName)
}
#endif
void WorldBossRankObj::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WorldBossRankObj.UserName)
}
void WorldBossRankObj::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WorldBossRankObj.UserName)
}
::std::string* WorldBossRankObj::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:WorldBossRankObj.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WorldBossRankObj::release_username() {
  // @@protoc_insertion_point(field_release:WorldBossRankObj.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WorldBossRankObj::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:WorldBossRankObj.UserName)
}

// optional sint32 Level = 5 [default = 0];
bool WorldBossRankObj::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void WorldBossRankObj::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
void WorldBossRankObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
void WorldBossRankObj::clear_level() {
  level_ = 0;
  clear_has_level();
}
::google::protobuf::int32 WorldBossRankObj::level() const {
  // @@protoc_insertion_point(field_get:WorldBossRankObj.Level)
  return level_;
}
void WorldBossRankObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:WorldBossRankObj.Level)
}

// optional sint32 Hurt = 6 [default = 0];
bool WorldBossRankObj::has_hurt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void WorldBossRankObj::set_has_hurt() {
  _has_bits_[0] |= 0x00000008u;
}
void WorldBossRankObj::clear_has_hurt() {
  _has_bits_[0] &= ~0x00000008u;
}
void WorldBossRankObj::clear_hurt() {
  hurt_ = 0;
  clear_has_hurt();
}
::google::protobuf::int32 WorldBossRankObj::hurt() const {
  // @@protoc_insertion_point(field_get:WorldBossRankObj.Hurt)
  return hurt_;
}
void WorldBossRankObj::set_hurt(::google::protobuf::int32 value) {
  set_has_hurt();
  hurt_ = value;
  // @@protoc_insertion_point(field_set:WorldBossRankObj.Hurt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopPeoValue::kPlanNameFieldNumber;
const int TopPeoValue::kUserIdFieldNumber;
const int TopPeoValue::kLVFieldNumber;
const int TopPeoValue::kAllRankingFieldNumber;
const int TopPeoValue::kMyRankingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopPeoValue::TopPeoValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TopPeoValue)
}
TopPeoValue::TopPeoValue(const TopPeoValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  planname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_planname()) {
    planname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.planname_);
  }
  ::memcpy(&myranking_, &from.myranking_,
    static_cast<size_t>(reinterpret_cast<char*>(&allranking_) -
    reinterpret_cast<char*>(&myranking_)) + sizeof(allranking_));
  // @@protoc_insertion_point(copy_constructor:TopPeoValue)
}

void TopPeoValue::SharedCtor() {
  _cached_size_ = 0;
  planname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  myranking_ = -1;
  userid_ = GOOGLE_LONGLONG(-1);
  lv_ = -1;
  allranking_ = -1;
}

TopPeoValue::~TopPeoValue() {
  // @@protoc_insertion_point(destructor:TopPeoValue)
  SharedDtor();
}

void TopPeoValue::SharedDtor() {
  planname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TopPeoValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TopPeoValue::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopPeoValue& TopPeoValue::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

TopPeoValue* TopPeoValue::New(::google::protobuf::Arena* arena) const {
  TopPeoValue* n = new TopPeoValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TopPeoValue::Clear() {
// @@protoc_insertion_point(message_clear_start:TopPeoValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!planname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*planname_.UnsafeRawStringPointer())->clear();
    }
    myranking_ = -1;
    userid_ = GOOGLE_LONGLONG(-1);
    lv_ = -1;
    allranking_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TopPeoValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TopPeoValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string PlanName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_planname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->planname().data(), static_cast<int>(this->planname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TopPeoValue.PlanName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 UserId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 LV = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_lv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &lv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 AllRanking = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_allranking();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &allranking_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 MyRanking = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_myranking();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &myranking_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TopPeoValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TopPeoValue)
  return false;
#undef DO_
}

void TopPeoValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TopPeoValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string PlanName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->planname().data(), static_cast<int>(this->planname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TopPeoValue.PlanName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->planname(), output);
  }

  // optional sint64 UserId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->userid(), output);
  }

  // optional sint32 LV = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->lv(), output);
  }

  // optional sint32 AllRanking = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->allranking(), output);
  }

  // optional sint32 MyRanking = 6 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->myranking(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TopPeoValue)
}

::google::protobuf::uint8* TopPeoValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TopPeoValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string PlanName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->planname().data(), static_cast<int>(this->planname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TopPeoValue.PlanName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->planname(), target);
  }

  // optional sint64 UserId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->userid(), target);
  }

  // optional sint32 LV = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->lv(), target);
  }

  // optional sint32 AllRanking = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->allranking(), target);
  }

  // optional sint32 MyRanking = 6 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->myranking(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TopPeoValue)
  return target;
}

size_t TopPeoValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TopPeoValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string PlanName = 1;
    if (has_planname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->planname());
    }

    // optional sint32 MyRanking = 6 [default = -1];
    if (has_myranking()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->myranking());
    }

    // optional sint64 UserId = 2 [default = -1];
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->userid());
    }

    // optional sint32 LV = 3 [default = -1];
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->lv());
    }

    // optional sint32 AllRanking = 4 [default = -1];
    if (has_allranking()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->allranking());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TopPeoValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TopPeoValue)
  GOOGLE_DCHECK_NE(&from, this);
  const TopPeoValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopPeoValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TopPeoValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TopPeoValue)
    MergeFrom(*source);
  }
}

void TopPeoValue::MergeFrom(const TopPeoValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TopPeoValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_planname();
      planname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.planname_);
    }
    if (cached_has_bits & 0x00000002u) {
      myranking_ = from.myranking_;
    }
    if (cached_has_bits & 0x00000004u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000008u) {
      lv_ = from.lv_;
    }
    if (cached_has_bits & 0x00000010u) {
      allranking_ = from.allranking_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TopPeoValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TopPeoValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopPeoValue::CopyFrom(const TopPeoValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TopPeoValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopPeoValue::IsInitialized() const {
  return true;
}

void TopPeoValue::Swap(TopPeoValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopPeoValue::InternalSwap(TopPeoValue* other) {
  using std::swap;
  planname_.Swap(&other->planname_);
  swap(myranking_, other->myranking_);
  swap(userid_, other->userid_);
  swap(lv_, other->lv_);
  swap(allranking_, other->allranking_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TopPeoValue::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TopPeoValue

// optional string PlanName = 1;
bool TopPeoValue::has_planname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TopPeoValue::set_has_planname() {
  _has_bits_[0] |= 0x00000001u;
}
void TopPeoValue::clear_has_planname() {
  _has_bits_[0] &= ~0x00000001u;
}
void TopPeoValue::clear_planname() {
  planname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_planname();
}
const ::std::string& TopPeoValue::planname() const {
  // @@protoc_insertion_point(field_get:TopPeoValue.PlanName)
  return planname_.GetNoArena();
}
void TopPeoValue::set_planname(const ::std::string& value) {
  set_has_planname();
  planname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TopPeoValue.PlanName)
}
#if LANG_CXX11
void TopPeoValue::set_planname(::std::string&& value) {
  set_has_planname();
  planname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TopPeoValue.PlanName)
}
#endif
void TopPeoValue::set_planname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_planname();
  planname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TopPeoValue.PlanName)
}
void TopPeoValue::set_planname(const char* value, size_t size) {
  set_has_planname();
  planname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TopPeoValue.PlanName)
}
::std::string* TopPeoValue::mutable_planname() {
  set_has_planname();
  // @@protoc_insertion_point(field_mutable:TopPeoValue.PlanName)
  return planname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TopPeoValue::release_planname() {
  // @@protoc_insertion_point(field_release:TopPeoValue.PlanName)
  clear_has_planname();
  return planname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TopPeoValue::set_allocated_planname(::std::string* planname) {
  if (planname != NULL) {
    set_has_planname();
  } else {
    clear_has_planname();
  }
  planname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), planname);
  // @@protoc_insertion_point(field_set_allocated:TopPeoValue.PlanName)
}

// optional sint64 UserId = 2 [default = -1];
bool TopPeoValue::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TopPeoValue::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
void TopPeoValue::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
void TopPeoValue::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 TopPeoValue::userid() const {
  // @@protoc_insertion_point(field_get:TopPeoValue.UserId)
  return userid_;
}
void TopPeoValue::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:TopPeoValue.UserId)
}

// optional sint32 LV = 3 [default = -1];
bool TopPeoValue::has_lv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TopPeoValue::set_has_lv() {
  _has_bits_[0] |= 0x00000008u;
}
void TopPeoValue::clear_has_lv() {
  _has_bits_[0] &= ~0x00000008u;
}
void TopPeoValue::clear_lv() {
  lv_ = -1;
  clear_has_lv();
}
::google::protobuf::int32 TopPeoValue::lv() const {
  // @@protoc_insertion_point(field_get:TopPeoValue.LV)
  return lv_;
}
void TopPeoValue::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:TopPeoValue.LV)
}

// optional sint32 AllRanking = 4 [default = -1];
bool TopPeoValue::has_allranking() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TopPeoValue::set_has_allranking() {
  _has_bits_[0] |= 0x00000010u;
}
void TopPeoValue::clear_has_allranking() {
  _has_bits_[0] &= ~0x00000010u;
}
void TopPeoValue::clear_allranking() {
  allranking_ = -1;
  clear_has_allranking();
}
::google::protobuf::int32 TopPeoValue::allranking() const {
  // @@protoc_insertion_point(field_get:TopPeoValue.AllRanking)
  return allranking_;
}
void TopPeoValue::set_allranking(::google::protobuf::int32 value) {
  set_has_allranking();
  allranking_ = value;
  // @@protoc_insertion_point(field_set:TopPeoValue.AllRanking)
}

// optional sint32 MyRanking = 6 [default = -1];
bool TopPeoValue::has_myranking() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TopPeoValue::set_has_myranking() {
  _has_bits_[0] |= 0x00000002u;
}
void TopPeoValue::clear_has_myranking() {
  _has_bits_[0] &= ~0x00000002u;
}
void TopPeoValue::clear_myranking() {
  myranking_ = -1;
  clear_has_myranking();
}
::google::protobuf::int32 TopPeoValue::myranking() const {
  // @@protoc_insertion_point(field_get:TopPeoValue.MyRanking)
  return myranking_;
}
void TopPeoValue::set_myranking(::google::protobuf::int32 value) {
  set_has_myranking();
  myranking_ = value;
  // @@protoc_insertion_point(field_set:TopPeoValue.MyRanking)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneSData::kTypeFieldNumber;
const int OneSData::kSkillIDFieldNumber;
const int OneSData::kSkillLvFieldNumber;
const int OneSData::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneSData::OneSData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OneSData)
}
OneSData::OneSData(const OneSData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&type_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:OneSData)
}

void OneSData::SharedCtor() {
  _cached_size_ = 0;
  type_ = -1;
  skillid_ = -1;
  skilllv_ = -1;
  index_ = -1;
}

OneSData::~OneSData() {
  // @@protoc_insertion_point(destructor:OneSData)
  SharedDtor();
}

void OneSData::SharedDtor() {
}

void OneSData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneSData::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OneSData& OneSData::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

OneSData* OneSData::New(::google::protobuf::Arena* arena) const {
  OneSData* n = new OneSData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OneSData::Clear() {
// @@protoc_insertion_point(message_clear_start:OneSData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    type_ = -1;
    skillid_ = -1;
    skilllv_ = -1;
    index_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OneSData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OneSData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Type = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 SkillID = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_skillid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 SkillLv = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_skilllv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &skilllv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Index = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OneSData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OneSData)
  return false;
#undef DO_
}

void OneSData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OneSData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Type = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->type(), output);
  }

  // optional sint32 SkillID = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->skillid(), output);
  }

  // optional sint32 SkillLv = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->skilllv(), output);
  }

  // optional sint32 Index = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OneSData)
}

::google::protobuf::uint8* OneSData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OneSData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Type = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->type(), target);
  }

  // optional sint32 SkillID = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->skillid(), target);
  }

  // optional sint32 SkillLv = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->skilllv(), target);
  }

  // optional sint32 Index = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OneSData)
  return target;
}

size_t OneSData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OneSData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional sint32 Type = 1 [default = -1];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->type());
    }

    // optional sint32 SkillID = 2 [default = -1];
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->skillid());
    }

    // optional sint32 SkillLv = 3 [default = -1];
    if (has_skilllv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->skilllv());
    }

    // optional sint32 Index = 4 [default = -1];
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneSData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OneSData)
  GOOGLE_DCHECK_NE(&from, this);
  const OneSData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneSData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OneSData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OneSData)
    MergeFrom(*source);
  }
}

void OneSData::MergeFrom(const OneSData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OneSData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000002u) {
      skillid_ = from.skillid_;
    }
    if (cached_has_bits & 0x00000004u) {
      skilllv_ = from.skilllv_;
    }
    if (cached_has_bits & 0x00000008u) {
      index_ = from.index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OneSData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OneSData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneSData::CopyFrom(const OneSData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OneSData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneSData::IsInitialized() const {
  return true;
}

void OneSData::Swap(OneSData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneSData::InternalSwap(OneSData* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(skillid_, other->skillid_);
  swap(skilllv_, other->skilllv_);
  swap(index_, other->index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneSData::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneSData

// optional sint32 Type = 1 [default = -1];
bool OneSData::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OneSData::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void OneSData::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void OneSData::clear_type() {
  type_ = -1;
  clear_has_type();
}
::google::protobuf::int32 OneSData::type() const {
  // @@protoc_insertion_point(field_get:OneSData.Type)
  return type_;
}
void OneSData::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:OneSData.Type)
}

// optional sint32 SkillID = 2 [default = -1];
bool OneSData::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OneSData::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
void OneSData::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
void OneSData::clear_skillid() {
  skillid_ = -1;
  clear_has_skillid();
}
::google::protobuf::int32 OneSData::skillid() const {
  // @@protoc_insertion_point(field_get:OneSData.SkillID)
  return skillid_;
}
void OneSData::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:OneSData.SkillID)
}

// optional sint32 SkillLv = 3 [default = -1];
bool OneSData::has_skilllv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OneSData::set_has_skilllv() {
  _has_bits_[0] |= 0x00000004u;
}
void OneSData::clear_has_skilllv() {
  _has_bits_[0] &= ~0x00000004u;
}
void OneSData::clear_skilllv() {
  skilllv_ = -1;
  clear_has_skilllv();
}
::google::protobuf::int32 OneSData::skilllv() const {
  // @@protoc_insertion_point(field_get:OneSData.SkillLv)
  return skilllv_;
}
void OneSData::set_skilllv(::google::protobuf::int32 value) {
  set_has_skilllv();
  skilllv_ = value;
  // @@protoc_insertion_point(field_set:OneSData.SkillLv)
}

// optional sint32 Index = 4 [default = -1];
bool OneSData::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void OneSData::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
void OneSData::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
void OneSData::clear_index() {
  index_ = -1;
  clear_has_index();
}
::google::protobuf::int32 OneSData::index() const {
  // @@protoc_insertion_point(field_get:OneSData.Index)
  return index_;
}
void OneSData::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:OneSData.Index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActMessage::kActUserIDFieldNumber;
const int ActMessage::kDepUserIDFieldNumber;
const int ActMessage::kActIsCopyFieldNumber;
const int ActMessage::kActPlanNameFieldNumber;
const int ActMessage::kDepPlanNameFieldNumber;
const int ActMessage::kTimeFieldNumber;
const int ActMessage::kActRankingFieldNumber;
const int ActMessage::kDepRankingFieldNumber;
const int ActMessage::kWinUserIDFieldNumber;
const int ActMessage::kDepIsCopyFieldNumber;
const int ActMessage::kActJobIDFieldNumber;
const int ActMessage::kDepJobIDFieldNumber;
const int ActMessage::kActChangeSourceFieldNumber;
const int ActMessage::kDepChangeSourceFieldNumber;
const int ActMessage::kActChangeOverFieldNumber;
const int ActMessage::kDepChangeOverFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActMessage::ActMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActMessage)
}
ActMessage::ActMessage(const ActMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  actplanname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_actplanname()) {
    actplanname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actplanname_);
  }
  depplanname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_depplanname()) {
    depplanname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.depplanname_);
  }
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_time()) {
    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  ::memcpy(&actuserid_, &from.actuserid_,
    static_cast<size_t>(reinterpret_cast<char*>(&depchangeover_) -
    reinterpret_cast<char*>(&actuserid_)) + sizeof(depchangeover_));
  // @@protoc_insertion_point(copy_constructor:ActMessage)
}

void ActMessage::SharedCtor() {
  _cached_size_ = 0;
  actplanname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  depplanname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actuserid_ = GOOGLE_LONGLONG(-1);
  depuserid_ = GOOGLE_LONGLONG(-1);
  actiscopy_ = -1;
  actranking_ = -1;
  winuserid_ = GOOGLE_LONGLONG(-1);
  depranking_ = -1;
  depiscopy_ = -1;
  actjobid_ = -1;
  depjobid_ = -1;
  actchangesource_ = -1;
  depchangesource_ = -1;
  actchangeover_ = -1;
  depchangeover_ = -1;
}

ActMessage::~ActMessage() {
  // @@protoc_insertion_point(destructor:ActMessage)
  SharedDtor();
}

void ActMessage::SharedDtor() {
  actplanname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  depplanname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ActMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActMessage::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActMessage& ActMessage::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActMessage* ActMessage::New(::google::protobuf::Arena* arena) const {
  ActMessage* n = new ActMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ActMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!actplanname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*actplanname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!depplanname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*depplanname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!time_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*time_.UnsafeRawStringPointer())->clear();
    }
    actuserid_ = GOOGLE_LONGLONG(-1);
    depuserid_ = GOOGLE_LONGLONG(-1);
    actiscopy_ = -1;
    actranking_ = -1;
    winuserid_ = GOOGLE_LONGLONG(-1);
  }
  if (cached_has_bits & 65280u) {
    depranking_ = -1;
    depiscopy_ = -1;
    actjobid_ = -1;
    depjobid_ = -1;
    actchangesource_ = -1;
    depchangesource_ = -1;
    actchangeover_ = -1;
    depchangeover_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 ActUserID = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_actuserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &actuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 DepUserID = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_depuserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &depuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ActIsCopy = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_actiscopy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &actiscopy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ActPlanName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actplanname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->actplanname().data(), static_cast<int>(this->actplanname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ActMessage.ActPlanName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string DepPlanName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_depplanname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->depplanname().data(), static_cast<int>(this->depplanname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ActMessage.DepPlanName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->time().data(), static_cast<int>(this->time().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ActMessage.Time");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ActRanking = 7 [default = -1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_actranking();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &actranking_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 DepRanking = 8 [default = -1];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_depranking();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &depranking_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 WinUserID = 9 [default = -1];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_winuserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &winuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 DepIsCopy = 10 [default = -1];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_depiscopy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &depiscopy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ActJobID = 11 [default = -1];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_actjobid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &actjobid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 DepJobID = 12 [default = -1];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_depjobid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &depjobid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ActChangeSource = 13 [default = -1];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_actchangesource();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &actchangesource_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 DepChangeSource = 14 [default = -1];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_depchangesource();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &depchangesource_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ActChangeOver = 15 [default = -1];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_actchangeover();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &actchangeover_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 DepChangeOver = 16 [default = -1];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_depchangeover();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &depchangeover_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActMessage)
  return false;
#undef DO_
}

void ActMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 ActUserID = 1 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->actuserid(), output);
  }

  // optional sint64 DepUserID = 2 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->depuserid(), output);
  }

  // optional sint32 ActIsCopy = 3 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->actiscopy(), output);
  }

  // optional string ActPlanName = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->actplanname().data(), static_cast<int>(this->actplanname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ActMessage.ActPlanName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->actplanname(), output);
  }

  // optional string DepPlanName = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->depplanname().data(), static_cast<int>(this->depplanname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ActMessage.DepPlanName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->depplanname(), output);
  }

  // optional string Time = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ActMessage.Time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->time(), output);
  }

  // optional sint32 ActRanking = 7 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->actranking(), output);
  }

  // optional sint32 DepRanking = 8 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->depranking(), output);
  }

  // optional sint64 WinUserID = 9 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(9, this->winuserid(), output);
  }

  // optional sint32 DepIsCopy = 10 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(10, this->depiscopy(), output);
  }

  // optional sint32 ActJobID = 11 [default = -1];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(11, this->actjobid(), output);
  }

  // optional sint32 DepJobID = 12 [default = -1];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(12, this->depjobid(), output);
  }

  // optional sint32 ActChangeSource = 13 [default = -1];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(13, this->actchangesource(), output);
  }

  // optional sint32 DepChangeSource = 14 [default = -1];
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(14, this->depchangesource(), output);
  }

  // optional sint32 ActChangeOver = 15 [default = -1];
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(15, this->actchangeover(), output);
  }

  // optional sint32 DepChangeOver = 16 [default = -1];
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(16, this->depchangeover(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActMessage)
}

::google::protobuf::uint8* ActMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 ActUserID = 1 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->actuserid(), target);
  }

  // optional sint64 DepUserID = 2 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->depuserid(), target);
  }

  // optional sint32 ActIsCopy = 3 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->actiscopy(), target);
  }

  // optional string ActPlanName = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->actplanname().data(), static_cast<int>(this->actplanname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ActMessage.ActPlanName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->actplanname(), target);
  }

  // optional string DepPlanName = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->depplanname().data(), static_cast<int>(this->depplanname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ActMessage.DepPlanName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->depplanname(), target);
  }

  // optional string Time = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ActMessage.Time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->time(), target);
  }

  // optional sint32 ActRanking = 7 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->actranking(), target);
  }

  // optional sint32 DepRanking = 8 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->depranking(), target);
  }

  // optional sint64 WinUserID = 9 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(9, this->winuserid(), target);
  }

  // optional sint32 DepIsCopy = 10 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(10, this->depiscopy(), target);
  }

  // optional sint32 ActJobID = 11 [default = -1];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(11, this->actjobid(), target);
  }

  // optional sint32 DepJobID = 12 [default = -1];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(12, this->depjobid(), target);
  }

  // optional sint32 ActChangeSource = 13 [default = -1];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(13, this->actchangesource(), target);
  }

  // optional sint32 DepChangeSource = 14 [default = -1];
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(14, this->depchangesource(), target);
  }

  // optional sint32 ActChangeOver = 15 [default = -1];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(15, this->actchangeover(), target);
  }

  // optional sint32 DepChangeOver = 16 [default = -1];
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(16, this->depchangeover(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActMessage)
  return target;
}

size_t ActMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string ActPlanName = 4;
    if (has_actplanname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->actplanname());
    }

    // optional string DepPlanName = 5;
    if (has_depplanname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->depplanname());
    }

    // optional string Time = 6;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->time());
    }

    // optional sint64 ActUserID = 1 [default = -1];
    if (has_actuserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->actuserid());
    }

    // optional sint64 DepUserID = 2 [default = -1];
    if (has_depuserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->depuserid());
    }

    // optional sint32 ActIsCopy = 3 [default = -1];
    if (has_actiscopy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->actiscopy());
    }

    // optional sint32 ActRanking = 7 [default = -1];
    if (has_actranking()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->actranking());
    }

    // optional sint64 WinUserID = 9 [default = -1];
    if (has_winuserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->winuserid());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional sint32 DepRanking = 8 [default = -1];
    if (has_depranking()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->depranking());
    }

    // optional sint32 DepIsCopy = 10 [default = -1];
    if (has_depiscopy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->depiscopy());
    }

    // optional sint32 ActJobID = 11 [default = -1];
    if (has_actjobid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->actjobid());
    }

    // optional sint32 DepJobID = 12 [default = -1];
    if (has_depjobid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->depjobid());
    }

    // optional sint32 ActChangeSource = 13 [default = -1];
    if (has_actchangesource()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->actchangesource());
    }

    // optional sint32 DepChangeSource = 14 [default = -1];
    if (has_depchangesource()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->depchangesource());
    }

    // optional sint32 ActChangeOver = 15 [default = -1];
    if (has_actchangeover()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->actchangeover());
    }

    // optional sint32 DepChangeOver = 16 [default = -1];
    if (has_depchangeover()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->depchangeover());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ActMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActMessage)
    MergeFrom(*source);
  }
}

void ActMessage::MergeFrom(const ActMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_actplanname();
      actplanname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actplanname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_depplanname();
      depplanname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.depplanname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_time();
      time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
    }
    if (cached_has_bits & 0x00000008u) {
      actuserid_ = from.actuserid_;
    }
    if (cached_has_bits & 0x00000010u) {
      depuserid_ = from.depuserid_;
    }
    if (cached_has_bits & 0x00000020u) {
      actiscopy_ = from.actiscopy_;
    }
    if (cached_has_bits & 0x00000040u) {
      actranking_ = from.actranking_;
    }
    if (cached_has_bits & 0x00000080u) {
      winuserid_ = from.winuserid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      depranking_ = from.depranking_;
    }
    if (cached_has_bits & 0x00000200u) {
      depiscopy_ = from.depiscopy_;
    }
    if (cached_has_bits & 0x00000400u) {
      actjobid_ = from.actjobid_;
    }
    if (cached_has_bits & 0x00000800u) {
      depjobid_ = from.depjobid_;
    }
    if (cached_has_bits & 0x00001000u) {
      actchangesource_ = from.actchangesource_;
    }
    if (cached_has_bits & 0x00002000u) {
      depchangesource_ = from.depchangesource_;
    }
    if (cached_has_bits & 0x00004000u) {
      actchangeover_ = from.actchangeover_;
    }
    if (cached_has_bits & 0x00008000u) {
      depchangeover_ = from.depchangeover_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ActMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActMessage::CopyFrom(const ActMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActMessage::IsInitialized() const {
  return true;
}

void ActMessage::Swap(ActMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActMessage::InternalSwap(ActMessage* other) {
  using std::swap;
  actplanname_.Swap(&other->actplanname_);
  depplanname_.Swap(&other->depplanname_);
  time_.Swap(&other->time_);
  swap(actuserid_, other->actuserid_);
  swap(depuserid_, other->depuserid_);
  swap(actiscopy_, other->actiscopy_);
  swap(actranking_, other->actranking_);
  swap(winuserid_, other->winuserid_);
  swap(depranking_, other->depranking_);
  swap(depiscopy_, other->depiscopy_);
  swap(actjobid_, other->actjobid_);
  swap(depjobid_, other->depjobid_);
  swap(actchangesource_, other->actchangesource_);
  swap(depchangesource_, other->depchangesource_);
  swap(actchangeover_, other->actchangeover_);
  swap(depchangeover_, other->depchangeover_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActMessage::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActMessage

// optional sint64 ActUserID = 1 [default = -1];
bool ActMessage::has_actuserid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ActMessage::set_has_actuserid() {
  _has_bits_[0] |= 0x00000008u;
}
void ActMessage::clear_has_actuserid() {
  _has_bits_[0] &= ~0x00000008u;
}
void ActMessage::clear_actuserid() {
  actuserid_ = GOOGLE_LONGLONG(-1);
  clear_has_actuserid();
}
::google::protobuf::int64 ActMessage::actuserid() const {
  // @@protoc_insertion_point(field_get:ActMessage.ActUserID)
  return actuserid_;
}
void ActMessage::set_actuserid(::google::protobuf::int64 value) {
  set_has_actuserid();
  actuserid_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.ActUserID)
}

// optional sint64 DepUserID = 2 [default = -1];
bool ActMessage::has_depuserid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ActMessage::set_has_depuserid() {
  _has_bits_[0] |= 0x00000010u;
}
void ActMessage::clear_has_depuserid() {
  _has_bits_[0] &= ~0x00000010u;
}
void ActMessage::clear_depuserid() {
  depuserid_ = GOOGLE_LONGLONG(-1);
  clear_has_depuserid();
}
::google::protobuf::int64 ActMessage::depuserid() const {
  // @@protoc_insertion_point(field_get:ActMessage.DepUserID)
  return depuserid_;
}
void ActMessage::set_depuserid(::google::protobuf::int64 value) {
  set_has_depuserid();
  depuserid_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.DepUserID)
}

// optional sint32 ActIsCopy = 3 [default = -1];
bool ActMessage::has_actiscopy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ActMessage::set_has_actiscopy() {
  _has_bits_[0] |= 0x00000020u;
}
void ActMessage::clear_has_actiscopy() {
  _has_bits_[0] &= ~0x00000020u;
}
void ActMessage::clear_actiscopy() {
  actiscopy_ = -1;
  clear_has_actiscopy();
}
::google::protobuf::int32 ActMessage::actiscopy() const {
  // @@protoc_insertion_point(field_get:ActMessage.ActIsCopy)
  return actiscopy_;
}
void ActMessage::set_actiscopy(::google::protobuf::int32 value) {
  set_has_actiscopy();
  actiscopy_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.ActIsCopy)
}

// optional string ActPlanName = 4;
bool ActMessage::has_actplanname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActMessage::set_has_actplanname() {
  _has_bits_[0] |= 0x00000001u;
}
void ActMessage::clear_has_actplanname() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActMessage::clear_actplanname() {
  actplanname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_actplanname();
}
const ::std::string& ActMessage::actplanname() const {
  // @@protoc_insertion_point(field_get:ActMessage.ActPlanName)
  return actplanname_.GetNoArena();
}
void ActMessage::set_actplanname(const ::std::string& value) {
  set_has_actplanname();
  actplanname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ActMessage.ActPlanName)
}
#if LANG_CXX11
void ActMessage::set_actplanname(::std::string&& value) {
  set_has_actplanname();
  actplanname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ActMessage.ActPlanName)
}
#endif
void ActMessage::set_actplanname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_actplanname();
  actplanname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ActMessage.ActPlanName)
}
void ActMessage::set_actplanname(const char* value, size_t size) {
  set_has_actplanname();
  actplanname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ActMessage.ActPlanName)
}
::std::string* ActMessage::mutable_actplanname() {
  set_has_actplanname();
  // @@protoc_insertion_point(field_mutable:ActMessage.ActPlanName)
  return actplanname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ActMessage::release_actplanname() {
  // @@protoc_insertion_point(field_release:ActMessage.ActPlanName)
  clear_has_actplanname();
  return actplanname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ActMessage::set_allocated_actplanname(::std::string* actplanname) {
  if (actplanname != NULL) {
    set_has_actplanname();
  } else {
    clear_has_actplanname();
  }
  actplanname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actplanname);
  // @@protoc_insertion_point(field_set_allocated:ActMessage.ActPlanName)
}

// optional string DepPlanName = 5;
bool ActMessage::has_depplanname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ActMessage::set_has_depplanname() {
  _has_bits_[0] |= 0x00000002u;
}
void ActMessage::clear_has_depplanname() {
  _has_bits_[0] &= ~0x00000002u;
}
void ActMessage::clear_depplanname() {
  depplanname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_depplanname();
}
const ::std::string& ActMessage::depplanname() const {
  // @@protoc_insertion_point(field_get:ActMessage.DepPlanName)
  return depplanname_.GetNoArena();
}
void ActMessage::set_depplanname(const ::std::string& value) {
  set_has_depplanname();
  depplanname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ActMessage.DepPlanName)
}
#if LANG_CXX11
void ActMessage::set_depplanname(::std::string&& value) {
  set_has_depplanname();
  depplanname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ActMessage.DepPlanName)
}
#endif
void ActMessage::set_depplanname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_depplanname();
  depplanname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ActMessage.DepPlanName)
}
void ActMessage::set_depplanname(const char* value, size_t size) {
  set_has_depplanname();
  depplanname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ActMessage.DepPlanName)
}
::std::string* ActMessage::mutable_depplanname() {
  set_has_depplanname();
  // @@protoc_insertion_point(field_mutable:ActMessage.DepPlanName)
  return depplanname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ActMessage::release_depplanname() {
  // @@protoc_insertion_point(field_release:ActMessage.DepPlanName)
  clear_has_depplanname();
  return depplanname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ActMessage::set_allocated_depplanname(::std::string* depplanname) {
  if (depplanname != NULL) {
    set_has_depplanname();
  } else {
    clear_has_depplanname();
  }
  depplanname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), depplanname);
  // @@protoc_insertion_point(field_set_allocated:ActMessage.DepPlanName)
}

// optional string Time = 6;
bool ActMessage::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ActMessage::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
void ActMessage::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
void ActMessage::clear_time() {
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_time();
}
const ::std::string& ActMessage::time() const {
  // @@protoc_insertion_point(field_get:ActMessage.Time)
  return time_.GetNoArena();
}
void ActMessage::set_time(const ::std::string& value) {
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ActMessage.Time)
}
#if LANG_CXX11
void ActMessage::set_time(::std::string&& value) {
  set_has_time();
  time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ActMessage.Time)
}
#endif
void ActMessage::set_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ActMessage.Time)
}
void ActMessage::set_time(const char* value, size_t size) {
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ActMessage.Time)
}
::std::string* ActMessage::mutable_time() {
  set_has_time();
  // @@protoc_insertion_point(field_mutable:ActMessage.Time)
  return time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ActMessage::release_time() {
  // @@protoc_insertion_point(field_release:ActMessage.Time)
  clear_has_time();
  return time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ActMessage::set_allocated_time(::std::string* time) {
  if (time != NULL) {
    set_has_time();
  } else {
    clear_has_time();
  }
  time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time);
  // @@protoc_insertion_point(field_set_allocated:ActMessage.Time)
}

// optional sint32 ActRanking = 7 [default = -1];
bool ActMessage::has_actranking() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ActMessage::set_has_actranking() {
  _has_bits_[0] |= 0x00000040u;
}
void ActMessage::clear_has_actranking() {
  _has_bits_[0] &= ~0x00000040u;
}
void ActMessage::clear_actranking() {
  actranking_ = -1;
  clear_has_actranking();
}
::google::protobuf::int32 ActMessage::actranking() const {
  // @@protoc_insertion_point(field_get:ActMessage.ActRanking)
  return actranking_;
}
void ActMessage::set_actranking(::google::protobuf::int32 value) {
  set_has_actranking();
  actranking_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.ActRanking)
}

// optional sint32 DepRanking = 8 [default = -1];
bool ActMessage::has_depranking() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ActMessage::set_has_depranking() {
  _has_bits_[0] |= 0x00000100u;
}
void ActMessage::clear_has_depranking() {
  _has_bits_[0] &= ~0x00000100u;
}
void ActMessage::clear_depranking() {
  depranking_ = -1;
  clear_has_depranking();
}
::google::protobuf::int32 ActMessage::depranking() const {
  // @@protoc_insertion_point(field_get:ActMessage.DepRanking)
  return depranking_;
}
void ActMessage::set_depranking(::google::protobuf::int32 value) {
  set_has_depranking();
  depranking_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.DepRanking)
}

// optional sint64 WinUserID = 9 [default = -1];
bool ActMessage::has_winuserid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ActMessage::set_has_winuserid() {
  _has_bits_[0] |= 0x00000080u;
}
void ActMessage::clear_has_winuserid() {
  _has_bits_[0] &= ~0x00000080u;
}
void ActMessage::clear_winuserid() {
  winuserid_ = GOOGLE_LONGLONG(-1);
  clear_has_winuserid();
}
::google::protobuf::int64 ActMessage::winuserid() const {
  // @@protoc_insertion_point(field_get:ActMessage.WinUserID)
  return winuserid_;
}
void ActMessage::set_winuserid(::google::protobuf::int64 value) {
  set_has_winuserid();
  winuserid_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.WinUserID)
}

// optional sint32 DepIsCopy = 10 [default = -1];
bool ActMessage::has_depiscopy() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ActMessage::set_has_depiscopy() {
  _has_bits_[0] |= 0x00000200u;
}
void ActMessage::clear_has_depiscopy() {
  _has_bits_[0] &= ~0x00000200u;
}
void ActMessage::clear_depiscopy() {
  depiscopy_ = -1;
  clear_has_depiscopy();
}
::google::protobuf::int32 ActMessage::depiscopy() const {
  // @@protoc_insertion_point(field_get:ActMessage.DepIsCopy)
  return depiscopy_;
}
void ActMessage::set_depiscopy(::google::protobuf::int32 value) {
  set_has_depiscopy();
  depiscopy_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.DepIsCopy)
}

// optional sint32 ActJobID = 11 [default = -1];
bool ActMessage::has_actjobid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ActMessage::set_has_actjobid() {
  _has_bits_[0] |= 0x00000400u;
}
void ActMessage::clear_has_actjobid() {
  _has_bits_[0] &= ~0x00000400u;
}
void ActMessage::clear_actjobid() {
  actjobid_ = -1;
  clear_has_actjobid();
}
::google::protobuf::int32 ActMessage::actjobid() const {
  // @@protoc_insertion_point(field_get:ActMessage.ActJobID)
  return actjobid_;
}
void ActMessage::set_actjobid(::google::protobuf::int32 value) {
  set_has_actjobid();
  actjobid_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.ActJobID)
}

// optional sint32 DepJobID = 12 [default = -1];
bool ActMessage::has_depjobid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ActMessage::set_has_depjobid() {
  _has_bits_[0] |= 0x00000800u;
}
void ActMessage::clear_has_depjobid() {
  _has_bits_[0] &= ~0x00000800u;
}
void ActMessage::clear_depjobid() {
  depjobid_ = -1;
  clear_has_depjobid();
}
::google::protobuf::int32 ActMessage::depjobid() const {
  // @@protoc_insertion_point(field_get:ActMessage.DepJobID)
  return depjobid_;
}
void ActMessage::set_depjobid(::google::protobuf::int32 value) {
  set_has_depjobid();
  depjobid_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.DepJobID)
}

// optional sint32 ActChangeSource = 13 [default = -1];
bool ActMessage::has_actchangesource() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void ActMessage::set_has_actchangesource() {
  _has_bits_[0] |= 0x00001000u;
}
void ActMessage::clear_has_actchangesource() {
  _has_bits_[0] &= ~0x00001000u;
}
void ActMessage::clear_actchangesource() {
  actchangesource_ = -1;
  clear_has_actchangesource();
}
::google::protobuf::int32 ActMessage::actchangesource() const {
  // @@protoc_insertion_point(field_get:ActMessage.ActChangeSource)
  return actchangesource_;
}
void ActMessage::set_actchangesource(::google::protobuf::int32 value) {
  set_has_actchangesource();
  actchangesource_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.ActChangeSource)
}

// optional sint32 DepChangeSource = 14 [default = -1];
bool ActMessage::has_depchangesource() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void ActMessage::set_has_depchangesource() {
  _has_bits_[0] |= 0x00002000u;
}
void ActMessage::clear_has_depchangesource() {
  _has_bits_[0] &= ~0x00002000u;
}
void ActMessage::clear_depchangesource() {
  depchangesource_ = -1;
  clear_has_depchangesource();
}
::google::protobuf::int32 ActMessage::depchangesource() const {
  // @@protoc_insertion_point(field_get:ActMessage.DepChangeSource)
  return depchangesource_;
}
void ActMessage::set_depchangesource(::google::protobuf::int32 value) {
  set_has_depchangesource();
  depchangesource_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.DepChangeSource)
}

// optional sint32 ActChangeOver = 15 [default = -1];
bool ActMessage::has_actchangeover() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void ActMessage::set_has_actchangeover() {
  _has_bits_[0] |= 0x00004000u;
}
void ActMessage::clear_has_actchangeover() {
  _has_bits_[0] &= ~0x00004000u;
}
void ActMessage::clear_actchangeover() {
  actchangeover_ = -1;
  clear_has_actchangeover();
}
::google::protobuf::int32 ActMessage::actchangeover() const {
  // @@protoc_insertion_point(field_get:ActMessage.ActChangeOver)
  return actchangeover_;
}
void ActMessage::set_actchangeover(::google::protobuf::int32 value) {
  set_has_actchangeover();
  actchangeover_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.ActChangeOver)
}

// optional sint32 DepChangeOver = 16 [default = -1];
bool ActMessage::has_depchangeover() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void ActMessage::set_has_depchangeover() {
  _has_bits_[0] |= 0x00008000u;
}
void ActMessage::clear_has_depchangeover() {
  _has_bits_[0] &= ~0x00008000u;
}
void ActMessage::clear_depchangeover() {
  depchangeover_ = -1;
  clear_has_depchangeover();
}
::google::protobuf::int32 ActMessage::depchangeover() const {
  // @@protoc_insertion_point(field_get:ActMessage.DepChangeOver)
  return depchangeover_;
}
void ActMessage::set_depchangeover(::google::protobuf::int32 value) {
  set_has_depchangeover();
  depchangeover_ = value;
  // @@protoc_insertion_point(field_set:ActMessage.DepChangeOver)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopJobMess::kJobIDFieldNumber;
const int TopJobMess::kTopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopJobMess::TopJobMess()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TopJobMess)
}
TopJobMess::TopJobMess(const TopJobMess& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      top_(from.top_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  jobid_ = from.jobid_;
  // @@protoc_insertion_point(copy_constructor:TopJobMess)
}

void TopJobMess::SharedCtor() {
  _cached_size_ = 0;
  jobid_ = -1;
}

TopJobMess::~TopJobMess() {
  // @@protoc_insertion_point(destructor:TopJobMess)
  SharedDtor();
}

void TopJobMess::SharedDtor() {
}

void TopJobMess::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TopJobMess::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopJobMess& TopJobMess::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

TopJobMess* TopJobMess::New(::google::protobuf::Arena* arena) const {
  TopJobMess* n = new TopJobMess;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TopJobMess::Clear() {
// @@protoc_insertion_point(message_clear_start:TopJobMess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  top_.Clear();
  jobid_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TopJobMess::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TopJobMess)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 JobID = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_jobid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &jobid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TopPeoValue Top = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_top()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TopJobMess)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TopJobMess)
  return false;
#undef DO_
}

void TopJobMess::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TopJobMess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 JobID = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->jobid(), output);
  }

  // repeated .TopPeoValue Top = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->top_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->top(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TopJobMess)
}

::google::protobuf::uint8* TopJobMess::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TopJobMess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 JobID = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->jobid(), target);
  }

  // repeated .TopPeoValue Top = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->top_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->top(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TopJobMess)
  return target;
}

size_t TopJobMess::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TopJobMess)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .TopPeoValue Top = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->top_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->top(static_cast<int>(i)));
    }
  }

  // optional sint32 JobID = 1 [default = -1];
  if (has_jobid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->jobid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TopJobMess::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TopJobMess)
  GOOGLE_DCHECK_NE(&from, this);
  const TopJobMess* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopJobMess>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TopJobMess)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TopJobMess)
    MergeFrom(*source);
  }
}

void TopJobMess::MergeFrom(const TopJobMess& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TopJobMess)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  top_.MergeFrom(from.top_);
  if (from.has_jobid()) {
    set_jobid(from.jobid());
  }
}

void TopJobMess::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TopJobMess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopJobMess::CopyFrom(const TopJobMess& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TopJobMess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopJobMess::IsInitialized() const {
  return true;
}

void TopJobMess::Swap(TopJobMess* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopJobMess::InternalSwap(TopJobMess* other) {
  using std::swap;
  top_.InternalSwap(&other->top_);
  swap(jobid_, other->jobid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TopJobMess::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TopJobMess

// optional sint32 JobID = 1 [default = -1];
bool TopJobMess::has_jobid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TopJobMess::set_has_jobid() {
  _has_bits_[0] |= 0x00000001u;
}
void TopJobMess::clear_has_jobid() {
  _has_bits_[0] &= ~0x00000001u;
}
void TopJobMess::clear_jobid() {
  jobid_ = -1;
  clear_has_jobid();
}
::google::protobuf::int32 TopJobMess::jobid() const {
  // @@protoc_insertion_point(field_get:TopJobMess.JobID)
  return jobid_;
}
void TopJobMess::set_jobid(::google::protobuf::int32 value) {
  set_has_jobid();
  jobid_ = value;
  // @@protoc_insertion_point(field_set:TopJobMess.JobID)
}

// repeated .TopPeoValue Top = 2;
int TopJobMess::top_size() const {
  return top_.size();
}
void TopJobMess::clear_top() {
  top_.Clear();
}
const ::TopPeoValue& TopJobMess::top(int index) const {
  // @@protoc_insertion_point(field_get:TopJobMess.Top)
  return top_.Get(index);
}
::TopPeoValue* TopJobMess::mutable_top(int index) {
  // @@protoc_insertion_point(field_mutable:TopJobMess.Top)
  return top_.Mutable(index);
}
::TopPeoValue* TopJobMess::add_top() {
  // @@protoc_insertion_point(field_add:TopJobMess.Top)
  return top_.Add();
}
::google::protobuf::RepeatedPtrField< ::TopPeoValue >*
TopJobMess::mutable_top() {
  // @@protoc_insertion_point(field_mutable_list:TopJobMess.Top)
  return &top_;
}
const ::google::protobuf::RepeatedPtrField< ::TopPeoValue >&
TopJobMess::top() const {
  // @@protoc_insertion_point(field_list:TopJobMess.Top)
  return top_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopMess::kMyTypeFieldNumber;
const int TopMess::kTopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopMess::TopMess()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TopMess)
}
TopMess::TopMess(const TopMess& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      top_(from.top_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mytype_ = from.mytype_;
  // @@protoc_insertion_point(copy_constructor:TopMess)
}

void TopMess::SharedCtor() {
  _cached_size_ = 0;
  mytype_ = -1;
}

TopMess::~TopMess() {
  // @@protoc_insertion_point(destructor:TopMess)
  SharedDtor();
}

void TopMess::SharedDtor() {
}

void TopMess::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TopMess::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TopMess& TopMess::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

TopMess* TopMess::New(::google::protobuf::Arena* arena) const {
  TopMess* n = new TopMess;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TopMess::Clear() {
// @@protoc_insertion_point(message_clear_start:TopMess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  top_.Clear();
  mytype_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TopMess::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TopMess)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 MyType = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_mytype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &mytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TopJobMess Top = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_top()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TopMess)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TopMess)
  return false;
#undef DO_
}

void TopMess::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TopMess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 MyType = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->mytype(), output);
  }

  // repeated .TopJobMess Top = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->top_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->top(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TopMess)
}

::google::protobuf::uint8* TopMess::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TopMess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 MyType = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->mytype(), target);
  }

  // repeated .TopJobMess Top = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->top_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->top(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TopMess)
  return target;
}

size_t TopMess::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TopMess)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .TopJobMess Top = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->top_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->top(static_cast<int>(i)));
    }
  }

  // optional sint32 MyType = 1 [default = -1];
  if (has_mytype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->mytype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TopMess::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TopMess)
  GOOGLE_DCHECK_NE(&from, this);
  const TopMess* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TopMess>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TopMess)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TopMess)
    MergeFrom(*source);
  }
}

void TopMess::MergeFrom(const TopMess& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TopMess)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  top_.MergeFrom(from.top_);
  if (from.has_mytype()) {
    set_mytype(from.mytype());
  }
}

void TopMess::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TopMess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TopMess::CopyFrom(const TopMess& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TopMess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TopMess::IsInitialized() const {
  return true;
}

void TopMess::Swap(TopMess* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopMess::InternalSwap(TopMess* other) {
  using std::swap;
  top_.InternalSwap(&other->top_);
  swap(mytype_, other->mytype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TopMess::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TopMess

// optional sint32 MyType = 1 [default = -1];
bool TopMess::has_mytype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TopMess::set_has_mytype() {
  _has_bits_[0] |= 0x00000001u;
}
void TopMess::clear_has_mytype() {
  _has_bits_[0] &= ~0x00000001u;
}
void TopMess::clear_mytype() {
  mytype_ = -1;
  clear_has_mytype();
}
::google::protobuf::int32 TopMess::mytype() const {
  // @@protoc_insertion_point(field_get:TopMess.MyType)
  return mytype_;
}
void TopMess::set_mytype(::google::protobuf::int32 value) {
  set_has_mytype();
  mytype_ = value;
  // @@protoc_insertion_point(field_set:TopMess.MyType)
}

// repeated .TopJobMess Top = 2;
int TopMess::top_size() const {
  return top_.size();
}
void TopMess::clear_top() {
  top_.Clear();
}
const ::TopJobMess& TopMess::top(int index) const {
  // @@protoc_insertion_point(field_get:TopMess.Top)
  return top_.Get(index);
}
::TopJobMess* TopMess::mutable_top(int index) {
  // @@protoc_insertion_point(field_mutable:TopMess.Top)
  return top_.Mutable(index);
}
::TopJobMess* TopMess::add_top() {
  // @@protoc_insertion_point(field_add:TopMess.Top)
  return top_.Add();
}
::google::protobuf::RepeatedPtrField< ::TopJobMess >*
TopMess::mutable_top() {
  // @@protoc_insertion_point(field_mutable_list:TopMess.Top)
  return &top_;
}
const ::google::protobuf::RepeatedPtrField< ::TopJobMess >&
TopMess::top() const {
  // @@protoc_insertion_point(field_list:TopMess.Top)
  return top_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeTop::kIDFieldNumber;
const int TimeTop::kRankingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeTop::TimeTop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TimeTop)
}
TimeTop::TimeTop(const TimeTop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ranking_, &from.ranking_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&ranking_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:TimeTop)
}

void TimeTop::SharedCtor() {
  _cached_size_ = 0;
  ranking_ = -1;
  id_ = GOOGLE_LONGLONG(-1);
}

TimeTop::~TimeTop() {
  // @@protoc_insertion_point(destructor:TimeTop)
  SharedDtor();
}

void TimeTop::SharedDtor() {
}

void TimeTop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimeTop::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimeTop& TimeTop::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

TimeTop* TimeTop::New(::google::protobuf::Arena* arena) const {
  TimeTop* n = new TimeTop;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimeTop::Clear() {
// @@protoc_insertion_point(message_clear_start:TimeTop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ranking_ = -1;
    id_ = GOOGLE_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TimeTop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TimeTop)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 ID = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Ranking = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ranking();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &ranking_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TimeTop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TimeTop)
  return false;
#undef DO_
}

void TimeTop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TimeTop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 ID = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->id(), output);
  }

  // optional sint32 Ranking = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->ranking(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TimeTop)
}

::google::protobuf::uint8* TimeTop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TimeTop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 ID = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->id(), target);
  }

  // optional sint32 Ranking = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->ranking(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TimeTop)
  return target;
}

size_t TimeTop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TimeTop)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Ranking = 2 [default = -1];
    if (has_ranking()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->ranking());
    }

    // optional sint64 ID = 1 [default = -1];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimeTop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TimeTop)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeTop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeTop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TimeTop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TimeTop)
    MergeFrom(*source);
  }
}

void TimeTop::MergeFrom(const TimeTop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TimeTop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      ranking_ = from.ranking_;
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TimeTop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TimeTop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeTop::CopyFrom(const TimeTop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TimeTop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeTop::IsInitialized() const {
  return true;
}

void TimeTop::Swap(TimeTop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeTop::InternalSwap(TimeTop* other) {
  using std::swap;
  swap(ranking_, other->ranking_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimeTop::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TimeTop

// optional sint64 ID = 1 [default = -1];
bool TimeTop::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TimeTop::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void TimeTop::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void TimeTop::clear_id() {
  id_ = GOOGLE_LONGLONG(-1);
  clear_has_id();
}
::google::protobuf::int64 TimeTop::id() const {
  // @@protoc_insertion_point(field_get:TimeTop.ID)
  return id_;
}
void TimeTop::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TimeTop.ID)
}

// optional sint32 Ranking = 2 [default = -1];
bool TimeTop::has_ranking() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TimeTop::set_has_ranking() {
  _has_bits_[0] |= 0x00000001u;
}
void TimeTop::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000001u;
}
void TimeTop::clear_ranking() {
  ranking_ = -1;
  clear_has_ranking();
}
::google::protobuf::int32 TimeTop::ranking() const {
  // @@protoc_insertion_point(field_get:TimeTop.Ranking)
  return ranking_;
}
void TimeTop::set_ranking(::google::protobuf::int32 value) {
  set_has_ranking();
  ranking_ = value;
  // @@protoc_insertion_point(field_set:TimeTop.Ranking)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailHeadObj::kUIdFieldNumber;
const int MailHeadObj::kTiTleStringFieldNumber;
const int MailHeadObj::kCreateTimeFieldNumber;
const int MailHeadObj::kTypeFieldNumber;
const int MailHeadObj::kStatusFieldNumber;
const int MailHeadObj::kIsAutoDelFieldNumber;
const int MailHeadObj::kGUIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailHeadObj::MailHeadObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MailHeadObj)
}
MailHeadObj::MailHeadObj(const MailHeadObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  titlestring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_titlestring()) {
    titlestring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.titlestring_);
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&guid_) -
    reinterpret_cast<char*>(&status_)) + sizeof(guid_));
  // @@protoc_insertion_point(copy_constructor:MailHeadObj)
}

void MailHeadObj::SharedCtor() {
  _cached_size_ = 0;
  titlestring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isautodel_) -
      reinterpret_cast<char*>(&status_)) + sizeof(isautodel_));
  uid_ = GOOGLE_LONGLONG(-1);
  createtime_ = -1;
  type_ = -1;
  guid_ = GOOGLE_LONGLONG(-1);
}

MailHeadObj::~MailHeadObj() {
  // @@protoc_insertion_point(destructor:MailHeadObj)
  SharedDtor();
}

void MailHeadObj::SharedDtor() {
  titlestring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MailHeadObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailHeadObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailHeadObj& MailHeadObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

MailHeadObj* MailHeadObj::New(::google::protobuf::Arena* arena) const {
  MailHeadObj* n = new MailHeadObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailHeadObj::Clear() {
// @@protoc_insertion_point(message_clear_start:MailHeadObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_titlestring()) {
    GOOGLE_DCHECK(!titlestring_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*titlestring_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 126u) {
    ::memset(&status_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isautodel_) -
        reinterpret_cast<char*>(&status_)) + sizeof(isautodel_));
    uid_ = GOOGLE_LONGLONG(-1);
    createtime_ = -1;
    type_ = -1;
    guid_ = GOOGLE_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MailHeadObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MailHeadObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 UId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string TiTleString = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_titlestring()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->titlestring().data(), static_cast<int>(this->titlestring().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MailHeadObj.TiTleString");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 CreateTime = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_createtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Type = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Status = 5 [default = 0];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsAutoDel = 6 [default = false];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_isautodel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isautodel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 GUId = 8 [default = -1];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_guid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MailHeadObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MailHeadObj)
  return false;
#undef DO_
}

void MailHeadObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MailHeadObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UId = 1 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->uid(), output);
  }

  // optional string TiTleString = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->titlestring().data(), static_cast<int>(this->titlestring().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MailHeadObj.TiTleString");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->titlestring(), output);
  }

  // optional sint32 CreateTime = 3 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->createtime(), output);
  }

  // optional sint32 Type = 4 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->type(), output);
  }

  // optional sint32 Status = 5 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->status(), output);
  }

  // optional bool IsAutoDel = 6 [default = false];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->isautodel(), output);
  }

  // optional sint64 GUId = 8 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(8, this->guid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MailHeadObj)
}

::google::protobuf::uint8* MailHeadObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MailHeadObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UId = 1 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->uid(), target);
  }

  // optional string TiTleString = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->titlestring().data(), static_cast<int>(this->titlestring().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MailHeadObj.TiTleString");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->titlestring(), target);
  }

  // optional sint32 CreateTime = 3 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->createtime(), target);
  }

  // optional sint32 Type = 4 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->type(), target);
  }

  // optional sint32 Status = 5 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->status(), target);
  }

  // optional bool IsAutoDel = 6 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->isautodel(), target);
  }

  // optional sint64 GUId = 8 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(8, this->guid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MailHeadObj)
  return target;
}

size_t MailHeadObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MailHeadObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string TiTleString = 2;
    if (has_titlestring()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->titlestring());
    }

    // optional sint32 Status = 5 [default = 0];
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->status());
    }

    // optional bool IsAutoDel = 6 [default = false];
    if (has_isautodel()) {
      total_size += 1 + 1;
    }

    // optional sint64 UId = 1 [default = -1];
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->uid());
    }

    // optional sint32 CreateTime = 3 [default = -1];
    if (has_createtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->createtime());
    }

    // optional sint32 Type = 4 [default = -1];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->type());
    }

    // optional sint64 GUId = 8 [default = -1];
    if (has_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->guid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailHeadObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MailHeadObj)
  GOOGLE_DCHECK_NE(&from, this);
  const MailHeadObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailHeadObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MailHeadObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MailHeadObj)
    MergeFrom(*source);
  }
}

void MailHeadObj::MergeFrom(const MailHeadObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MailHeadObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_titlestring();
      titlestring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.titlestring_);
    }
    if (cached_has_bits & 0x00000002u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00000004u) {
      isautodel_ = from.isautodel_;
    }
    if (cached_has_bits & 0x00000008u) {
      uid_ = from.uid_;
    }
    if (cached_has_bits & 0x00000010u) {
      createtime_ = from.createtime_;
    }
    if (cached_has_bits & 0x00000020u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000040u) {
      guid_ = from.guid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MailHeadObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MailHeadObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailHeadObj::CopyFrom(const MailHeadObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MailHeadObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailHeadObj::IsInitialized() const {
  return true;
}

void MailHeadObj::Swap(MailHeadObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailHeadObj::InternalSwap(MailHeadObj* other) {
  using std::swap;
  titlestring_.Swap(&other->titlestring_);
  swap(status_, other->status_);
  swap(isautodel_, other->isautodel_);
  swap(uid_, other->uid_);
  swap(createtime_, other->createtime_);
  swap(type_, other->type_);
  swap(guid_, other->guid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailHeadObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailHeadObj

// optional sint64 UId = 1 [default = -1];
bool MailHeadObj::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MailHeadObj::set_has_uid() {
  _has_bits_[0] |= 0x00000008u;
}
void MailHeadObj::clear_has_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
void MailHeadObj::clear_uid() {
  uid_ = GOOGLE_LONGLONG(-1);
  clear_has_uid();
}
::google::protobuf::int64 MailHeadObj::uid() const {
  // @@protoc_insertion_point(field_get:MailHeadObj.UId)
  return uid_;
}
void MailHeadObj::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:MailHeadObj.UId)
}

// optional string TiTleString = 2;
bool MailHeadObj::has_titlestring() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MailHeadObj::set_has_titlestring() {
  _has_bits_[0] |= 0x00000001u;
}
void MailHeadObj::clear_has_titlestring() {
  _has_bits_[0] &= ~0x00000001u;
}
void MailHeadObj::clear_titlestring() {
  titlestring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_titlestring();
}
const ::std::string& MailHeadObj::titlestring() const {
  // @@protoc_insertion_point(field_get:MailHeadObj.TiTleString)
  return titlestring_.GetNoArena();
}
void MailHeadObj::set_titlestring(const ::std::string& value) {
  set_has_titlestring();
  titlestring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MailHeadObj.TiTleString)
}
#if LANG_CXX11
void MailHeadObj::set_titlestring(::std::string&& value) {
  set_has_titlestring();
  titlestring_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MailHeadObj.TiTleString)
}
#endif
void MailHeadObj::set_titlestring(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_titlestring();
  titlestring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MailHeadObj.TiTleString)
}
void MailHeadObj::set_titlestring(const char* value, size_t size) {
  set_has_titlestring();
  titlestring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MailHeadObj.TiTleString)
}
::std::string* MailHeadObj::mutable_titlestring() {
  set_has_titlestring();
  // @@protoc_insertion_point(field_mutable:MailHeadObj.TiTleString)
  return titlestring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MailHeadObj::release_titlestring() {
  // @@protoc_insertion_point(field_release:MailHeadObj.TiTleString)
  clear_has_titlestring();
  return titlestring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MailHeadObj::set_allocated_titlestring(::std::string* titlestring) {
  if (titlestring != NULL) {
    set_has_titlestring();
  } else {
    clear_has_titlestring();
  }
  titlestring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), titlestring);
  // @@protoc_insertion_point(field_set_allocated:MailHeadObj.TiTleString)
}

// optional sint32 CreateTime = 3 [default = -1];
bool MailHeadObj::has_createtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MailHeadObj::set_has_createtime() {
  _has_bits_[0] |= 0x00000010u;
}
void MailHeadObj::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000010u;
}
void MailHeadObj::clear_createtime() {
  createtime_ = -1;
  clear_has_createtime();
}
::google::protobuf::int32 MailHeadObj::createtime() const {
  // @@protoc_insertion_point(field_get:MailHeadObj.CreateTime)
  return createtime_;
}
void MailHeadObj::set_createtime(::google::protobuf::int32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:MailHeadObj.CreateTime)
}

// optional sint32 Type = 4 [default = -1];
bool MailHeadObj::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void MailHeadObj::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
void MailHeadObj::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void MailHeadObj::clear_type() {
  type_ = -1;
  clear_has_type();
}
::google::protobuf::int32 MailHeadObj::type() const {
  // @@protoc_insertion_point(field_get:MailHeadObj.Type)
  return type_;
}
void MailHeadObj::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:MailHeadObj.Type)
}

// optional sint32 Status = 5 [default = 0];
bool MailHeadObj::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MailHeadObj::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
void MailHeadObj::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
void MailHeadObj::clear_status() {
  status_ = 0;
  clear_has_status();
}
::google::protobuf::int32 MailHeadObj::status() const {
  // @@protoc_insertion_point(field_get:MailHeadObj.Status)
  return status_;
}
void MailHeadObj::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:MailHeadObj.Status)
}

// optional bool IsAutoDel = 6 [default = false];
bool MailHeadObj::has_isautodel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MailHeadObj::set_has_isautodel() {
  _has_bits_[0] |= 0x00000004u;
}
void MailHeadObj::clear_has_isautodel() {
  _has_bits_[0] &= ~0x00000004u;
}
void MailHeadObj::clear_isautodel() {
  isautodel_ = false;
  clear_has_isautodel();
}
bool MailHeadObj::isautodel() const {
  // @@protoc_insertion_point(field_get:MailHeadObj.IsAutoDel)
  return isautodel_;
}
void MailHeadObj::set_isautodel(bool value) {
  set_has_isautodel();
  isautodel_ = value;
  // @@protoc_insertion_point(field_set:MailHeadObj.IsAutoDel)
}

// optional sint64 GUId = 8 [default = -1];
bool MailHeadObj::has_guid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void MailHeadObj::set_has_guid() {
  _has_bits_[0] |= 0x00000040u;
}
void MailHeadObj::clear_has_guid() {
  _has_bits_[0] &= ~0x00000040u;
}
void MailHeadObj::clear_guid() {
  guid_ = GOOGLE_LONGLONG(-1);
  clear_has_guid();
}
::google::protobuf::int64 MailHeadObj::guid() const {
  // @@protoc_insertion_point(field_get:MailHeadObj.GUId)
  return guid_;
}
void MailHeadObj::set_guid(::google::protobuf::int64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:MailHeadObj.GUId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailBodyObj::kTextFieldNumber;
const int MailBodyObj::kHyperlinkListFieldNumber;
const int MailBodyObj::kItemListFieldNumber;
const int MailBodyObj::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailBodyObj::MailBodyObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MailBodyObj)
}
MailBodyObj::MailBodyObj(const MailBodyObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      hyperlinklist_(from.hyperlinklist_),
      itemlist_(from.itemlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:MailBodyObj)
}

void MailBodyObj::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

MailBodyObj::~MailBodyObj() {
  // @@protoc_insertion_point(destructor:MailBodyObj)
  SharedDtor();
}

void MailBodyObj::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MailBodyObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailBodyObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailBodyObj& MailBodyObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

MailBodyObj* MailBodyObj::New(::google::protobuf::Arena* arena) const {
  MailBodyObj* n = new MailBodyObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailBodyObj::Clear() {
// @@protoc_insertion_point(message_clear_start:MailBodyObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hyperlinklist_.Clear();
  itemlist_.Clear();
  if (has_text()) {
    GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*text_.UnsafeRawStringPointer())->clear();
  }
  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MailBodyObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MailBodyObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MailBodyObj.Text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ChatHyperLink HyperlinkList = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hyperlinklist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KeyValue2IntInt ItemList = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_itemlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Status = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MailBodyObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MailBodyObj)
  return false;
#undef DO_
}

void MailBodyObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MailBodyObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MailBodyObj.Text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // repeated .ChatHyperLink HyperlinkList = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hyperlinklist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->hyperlinklist(static_cast<int>(i)), output);
  }

  // repeated .KeyValue2IntInt ItemList = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->itemlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->itemlist(static_cast<int>(i)), output);
  }

  // optional sint32 Status = 6 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MailBodyObj)
}

::google::protobuf::uint8* MailBodyObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MailBodyObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MailBodyObj.Text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // repeated .ChatHyperLink HyperlinkList = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hyperlinklist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->hyperlinklist(static_cast<int>(i)), deterministic, target);
  }

  // repeated .KeyValue2IntInt ItemList = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->itemlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->itemlist(static_cast<int>(i)), deterministic, target);
  }

  // optional sint32 Status = 6 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MailBodyObj)
  return target;
}

size_t MailBodyObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MailBodyObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ChatHyperLink HyperlinkList = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->hyperlinklist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hyperlinklist(static_cast<int>(i)));
    }
  }

  // repeated .KeyValue2IntInt ItemList = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->itemlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->itemlist(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string Text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional sint32 Status = 6 [default = 0];
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->status());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailBodyObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MailBodyObj)
  GOOGLE_DCHECK_NE(&from, this);
  const MailBodyObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailBodyObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MailBodyObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MailBodyObj)
    MergeFrom(*source);
  }
}

void MailBodyObj::MergeFrom(const MailBodyObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MailBodyObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hyperlinklist_.MergeFrom(from.hyperlinklist_);
  itemlist_.MergeFrom(from.itemlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MailBodyObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MailBodyObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailBodyObj::CopyFrom(const MailBodyObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MailBodyObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailBodyObj::IsInitialized() const {
  return true;
}

void MailBodyObj::Swap(MailBodyObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailBodyObj::InternalSwap(MailBodyObj* other) {
  using std::swap;
  hyperlinklist_.InternalSwap(&other->hyperlinklist_);
  itemlist_.InternalSwap(&other->itemlist_);
  text_.Swap(&other->text_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailBodyObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailBodyObj

// optional string Text = 2;
bool MailBodyObj::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MailBodyObj::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
void MailBodyObj::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void MailBodyObj::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& MailBodyObj::text() const {
  // @@protoc_insertion_point(field_get:MailBodyObj.Text)
  return text_.GetNoArena();
}
void MailBodyObj::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MailBodyObj.Text)
}
#if LANG_CXX11
void MailBodyObj::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MailBodyObj.Text)
}
#endif
void MailBodyObj::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MailBodyObj.Text)
}
void MailBodyObj::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MailBodyObj.Text)
}
::std::string* MailBodyObj::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:MailBodyObj.Text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MailBodyObj::release_text() {
  // @@protoc_insertion_point(field_release:MailBodyObj.Text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MailBodyObj::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:MailBodyObj.Text)
}

// repeated .ChatHyperLink HyperlinkList = 4;
int MailBodyObj::hyperlinklist_size() const {
  return hyperlinklist_.size();
}
void MailBodyObj::clear_hyperlinklist() {
  hyperlinklist_.Clear();
}
const ::ChatHyperLink& MailBodyObj::hyperlinklist(int index) const {
  // @@protoc_insertion_point(field_get:MailBodyObj.HyperlinkList)
  return hyperlinklist_.Get(index);
}
::ChatHyperLink* MailBodyObj::mutable_hyperlinklist(int index) {
  // @@protoc_insertion_point(field_mutable:MailBodyObj.HyperlinkList)
  return hyperlinklist_.Mutable(index);
}
::ChatHyperLink* MailBodyObj::add_hyperlinklist() {
  // @@protoc_insertion_point(field_add:MailBodyObj.HyperlinkList)
  return hyperlinklist_.Add();
}
::google::protobuf::RepeatedPtrField< ::ChatHyperLink >*
MailBodyObj::mutable_hyperlinklist() {
  // @@protoc_insertion_point(field_mutable_list:MailBodyObj.HyperlinkList)
  return &hyperlinklist_;
}
const ::google::protobuf::RepeatedPtrField< ::ChatHyperLink >&
MailBodyObj::hyperlinklist() const {
  // @@protoc_insertion_point(field_list:MailBodyObj.HyperlinkList)
  return hyperlinklist_;
}

// repeated .KeyValue2IntInt ItemList = 5;
int MailBodyObj::itemlist_size() const {
  return itemlist_.size();
}
void MailBodyObj::clear_itemlist() {
  itemlist_.Clear();
}
const ::KeyValue2IntInt& MailBodyObj::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:MailBodyObj.ItemList)
  return itemlist_.Get(index);
}
::KeyValue2IntInt* MailBodyObj::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:MailBodyObj.ItemList)
  return itemlist_.Mutable(index);
}
::KeyValue2IntInt* MailBodyObj::add_itemlist() {
  // @@protoc_insertion_point(field_add:MailBodyObj.ItemList)
  return itemlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::KeyValue2IntInt >*
MailBodyObj::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:MailBodyObj.ItemList)
  return &itemlist_;
}
const ::google::protobuf::RepeatedPtrField< ::KeyValue2IntInt >&
MailBodyObj::itemlist() const {
  // @@protoc_insertion_point(field_list:MailBodyObj.ItemList)
  return itemlist_;
}

// optional sint32 Status = 6 [default = 0];
bool MailBodyObj::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MailBodyObj::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
void MailBodyObj::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
void MailBodyObj::clear_status() {
  status_ = 0;
  clear_has_status();
}
::google::protobuf::int32 MailBodyObj::status() const {
  // @@protoc_insertion_point(field_get:MailBodyObj.Status)
  return status_;
}
void MailBodyObj::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:MailBodyObj.Status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatHyperLink::kUidFieldNumber;
const int ChatHyperLink::kConfigIDFieldNumber;
const int ChatHyperLink::kTypeFieldNumber;
const int ChatHyperLink::kTextFieldNumber;
const int ChatHyperLink::kUseridFieldNumber;
const int ChatHyperLink::kFunIdFieldNumber;
const int ChatHyperLink::kFunParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatHyperLink::ChatHyperLink()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatHyperLink)
}
ChatHyperLink::ChatHyperLink(const ChatHyperLink& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  funparam_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_funparam()) {
    funparam_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.funparam_);
  }
  ::memcpy(&funid_, &from.funid_,
    static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&funid_)) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:ChatHyperLink)
}

void ChatHyperLink::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  funparam_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  funid_ = -1;
  uid_ = GOOGLE_LONGLONG(-1);
  configid_ = -1;
  type_ = -1;
  userid_ = GOOGLE_LONGLONG(-1);
}

ChatHyperLink::~ChatHyperLink() {
  // @@protoc_insertion_point(destructor:ChatHyperLink)
  SharedDtor();
}

void ChatHyperLink::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  funparam_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatHyperLink::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatHyperLink::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatHyperLink& ChatHyperLink::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatHyperLink* ChatHyperLink::New(::google::protobuf::Arena* arena) const {
  ChatHyperLink* n = new ChatHyperLink;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatHyperLink::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatHyperLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*text_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!funparam_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*funparam_.UnsafeRawStringPointer())->clear();
    }
    funid_ = -1;
    uid_ = GOOGLE_LONGLONG(-1);
    configid_ = -1;
    type_ = -1;
    userid_ = GOOGLE_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChatHyperLink::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatHyperLink)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 Uid = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ConfigID = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_configid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &configid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Type = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Text = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ChatHyperLink.Text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 Userid = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 FunId = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_funid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &funid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes FunParam = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_funparam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatHyperLink)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatHyperLink)
  return false;
#undef DO_
}

void ChatHyperLink::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatHyperLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 Uid = 1 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->uid(), output);
  }

  // optional sint32 ConfigID = 2 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->configid(), output);
  }

  // optional sint32 Type = 3 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->type(), output);
  }

  // optional string Text = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ChatHyperLink.Text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->text(), output);
  }

  // optional sint64 Userid = 5 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(5, this->userid(), output);
  }

  // optional sint32 FunId = 6 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->funid(), output);
  }

  // optional bytes FunParam = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->funparam(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatHyperLink)
}

::google::protobuf::uint8* ChatHyperLink::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatHyperLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 Uid = 1 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->uid(), target);
  }

  // optional sint32 ConfigID = 2 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->configid(), target);
  }

  // optional sint32 Type = 3 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->type(), target);
  }

  // optional string Text = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ChatHyperLink.Text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->text(), target);
  }

  // optional sint64 Userid = 5 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(5, this->userid(), target);
  }

  // optional sint32 FunId = 6 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->funid(), target);
  }

  // optional bytes FunParam = 7;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->funparam(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatHyperLink)
  return target;
}

size_t ChatHyperLink::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatHyperLink)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string Text = 4;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional bytes FunParam = 7;
    if (has_funparam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->funparam());
    }

    // optional sint32 FunId = 6 [default = -1];
    if (has_funid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->funid());
    }

    // optional sint64 Uid = 1 [default = -1];
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->uid());
    }

    // optional sint32 ConfigID = 2 [default = -1];
    if (has_configid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->configid());
    }

    // optional sint32 Type = 3 [default = -1];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->type());
    }

    // optional sint64 Userid = 5 [default = -1];
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->userid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatHyperLink::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatHyperLink)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatHyperLink* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatHyperLink>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatHyperLink)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatHyperLink)
    MergeFrom(*source);
  }
}

void ChatHyperLink::MergeFrom(const ChatHyperLink& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatHyperLink)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_funparam();
      funparam_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.funparam_);
    }
    if (cached_has_bits & 0x00000004u) {
      funid_ = from.funid_;
    }
    if (cached_has_bits & 0x00000008u) {
      uid_ = from.uid_;
    }
    if (cached_has_bits & 0x00000010u) {
      configid_ = from.configid_;
    }
    if (cached_has_bits & 0x00000020u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000040u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChatHyperLink::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatHyperLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatHyperLink::CopyFrom(const ChatHyperLink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatHyperLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatHyperLink::IsInitialized() const {
  return true;
}

void ChatHyperLink::Swap(ChatHyperLink* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatHyperLink::InternalSwap(ChatHyperLink* other) {
  using std::swap;
  text_.Swap(&other->text_);
  funparam_.Swap(&other->funparam_);
  swap(funid_, other->funid_);
  swap(uid_, other->uid_);
  swap(configid_, other->configid_);
  swap(type_, other->type_);
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatHyperLink::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatHyperLink

// optional sint64 Uid = 1 [default = -1];
bool ChatHyperLink::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ChatHyperLink::set_has_uid() {
  _has_bits_[0] |= 0x00000008u;
}
void ChatHyperLink::clear_has_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
void ChatHyperLink::clear_uid() {
  uid_ = GOOGLE_LONGLONG(-1);
  clear_has_uid();
}
::google::protobuf::int64 ChatHyperLink::uid() const {
  // @@protoc_insertion_point(field_get:ChatHyperLink.Uid)
  return uid_;
}
void ChatHyperLink::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ChatHyperLink.Uid)
}

// optional sint32 ConfigID = 2 [default = -1];
bool ChatHyperLink::has_configid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ChatHyperLink::set_has_configid() {
  _has_bits_[0] |= 0x00000010u;
}
void ChatHyperLink::clear_has_configid() {
  _has_bits_[0] &= ~0x00000010u;
}
void ChatHyperLink::clear_configid() {
  configid_ = -1;
  clear_has_configid();
}
::google::protobuf::int32 ChatHyperLink::configid() const {
  // @@protoc_insertion_point(field_get:ChatHyperLink.ConfigID)
  return configid_;
}
void ChatHyperLink::set_configid(::google::protobuf::int32 value) {
  set_has_configid();
  configid_ = value;
  // @@protoc_insertion_point(field_set:ChatHyperLink.ConfigID)
}

// optional sint32 Type = 3 [default = -1];
bool ChatHyperLink::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ChatHyperLink::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
void ChatHyperLink::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void ChatHyperLink::clear_type() {
  type_ = -1;
  clear_has_type();
}
::google::protobuf::int32 ChatHyperLink::type() const {
  // @@protoc_insertion_point(field_get:ChatHyperLink.Type)
  return type_;
}
void ChatHyperLink::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:ChatHyperLink.Type)
}

// optional string Text = 4;
bool ChatHyperLink::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChatHyperLink::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
void ChatHyperLink::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChatHyperLink::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& ChatHyperLink::text() const {
  // @@protoc_insertion_point(field_get:ChatHyperLink.Text)
  return text_.GetNoArena();
}
void ChatHyperLink::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatHyperLink.Text)
}
#if LANG_CXX11
void ChatHyperLink::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatHyperLink.Text)
}
#endif
void ChatHyperLink::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatHyperLink.Text)
}
void ChatHyperLink::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatHyperLink.Text)
}
::std::string* ChatHyperLink::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ChatHyperLink.Text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatHyperLink::release_text() {
  // @@protoc_insertion_point(field_release:ChatHyperLink.Text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChatHyperLink::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ChatHyperLink.Text)
}

// optional sint64 Userid = 5 [default = -1];
bool ChatHyperLink::has_userid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ChatHyperLink::set_has_userid() {
  _has_bits_[0] |= 0x00000040u;
}
void ChatHyperLink::clear_has_userid() {
  _has_bits_[0] &= ~0x00000040u;
}
void ChatHyperLink::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 ChatHyperLink::userid() const {
  // @@protoc_insertion_point(field_get:ChatHyperLink.Userid)
  return userid_;
}
void ChatHyperLink::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:ChatHyperLink.Userid)
}

// optional sint32 FunId = 6 [default = -1];
bool ChatHyperLink::has_funid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ChatHyperLink::set_has_funid() {
  _has_bits_[0] |= 0x00000004u;
}
void ChatHyperLink::clear_has_funid() {
  _has_bits_[0] &= ~0x00000004u;
}
void ChatHyperLink::clear_funid() {
  funid_ = -1;
  clear_has_funid();
}
::google::protobuf::int32 ChatHyperLink::funid() const {
  // @@protoc_insertion_point(field_get:ChatHyperLink.FunId)
  return funid_;
}
void ChatHyperLink::set_funid(::google::protobuf::int32 value) {
  set_has_funid();
  funid_ = value;
  // @@protoc_insertion_point(field_set:ChatHyperLink.FunId)
}

// optional bytes FunParam = 7;
bool ChatHyperLink::has_funparam() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ChatHyperLink::set_has_funparam() {
  _has_bits_[0] |= 0x00000002u;
}
void ChatHyperLink::clear_has_funparam() {
  _has_bits_[0] &= ~0x00000002u;
}
void ChatHyperLink::clear_funparam() {
  funparam_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_funparam();
}
const ::std::string& ChatHyperLink::funparam() const {
  // @@protoc_insertion_point(field_get:ChatHyperLink.FunParam)
  return funparam_.GetNoArena();
}
void ChatHyperLink::set_funparam(const ::std::string& value) {
  set_has_funparam();
  funparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatHyperLink.FunParam)
}
#if LANG_CXX11
void ChatHyperLink::set_funparam(::std::string&& value) {
  set_has_funparam();
  funparam_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatHyperLink.FunParam)
}
#endif
void ChatHyperLink::set_funparam(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_funparam();
  funparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatHyperLink.FunParam)
}
void ChatHyperLink::set_funparam(const void* value, size_t size) {
  set_has_funparam();
  funparam_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatHyperLink.FunParam)
}
::std::string* ChatHyperLink::mutable_funparam() {
  set_has_funparam();
  // @@protoc_insertion_point(field_mutable:ChatHyperLink.FunParam)
  return funparam_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatHyperLink::release_funparam() {
  // @@protoc_insertion_point(field_release:ChatHyperLink.FunParam)
  clear_has_funparam();
  return funparam_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChatHyperLink::set_allocated_funparam(::std::string* funparam) {
  if (funparam != NULL) {
    set_has_funparam();
  } else {
    clear_has_funparam();
  }
  funparam_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), funparam);
  // @@protoc_insertion_point(field_set_allocated:ChatHyperLink.FunParam)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatObj::kChatMsgFieldNumber;
const int ChatObj::kUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatObj::ChatObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatObj)
}
ChatObj::ChatObj(const ChatObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_chatmsg()) {
    chatmsg_ = new ::ChatMsgObj(*from.chatmsg_);
  } else {
    chatmsg_ = NULL;
  }
  if (from.has_userinfo()) {
    userinfo_ = new ::ChatUserInfoObj(*from.userinfo_);
  } else {
    userinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ChatObj)
}

void ChatObj::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&chatmsg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userinfo_) -
      reinterpret_cast<char*>(&chatmsg_)) + sizeof(userinfo_));
}

ChatObj::~ChatObj() {
  // @@protoc_insertion_point(destructor:ChatObj)
  SharedDtor();
}

void ChatObj::SharedDtor() {
  if (this != internal_default_instance()) delete chatmsg_;
  if (this != internal_default_instance()) delete userinfo_;
}

void ChatObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatObj& ChatObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatObj* ChatObj::New(::google::protobuf::Arena* arena) const {
  ChatObj* n = new ChatObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatObj::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(chatmsg_ != NULL);
      chatmsg_->::ChatMsgObj::Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(userinfo_ != NULL);
      userinfo_->::ChatUserInfoObj::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChatObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ChatMsgObj ChatMsg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chatmsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ChatUserInfoObj UserInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatObj)
  return false;
#undef DO_
}

void ChatObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ChatMsgObj ChatMsg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->chatmsg_, output);
  }

  // optional .ChatUserInfoObj UserInfo = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->userinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatObj)
}

::google::protobuf::uint8* ChatObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ChatMsgObj ChatMsg = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->chatmsg_, deterministic, target);
  }

  // optional .ChatUserInfoObj UserInfo = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->userinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatObj)
  return target;
}

size_t ChatObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .ChatMsgObj ChatMsg = 1;
    if (has_chatmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->chatmsg_);
    }

    // optional .ChatUserInfoObj UserInfo = 2;
    if (has_userinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->userinfo_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatObj)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatObj)
    MergeFrom(*source);
  }
}

void ChatObj::MergeFrom(const ChatObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_chatmsg()->::ChatMsgObj::MergeFrom(from.chatmsg());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_userinfo()->::ChatUserInfoObj::MergeFrom(from.userinfo());
    }
  }
}

void ChatObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatObj::CopyFrom(const ChatObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatObj::IsInitialized() const {
  return true;
}

void ChatObj::Swap(ChatObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatObj::InternalSwap(ChatObj* other) {
  using std::swap;
  swap(chatmsg_, other->chatmsg_);
  swap(userinfo_, other->userinfo_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatObj

// optional .ChatMsgObj ChatMsg = 1;
bool ChatObj::has_chatmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChatObj::set_has_chatmsg() {
  _has_bits_[0] |= 0x00000001u;
}
void ChatObj::clear_has_chatmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChatObj::clear_chatmsg() {
  if (chatmsg_ != NULL) chatmsg_->::ChatMsgObj::Clear();
  clear_has_chatmsg();
}
const ::ChatMsgObj& ChatObj::chatmsg() const {
  const ::ChatMsgObj* p = chatmsg_;
  // @@protoc_insertion_point(field_get:ChatObj.ChatMsg)
  return p != NULL ? *p : *reinterpret_cast<const ::ChatMsgObj*>(
      &::_ChatMsgObj_default_instance_);
}
::ChatMsgObj* ChatObj::mutable_chatmsg() {
  set_has_chatmsg();
  if (chatmsg_ == NULL) {
    chatmsg_ = new ::ChatMsgObj;
  }
  // @@protoc_insertion_point(field_mutable:ChatObj.ChatMsg)
  return chatmsg_;
}
::ChatMsgObj* ChatObj::release_chatmsg() {
  // @@protoc_insertion_point(field_release:ChatObj.ChatMsg)
  clear_has_chatmsg();
  ::ChatMsgObj* temp = chatmsg_;
  chatmsg_ = NULL;
  return temp;
}
void ChatObj::set_allocated_chatmsg(::ChatMsgObj* chatmsg) {
  delete chatmsg_;
  chatmsg_ = chatmsg;
  if (chatmsg) {
    set_has_chatmsg();
  } else {
    clear_has_chatmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:ChatObj.ChatMsg)
}

// optional .ChatUserInfoObj UserInfo = 2;
bool ChatObj::has_userinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ChatObj::set_has_userinfo() {
  _has_bits_[0] |= 0x00000002u;
}
void ChatObj::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
void ChatObj::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::ChatUserInfoObj::Clear();
  clear_has_userinfo();
}
const ::ChatUserInfoObj& ChatObj::userinfo() const {
  const ::ChatUserInfoObj* p = userinfo_;
  // @@protoc_insertion_point(field_get:ChatObj.UserInfo)
  return p != NULL ? *p : *reinterpret_cast<const ::ChatUserInfoObj*>(
      &::_ChatUserInfoObj_default_instance_);
}
::ChatUserInfoObj* ChatObj::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) {
    userinfo_ = new ::ChatUserInfoObj;
  }
  // @@protoc_insertion_point(field_mutable:ChatObj.UserInfo)
  return userinfo_;
}
::ChatUserInfoObj* ChatObj::release_userinfo() {
  // @@protoc_insertion_point(field_release:ChatObj.UserInfo)
  clear_has_userinfo();
  ::ChatUserInfoObj* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
void ChatObj::set_allocated_userinfo(::ChatUserInfoObj* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:ChatObj.UserInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatMsgObj::kChannelFieldNumber;
const int ChatMsgObj::kTextFieldNumber;
const int ChatMsgObj::kVoiceFieldNumber;
const int ChatMsgObj::kTargetUserIdFieldNumber;
const int ChatMsgObj::kURLFieldNumber;
const int ChatMsgObj::kChildChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatMsgObj::ChatMsgObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatMsgObj)
}
ChatMsgObj::ChatMsgObj(const ChatMsgObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_voice()) {
    voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voice_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  ::memcpy(&channel_, &from.channel_,
    static_cast<size_t>(reinterpret_cast<char*>(&targetuserid_) -
    reinterpret_cast<char*>(&channel_)) + sizeof(targetuserid_));
  // @@protoc_insertion_point(copy_constructor:ChatMsgObj)
}

void ChatMsgObj::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
  childchannel_ = -1;
  targetuserid_ = GOOGLE_LONGLONG(-1);
}

ChatMsgObj::~ChatMsgObj() {
  // @@protoc_insertion_point(destructor:ChatMsgObj)
  SharedDtor();
}

void ChatMsgObj::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatMsgObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatMsgObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatMsgObj& ChatMsgObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatMsgObj* ChatMsgObj::New(::google::protobuf::Arena* arena) const {
  ChatMsgObj* n = new ChatMsgObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatMsgObj::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatMsgObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*text_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!voice_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*voice_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 56u) {
    channel_ = 0;
    childchannel_ = -1;
    targetuserid_ = GOOGLE_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChatMsgObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatMsgObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Channel = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_channel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ChatMsgObj.Text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes Voice = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_voice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 TargetUserId = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_targetuserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &targetuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes URL = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ChildChannel = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_childchannel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &childchannel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatMsgObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatMsgObj)
  return false;
#undef DO_
}

void ChatMsgObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatMsgObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Channel = 1 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->channel(), output);
  }

  // optional string Text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ChatMsgObj.Text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // optional bytes Voice = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->voice(), output);
  }

  // optional sint64 TargetUserId = 4 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(4, this->targetuserid(), output);
  }

  // optional bytes URL = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->url(), output);
  }

  // optional sint32 ChildChannel = 6 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->childchannel(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatMsgObj)
}

::google::protobuf::uint8* ChatMsgObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatMsgObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Channel = 1 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->channel(), target);
  }

  // optional string Text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ChatMsgObj.Text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // optional bytes Voice = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->voice(), target);
  }

  // optional sint64 TargetUserId = 4 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(4, this->targetuserid(), target);
  }

  // optional bytes URL = 5;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->url(), target);
  }

  // optional sint32 ChildChannel = 6 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->childchannel(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatMsgObj)
  return target;
}

size_t ChatMsgObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatMsgObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string Text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional bytes Voice = 3;
    if (has_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->voice());
    }

    // optional bytes URL = 5;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->url());
    }

    // optional sint32 Channel = 1 [default = 0];
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->channel());
    }

    // optional sint32 ChildChannel = 6 [default = -1];
    if (has_childchannel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->childchannel());
    }

    // optional sint64 TargetUserId = 4 [default = -1];
    if (has_targetuserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->targetuserid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatMsgObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatMsgObj)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatMsgObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatMsgObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatMsgObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatMsgObj)
    MergeFrom(*source);
  }
}

void ChatMsgObj::MergeFrom(const ChatMsgObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatMsgObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_voice();
      voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voice_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000008u) {
      channel_ = from.channel_;
    }
    if (cached_has_bits & 0x00000010u) {
      childchannel_ = from.childchannel_;
    }
    if (cached_has_bits & 0x00000020u) {
      targetuserid_ = from.targetuserid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChatMsgObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatMsgObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatMsgObj::CopyFrom(const ChatMsgObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatMsgObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatMsgObj::IsInitialized() const {
  return true;
}

void ChatMsgObj::Swap(ChatMsgObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatMsgObj::InternalSwap(ChatMsgObj* other) {
  using std::swap;
  text_.Swap(&other->text_);
  voice_.Swap(&other->voice_);
  url_.Swap(&other->url_);
  swap(channel_, other->channel_);
  swap(childchannel_, other->childchannel_);
  swap(targetuserid_, other->targetuserid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatMsgObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatMsgObj

// optional sint32 Channel = 1 [default = 0];
bool ChatMsgObj::has_channel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ChatMsgObj::set_has_channel() {
  _has_bits_[0] |= 0x00000008u;
}
void ChatMsgObj::clear_has_channel() {
  _has_bits_[0] &= ~0x00000008u;
}
void ChatMsgObj::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
::google::protobuf::int32 ChatMsgObj::channel() const {
  // @@protoc_insertion_point(field_get:ChatMsgObj.Channel)
  return channel_;
}
void ChatMsgObj::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:ChatMsgObj.Channel)
}

// optional string Text = 2;
bool ChatMsgObj::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChatMsgObj::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
void ChatMsgObj::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChatMsgObj::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& ChatMsgObj::text() const {
  // @@protoc_insertion_point(field_get:ChatMsgObj.Text)
  return text_.GetNoArena();
}
void ChatMsgObj::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatMsgObj.Text)
}
#if LANG_CXX11
void ChatMsgObj::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatMsgObj.Text)
}
#endif
void ChatMsgObj::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatMsgObj.Text)
}
void ChatMsgObj::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatMsgObj.Text)
}
::std::string* ChatMsgObj::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ChatMsgObj.Text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatMsgObj::release_text() {
  // @@protoc_insertion_point(field_release:ChatMsgObj.Text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChatMsgObj::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ChatMsgObj.Text)
}

// optional bytes Voice = 3;
bool ChatMsgObj::has_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ChatMsgObj::set_has_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ChatMsgObj::clear_has_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ChatMsgObj::clear_voice() {
  voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_voice();
}
const ::std::string& ChatMsgObj::voice() const {
  // @@protoc_insertion_point(field_get:ChatMsgObj.Voice)
  return voice_.GetNoArena();
}
void ChatMsgObj::set_voice(const ::std::string& value) {
  set_has_voice();
  voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatMsgObj.Voice)
}
#if LANG_CXX11
void ChatMsgObj::set_voice(::std::string&& value) {
  set_has_voice();
  voice_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatMsgObj.Voice)
}
#endif
void ChatMsgObj::set_voice(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_voice();
  voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatMsgObj.Voice)
}
void ChatMsgObj::set_voice(const void* value, size_t size) {
  set_has_voice();
  voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatMsgObj.Voice)
}
::std::string* ChatMsgObj::mutable_voice() {
  set_has_voice();
  // @@protoc_insertion_point(field_mutable:ChatMsgObj.Voice)
  return voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatMsgObj::release_voice() {
  // @@protoc_insertion_point(field_release:ChatMsgObj.Voice)
  clear_has_voice();
  return voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChatMsgObj::set_allocated_voice(::std::string* voice) {
  if (voice != NULL) {
    set_has_voice();
  } else {
    clear_has_voice();
  }
  voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voice);
  // @@protoc_insertion_point(field_set_allocated:ChatMsgObj.Voice)
}

// optional sint64 TargetUserId = 4 [default = -1];
bool ChatMsgObj::has_targetuserid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ChatMsgObj::set_has_targetuserid() {
  _has_bits_[0] |= 0x00000020u;
}
void ChatMsgObj::clear_has_targetuserid() {
  _has_bits_[0] &= ~0x00000020u;
}
void ChatMsgObj::clear_targetuserid() {
  targetuserid_ = GOOGLE_LONGLONG(-1);
  clear_has_targetuserid();
}
::google::protobuf::int64 ChatMsgObj::targetuserid() const {
  // @@protoc_insertion_point(field_get:ChatMsgObj.TargetUserId)
  return targetuserid_;
}
void ChatMsgObj::set_targetuserid(::google::protobuf::int64 value) {
  set_has_targetuserid();
  targetuserid_ = value;
  // @@protoc_insertion_point(field_set:ChatMsgObj.TargetUserId)
}

// optional bytes URL = 5;
bool ChatMsgObj::has_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ChatMsgObj::set_has_url() {
  _has_bits_[0] |= 0x00000004u;
}
void ChatMsgObj::clear_has_url() {
  _has_bits_[0] &= ~0x00000004u;
}
void ChatMsgObj::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& ChatMsgObj::url() const {
  // @@protoc_insertion_point(field_get:ChatMsgObj.URL)
  return url_.GetNoArena();
}
void ChatMsgObj::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatMsgObj.URL)
}
#if LANG_CXX11
void ChatMsgObj::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatMsgObj.URL)
}
#endif
void ChatMsgObj::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatMsgObj.URL)
}
void ChatMsgObj::set_url(const void* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatMsgObj.URL)
}
::std::string* ChatMsgObj::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:ChatMsgObj.URL)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatMsgObj::release_url() {
  // @@protoc_insertion_point(field_release:ChatMsgObj.URL)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChatMsgObj::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:ChatMsgObj.URL)
}

// optional sint32 ChildChannel = 6 [default = -1];
bool ChatMsgObj::has_childchannel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ChatMsgObj::set_has_childchannel() {
  _has_bits_[0] |= 0x00000010u;
}
void ChatMsgObj::clear_has_childchannel() {
  _has_bits_[0] &= ~0x00000010u;
}
void ChatMsgObj::clear_childchannel() {
  childchannel_ = -1;
  clear_has_childchannel();
}
::google::protobuf::int32 ChatMsgObj::childchannel() const {
  // @@protoc_insertion_point(field_get:ChatMsgObj.ChildChannel)
  return childchannel_;
}
void ChatMsgObj::set_childchannel(::google::protobuf::int32 value) {
  set_has_childchannel();
  childchannel_ = value;
  // @@protoc_insertion_point(field_set:ChatMsgObj.ChildChannel)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatUserInfoObj::kUserIdFieldNumber;
const int ChatUserInfoObj::kUserNameFieldNumber;
const int ChatUserInfoObj::kProfFieldNumber;
const int ChatUserInfoObj::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatUserInfoObj::ChatUserInfoObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatUserInfoObj)
}
ChatUserInfoObj::ChatUserInfoObj(const ChatUserInfoObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:ChatUserInfoObj)
}

void ChatUserInfoObj::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_ = GOOGLE_LONGLONG(-1);
  prof_ = -1;
  level_ = -1;
}

ChatUserInfoObj::~ChatUserInfoObj() {
  // @@protoc_insertion_point(destructor:ChatUserInfoObj)
  SharedDtor();
}

void ChatUserInfoObj::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatUserInfoObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatUserInfoObj::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatUserInfoObj& ChatUserInfoObj::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatUserInfoObj* ChatUserInfoObj::New(::google::protobuf::Arena* arena) const {
  ChatUserInfoObj* n = new ChatUserInfoObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatUserInfoObj::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatUserInfoObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    userid_ = GOOGLE_LONGLONG(-1);
    prof_ = -1;
    level_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChatUserInfoObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatUserInfoObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 UserId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string UserName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ChatUserInfoObj.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Prof = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_prof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &prof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Level = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatUserInfoObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatUserInfoObj)
  return false;
#undef DO_
}

void ChatUserInfoObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatUserInfoObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->userid(), output);
  }

  // optional string UserName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ChatUserInfoObj.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional sint32 Prof = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->prof(), output);
  }

  // optional sint32 Level = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->level(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatUserInfoObj)
}

::google::protobuf::uint8* ChatUserInfoObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatUserInfoObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 UserId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->userid(), target);
  }

  // optional string UserName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ChatUserInfoObj.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional sint32 Prof = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->prof(), target);
  }

  // optional sint32 Level = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->level(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatUserInfoObj)
  return target;
}

size_t ChatUserInfoObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatUserInfoObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string UserName = 2;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional sint64 UserId = 1 [default = -1];
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->userid());
    }

    // optional sint32 Prof = 3 [default = -1];
    if (has_prof()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->prof());
    }

    // optional sint32 Level = 4 [default = -1];
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->level());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatUserInfoObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatUserInfoObj)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatUserInfoObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatUserInfoObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatUserInfoObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatUserInfoObj)
    MergeFrom(*source);
  }
}

void ChatUserInfoObj::MergeFrom(const ChatUserInfoObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatUserInfoObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000004u) {
      prof_ = from.prof_;
    }
    if (cached_has_bits & 0x00000008u) {
      level_ = from.level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChatUserInfoObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatUserInfoObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatUserInfoObj::CopyFrom(const ChatUserInfoObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatUserInfoObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatUserInfoObj::IsInitialized() const {
  return true;
}

void ChatUserInfoObj::Swap(ChatUserInfoObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatUserInfoObj::InternalSwap(ChatUserInfoObj* other) {
  using std::swap;
  username_.Swap(&other->username_);
  swap(userid_, other->userid_);
  swap(prof_, other->prof_);
  swap(level_, other->level_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatUserInfoObj::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatUserInfoObj

// optional sint64 UserId = 1 [default = -1];
bool ChatUserInfoObj::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ChatUserInfoObj::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
void ChatUserInfoObj::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
void ChatUserInfoObj::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
::google::protobuf::int64 ChatUserInfoObj::userid() const {
  // @@protoc_insertion_point(field_get:ChatUserInfoObj.UserId)
  return userid_;
}
void ChatUserInfoObj::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:ChatUserInfoObj.UserId)
}

// optional string UserName = 2;
bool ChatUserInfoObj::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChatUserInfoObj::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void ChatUserInfoObj::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChatUserInfoObj::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& ChatUserInfoObj::username() const {
  // @@protoc_insertion_point(field_get:ChatUserInfoObj.UserName)
  return username_.GetNoArena();
}
void ChatUserInfoObj::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatUserInfoObj.UserName)
}
#if LANG_CXX11
void ChatUserInfoObj::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatUserInfoObj.UserName)
}
#endif
void ChatUserInfoObj::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatUserInfoObj.UserName)
}
void ChatUserInfoObj::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatUserInfoObj.UserName)
}
::std::string* ChatUserInfoObj::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:ChatUserInfoObj.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatUserInfoObj::release_username() {
  // @@protoc_insertion_point(field_release:ChatUserInfoObj.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChatUserInfoObj::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:ChatUserInfoObj.UserName)
}

// optional sint32 Prof = 3 [default = -1];
bool ChatUserInfoObj::has_prof() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ChatUserInfoObj::set_has_prof() {
  _has_bits_[0] |= 0x00000004u;
}
void ChatUserInfoObj::clear_has_prof() {
  _has_bits_[0] &= ~0x00000004u;
}
void ChatUserInfoObj::clear_prof() {
  prof_ = -1;
  clear_has_prof();
}
::google::protobuf::int32 ChatUserInfoObj::prof() const {
  // @@protoc_insertion_point(field_get:ChatUserInfoObj.Prof)
  return prof_;
}
void ChatUserInfoObj::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
  // @@protoc_insertion_point(field_set:ChatUserInfoObj.Prof)
}

// optional sint32 Level = 4 [default = -1];
bool ChatUserInfoObj::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ChatUserInfoObj::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
void ChatUserInfoObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
void ChatUserInfoObj::clear_level() {
  level_ = -1;
  clear_has_level();
}
::google::protobuf::int32 ChatUserInfoObj::level() const {
  // @@protoc_insertion_point(field_get:ChatUserInfoObj.Level)
  return level_;
}
void ChatUserInfoObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:ChatUserInfoObj.Level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatNetData::kHyperlinkListFieldNumber;
const int ChatNetData::kTextFieldNumber;
const int ChatNetData::kUserInfoFieldNumber;
const int ChatNetData::kChannelFieldNumber;
const int ChatNetData::kChildChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatNetData::ChatNetData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PublicStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatNetData)
}
ChatNetData::ChatNetData(const ChatNetData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      hyperlinklist_(from.hyperlinklist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_userinfo()) {
    userinfo_ = new ::ChatUserInfoObj(*from.userinfo_);
  } else {
    userinfo_ = NULL;
  }
  ::memcpy(&channel_, &from.channel_,
    static_cast<size_t>(reinterpret_cast<char*>(&childchannel_) -
    reinterpret_cast<char*>(&channel_)) + sizeof(childchannel_));
  // @@protoc_insertion_point(copy_constructor:ChatNetData)
}

void ChatNetData::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&userinfo_)) + sizeof(channel_));
  childchannel_ = -1;
}

ChatNetData::~ChatNetData() {
  // @@protoc_insertion_point(destructor:ChatNetData)
  SharedDtor();
}

void ChatNetData::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete userinfo_;
}

void ChatNetData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatNetData::descriptor() {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatNetData& ChatNetData::default_instance() {
  protobuf_PublicStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatNetData* ChatNetData::New(::google::protobuf::Arena* arena) const {
  ChatNetData* n = new ChatNetData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatNetData::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatNetData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hyperlinklist_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*text_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(userinfo_ != NULL);
      userinfo_->::ChatUserInfoObj::Clear();
    }
  }
  if (cached_has_bits & 12u) {
    channel_ = 0;
    childchannel_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChatNetData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatNetData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ChatHyperLink HyperlinkList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_hyperlinklist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ChatNetData.Text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .ChatUserInfoObj UserInfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Channel = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_channel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ChildChannel = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_childchannel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &childchannel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatNetData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatNetData)
  return false;
#undef DO_
}

void ChatNetData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatNetData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ChatHyperLink HyperlinkList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hyperlinklist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hyperlinklist(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string Text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ChatNetData.Text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // optional .ChatUserInfoObj UserInfo = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->userinfo_, output);
  }

  // optional sint32 Channel = 4 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->channel(), output);
  }

  // optional sint32 ChildChannel = 5 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->childchannel(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatNetData)
}

::google::protobuf::uint8* ChatNetData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatNetData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ChatHyperLink HyperlinkList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hyperlinklist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->hyperlinklist(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string Text = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ChatNetData.Text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // optional .ChatUserInfoObj UserInfo = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->userinfo_, deterministic, target);
  }

  // optional sint32 Channel = 4 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->channel(), target);
  }

  // optional sint32 ChildChannel = 5 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->childchannel(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatNetData)
  return target;
}

size_t ChatNetData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatNetData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ChatHyperLink HyperlinkList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->hyperlinklist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hyperlinklist(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string Text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional .ChatUserInfoObj UserInfo = 3;
    if (has_userinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->userinfo_);
    }

    // optional sint32 Channel = 4 [default = 0];
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->channel());
    }

    // optional sint32 ChildChannel = 5 [default = -1];
    if (has_childchannel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->childchannel());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatNetData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatNetData)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatNetData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatNetData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatNetData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatNetData)
    MergeFrom(*source);
  }
}

void ChatNetData::MergeFrom(const ChatNetData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatNetData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hyperlinklist_.MergeFrom(from.hyperlinklist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_userinfo()->::ChatUserInfoObj::MergeFrom(from.userinfo());
    }
    if (cached_has_bits & 0x00000004u) {
      channel_ = from.channel_;
    }
    if (cached_has_bits & 0x00000008u) {
      childchannel_ = from.childchannel_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChatNetData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatNetData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatNetData::CopyFrom(const ChatNetData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatNetData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatNetData::IsInitialized() const {
  return true;
}

void ChatNetData::Swap(ChatNetData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatNetData::InternalSwap(ChatNetData* other) {
  using std::swap;
  hyperlinklist_.InternalSwap(&other->hyperlinklist_);
  text_.Swap(&other->text_);
  swap(userinfo_, other->userinfo_);
  swap(channel_, other->channel_);
  swap(childchannel_, other->childchannel_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatNetData::GetMetadata() const {
  protobuf_PublicStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_PublicStruct_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatNetData

// repeated .ChatHyperLink HyperlinkList = 1;
int ChatNetData::hyperlinklist_size() const {
  return hyperlinklist_.size();
}
void ChatNetData::clear_hyperlinklist() {
  hyperlinklist_.Clear();
}
const ::ChatHyperLink& ChatNetData::hyperlinklist(int index) const {
  // @@protoc_insertion_point(field_get:ChatNetData.HyperlinkList)
  return hyperlinklist_.Get(index);
}
::ChatHyperLink* ChatNetData::mutable_hyperlinklist(int index) {
  // @@protoc_insertion_point(field_mutable:ChatNetData.HyperlinkList)
  return hyperlinklist_.Mutable(index);
}
::ChatHyperLink* ChatNetData::add_hyperlinklist() {
  // @@protoc_insertion_point(field_add:ChatNetData.HyperlinkList)
  return hyperlinklist_.Add();
}
::google::protobuf::RepeatedPtrField< ::ChatHyperLink >*
ChatNetData::mutable_hyperlinklist() {
  // @@protoc_insertion_point(field_mutable_list:ChatNetData.HyperlinkList)
  return &hyperlinklist_;
}
const ::google::protobuf::RepeatedPtrField< ::ChatHyperLink >&
ChatNetData::hyperlinklist() const {
  // @@protoc_insertion_point(field_list:ChatNetData.HyperlinkList)
  return hyperlinklist_;
}

// optional string Text = 2;
bool ChatNetData::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChatNetData::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
void ChatNetData::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChatNetData::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& ChatNetData::text() const {
  // @@protoc_insertion_point(field_get:ChatNetData.Text)
  return text_.GetNoArena();
}
void ChatNetData::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatNetData.Text)
}
#if LANG_CXX11
void ChatNetData::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatNetData.Text)
}
#endif
void ChatNetData::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatNetData.Text)
}
void ChatNetData::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatNetData.Text)
}
::std::string* ChatNetData::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:ChatNetData.Text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatNetData::release_text() {
  // @@protoc_insertion_point(field_release:ChatNetData.Text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChatNetData::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:ChatNetData.Text)
}

// optional .ChatUserInfoObj UserInfo = 3;
bool ChatNetData::has_userinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ChatNetData::set_has_userinfo() {
  _has_bits_[0] |= 0x00000002u;
}
void ChatNetData::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
void ChatNetData::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::ChatUserInfoObj::Clear();
  clear_has_userinfo();
}
const ::ChatUserInfoObj& ChatNetData::userinfo() const {
  const ::ChatUserInfoObj* p = userinfo_;
  // @@protoc_insertion_point(field_get:ChatNetData.UserInfo)
  return p != NULL ? *p : *reinterpret_cast<const ::ChatUserInfoObj*>(
      &::_ChatUserInfoObj_default_instance_);
}
::ChatUserInfoObj* ChatNetData::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) {
    userinfo_ = new ::ChatUserInfoObj;
  }
  // @@protoc_insertion_point(field_mutable:ChatNetData.UserInfo)
  return userinfo_;
}
::ChatUserInfoObj* ChatNetData::release_userinfo() {
  // @@protoc_insertion_point(field_release:ChatNetData.UserInfo)
  clear_has_userinfo();
  ::ChatUserInfoObj* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
void ChatNetData::set_allocated_userinfo(::ChatUserInfoObj* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:ChatNetData.UserInfo)
}

// optional sint32 Channel = 4 [default = 0];
bool ChatNetData::has_channel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ChatNetData::set_has_channel() {
  _has_bits_[0] |= 0x00000004u;
}
void ChatNetData::clear_has_channel() {
  _has_bits_[0] &= ~0x00000004u;
}
void ChatNetData::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
::google::protobuf::int32 ChatNetData::channel() const {
  // @@protoc_insertion_point(field_get:ChatNetData.Channel)
  return channel_;
}
void ChatNetData::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:ChatNetData.Channel)
}

// optional sint32 ChildChannel = 5 [default = -1];
bool ChatNetData::has_childchannel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ChatNetData::set_has_childchannel() {
  _has_bits_[0] |= 0x00000008u;
}
void ChatNetData::clear_has_childchannel() {
  _has_bits_[0] &= ~0x00000008u;
}
void ChatNetData::clear_childchannel() {
  childchannel_ = -1;
  clear_has_childchannel();
}
::google::protobuf::int32 ChatNetData::childchannel() const {
  // @@protoc_insertion_point(field_get:ChatNetData.ChildChannel)
  return childchannel_;
}
void ChatNetData::set_childchannel(::google::protobuf::int32 value) {
  set_has_childchannel();
  childchannel_ = value;
  // @@protoc_insertion_point(field_set:ChatNetData.ChildChannel)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
