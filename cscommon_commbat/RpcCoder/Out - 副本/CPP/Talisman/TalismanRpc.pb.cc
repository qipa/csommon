// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TalismanRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "TalismanRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class TalismanRpcSyncDataAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TalismanRpcSyncDataAsk>
     _instance;
} _TalismanRpcSyncDataAsk_default_instance_;
class TalismanRpcSyncDataReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TalismanRpcSyncDataReply>
     _instance;
} _TalismanRpcSyncDataReply_default_instance_;
class TalismanRpcUpgradeAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TalismanRpcUpgradeAsk>
     _instance;
} _TalismanRpcUpgradeAsk_default_instance_;
class TalismanRpcUpgradeReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TalismanRpcUpgradeReply>
     _instance;
} _TalismanRpcUpgradeReply_default_instance_;
class TalismanRpcActiveAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TalismanRpcActiveAsk>
     _instance;
} _TalismanRpcActiveAsk_default_instance_;
class TalismanRpcActiveReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TalismanRpcActiveReply>
     _instance;
} _TalismanRpcActiveReply_default_instance_;

namespace protobuf_TalismanRpc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanRpcSyncDataAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanRpcSyncDataAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanRpcSyncDataReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanRpcSyncDataReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanRpcSyncDataReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanRpcUpgradeAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanRpcUpgradeAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanRpcUpgradeAsk, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanRpcUpgradeAsk, type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanRpcUpgradeReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanRpcUpgradeReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanRpcUpgradeReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanRpcUpgradeReply, id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanRpcActiveAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanRpcActiveAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanRpcActiveAsk, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanRpcActiveReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanRpcActiveReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanRpcActiveReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TalismanRpcActiveReply, id_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(TalismanRpcSyncDataAsk)},
  { 5, 11, sizeof(TalismanRpcSyncDataReply)},
  { 12, 19, sizeof(TalismanRpcUpgradeAsk)},
  { 21, 28, sizeof(TalismanRpcUpgradeReply)},
  { 30, 36, sizeof(TalismanRpcActiveAsk)},
  { 37, 44, sizeof(TalismanRpcActiveReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TalismanRpcSyncDataAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TalismanRpcSyncDataReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TalismanRpcUpgradeAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TalismanRpcUpgradeReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TalismanRpcActiveAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TalismanRpcActiveReply_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "TalismanRpc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _TalismanRpcSyncDataAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TalismanRpcSyncDataAsk_default_instance_);_TalismanRpcSyncDataReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TalismanRpcSyncDataReply_default_instance_);_TalismanRpcUpgradeAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TalismanRpcUpgradeAsk_default_instance_);_TalismanRpcUpgradeReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TalismanRpcUpgradeReply_default_instance_);_TalismanRpcActiveAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TalismanRpcActiveAsk_default_instance_);_TalismanRpcActiveReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TalismanRpcActiveReply_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021TalismanRpc.proto\032\022PublicStruct.proto\""
      "\030\n\026TalismanRpcSyncDataAsk\"1\n\030TalismanRpc"
      "SyncDataReply\022\025\n\006Result\030\001 \001(\021:\005-9999\"9\n\025"
      "TalismanRpcUpgradeAsk\022\016\n\002ID\030\001 \001(\021:\002-1\022\020\n"
      "\004Type\030\003 \001(\021:\002-1\"@\n\027TalismanRpcUpgradeRep"
      "ly\022\025\n\006Result\030\001 \001(\021:\005-9999\022\016\n\002ID\030\002 \001(\021:\002-"
      "1\"&\n\024TalismanRpcActiveAsk\022\016\n\002ID\030\001 \001(\021:\002-"
      "1\"\?\n\026TalismanRpcActiveReply\022\025\n\006Result\030\001 "
      "\001(\021:\005-9999\022\016\n\002ID\030\002 \001(\021:\002-1"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 346);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TalismanRpc.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_TalismanRpc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TalismanRpcSyncDataAsk::TalismanRpcSyncDataAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TalismanRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TalismanRpcSyncDataAsk)
}
TalismanRpcSyncDataAsk::TalismanRpcSyncDataAsk(const TalismanRpcSyncDataAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TalismanRpcSyncDataAsk)
}

void TalismanRpcSyncDataAsk::SharedCtor() {
  _cached_size_ = 0;
}

TalismanRpcSyncDataAsk::~TalismanRpcSyncDataAsk() {
  // @@protoc_insertion_point(destructor:TalismanRpcSyncDataAsk)
  SharedDtor();
}

void TalismanRpcSyncDataAsk::SharedDtor() {
}

void TalismanRpcSyncDataAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TalismanRpcSyncDataAsk::descriptor() {
  protobuf_TalismanRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TalismanRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TalismanRpcSyncDataAsk& TalismanRpcSyncDataAsk::default_instance() {
  protobuf_TalismanRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

TalismanRpcSyncDataAsk* TalismanRpcSyncDataAsk::New(::google::protobuf::Arena* arena) const {
  TalismanRpcSyncDataAsk* n = new TalismanRpcSyncDataAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TalismanRpcSyncDataAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:TalismanRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TalismanRpcSyncDataAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TalismanRpcSyncDataAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:TalismanRpcSyncDataAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TalismanRpcSyncDataAsk)
  return false;
#undef DO_
}

void TalismanRpcSyncDataAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TalismanRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TalismanRpcSyncDataAsk)
}

::google::protobuf::uint8* TalismanRpcSyncDataAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TalismanRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TalismanRpcSyncDataAsk)
  return target;
}

size_t TalismanRpcSyncDataAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TalismanRpcSyncDataAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TalismanRpcSyncDataAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TalismanRpcSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const TalismanRpcSyncDataAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TalismanRpcSyncDataAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TalismanRpcSyncDataAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TalismanRpcSyncDataAsk)
    MergeFrom(*source);
  }
}

void TalismanRpcSyncDataAsk::MergeFrom(const TalismanRpcSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TalismanRpcSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TalismanRpcSyncDataAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TalismanRpcSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TalismanRpcSyncDataAsk::CopyFrom(const TalismanRpcSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TalismanRpcSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TalismanRpcSyncDataAsk::IsInitialized() const {
  return true;
}

void TalismanRpcSyncDataAsk::Swap(TalismanRpcSyncDataAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TalismanRpcSyncDataAsk::InternalSwap(TalismanRpcSyncDataAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TalismanRpcSyncDataAsk::GetMetadata() const {
  protobuf_TalismanRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TalismanRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TalismanRpcSyncDataAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TalismanRpcSyncDataReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TalismanRpcSyncDataReply::TalismanRpcSyncDataReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TalismanRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TalismanRpcSyncDataReply)
}
TalismanRpcSyncDataReply::TalismanRpcSyncDataReply(const TalismanRpcSyncDataReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:TalismanRpcSyncDataReply)
}

void TalismanRpcSyncDataReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

TalismanRpcSyncDataReply::~TalismanRpcSyncDataReply() {
  // @@protoc_insertion_point(destructor:TalismanRpcSyncDataReply)
  SharedDtor();
}

void TalismanRpcSyncDataReply::SharedDtor() {
}

void TalismanRpcSyncDataReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TalismanRpcSyncDataReply::descriptor() {
  protobuf_TalismanRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TalismanRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TalismanRpcSyncDataReply& TalismanRpcSyncDataReply::default_instance() {
  protobuf_TalismanRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

TalismanRpcSyncDataReply* TalismanRpcSyncDataReply::New(::google::protobuf::Arena* arena) const {
  TalismanRpcSyncDataReply* n = new TalismanRpcSyncDataReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TalismanRpcSyncDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:TalismanRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TalismanRpcSyncDataReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TalismanRpcSyncDataReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TalismanRpcSyncDataReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TalismanRpcSyncDataReply)
  return false;
#undef DO_
}

void TalismanRpcSyncDataReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TalismanRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TalismanRpcSyncDataReply)
}

::google::protobuf::uint8* TalismanRpcSyncDataReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TalismanRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TalismanRpcSyncDataReply)
  return target;
}

size_t TalismanRpcSyncDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TalismanRpcSyncDataReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TalismanRpcSyncDataReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TalismanRpcSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  const TalismanRpcSyncDataReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TalismanRpcSyncDataReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TalismanRpcSyncDataReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TalismanRpcSyncDataReply)
    MergeFrom(*source);
  }
}

void TalismanRpcSyncDataReply::MergeFrom(const TalismanRpcSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TalismanRpcSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void TalismanRpcSyncDataReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TalismanRpcSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TalismanRpcSyncDataReply::CopyFrom(const TalismanRpcSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TalismanRpcSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TalismanRpcSyncDataReply::IsInitialized() const {
  return true;
}

void TalismanRpcSyncDataReply::Swap(TalismanRpcSyncDataReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TalismanRpcSyncDataReply::InternalSwap(TalismanRpcSyncDataReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TalismanRpcSyncDataReply::GetMetadata() const {
  protobuf_TalismanRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TalismanRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TalismanRpcSyncDataReply

// optional sint32 Result = 1 [default = -9999];
bool TalismanRpcSyncDataReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TalismanRpcSyncDataReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void TalismanRpcSyncDataReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void TalismanRpcSyncDataReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 TalismanRpcSyncDataReply::result() const {
  // @@protoc_insertion_point(field_get:TalismanRpcSyncDataReply.Result)
  return result_;
}
void TalismanRpcSyncDataReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:TalismanRpcSyncDataReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TalismanRpcUpgradeAsk::kIDFieldNumber;
const int TalismanRpcUpgradeAsk::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TalismanRpcUpgradeAsk::TalismanRpcUpgradeAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TalismanRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TalismanRpcUpgradeAsk)
}
TalismanRpcUpgradeAsk::TalismanRpcUpgradeAsk(const TalismanRpcUpgradeAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:TalismanRpcUpgradeAsk)
}

void TalismanRpcUpgradeAsk::SharedCtor() {
  _cached_size_ = 0;
  id_ = -1;
  type_ = -1;
}

TalismanRpcUpgradeAsk::~TalismanRpcUpgradeAsk() {
  // @@protoc_insertion_point(destructor:TalismanRpcUpgradeAsk)
  SharedDtor();
}

void TalismanRpcUpgradeAsk::SharedDtor() {
}

void TalismanRpcUpgradeAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TalismanRpcUpgradeAsk::descriptor() {
  protobuf_TalismanRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TalismanRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TalismanRpcUpgradeAsk& TalismanRpcUpgradeAsk::default_instance() {
  protobuf_TalismanRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

TalismanRpcUpgradeAsk* TalismanRpcUpgradeAsk::New(::google::protobuf::Arena* arena) const {
  TalismanRpcUpgradeAsk* n = new TalismanRpcUpgradeAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TalismanRpcUpgradeAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:TalismanRpcUpgradeAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    id_ = -1;
    type_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TalismanRpcUpgradeAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TalismanRpcUpgradeAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 ID = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Type = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TalismanRpcUpgradeAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TalismanRpcUpgradeAsk)
  return false;
#undef DO_
}

void TalismanRpcUpgradeAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TalismanRpcUpgradeAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ID = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->id(), output);
  }

  // optional sint32 Type = 3 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TalismanRpcUpgradeAsk)
}

::google::protobuf::uint8* TalismanRpcUpgradeAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TalismanRpcUpgradeAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ID = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->id(), target);
  }

  // optional sint32 Type = 3 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TalismanRpcUpgradeAsk)
  return target;
}

size_t TalismanRpcUpgradeAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TalismanRpcUpgradeAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 ID = 1 [default = -1];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->id());
    }

    // optional sint32 Type = 3 [default = -1];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TalismanRpcUpgradeAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TalismanRpcUpgradeAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const TalismanRpcUpgradeAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TalismanRpcUpgradeAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TalismanRpcUpgradeAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TalismanRpcUpgradeAsk)
    MergeFrom(*source);
  }
}

void TalismanRpcUpgradeAsk::MergeFrom(const TalismanRpcUpgradeAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TalismanRpcUpgradeAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TalismanRpcUpgradeAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TalismanRpcUpgradeAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TalismanRpcUpgradeAsk::CopyFrom(const TalismanRpcUpgradeAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TalismanRpcUpgradeAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TalismanRpcUpgradeAsk::IsInitialized() const {
  return true;
}

void TalismanRpcUpgradeAsk::Swap(TalismanRpcUpgradeAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TalismanRpcUpgradeAsk::InternalSwap(TalismanRpcUpgradeAsk* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TalismanRpcUpgradeAsk::GetMetadata() const {
  protobuf_TalismanRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TalismanRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TalismanRpcUpgradeAsk

// optional sint32 ID = 1 [default = -1];
bool TalismanRpcUpgradeAsk::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TalismanRpcUpgradeAsk::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void TalismanRpcUpgradeAsk::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void TalismanRpcUpgradeAsk::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 TalismanRpcUpgradeAsk::id() const {
  // @@protoc_insertion_point(field_get:TalismanRpcUpgradeAsk.ID)
  return id_;
}
void TalismanRpcUpgradeAsk::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TalismanRpcUpgradeAsk.ID)
}

// optional sint32 Type = 3 [default = -1];
bool TalismanRpcUpgradeAsk::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TalismanRpcUpgradeAsk::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void TalismanRpcUpgradeAsk::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void TalismanRpcUpgradeAsk::clear_type() {
  type_ = -1;
  clear_has_type();
}
::google::protobuf::int32 TalismanRpcUpgradeAsk::type() const {
  // @@protoc_insertion_point(field_get:TalismanRpcUpgradeAsk.Type)
  return type_;
}
void TalismanRpcUpgradeAsk::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:TalismanRpcUpgradeAsk.Type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TalismanRpcUpgradeReply::kResultFieldNumber;
const int TalismanRpcUpgradeReply::kIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TalismanRpcUpgradeReply::TalismanRpcUpgradeReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TalismanRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TalismanRpcUpgradeReply)
}
TalismanRpcUpgradeReply::TalismanRpcUpgradeReply(const TalismanRpcUpgradeReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&result_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:TalismanRpcUpgradeReply)
}

void TalismanRpcUpgradeReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  id_ = -1;
}

TalismanRpcUpgradeReply::~TalismanRpcUpgradeReply() {
  // @@protoc_insertion_point(destructor:TalismanRpcUpgradeReply)
  SharedDtor();
}

void TalismanRpcUpgradeReply::SharedDtor() {
}

void TalismanRpcUpgradeReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TalismanRpcUpgradeReply::descriptor() {
  protobuf_TalismanRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TalismanRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TalismanRpcUpgradeReply& TalismanRpcUpgradeReply::default_instance() {
  protobuf_TalismanRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

TalismanRpcUpgradeReply* TalismanRpcUpgradeReply::New(::google::protobuf::Arena* arena) const {
  TalismanRpcUpgradeReply* n = new TalismanRpcUpgradeReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TalismanRpcUpgradeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:TalismanRpcUpgradeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    result_ = -9999;
    id_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TalismanRpcUpgradeReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TalismanRpcUpgradeReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ID = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TalismanRpcUpgradeReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TalismanRpcUpgradeReply)
  return false;
#undef DO_
}

void TalismanRpcUpgradeReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TalismanRpcUpgradeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 ID = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TalismanRpcUpgradeReply)
}

::google::protobuf::uint8* TalismanRpcUpgradeReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TalismanRpcUpgradeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 ID = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TalismanRpcUpgradeReply)
  return target;
}

size_t TalismanRpcUpgradeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TalismanRpcUpgradeReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 ID = 2 [default = -1];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TalismanRpcUpgradeReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TalismanRpcUpgradeReply)
  GOOGLE_DCHECK_NE(&from, this);
  const TalismanRpcUpgradeReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TalismanRpcUpgradeReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TalismanRpcUpgradeReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TalismanRpcUpgradeReply)
    MergeFrom(*source);
  }
}

void TalismanRpcUpgradeReply::MergeFrom(const TalismanRpcUpgradeReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TalismanRpcUpgradeReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TalismanRpcUpgradeReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TalismanRpcUpgradeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TalismanRpcUpgradeReply::CopyFrom(const TalismanRpcUpgradeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TalismanRpcUpgradeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TalismanRpcUpgradeReply::IsInitialized() const {
  return true;
}

void TalismanRpcUpgradeReply::Swap(TalismanRpcUpgradeReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TalismanRpcUpgradeReply::InternalSwap(TalismanRpcUpgradeReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TalismanRpcUpgradeReply::GetMetadata() const {
  protobuf_TalismanRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TalismanRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TalismanRpcUpgradeReply

// optional sint32 Result = 1 [default = -9999];
bool TalismanRpcUpgradeReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TalismanRpcUpgradeReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void TalismanRpcUpgradeReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void TalismanRpcUpgradeReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 TalismanRpcUpgradeReply::result() const {
  // @@protoc_insertion_point(field_get:TalismanRpcUpgradeReply.Result)
  return result_;
}
void TalismanRpcUpgradeReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:TalismanRpcUpgradeReply.Result)
}

// optional sint32 ID = 2 [default = -1];
bool TalismanRpcUpgradeReply::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TalismanRpcUpgradeReply::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void TalismanRpcUpgradeReply::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void TalismanRpcUpgradeReply::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 TalismanRpcUpgradeReply::id() const {
  // @@protoc_insertion_point(field_get:TalismanRpcUpgradeReply.ID)
  return id_;
}
void TalismanRpcUpgradeReply::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TalismanRpcUpgradeReply.ID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TalismanRpcActiveAsk::kIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TalismanRpcActiveAsk::TalismanRpcActiveAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TalismanRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TalismanRpcActiveAsk)
}
TalismanRpcActiveAsk::TalismanRpcActiveAsk(const TalismanRpcActiveAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:TalismanRpcActiveAsk)
}

void TalismanRpcActiveAsk::SharedCtor() {
  _cached_size_ = 0;
  id_ = -1;
}

TalismanRpcActiveAsk::~TalismanRpcActiveAsk() {
  // @@protoc_insertion_point(destructor:TalismanRpcActiveAsk)
  SharedDtor();
}

void TalismanRpcActiveAsk::SharedDtor() {
}

void TalismanRpcActiveAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TalismanRpcActiveAsk::descriptor() {
  protobuf_TalismanRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TalismanRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TalismanRpcActiveAsk& TalismanRpcActiveAsk::default_instance() {
  protobuf_TalismanRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

TalismanRpcActiveAsk* TalismanRpcActiveAsk::New(::google::protobuf::Arena* arena) const {
  TalismanRpcActiveAsk* n = new TalismanRpcActiveAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TalismanRpcActiveAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:TalismanRpcActiveAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TalismanRpcActiveAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TalismanRpcActiveAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 ID = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TalismanRpcActiveAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TalismanRpcActiveAsk)
  return false;
#undef DO_
}

void TalismanRpcActiveAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TalismanRpcActiveAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ID = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TalismanRpcActiveAsk)
}

::google::protobuf::uint8* TalismanRpcActiveAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TalismanRpcActiveAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ID = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TalismanRpcActiveAsk)
  return target;
}

size_t TalismanRpcActiveAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TalismanRpcActiveAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 ID = 1 [default = -1];
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TalismanRpcActiveAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TalismanRpcActiveAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const TalismanRpcActiveAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TalismanRpcActiveAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TalismanRpcActiveAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TalismanRpcActiveAsk)
    MergeFrom(*source);
  }
}

void TalismanRpcActiveAsk::MergeFrom(const TalismanRpcActiveAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TalismanRpcActiveAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void TalismanRpcActiveAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TalismanRpcActiveAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TalismanRpcActiveAsk::CopyFrom(const TalismanRpcActiveAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TalismanRpcActiveAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TalismanRpcActiveAsk::IsInitialized() const {
  return true;
}

void TalismanRpcActiveAsk::Swap(TalismanRpcActiveAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TalismanRpcActiveAsk::InternalSwap(TalismanRpcActiveAsk* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TalismanRpcActiveAsk::GetMetadata() const {
  protobuf_TalismanRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TalismanRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TalismanRpcActiveAsk

// optional sint32 ID = 1 [default = -1];
bool TalismanRpcActiveAsk::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TalismanRpcActiveAsk::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void TalismanRpcActiveAsk::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void TalismanRpcActiveAsk::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 TalismanRpcActiveAsk::id() const {
  // @@protoc_insertion_point(field_get:TalismanRpcActiveAsk.ID)
  return id_;
}
void TalismanRpcActiveAsk::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TalismanRpcActiveAsk.ID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TalismanRpcActiveReply::kResultFieldNumber;
const int TalismanRpcActiveReply::kIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TalismanRpcActiveReply::TalismanRpcActiveReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TalismanRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TalismanRpcActiveReply)
}
TalismanRpcActiveReply::TalismanRpcActiveReply(const TalismanRpcActiveReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&result_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:TalismanRpcActiveReply)
}

void TalismanRpcActiveReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  id_ = -1;
}

TalismanRpcActiveReply::~TalismanRpcActiveReply() {
  // @@protoc_insertion_point(destructor:TalismanRpcActiveReply)
  SharedDtor();
}

void TalismanRpcActiveReply::SharedDtor() {
}

void TalismanRpcActiveReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TalismanRpcActiveReply::descriptor() {
  protobuf_TalismanRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TalismanRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TalismanRpcActiveReply& TalismanRpcActiveReply::default_instance() {
  protobuf_TalismanRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

TalismanRpcActiveReply* TalismanRpcActiveReply::New(::google::protobuf::Arena* arena) const {
  TalismanRpcActiveReply* n = new TalismanRpcActiveReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TalismanRpcActiveReply::Clear() {
// @@protoc_insertion_point(message_clear_start:TalismanRpcActiveReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    result_ = -9999;
    id_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TalismanRpcActiveReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TalismanRpcActiveReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ID = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TalismanRpcActiveReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TalismanRpcActiveReply)
  return false;
#undef DO_
}

void TalismanRpcActiveReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TalismanRpcActiveReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 ID = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TalismanRpcActiveReply)
}

::google::protobuf::uint8* TalismanRpcActiveReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TalismanRpcActiveReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 ID = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TalismanRpcActiveReply)
  return target;
}

size_t TalismanRpcActiveReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TalismanRpcActiveReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 ID = 2 [default = -1];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TalismanRpcActiveReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TalismanRpcActiveReply)
  GOOGLE_DCHECK_NE(&from, this);
  const TalismanRpcActiveReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TalismanRpcActiveReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TalismanRpcActiveReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TalismanRpcActiveReply)
    MergeFrom(*source);
  }
}

void TalismanRpcActiveReply::MergeFrom(const TalismanRpcActiveReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TalismanRpcActiveReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TalismanRpcActiveReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TalismanRpcActiveReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TalismanRpcActiveReply::CopyFrom(const TalismanRpcActiveReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TalismanRpcActiveReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TalismanRpcActiveReply::IsInitialized() const {
  return true;
}

void TalismanRpcActiveReply::Swap(TalismanRpcActiveReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TalismanRpcActiveReply::InternalSwap(TalismanRpcActiveReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TalismanRpcActiveReply::GetMetadata() const {
  protobuf_TalismanRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TalismanRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TalismanRpcActiveReply

// optional sint32 Result = 1 [default = -9999];
bool TalismanRpcActiveReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TalismanRpcActiveReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void TalismanRpcActiveReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void TalismanRpcActiveReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 TalismanRpcActiveReply::result() const {
  // @@protoc_insertion_point(field_get:TalismanRpcActiveReply.Result)
  return result_;
}
void TalismanRpcActiveReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:TalismanRpcActiveReply.Result)
}

// optional sint32 ID = 2 [default = -1];
bool TalismanRpcActiveReply::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TalismanRpcActiveReply::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void TalismanRpcActiveReply::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void TalismanRpcActiveReply::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 TalismanRpcActiveReply::id() const {
  // @@protoc_insertion_point(field_get:TalismanRpcActiveReply.ID)
  return id_;
}
void TalismanRpcActiveReply::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TalismanRpcActiveReply.ID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
