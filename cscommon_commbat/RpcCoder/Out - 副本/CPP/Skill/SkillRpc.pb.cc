// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SkillRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SkillRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class SkillRpcSyncDataAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcSyncDataAsk>
     _instance;
} _SkillRpcSyncDataAsk_default_instance_;
class SkillRpcSyncDataReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcSyncDataReply>
     _instance;
} _SkillRpcSyncDataReply_default_instance_;
class SkillRpcLearnAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcLearnAsk>
     _instance;
} _SkillRpcLearnAsk_default_instance_;
class SkillRpcLearnReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcLearnReply>
     _instance;
} _SkillRpcLearnReply_default_instance_;
class SkillRpcLvUpAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcLvUpAsk>
     _instance;
} _SkillRpcLvUpAsk_default_instance_;
class SkillRpcLvUpReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcLvUpReply>
     _instance;
} _SkillRpcLvUpReply_default_instance_;
class SkillRpcChangeShortcutAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcChangeShortcutAsk>
     _instance;
} _SkillRpcChangeShortcutAsk_default_instance_;
class SkillRpcChangeShortcutReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcChangeShortcutReply>
     _instance;
} _SkillRpcChangeShortcutReply_default_instance_;
class SkillRpcUseShortcutAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcUseShortcutAsk>
     _instance;
} _SkillRpcUseShortcutAsk_default_instance_;
class SkillRpcUseShortcutReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcUseShortcutReply>
     _instance;
} _SkillRpcUseShortcutReply_default_instance_;
class SkillRpcOneKeyLvUpAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcOneKeyLvUpAsk>
     _instance;
} _SkillRpcOneKeyLvUpAsk_default_instance_;
class SkillRpcOneKeyLvUpReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcOneKeyLvUpReply>
     _instance;
} _SkillRpcOneKeyLvUpReply_default_instance_;
class SkillRpcTalentChangeSkillAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcTalentChangeSkillAsk>
     _instance;
} _SkillRpcTalentChangeSkillAsk_default_instance_;
class SkillRpcTalentChangeSkillReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcTalentChangeSkillReply>
     _instance;
} _SkillRpcTalentChangeSkillReply_default_instance_;
class SkillRpcTalentResetAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcTalentResetAsk>
     _instance;
} _SkillRpcTalentResetAsk_default_instance_;
class SkillRpcTalentResetReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcTalentResetReply>
     _instance;
} _SkillRpcTalentResetReply_default_instance_;
class SkillRpcTalentLvObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcTalentLvObj>
     _instance;
} _SkillRpcTalentLvObj_default_instance_;
class SkillRpcTalentLvUpAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcTalentLvUpAsk>
     _instance;
} _SkillRpcTalentLvUpAsk_default_instance_;
class SkillRpcTalentLvUpReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcTalentLvUpReply>
     _instance;
} _SkillRpcTalentLvUpReply_default_instance_;
class SkillRpcLifeSkillUpAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcLifeSkillUpAsk>
     _instance;
} _SkillRpcLifeSkillUpAsk_default_instance_;
class SkillRpcLifeSkillUpReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SkillRpcLifeSkillUpReply>
     _instance;
} _SkillRpcLifeSkillUpReply_default_instance_;

namespace protobuf_SkillRpc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[21];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcSyncDataAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcSyncDataAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcSyncDataReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcSyncDataReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcSyncDataReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLearnAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLearnAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLearnAsk, skillid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLearnReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLearnReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLearnReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLearnReply, skillid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLvUpAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLvUpAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLvUpAsk, skillid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLvUpReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLvUpReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLvUpReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLvUpReply, skillid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcChangeShortcutAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcChangeShortcutAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcChangeShortcutAsk, skillid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcChangeShortcutAsk, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcChangeShortcutAsk, id_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcChangeShortcutReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcChangeShortcutReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcChangeShortcutReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcChangeShortcutReply, skillid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcChangeShortcutReply, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcChangeShortcutReply, id_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcUseShortcutAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcUseShortcutAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcUseShortcutAsk, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcUseShortcutReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcUseShortcutReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcUseShortcutReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcUseShortcutReply, id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcOneKeyLvUpAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcOneKeyLvUpAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcOneKeyLvUpAsk, skillid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcOneKeyLvUpReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcOneKeyLvUpReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcOneKeyLvUpReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcOneKeyLvUpReply, skillid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentChangeSkillAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentChangeSkillAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentChangeSkillAsk, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentChangeSkillAsk, skillid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentChangeSkillReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentChangeSkillReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentChangeSkillReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentResetAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentResetAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentResetReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentResetReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentResetReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentLvObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentLvObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentLvObj, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentLvObj, level_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentLvUpAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentLvUpAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentLvUpAsk, talent_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentLvUpReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentLvUpReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcTalentLvUpReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLifeSkillUpAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLifeSkillUpAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLifeSkillUpAsk, lifeskillid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLifeSkillUpReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLifeSkillUpReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillRpcLifeSkillUpReply, result_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(SkillRpcSyncDataAsk)},
  { 5, 11, sizeof(SkillRpcSyncDataReply)},
  { 12, 18, sizeof(SkillRpcLearnAsk)},
  { 19, 26, sizeof(SkillRpcLearnReply)},
  { 28, 34, sizeof(SkillRpcLvUpAsk)},
  { 35, 42, sizeof(SkillRpcLvUpReply)},
  { 44, 52, sizeof(SkillRpcChangeShortcutAsk)},
  { 55, 64, sizeof(SkillRpcChangeShortcutReply)},
  { 68, 74, sizeof(SkillRpcUseShortcutAsk)},
  { 75, 82, sizeof(SkillRpcUseShortcutReply)},
  { 84, 90, sizeof(SkillRpcOneKeyLvUpAsk)},
  { 91, 98, sizeof(SkillRpcOneKeyLvUpReply)},
  { 100, 107, sizeof(SkillRpcTalentChangeSkillAsk)},
  { 109, 115, sizeof(SkillRpcTalentChangeSkillReply)},
  { 116, 121, sizeof(SkillRpcTalentResetAsk)},
  { 121, 127, sizeof(SkillRpcTalentResetReply)},
  { 128, 135, sizeof(SkillRpcTalentLvObj)},
  { 137, 143, sizeof(SkillRpcTalentLvUpAsk)},
  { 144, 150, sizeof(SkillRpcTalentLvUpReply)},
  { 151, 157, sizeof(SkillRpcLifeSkillUpAsk)},
  { 158, 164, sizeof(SkillRpcLifeSkillUpReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcSyncDataAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcSyncDataReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcLearnAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcLearnReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcLvUpAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcLvUpReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcChangeShortcutAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcChangeShortcutReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcUseShortcutAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcUseShortcutReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcOneKeyLvUpAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcOneKeyLvUpReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcTalentChangeSkillAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcTalentChangeSkillReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcTalentResetAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcTalentResetReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcTalentLvObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcTalentLvUpAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcTalentLvUpReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcLifeSkillUpAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkillRpcLifeSkillUpReply_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "SkillRpc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 21);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _SkillRpcSyncDataAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcSyncDataAsk_default_instance_);_SkillRpcSyncDataReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcSyncDataReply_default_instance_);_SkillRpcLearnAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcLearnAsk_default_instance_);_SkillRpcLearnReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcLearnReply_default_instance_);_SkillRpcLvUpAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcLvUpAsk_default_instance_);_SkillRpcLvUpReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcLvUpReply_default_instance_);_SkillRpcChangeShortcutAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcChangeShortcutAsk_default_instance_);_SkillRpcChangeShortcutReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcChangeShortcutReply_default_instance_);_SkillRpcUseShortcutAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcUseShortcutAsk_default_instance_);_SkillRpcUseShortcutReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcUseShortcutReply_default_instance_);_SkillRpcOneKeyLvUpAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcOneKeyLvUpAsk_default_instance_);_SkillRpcOneKeyLvUpReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcOneKeyLvUpReply_default_instance_);_SkillRpcTalentChangeSkillAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcTalentChangeSkillAsk_default_instance_);_SkillRpcTalentChangeSkillReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcTalentChangeSkillReply_default_instance_);_SkillRpcTalentResetAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcTalentResetAsk_default_instance_);_SkillRpcTalentResetReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcTalentResetReply_default_instance_);_SkillRpcTalentLvObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcTalentLvObj_default_instance_);_SkillRpcTalentLvUpAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcTalentLvUpAsk_default_instance_);_SkillRpcTalentLvUpReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcTalentLvUpReply_default_instance_);_SkillRpcLifeSkillUpAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcLifeSkillUpAsk_default_instance_);_SkillRpcLifeSkillUpReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SkillRpcLifeSkillUpReply_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016SkillRpc.proto\032\022PublicStruct.proto\"\025\n\023"
      "SkillRpcSyncDataAsk\".\n\025SkillRpcSyncDataR"
      "eply\022\025\n\006Result\030\001 \001(\021:\005-9999\"\'\n\020SkillRpcL"
      "earnAsk\022\023\n\007SkillId\030\002 \001(\021:\002-1\"@\n\022SkillRpc"
      "LearnReply\022\025\n\006Result\030\001 \001(\021:\005-9999\022\023\n\007Ski"
      "llId\030\002 \001(\021:\002-1\"&\n\017SkillRpcLvUpAsk\022\023\n\007Ski"
      "llId\030\001 \001(\021:\002-1\"\?\n\021SkillRpcLvUpReply\022\025\n\006R"
      "esult\030\001 \001(\021:\005-9999\022\023\n\007SkillId\030\002 \001(\021:\002-1\""
      "Q\n\031SkillRpcChangeShortcutAsk\022\023\n\007SkillId\030"
      "\001 \001(\021:\002-1\022\017\n\003Pos\030\002 \001(\021:\002-1\022\016\n\002Id\030\003 \001(\021:\002"
      "-1\"j\n\033SkillRpcChangeShortcutReply\022\025\n\006Res"
      "ult\030\001 \001(\021:\005-9999\022\023\n\007SkillId\030\002 \001(\021:\002-1\022\017\n"
      "\003Pos\030\003 \001(\021:\002-1\022\016\n\002Id\030\004 \001(\021:\002-1\"(\n\026SkillR"
      "pcUseShortcutAsk\022\016\n\002Id\030\001 \001(\021:\002-1\"A\n\030Skil"
      "lRpcUseShortcutReply\022\025\n\006Result\030\001 \001(\021:\005-9"
      "999\022\016\n\002Id\030\002 \001(\021:\002-1\",\n\025SkillRpcOneKeyLvU"
      "pAsk\022\023\n\007SkillId\030\001 \001(\021:\002-1\"E\n\027SkillRpcOne"
      "KeyLvUpReply\022\025\n\006Result\030\001 \001(\021:\005-9999\022\023\n\007S"
      "killId\030\002 \001(\021:\002-1\"F\n\034SkillRpcTalentChange"
      "SkillAsk\022\021\n\005Index\030\001 \001(\021:\002-1\022\023\n\007SkillId\030\002"
      " \001(\021:\002-1\"7\n\036SkillRpcTalentChangeSkillRep"
      "ly\022\025\n\006Result\030\001 \001(\021:\005-9999\"\030\n\026SkillRpcTal"
      "entResetAsk\"1\n\030SkillRpcTalentResetReply\022"
      "\025\n\006Result\030\001 \001(\021:\005-9999\"9\n\023SkillRpcTalent"
      "LvObj\022\020\n\005Index\030\001 \001(\021:\0010\022\020\n\005Level\030\002 \001(\021:\001"
      "0\"=\n\025SkillRpcTalentLvUpAsk\022$\n\006Talent\030\001 \003"
      "(\0132\024.SkillRpcTalentLvObj\"0\n\027SkillRpcTale"
      "ntLvUpReply\022\025\n\006Result\030\001 \001(\021:\005-9999\"1\n\026Sk"
      "illRpcLifeSkillUpAsk\022\027\n\013LifeSkillId\030\001 \001("
      "\021:\002-1\"1\n\030SkillRpcLifeSkillUpReply\022\025\n\006Res"
      "ult\030\001 \001(\021:\005-9999"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1216);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SkillRpc.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_SkillRpc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcSyncDataAsk::SkillRpcSyncDataAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcSyncDataAsk)
}
SkillRpcSyncDataAsk::SkillRpcSyncDataAsk(const SkillRpcSyncDataAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SkillRpcSyncDataAsk)
}

void SkillRpcSyncDataAsk::SharedCtor() {
  _cached_size_ = 0;
}

SkillRpcSyncDataAsk::~SkillRpcSyncDataAsk() {
  // @@protoc_insertion_point(destructor:SkillRpcSyncDataAsk)
  SharedDtor();
}

void SkillRpcSyncDataAsk::SharedDtor() {
}

void SkillRpcSyncDataAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcSyncDataAsk::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcSyncDataAsk& SkillRpcSyncDataAsk::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcSyncDataAsk* SkillRpcSyncDataAsk::New(::google::protobuf::Arena* arena) const {
  SkillRpcSyncDataAsk* n = new SkillRpcSyncDataAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcSyncDataAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcSyncDataAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcSyncDataAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcSyncDataAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcSyncDataAsk)
  return false;
#undef DO_
}

void SkillRpcSyncDataAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcSyncDataAsk)
}

::google::protobuf::uint8* SkillRpcSyncDataAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcSyncDataAsk)
  return target;
}

size_t SkillRpcSyncDataAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcSyncDataAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcSyncDataAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcSyncDataAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcSyncDataAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcSyncDataAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcSyncDataAsk)
    MergeFrom(*source);
  }
}

void SkillRpcSyncDataAsk::MergeFrom(const SkillRpcSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SkillRpcSyncDataAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcSyncDataAsk::CopyFrom(const SkillRpcSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcSyncDataAsk::IsInitialized() const {
  return true;
}

void SkillRpcSyncDataAsk::Swap(SkillRpcSyncDataAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcSyncDataAsk::InternalSwap(SkillRpcSyncDataAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcSyncDataAsk::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcSyncDataAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillRpcSyncDataReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcSyncDataReply::SkillRpcSyncDataReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcSyncDataReply)
}
SkillRpcSyncDataReply::SkillRpcSyncDataReply(const SkillRpcSyncDataReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:SkillRpcSyncDataReply)
}

void SkillRpcSyncDataReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

SkillRpcSyncDataReply::~SkillRpcSyncDataReply() {
  // @@protoc_insertion_point(destructor:SkillRpcSyncDataReply)
  SharedDtor();
}

void SkillRpcSyncDataReply::SharedDtor() {
}

void SkillRpcSyncDataReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcSyncDataReply::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcSyncDataReply& SkillRpcSyncDataReply::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcSyncDataReply* SkillRpcSyncDataReply::New(::google::protobuf::Arena* arena) const {
  SkillRpcSyncDataReply* n = new SkillRpcSyncDataReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcSyncDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcSyncDataReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcSyncDataReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcSyncDataReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcSyncDataReply)
  return false;
#undef DO_
}

void SkillRpcSyncDataReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcSyncDataReply)
}

::google::protobuf::uint8* SkillRpcSyncDataReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcSyncDataReply)
  return target;
}

size_t SkillRpcSyncDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcSyncDataReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcSyncDataReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcSyncDataReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcSyncDataReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcSyncDataReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcSyncDataReply)
    MergeFrom(*source);
  }
}

void SkillRpcSyncDataReply::MergeFrom(const SkillRpcSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void SkillRpcSyncDataReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcSyncDataReply::CopyFrom(const SkillRpcSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcSyncDataReply::IsInitialized() const {
  return true;
}

void SkillRpcSyncDataReply::Swap(SkillRpcSyncDataReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcSyncDataReply::InternalSwap(SkillRpcSyncDataReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcSyncDataReply::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcSyncDataReply

// optional sint32 Result = 1 [default = -9999];
bool SkillRpcSyncDataReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillRpcSyncDataReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillRpcSyncDataReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillRpcSyncDataReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 SkillRpcSyncDataReply::result() const {
  // @@protoc_insertion_point(field_get:SkillRpcSyncDataReply.Result)
  return result_;
}
void SkillRpcSyncDataReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcSyncDataReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillRpcLearnAsk::kSkillIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcLearnAsk::SkillRpcLearnAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcLearnAsk)
}
SkillRpcLearnAsk::SkillRpcLearnAsk(const SkillRpcLearnAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  skillid_ = from.skillid_;
  // @@protoc_insertion_point(copy_constructor:SkillRpcLearnAsk)
}

void SkillRpcLearnAsk::SharedCtor() {
  _cached_size_ = 0;
  skillid_ = -1;
}

SkillRpcLearnAsk::~SkillRpcLearnAsk() {
  // @@protoc_insertion_point(destructor:SkillRpcLearnAsk)
  SharedDtor();
}

void SkillRpcLearnAsk::SharedDtor() {
}

void SkillRpcLearnAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcLearnAsk::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcLearnAsk& SkillRpcLearnAsk::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcLearnAsk* SkillRpcLearnAsk::New(::google::protobuf::Arena* arena) const {
  SkillRpcLearnAsk* n = new SkillRpcLearnAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcLearnAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcLearnAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skillid_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcLearnAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcLearnAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 SkillId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_skillid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcLearnAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcLearnAsk)
  return false;
#undef DO_
}

void SkillRpcLearnAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcLearnAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 SkillId = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->skillid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcLearnAsk)
}

::google::protobuf::uint8* SkillRpcLearnAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcLearnAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 SkillId = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->skillid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcLearnAsk)
  return target;
}

size_t SkillRpcLearnAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcLearnAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 SkillId = 2 [default = -1];
  if (has_skillid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->skillid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcLearnAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcLearnAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcLearnAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcLearnAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcLearnAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcLearnAsk)
    MergeFrom(*source);
  }
}

void SkillRpcLearnAsk::MergeFrom(const SkillRpcLearnAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcLearnAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_skillid()) {
    set_skillid(from.skillid());
  }
}

void SkillRpcLearnAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcLearnAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcLearnAsk::CopyFrom(const SkillRpcLearnAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcLearnAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcLearnAsk::IsInitialized() const {
  return true;
}

void SkillRpcLearnAsk::Swap(SkillRpcLearnAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcLearnAsk::InternalSwap(SkillRpcLearnAsk* other) {
  using std::swap;
  swap(skillid_, other->skillid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcLearnAsk::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcLearnAsk

// optional sint32 SkillId = 2 [default = -1];
bool SkillRpcLearnAsk::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillRpcLearnAsk::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillRpcLearnAsk::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillRpcLearnAsk::clear_skillid() {
  skillid_ = -1;
  clear_has_skillid();
}
::google::protobuf::int32 SkillRpcLearnAsk::skillid() const {
  // @@protoc_insertion_point(field_get:SkillRpcLearnAsk.SkillId)
  return skillid_;
}
void SkillRpcLearnAsk::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcLearnAsk.SkillId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillRpcLearnReply::kResultFieldNumber;
const int SkillRpcLearnReply::kSkillIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcLearnReply::SkillRpcLearnReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcLearnReply)
}
SkillRpcLearnReply::SkillRpcLearnReply(const SkillRpcLearnReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&skillid_) -
    reinterpret_cast<char*>(&result_)) + sizeof(skillid_));
  // @@protoc_insertion_point(copy_constructor:SkillRpcLearnReply)
}

void SkillRpcLearnReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  skillid_ = -1;
}

SkillRpcLearnReply::~SkillRpcLearnReply() {
  // @@protoc_insertion_point(destructor:SkillRpcLearnReply)
  SharedDtor();
}

void SkillRpcLearnReply::SharedDtor() {
}

void SkillRpcLearnReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcLearnReply::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcLearnReply& SkillRpcLearnReply::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcLearnReply* SkillRpcLearnReply::New(::google::protobuf::Arena* arena) const {
  SkillRpcLearnReply* n = new SkillRpcLearnReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcLearnReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcLearnReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    result_ = -9999;
    skillid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcLearnReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcLearnReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 SkillId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_skillid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcLearnReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcLearnReply)
  return false;
#undef DO_
}

void SkillRpcLearnReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcLearnReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 SkillId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->skillid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcLearnReply)
}

::google::protobuf::uint8* SkillRpcLearnReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcLearnReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 SkillId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->skillid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcLearnReply)
  return target;
}

size_t SkillRpcLearnReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcLearnReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 SkillId = 2 [default = -1];
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->skillid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcLearnReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcLearnReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcLearnReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcLearnReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcLearnReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcLearnReply)
    MergeFrom(*source);
  }
}

void SkillRpcLearnReply::MergeFrom(const SkillRpcLearnReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcLearnReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      skillid_ = from.skillid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SkillRpcLearnReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcLearnReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcLearnReply::CopyFrom(const SkillRpcLearnReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcLearnReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcLearnReply::IsInitialized() const {
  return true;
}

void SkillRpcLearnReply::Swap(SkillRpcLearnReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcLearnReply::InternalSwap(SkillRpcLearnReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(skillid_, other->skillid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcLearnReply::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcLearnReply

// optional sint32 Result = 1 [default = -9999];
bool SkillRpcLearnReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillRpcLearnReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillRpcLearnReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillRpcLearnReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 SkillRpcLearnReply::result() const {
  // @@protoc_insertion_point(field_get:SkillRpcLearnReply.Result)
  return result_;
}
void SkillRpcLearnReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcLearnReply.Result)
}

// optional sint32 SkillId = 2 [default = -1];
bool SkillRpcLearnReply::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SkillRpcLearnReply::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
void SkillRpcLearnReply::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
void SkillRpcLearnReply::clear_skillid() {
  skillid_ = -1;
  clear_has_skillid();
}
::google::protobuf::int32 SkillRpcLearnReply::skillid() const {
  // @@protoc_insertion_point(field_get:SkillRpcLearnReply.SkillId)
  return skillid_;
}
void SkillRpcLearnReply::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcLearnReply.SkillId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillRpcLvUpAsk::kSkillIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcLvUpAsk::SkillRpcLvUpAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcLvUpAsk)
}
SkillRpcLvUpAsk::SkillRpcLvUpAsk(const SkillRpcLvUpAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  skillid_ = from.skillid_;
  // @@protoc_insertion_point(copy_constructor:SkillRpcLvUpAsk)
}

void SkillRpcLvUpAsk::SharedCtor() {
  _cached_size_ = 0;
  skillid_ = -1;
}

SkillRpcLvUpAsk::~SkillRpcLvUpAsk() {
  // @@protoc_insertion_point(destructor:SkillRpcLvUpAsk)
  SharedDtor();
}

void SkillRpcLvUpAsk::SharedDtor() {
}

void SkillRpcLvUpAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcLvUpAsk::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcLvUpAsk& SkillRpcLvUpAsk::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcLvUpAsk* SkillRpcLvUpAsk::New(::google::protobuf::Arena* arena) const {
  SkillRpcLvUpAsk* n = new SkillRpcLvUpAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcLvUpAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skillid_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcLvUpAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcLvUpAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 SkillId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_skillid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcLvUpAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcLvUpAsk)
  return false;
#undef DO_
}

void SkillRpcLvUpAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 SkillId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->skillid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcLvUpAsk)
}

::google::protobuf::uint8* SkillRpcLvUpAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 SkillId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->skillid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcLvUpAsk)
  return target;
}

size_t SkillRpcLvUpAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcLvUpAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 SkillId = 1 [default = -1];
  if (has_skillid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->skillid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcLvUpAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcLvUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcLvUpAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcLvUpAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcLvUpAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcLvUpAsk)
    MergeFrom(*source);
  }
}

void SkillRpcLvUpAsk::MergeFrom(const SkillRpcLvUpAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcLvUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_skillid()) {
    set_skillid(from.skillid());
  }
}

void SkillRpcLvUpAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcLvUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcLvUpAsk::CopyFrom(const SkillRpcLvUpAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcLvUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcLvUpAsk::IsInitialized() const {
  return true;
}

void SkillRpcLvUpAsk::Swap(SkillRpcLvUpAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcLvUpAsk::InternalSwap(SkillRpcLvUpAsk* other) {
  using std::swap;
  swap(skillid_, other->skillid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcLvUpAsk::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcLvUpAsk

// optional sint32 SkillId = 1 [default = -1];
bool SkillRpcLvUpAsk::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillRpcLvUpAsk::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillRpcLvUpAsk::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillRpcLvUpAsk::clear_skillid() {
  skillid_ = -1;
  clear_has_skillid();
}
::google::protobuf::int32 SkillRpcLvUpAsk::skillid() const {
  // @@protoc_insertion_point(field_get:SkillRpcLvUpAsk.SkillId)
  return skillid_;
}
void SkillRpcLvUpAsk::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcLvUpAsk.SkillId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillRpcLvUpReply::kResultFieldNumber;
const int SkillRpcLvUpReply::kSkillIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcLvUpReply::SkillRpcLvUpReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcLvUpReply)
}
SkillRpcLvUpReply::SkillRpcLvUpReply(const SkillRpcLvUpReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&skillid_) -
    reinterpret_cast<char*>(&result_)) + sizeof(skillid_));
  // @@protoc_insertion_point(copy_constructor:SkillRpcLvUpReply)
}

void SkillRpcLvUpReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  skillid_ = -1;
}

SkillRpcLvUpReply::~SkillRpcLvUpReply() {
  // @@protoc_insertion_point(destructor:SkillRpcLvUpReply)
  SharedDtor();
}

void SkillRpcLvUpReply::SharedDtor() {
}

void SkillRpcLvUpReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcLvUpReply::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcLvUpReply& SkillRpcLvUpReply::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcLvUpReply* SkillRpcLvUpReply::New(::google::protobuf::Arena* arena) const {
  SkillRpcLvUpReply* n = new SkillRpcLvUpReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcLvUpReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    result_ = -9999;
    skillid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcLvUpReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcLvUpReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 SkillId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_skillid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcLvUpReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcLvUpReply)
  return false;
#undef DO_
}

void SkillRpcLvUpReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 SkillId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->skillid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcLvUpReply)
}

::google::protobuf::uint8* SkillRpcLvUpReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 SkillId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->skillid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcLvUpReply)
  return target;
}

size_t SkillRpcLvUpReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcLvUpReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 SkillId = 2 [default = -1];
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->skillid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcLvUpReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcLvUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcLvUpReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcLvUpReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcLvUpReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcLvUpReply)
    MergeFrom(*source);
  }
}

void SkillRpcLvUpReply::MergeFrom(const SkillRpcLvUpReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcLvUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      skillid_ = from.skillid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SkillRpcLvUpReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcLvUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcLvUpReply::CopyFrom(const SkillRpcLvUpReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcLvUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcLvUpReply::IsInitialized() const {
  return true;
}

void SkillRpcLvUpReply::Swap(SkillRpcLvUpReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcLvUpReply::InternalSwap(SkillRpcLvUpReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(skillid_, other->skillid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcLvUpReply::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcLvUpReply

// optional sint32 Result = 1 [default = -9999];
bool SkillRpcLvUpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillRpcLvUpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillRpcLvUpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillRpcLvUpReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 SkillRpcLvUpReply::result() const {
  // @@protoc_insertion_point(field_get:SkillRpcLvUpReply.Result)
  return result_;
}
void SkillRpcLvUpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcLvUpReply.Result)
}

// optional sint32 SkillId = 2 [default = -1];
bool SkillRpcLvUpReply::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SkillRpcLvUpReply::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
void SkillRpcLvUpReply::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
void SkillRpcLvUpReply::clear_skillid() {
  skillid_ = -1;
  clear_has_skillid();
}
::google::protobuf::int32 SkillRpcLvUpReply::skillid() const {
  // @@protoc_insertion_point(field_get:SkillRpcLvUpReply.SkillId)
  return skillid_;
}
void SkillRpcLvUpReply::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcLvUpReply.SkillId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillRpcChangeShortcutAsk::kSkillIdFieldNumber;
const int SkillRpcChangeShortcutAsk::kPosFieldNumber;
const int SkillRpcChangeShortcutAsk::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcChangeShortcutAsk::SkillRpcChangeShortcutAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcChangeShortcutAsk)
}
SkillRpcChangeShortcutAsk::SkillRpcChangeShortcutAsk(const SkillRpcChangeShortcutAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&id_)) + sizeof(pos_));
  // @@protoc_insertion_point(copy_constructor:SkillRpcChangeShortcutAsk)
}

void SkillRpcChangeShortcutAsk::SharedCtor() {
  _cached_size_ = 0;
  id_ = -1;
  skillid_ = -1;
  pos_ = -1;
}

SkillRpcChangeShortcutAsk::~SkillRpcChangeShortcutAsk() {
  // @@protoc_insertion_point(destructor:SkillRpcChangeShortcutAsk)
  SharedDtor();
}

void SkillRpcChangeShortcutAsk::SharedDtor() {
}

void SkillRpcChangeShortcutAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcChangeShortcutAsk::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcChangeShortcutAsk& SkillRpcChangeShortcutAsk::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcChangeShortcutAsk* SkillRpcChangeShortcutAsk::New(::google::protobuf::Arena* arena) const {
  SkillRpcChangeShortcutAsk* n = new SkillRpcChangeShortcutAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcChangeShortcutAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcChangeShortcutAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    id_ = -1;
    skillid_ = -1;
    pos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcChangeShortcutAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcChangeShortcutAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 SkillId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_skillid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Id = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcChangeShortcutAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcChangeShortcutAsk)
  return false;
#undef DO_
}

void SkillRpcChangeShortcutAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcChangeShortcutAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 SkillId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->skillid(), output);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->pos(), output);
  }

  // optional sint32 Id = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcChangeShortcutAsk)
}

::google::protobuf::uint8* SkillRpcChangeShortcutAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcChangeShortcutAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 SkillId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->skillid(), target);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->pos(), target);
  }

  // optional sint32 Id = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcChangeShortcutAsk)
  return target;
}

size_t SkillRpcChangeShortcutAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcChangeShortcutAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 Id = 3 [default = -1];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->id());
    }

    // optional sint32 SkillId = 1 [default = -1];
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->skillid());
    }

    // optional sint32 Pos = 2 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcChangeShortcutAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcChangeShortcutAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcChangeShortcutAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcChangeShortcutAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcChangeShortcutAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcChangeShortcutAsk)
    MergeFrom(*source);
  }
}

void SkillRpcChangeShortcutAsk::MergeFrom(const SkillRpcChangeShortcutAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcChangeShortcutAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      skillid_ = from.skillid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SkillRpcChangeShortcutAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcChangeShortcutAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcChangeShortcutAsk::CopyFrom(const SkillRpcChangeShortcutAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcChangeShortcutAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcChangeShortcutAsk::IsInitialized() const {
  return true;
}

void SkillRpcChangeShortcutAsk::Swap(SkillRpcChangeShortcutAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcChangeShortcutAsk::InternalSwap(SkillRpcChangeShortcutAsk* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(skillid_, other->skillid_);
  swap(pos_, other->pos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcChangeShortcutAsk::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcChangeShortcutAsk

// optional sint32 SkillId = 1 [default = -1];
bool SkillRpcChangeShortcutAsk::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SkillRpcChangeShortcutAsk::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
void SkillRpcChangeShortcutAsk::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
void SkillRpcChangeShortcutAsk::clear_skillid() {
  skillid_ = -1;
  clear_has_skillid();
}
::google::protobuf::int32 SkillRpcChangeShortcutAsk::skillid() const {
  // @@protoc_insertion_point(field_get:SkillRpcChangeShortcutAsk.SkillId)
  return skillid_;
}
void SkillRpcChangeShortcutAsk::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcChangeShortcutAsk.SkillId)
}

// optional sint32 Pos = 2 [default = -1];
bool SkillRpcChangeShortcutAsk::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SkillRpcChangeShortcutAsk::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void SkillRpcChangeShortcutAsk::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void SkillRpcChangeShortcutAsk::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 SkillRpcChangeShortcutAsk::pos() const {
  // @@protoc_insertion_point(field_get:SkillRpcChangeShortcutAsk.Pos)
  return pos_;
}
void SkillRpcChangeShortcutAsk::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcChangeShortcutAsk.Pos)
}

// optional sint32 Id = 3 [default = -1];
bool SkillRpcChangeShortcutAsk::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillRpcChangeShortcutAsk::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillRpcChangeShortcutAsk::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillRpcChangeShortcutAsk::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 SkillRpcChangeShortcutAsk::id() const {
  // @@protoc_insertion_point(field_get:SkillRpcChangeShortcutAsk.Id)
  return id_;
}
void SkillRpcChangeShortcutAsk::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcChangeShortcutAsk.Id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillRpcChangeShortcutReply::kResultFieldNumber;
const int SkillRpcChangeShortcutReply::kSkillIdFieldNumber;
const int SkillRpcChangeShortcutReply::kPosFieldNumber;
const int SkillRpcChangeShortcutReply::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcChangeShortcutReply::SkillRpcChangeShortcutReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcChangeShortcutReply)
}
SkillRpcChangeShortcutReply::SkillRpcChangeShortcutReply(const SkillRpcChangeShortcutReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&result_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:SkillRpcChangeShortcutReply)
}

void SkillRpcChangeShortcutReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  skillid_ = -1;
  pos_ = -1;
  id_ = -1;
}

SkillRpcChangeShortcutReply::~SkillRpcChangeShortcutReply() {
  // @@protoc_insertion_point(destructor:SkillRpcChangeShortcutReply)
  SharedDtor();
}

void SkillRpcChangeShortcutReply::SharedDtor() {
}

void SkillRpcChangeShortcutReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcChangeShortcutReply::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcChangeShortcutReply& SkillRpcChangeShortcutReply::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcChangeShortcutReply* SkillRpcChangeShortcutReply::New(::google::protobuf::Arena* arena) const {
  SkillRpcChangeShortcutReply* n = new SkillRpcChangeShortcutReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcChangeShortcutReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcChangeShortcutReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    result_ = -9999;
    skillid_ = -1;
    pos_ = -1;
    id_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcChangeShortcutReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcChangeShortcutReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 SkillId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_skillid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Id = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcChangeShortcutReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcChangeShortcutReply)
  return false;
#undef DO_
}

void SkillRpcChangeShortcutReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcChangeShortcutReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 SkillId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->skillid(), output);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->pos(), output);
  }

  // optional sint32 Id = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcChangeShortcutReply)
}

::google::protobuf::uint8* SkillRpcChangeShortcutReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcChangeShortcutReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 SkillId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->skillid(), target);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->pos(), target);
  }

  // optional sint32 Id = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcChangeShortcutReply)
  return target;
}

size_t SkillRpcChangeShortcutReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcChangeShortcutReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 SkillId = 2 [default = -1];
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->skillid());
    }

    // optional sint32 Pos = 3 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 Id = 4 [default = -1];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcChangeShortcutReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcChangeShortcutReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcChangeShortcutReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcChangeShortcutReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcChangeShortcutReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcChangeShortcutReply)
    MergeFrom(*source);
  }
}

void SkillRpcChangeShortcutReply::MergeFrom(const SkillRpcChangeShortcutReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcChangeShortcutReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      skillid_ = from.skillid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SkillRpcChangeShortcutReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcChangeShortcutReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcChangeShortcutReply::CopyFrom(const SkillRpcChangeShortcutReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcChangeShortcutReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcChangeShortcutReply::IsInitialized() const {
  return true;
}

void SkillRpcChangeShortcutReply::Swap(SkillRpcChangeShortcutReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcChangeShortcutReply::InternalSwap(SkillRpcChangeShortcutReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(skillid_, other->skillid_);
  swap(pos_, other->pos_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcChangeShortcutReply::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcChangeShortcutReply

// optional sint32 Result = 1 [default = -9999];
bool SkillRpcChangeShortcutReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillRpcChangeShortcutReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillRpcChangeShortcutReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillRpcChangeShortcutReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 SkillRpcChangeShortcutReply::result() const {
  // @@protoc_insertion_point(field_get:SkillRpcChangeShortcutReply.Result)
  return result_;
}
void SkillRpcChangeShortcutReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcChangeShortcutReply.Result)
}

// optional sint32 SkillId = 2 [default = -1];
bool SkillRpcChangeShortcutReply::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SkillRpcChangeShortcutReply::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
void SkillRpcChangeShortcutReply::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
void SkillRpcChangeShortcutReply::clear_skillid() {
  skillid_ = -1;
  clear_has_skillid();
}
::google::protobuf::int32 SkillRpcChangeShortcutReply::skillid() const {
  // @@protoc_insertion_point(field_get:SkillRpcChangeShortcutReply.SkillId)
  return skillid_;
}
void SkillRpcChangeShortcutReply::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcChangeShortcutReply.SkillId)
}

// optional sint32 Pos = 3 [default = -1];
bool SkillRpcChangeShortcutReply::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SkillRpcChangeShortcutReply::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void SkillRpcChangeShortcutReply::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void SkillRpcChangeShortcutReply::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 SkillRpcChangeShortcutReply::pos() const {
  // @@protoc_insertion_point(field_get:SkillRpcChangeShortcutReply.Pos)
  return pos_;
}
void SkillRpcChangeShortcutReply::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcChangeShortcutReply.Pos)
}

// optional sint32 Id = 4 [default = -1];
bool SkillRpcChangeShortcutReply::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SkillRpcChangeShortcutReply::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
void SkillRpcChangeShortcutReply::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void SkillRpcChangeShortcutReply::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 SkillRpcChangeShortcutReply::id() const {
  // @@protoc_insertion_point(field_get:SkillRpcChangeShortcutReply.Id)
  return id_;
}
void SkillRpcChangeShortcutReply::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcChangeShortcutReply.Id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillRpcUseShortcutAsk::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcUseShortcutAsk::SkillRpcUseShortcutAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcUseShortcutAsk)
}
SkillRpcUseShortcutAsk::SkillRpcUseShortcutAsk(const SkillRpcUseShortcutAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:SkillRpcUseShortcutAsk)
}

void SkillRpcUseShortcutAsk::SharedCtor() {
  _cached_size_ = 0;
  id_ = -1;
}

SkillRpcUseShortcutAsk::~SkillRpcUseShortcutAsk() {
  // @@protoc_insertion_point(destructor:SkillRpcUseShortcutAsk)
  SharedDtor();
}

void SkillRpcUseShortcutAsk::SharedDtor() {
}

void SkillRpcUseShortcutAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcUseShortcutAsk::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcUseShortcutAsk& SkillRpcUseShortcutAsk::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcUseShortcutAsk* SkillRpcUseShortcutAsk::New(::google::protobuf::Arena* arena) const {
  SkillRpcUseShortcutAsk* n = new SkillRpcUseShortcutAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcUseShortcutAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcUseShortcutAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcUseShortcutAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcUseShortcutAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Id = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcUseShortcutAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcUseShortcutAsk)
  return false;
#undef DO_
}

void SkillRpcUseShortcutAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcUseShortcutAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Id = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcUseShortcutAsk)
}

::google::protobuf::uint8* SkillRpcUseShortcutAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcUseShortcutAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Id = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcUseShortcutAsk)
  return target;
}

size_t SkillRpcUseShortcutAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcUseShortcutAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Id = 1 [default = -1];
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcUseShortcutAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcUseShortcutAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcUseShortcutAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcUseShortcutAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcUseShortcutAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcUseShortcutAsk)
    MergeFrom(*source);
  }
}

void SkillRpcUseShortcutAsk::MergeFrom(const SkillRpcUseShortcutAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcUseShortcutAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_id(from.id());
  }
}

void SkillRpcUseShortcutAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcUseShortcutAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcUseShortcutAsk::CopyFrom(const SkillRpcUseShortcutAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcUseShortcutAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcUseShortcutAsk::IsInitialized() const {
  return true;
}

void SkillRpcUseShortcutAsk::Swap(SkillRpcUseShortcutAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcUseShortcutAsk::InternalSwap(SkillRpcUseShortcutAsk* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcUseShortcutAsk::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcUseShortcutAsk

// optional sint32 Id = 1 [default = -1];
bool SkillRpcUseShortcutAsk::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillRpcUseShortcutAsk::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillRpcUseShortcutAsk::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillRpcUseShortcutAsk::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 SkillRpcUseShortcutAsk::id() const {
  // @@protoc_insertion_point(field_get:SkillRpcUseShortcutAsk.Id)
  return id_;
}
void SkillRpcUseShortcutAsk::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcUseShortcutAsk.Id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillRpcUseShortcutReply::kResultFieldNumber;
const int SkillRpcUseShortcutReply::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcUseShortcutReply::SkillRpcUseShortcutReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcUseShortcutReply)
}
SkillRpcUseShortcutReply::SkillRpcUseShortcutReply(const SkillRpcUseShortcutReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&result_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:SkillRpcUseShortcutReply)
}

void SkillRpcUseShortcutReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  id_ = -1;
}

SkillRpcUseShortcutReply::~SkillRpcUseShortcutReply() {
  // @@protoc_insertion_point(destructor:SkillRpcUseShortcutReply)
  SharedDtor();
}

void SkillRpcUseShortcutReply::SharedDtor() {
}

void SkillRpcUseShortcutReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcUseShortcutReply::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcUseShortcutReply& SkillRpcUseShortcutReply::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcUseShortcutReply* SkillRpcUseShortcutReply::New(::google::protobuf::Arena* arena) const {
  SkillRpcUseShortcutReply* n = new SkillRpcUseShortcutReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcUseShortcutReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcUseShortcutReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    result_ = -9999;
    id_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcUseShortcutReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcUseShortcutReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Id = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcUseShortcutReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcUseShortcutReply)
  return false;
#undef DO_
}

void SkillRpcUseShortcutReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcUseShortcutReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 Id = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcUseShortcutReply)
}

::google::protobuf::uint8* SkillRpcUseShortcutReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcUseShortcutReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 Id = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcUseShortcutReply)
  return target;
}

size_t SkillRpcUseShortcutReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcUseShortcutReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 Id = 2 [default = -1];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcUseShortcutReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcUseShortcutReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcUseShortcutReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcUseShortcutReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcUseShortcutReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcUseShortcutReply)
    MergeFrom(*source);
  }
}

void SkillRpcUseShortcutReply::MergeFrom(const SkillRpcUseShortcutReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcUseShortcutReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SkillRpcUseShortcutReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcUseShortcutReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcUseShortcutReply::CopyFrom(const SkillRpcUseShortcutReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcUseShortcutReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcUseShortcutReply::IsInitialized() const {
  return true;
}

void SkillRpcUseShortcutReply::Swap(SkillRpcUseShortcutReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcUseShortcutReply::InternalSwap(SkillRpcUseShortcutReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcUseShortcutReply::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcUseShortcutReply

// optional sint32 Result = 1 [default = -9999];
bool SkillRpcUseShortcutReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillRpcUseShortcutReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillRpcUseShortcutReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillRpcUseShortcutReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 SkillRpcUseShortcutReply::result() const {
  // @@protoc_insertion_point(field_get:SkillRpcUseShortcutReply.Result)
  return result_;
}
void SkillRpcUseShortcutReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcUseShortcutReply.Result)
}

// optional sint32 Id = 2 [default = -1];
bool SkillRpcUseShortcutReply::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SkillRpcUseShortcutReply::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void SkillRpcUseShortcutReply::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void SkillRpcUseShortcutReply::clear_id() {
  id_ = -1;
  clear_has_id();
}
::google::protobuf::int32 SkillRpcUseShortcutReply::id() const {
  // @@protoc_insertion_point(field_get:SkillRpcUseShortcutReply.Id)
  return id_;
}
void SkillRpcUseShortcutReply::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcUseShortcutReply.Id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillRpcOneKeyLvUpAsk::kSkillIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcOneKeyLvUpAsk::SkillRpcOneKeyLvUpAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcOneKeyLvUpAsk)
}
SkillRpcOneKeyLvUpAsk::SkillRpcOneKeyLvUpAsk(const SkillRpcOneKeyLvUpAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  skillid_ = from.skillid_;
  // @@protoc_insertion_point(copy_constructor:SkillRpcOneKeyLvUpAsk)
}

void SkillRpcOneKeyLvUpAsk::SharedCtor() {
  _cached_size_ = 0;
  skillid_ = -1;
}

SkillRpcOneKeyLvUpAsk::~SkillRpcOneKeyLvUpAsk() {
  // @@protoc_insertion_point(destructor:SkillRpcOneKeyLvUpAsk)
  SharedDtor();
}

void SkillRpcOneKeyLvUpAsk::SharedDtor() {
}

void SkillRpcOneKeyLvUpAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcOneKeyLvUpAsk::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcOneKeyLvUpAsk& SkillRpcOneKeyLvUpAsk::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcOneKeyLvUpAsk* SkillRpcOneKeyLvUpAsk::New(::google::protobuf::Arena* arena) const {
  SkillRpcOneKeyLvUpAsk* n = new SkillRpcOneKeyLvUpAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcOneKeyLvUpAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcOneKeyLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skillid_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcOneKeyLvUpAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcOneKeyLvUpAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 SkillId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_skillid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcOneKeyLvUpAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcOneKeyLvUpAsk)
  return false;
#undef DO_
}

void SkillRpcOneKeyLvUpAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcOneKeyLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 SkillId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->skillid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcOneKeyLvUpAsk)
}

::google::protobuf::uint8* SkillRpcOneKeyLvUpAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcOneKeyLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 SkillId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->skillid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcOneKeyLvUpAsk)
  return target;
}

size_t SkillRpcOneKeyLvUpAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcOneKeyLvUpAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 SkillId = 1 [default = -1];
  if (has_skillid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->skillid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcOneKeyLvUpAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcOneKeyLvUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcOneKeyLvUpAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcOneKeyLvUpAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcOneKeyLvUpAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcOneKeyLvUpAsk)
    MergeFrom(*source);
  }
}

void SkillRpcOneKeyLvUpAsk::MergeFrom(const SkillRpcOneKeyLvUpAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcOneKeyLvUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_skillid()) {
    set_skillid(from.skillid());
  }
}

void SkillRpcOneKeyLvUpAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcOneKeyLvUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcOneKeyLvUpAsk::CopyFrom(const SkillRpcOneKeyLvUpAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcOneKeyLvUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcOneKeyLvUpAsk::IsInitialized() const {
  return true;
}

void SkillRpcOneKeyLvUpAsk::Swap(SkillRpcOneKeyLvUpAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcOneKeyLvUpAsk::InternalSwap(SkillRpcOneKeyLvUpAsk* other) {
  using std::swap;
  swap(skillid_, other->skillid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcOneKeyLvUpAsk::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcOneKeyLvUpAsk

// optional sint32 SkillId = 1 [default = -1];
bool SkillRpcOneKeyLvUpAsk::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillRpcOneKeyLvUpAsk::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillRpcOneKeyLvUpAsk::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillRpcOneKeyLvUpAsk::clear_skillid() {
  skillid_ = -1;
  clear_has_skillid();
}
::google::protobuf::int32 SkillRpcOneKeyLvUpAsk::skillid() const {
  // @@protoc_insertion_point(field_get:SkillRpcOneKeyLvUpAsk.SkillId)
  return skillid_;
}
void SkillRpcOneKeyLvUpAsk::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcOneKeyLvUpAsk.SkillId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillRpcOneKeyLvUpReply::kResultFieldNumber;
const int SkillRpcOneKeyLvUpReply::kSkillIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcOneKeyLvUpReply::SkillRpcOneKeyLvUpReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcOneKeyLvUpReply)
}
SkillRpcOneKeyLvUpReply::SkillRpcOneKeyLvUpReply(const SkillRpcOneKeyLvUpReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&skillid_) -
    reinterpret_cast<char*>(&result_)) + sizeof(skillid_));
  // @@protoc_insertion_point(copy_constructor:SkillRpcOneKeyLvUpReply)
}

void SkillRpcOneKeyLvUpReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  skillid_ = -1;
}

SkillRpcOneKeyLvUpReply::~SkillRpcOneKeyLvUpReply() {
  // @@protoc_insertion_point(destructor:SkillRpcOneKeyLvUpReply)
  SharedDtor();
}

void SkillRpcOneKeyLvUpReply::SharedDtor() {
}

void SkillRpcOneKeyLvUpReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcOneKeyLvUpReply::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcOneKeyLvUpReply& SkillRpcOneKeyLvUpReply::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcOneKeyLvUpReply* SkillRpcOneKeyLvUpReply::New(::google::protobuf::Arena* arena) const {
  SkillRpcOneKeyLvUpReply* n = new SkillRpcOneKeyLvUpReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcOneKeyLvUpReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcOneKeyLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    result_ = -9999;
    skillid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcOneKeyLvUpReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcOneKeyLvUpReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 SkillId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_skillid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcOneKeyLvUpReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcOneKeyLvUpReply)
  return false;
#undef DO_
}

void SkillRpcOneKeyLvUpReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcOneKeyLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 SkillId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->skillid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcOneKeyLvUpReply)
}

::google::protobuf::uint8* SkillRpcOneKeyLvUpReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcOneKeyLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 SkillId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->skillid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcOneKeyLvUpReply)
  return target;
}

size_t SkillRpcOneKeyLvUpReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcOneKeyLvUpReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 SkillId = 2 [default = -1];
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->skillid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcOneKeyLvUpReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcOneKeyLvUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcOneKeyLvUpReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcOneKeyLvUpReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcOneKeyLvUpReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcOneKeyLvUpReply)
    MergeFrom(*source);
  }
}

void SkillRpcOneKeyLvUpReply::MergeFrom(const SkillRpcOneKeyLvUpReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcOneKeyLvUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      skillid_ = from.skillid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SkillRpcOneKeyLvUpReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcOneKeyLvUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcOneKeyLvUpReply::CopyFrom(const SkillRpcOneKeyLvUpReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcOneKeyLvUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcOneKeyLvUpReply::IsInitialized() const {
  return true;
}

void SkillRpcOneKeyLvUpReply::Swap(SkillRpcOneKeyLvUpReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcOneKeyLvUpReply::InternalSwap(SkillRpcOneKeyLvUpReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(skillid_, other->skillid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcOneKeyLvUpReply::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcOneKeyLvUpReply

// optional sint32 Result = 1 [default = -9999];
bool SkillRpcOneKeyLvUpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillRpcOneKeyLvUpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillRpcOneKeyLvUpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillRpcOneKeyLvUpReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 SkillRpcOneKeyLvUpReply::result() const {
  // @@protoc_insertion_point(field_get:SkillRpcOneKeyLvUpReply.Result)
  return result_;
}
void SkillRpcOneKeyLvUpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcOneKeyLvUpReply.Result)
}

// optional sint32 SkillId = 2 [default = -1];
bool SkillRpcOneKeyLvUpReply::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SkillRpcOneKeyLvUpReply::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
void SkillRpcOneKeyLvUpReply::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
void SkillRpcOneKeyLvUpReply::clear_skillid() {
  skillid_ = -1;
  clear_has_skillid();
}
::google::protobuf::int32 SkillRpcOneKeyLvUpReply::skillid() const {
  // @@protoc_insertion_point(field_get:SkillRpcOneKeyLvUpReply.SkillId)
  return skillid_;
}
void SkillRpcOneKeyLvUpReply::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcOneKeyLvUpReply.SkillId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillRpcTalentChangeSkillAsk::kIndexFieldNumber;
const int SkillRpcTalentChangeSkillAsk::kSkillIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcTalentChangeSkillAsk::SkillRpcTalentChangeSkillAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcTalentChangeSkillAsk)
}
SkillRpcTalentChangeSkillAsk::SkillRpcTalentChangeSkillAsk(const SkillRpcTalentChangeSkillAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&skillid_) -
    reinterpret_cast<char*>(&index_)) + sizeof(skillid_));
  // @@protoc_insertion_point(copy_constructor:SkillRpcTalentChangeSkillAsk)
}

void SkillRpcTalentChangeSkillAsk::SharedCtor() {
  _cached_size_ = 0;
  index_ = -1;
  skillid_ = -1;
}

SkillRpcTalentChangeSkillAsk::~SkillRpcTalentChangeSkillAsk() {
  // @@protoc_insertion_point(destructor:SkillRpcTalentChangeSkillAsk)
  SharedDtor();
}

void SkillRpcTalentChangeSkillAsk::SharedDtor() {
}

void SkillRpcTalentChangeSkillAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcTalentChangeSkillAsk::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcTalentChangeSkillAsk& SkillRpcTalentChangeSkillAsk::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcTalentChangeSkillAsk* SkillRpcTalentChangeSkillAsk::New(::google::protobuf::Arena* arena) const {
  SkillRpcTalentChangeSkillAsk* n = new SkillRpcTalentChangeSkillAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcTalentChangeSkillAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcTalentChangeSkillAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    index_ = -1;
    skillid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcTalentChangeSkillAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcTalentChangeSkillAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Index = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 SkillId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_skillid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcTalentChangeSkillAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcTalentChangeSkillAsk)
  return false;
#undef DO_
}

void SkillRpcTalentChangeSkillAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcTalentChangeSkillAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Index = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->index(), output);
  }

  // optional sint32 SkillId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->skillid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcTalentChangeSkillAsk)
}

::google::protobuf::uint8* SkillRpcTalentChangeSkillAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcTalentChangeSkillAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Index = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->index(), target);
  }

  // optional sint32 SkillId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->skillid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcTalentChangeSkillAsk)
  return target;
}

size_t SkillRpcTalentChangeSkillAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcTalentChangeSkillAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Index = 1 [default = -1];
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->index());
    }

    // optional sint32 SkillId = 2 [default = -1];
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->skillid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcTalentChangeSkillAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcTalentChangeSkillAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcTalentChangeSkillAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcTalentChangeSkillAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcTalentChangeSkillAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcTalentChangeSkillAsk)
    MergeFrom(*source);
  }
}

void SkillRpcTalentChangeSkillAsk::MergeFrom(const SkillRpcTalentChangeSkillAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcTalentChangeSkillAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      index_ = from.index_;
    }
    if (cached_has_bits & 0x00000002u) {
      skillid_ = from.skillid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SkillRpcTalentChangeSkillAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcTalentChangeSkillAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcTalentChangeSkillAsk::CopyFrom(const SkillRpcTalentChangeSkillAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcTalentChangeSkillAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcTalentChangeSkillAsk::IsInitialized() const {
  return true;
}

void SkillRpcTalentChangeSkillAsk::Swap(SkillRpcTalentChangeSkillAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcTalentChangeSkillAsk::InternalSwap(SkillRpcTalentChangeSkillAsk* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(skillid_, other->skillid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcTalentChangeSkillAsk::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcTalentChangeSkillAsk

// optional sint32 Index = 1 [default = -1];
bool SkillRpcTalentChangeSkillAsk::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillRpcTalentChangeSkillAsk::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillRpcTalentChangeSkillAsk::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillRpcTalentChangeSkillAsk::clear_index() {
  index_ = -1;
  clear_has_index();
}
::google::protobuf::int32 SkillRpcTalentChangeSkillAsk::index() const {
  // @@protoc_insertion_point(field_get:SkillRpcTalentChangeSkillAsk.Index)
  return index_;
}
void SkillRpcTalentChangeSkillAsk::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcTalentChangeSkillAsk.Index)
}

// optional sint32 SkillId = 2 [default = -1];
bool SkillRpcTalentChangeSkillAsk::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SkillRpcTalentChangeSkillAsk::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
void SkillRpcTalentChangeSkillAsk::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
void SkillRpcTalentChangeSkillAsk::clear_skillid() {
  skillid_ = -1;
  clear_has_skillid();
}
::google::protobuf::int32 SkillRpcTalentChangeSkillAsk::skillid() const {
  // @@protoc_insertion_point(field_get:SkillRpcTalentChangeSkillAsk.SkillId)
  return skillid_;
}
void SkillRpcTalentChangeSkillAsk::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcTalentChangeSkillAsk.SkillId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillRpcTalentChangeSkillReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcTalentChangeSkillReply::SkillRpcTalentChangeSkillReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcTalentChangeSkillReply)
}
SkillRpcTalentChangeSkillReply::SkillRpcTalentChangeSkillReply(const SkillRpcTalentChangeSkillReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:SkillRpcTalentChangeSkillReply)
}

void SkillRpcTalentChangeSkillReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

SkillRpcTalentChangeSkillReply::~SkillRpcTalentChangeSkillReply() {
  // @@protoc_insertion_point(destructor:SkillRpcTalentChangeSkillReply)
  SharedDtor();
}

void SkillRpcTalentChangeSkillReply::SharedDtor() {
}

void SkillRpcTalentChangeSkillReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcTalentChangeSkillReply::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcTalentChangeSkillReply& SkillRpcTalentChangeSkillReply::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcTalentChangeSkillReply* SkillRpcTalentChangeSkillReply::New(::google::protobuf::Arena* arena) const {
  SkillRpcTalentChangeSkillReply* n = new SkillRpcTalentChangeSkillReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcTalentChangeSkillReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcTalentChangeSkillReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcTalentChangeSkillReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcTalentChangeSkillReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcTalentChangeSkillReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcTalentChangeSkillReply)
  return false;
#undef DO_
}

void SkillRpcTalentChangeSkillReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcTalentChangeSkillReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcTalentChangeSkillReply)
}

::google::protobuf::uint8* SkillRpcTalentChangeSkillReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcTalentChangeSkillReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcTalentChangeSkillReply)
  return target;
}

size_t SkillRpcTalentChangeSkillReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcTalentChangeSkillReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcTalentChangeSkillReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcTalentChangeSkillReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcTalentChangeSkillReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcTalentChangeSkillReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcTalentChangeSkillReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcTalentChangeSkillReply)
    MergeFrom(*source);
  }
}

void SkillRpcTalentChangeSkillReply::MergeFrom(const SkillRpcTalentChangeSkillReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcTalentChangeSkillReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void SkillRpcTalentChangeSkillReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcTalentChangeSkillReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcTalentChangeSkillReply::CopyFrom(const SkillRpcTalentChangeSkillReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcTalentChangeSkillReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcTalentChangeSkillReply::IsInitialized() const {
  return true;
}

void SkillRpcTalentChangeSkillReply::Swap(SkillRpcTalentChangeSkillReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcTalentChangeSkillReply::InternalSwap(SkillRpcTalentChangeSkillReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcTalentChangeSkillReply::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcTalentChangeSkillReply

// optional sint32 Result = 1 [default = -9999];
bool SkillRpcTalentChangeSkillReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillRpcTalentChangeSkillReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillRpcTalentChangeSkillReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillRpcTalentChangeSkillReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 SkillRpcTalentChangeSkillReply::result() const {
  // @@protoc_insertion_point(field_get:SkillRpcTalentChangeSkillReply.Result)
  return result_;
}
void SkillRpcTalentChangeSkillReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcTalentChangeSkillReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcTalentResetAsk::SkillRpcTalentResetAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcTalentResetAsk)
}
SkillRpcTalentResetAsk::SkillRpcTalentResetAsk(const SkillRpcTalentResetAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SkillRpcTalentResetAsk)
}

void SkillRpcTalentResetAsk::SharedCtor() {
  _cached_size_ = 0;
}

SkillRpcTalentResetAsk::~SkillRpcTalentResetAsk() {
  // @@protoc_insertion_point(destructor:SkillRpcTalentResetAsk)
  SharedDtor();
}

void SkillRpcTalentResetAsk::SharedDtor() {
}

void SkillRpcTalentResetAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcTalentResetAsk::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcTalentResetAsk& SkillRpcTalentResetAsk::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcTalentResetAsk* SkillRpcTalentResetAsk::New(::google::protobuf::Arena* arena) const {
  SkillRpcTalentResetAsk* n = new SkillRpcTalentResetAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcTalentResetAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcTalentResetAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcTalentResetAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcTalentResetAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcTalentResetAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcTalentResetAsk)
  return false;
#undef DO_
}

void SkillRpcTalentResetAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcTalentResetAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcTalentResetAsk)
}

::google::protobuf::uint8* SkillRpcTalentResetAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcTalentResetAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcTalentResetAsk)
  return target;
}

size_t SkillRpcTalentResetAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcTalentResetAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcTalentResetAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcTalentResetAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcTalentResetAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcTalentResetAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcTalentResetAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcTalentResetAsk)
    MergeFrom(*source);
  }
}

void SkillRpcTalentResetAsk::MergeFrom(const SkillRpcTalentResetAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcTalentResetAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SkillRpcTalentResetAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcTalentResetAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcTalentResetAsk::CopyFrom(const SkillRpcTalentResetAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcTalentResetAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcTalentResetAsk::IsInitialized() const {
  return true;
}

void SkillRpcTalentResetAsk::Swap(SkillRpcTalentResetAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcTalentResetAsk::InternalSwap(SkillRpcTalentResetAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcTalentResetAsk::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcTalentResetAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillRpcTalentResetReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcTalentResetReply::SkillRpcTalentResetReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcTalentResetReply)
}
SkillRpcTalentResetReply::SkillRpcTalentResetReply(const SkillRpcTalentResetReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:SkillRpcTalentResetReply)
}

void SkillRpcTalentResetReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

SkillRpcTalentResetReply::~SkillRpcTalentResetReply() {
  // @@protoc_insertion_point(destructor:SkillRpcTalentResetReply)
  SharedDtor();
}

void SkillRpcTalentResetReply::SharedDtor() {
}

void SkillRpcTalentResetReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcTalentResetReply::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcTalentResetReply& SkillRpcTalentResetReply::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcTalentResetReply* SkillRpcTalentResetReply::New(::google::protobuf::Arena* arena) const {
  SkillRpcTalentResetReply* n = new SkillRpcTalentResetReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcTalentResetReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcTalentResetReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcTalentResetReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcTalentResetReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcTalentResetReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcTalentResetReply)
  return false;
#undef DO_
}

void SkillRpcTalentResetReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcTalentResetReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcTalentResetReply)
}

::google::protobuf::uint8* SkillRpcTalentResetReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcTalentResetReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcTalentResetReply)
  return target;
}

size_t SkillRpcTalentResetReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcTalentResetReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcTalentResetReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcTalentResetReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcTalentResetReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcTalentResetReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcTalentResetReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcTalentResetReply)
    MergeFrom(*source);
  }
}

void SkillRpcTalentResetReply::MergeFrom(const SkillRpcTalentResetReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcTalentResetReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void SkillRpcTalentResetReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcTalentResetReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcTalentResetReply::CopyFrom(const SkillRpcTalentResetReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcTalentResetReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcTalentResetReply::IsInitialized() const {
  return true;
}

void SkillRpcTalentResetReply::Swap(SkillRpcTalentResetReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcTalentResetReply::InternalSwap(SkillRpcTalentResetReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcTalentResetReply::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcTalentResetReply

// optional sint32 Result = 1 [default = -9999];
bool SkillRpcTalentResetReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillRpcTalentResetReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillRpcTalentResetReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillRpcTalentResetReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 SkillRpcTalentResetReply::result() const {
  // @@protoc_insertion_point(field_get:SkillRpcTalentResetReply.Result)
  return result_;
}
void SkillRpcTalentResetReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcTalentResetReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillRpcTalentLvObj::kIndexFieldNumber;
const int SkillRpcTalentLvObj::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcTalentLvObj::SkillRpcTalentLvObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcTalentLvObj)
}
SkillRpcTalentLvObj::SkillRpcTalentLvObj(const SkillRpcTalentLvObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&index_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:SkillRpcTalentLvObj)
}

void SkillRpcTalentLvObj::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&index_)) + sizeof(level_));
}

SkillRpcTalentLvObj::~SkillRpcTalentLvObj() {
  // @@protoc_insertion_point(destructor:SkillRpcTalentLvObj)
  SharedDtor();
}

void SkillRpcTalentLvObj::SharedDtor() {
}

void SkillRpcTalentLvObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcTalentLvObj::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcTalentLvObj& SkillRpcTalentLvObj::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcTalentLvObj* SkillRpcTalentLvObj::New(::google::protobuf::Arena* arena) const {
  SkillRpcTalentLvObj* n = new SkillRpcTalentLvObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcTalentLvObj::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcTalentLvObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&level_) -
        reinterpret_cast<char*>(&index_)) + sizeof(level_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcTalentLvObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcTalentLvObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Index = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Level = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcTalentLvObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcTalentLvObj)
  return false;
#undef DO_
}

void SkillRpcTalentLvObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcTalentLvObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Index = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->index(), output);
  }

  // optional sint32 Level = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->level(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcTalentLvObj)
}

::google::protobuf::uint8* SkillRpcTalentLvObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcTalentLvObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Index = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->index(), target);
  }

  // optional sint32 Level = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->level(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcTalentLvObj)
  return target;
}

size_t SkillRpcTalentLvObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcTalentLvObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Index = 1 [default = 0];
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->index());
    }

    // optional sint32 Level = 2 [default = 0];
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->level());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcTalentLvObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcTalentLvObj)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcTalentLvObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcTalentLvObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcTalentLvObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcTalentLvObj)
    MergeFrom(*source);
  }
}

void SkillRpcTalentLvObj::MergeFrom(const SkillRpcTalentLvObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcTalentLvObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      index_ = from.index_;
    }
    if (cached_has_bits & 0x00000002u) {
      level_ = from.level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SkillRpcTalentLvObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcTalentLvObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcTalentLvObj::CopyFrom(const SkillRpcTalentLvObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcTalentLvObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcTalentLvObj::IsInitialized() const {
  return true;
}

void SkillRpcTalentLvObj::Swap(SkillRpcTalentLvObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcTalentLvObj::InternalSwap(SkillRpcTalentLvObj* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(level_, other->level_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcTalentLvObj::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcTalentLvObj

// optional sint32 Index = 1 [default = 0];
bool SkillRpcTalentLvObj::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillRpcTalentLvObj::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillRpcTalentLvObj::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillRpcTalentLvObj::clear_index() {
  index_ = 0;
  clear_has_index();
}
::google::protobuf::int32 SkillRpcTalentLvObj::index() const {
  // @@protoc_insertion_point(field_get:SkillRpcTalentLvObj.Index)
  return index_;
}
void SkillRpcTalentLvObj::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcTalentLvObj.Index)
}

// optional sint32 Level = 2 [default = 0];
bool SkillRpcTalentLvObj::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SkillRpcTalentLvObj::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
void SkillRpcTalentLvObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
void SkillRpcTalentLvObj::clear_level() {
  level_ = 0;
  clear_has_level();
}
::google::protobuf::int32 SkillRpcTalentLvObj::level() const {
  // @@protoc_insertion_point(field_get:SkillRpcTalentLvObj.Level)
  return level_;
}
void SkillRpcTalentLvObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcTalentLvObj.Level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillRpcTalentLvUpAsk::kTalentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcTalentLvUpAsk::SkillRpcTalentLvUpAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcTalentLvUpAsk)
}
SkillRpcTalentLvUpAsk::SkillRpcTalentLvUpAsk(const SkillRpcTalentLvUpAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      talent_(from.talent_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SkillRpcTalentLvUpAsk)
}

void SkillRpcTalentLvUpAsk::SharedCtor() {
  _cached_size_ = 0;
}

SkillRpcTalentLvUpAsk::~SkillRpcTalentLvUpAsk() {
  // @@protoc_insertion_point(destructor:SkillRpcTalentLvUpAsk)
  SharedDtor();
}

void SkillRpcTalentLvUpAsk::SharedDtor() {
}

void SkillRpcTalentLvUpAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcTalentLvUpAsk::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcTalentLvUpAsk& SkillRpcTalentLvUpAsk::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcTalentLvUpAsk* SkillRpcTalentLvUpAsk::New(::google::protobuf::Arena* arena) const {
  SkillRpcTalentLvUpAsk* n = new SkillRpcTalentLvUpAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcTalentLvUpAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcTalentLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  talent_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcTalentLvUpAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcTalentLvUpAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SkillRpcTalentLvObj Talent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_talent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcTalentLvUpAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcTalentLvUpAsk)
  return false;
#undef DO_
}

void SkillRpcTalentLvUpAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcTalentLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SkillRpcTalentLvObj Talent = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->talent_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->talent(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcTalentLvUpAsk)
}

::google::protobuf::uint8* SkillRpcTalentLvUpAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcTalentLvUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SkillRpcTalentLvObj Talent = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->talent_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->talent(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcTalentLvUpAsk)
  return target;
}

size_t SkillRpcTalentLvUpAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcTalentLvUpAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .SkillRpcTalentLvObj Talent = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->talent_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->talent(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcTalentLvUpAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcTalentLvUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcTalentLvUpAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcTalentLvUpAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcTalentLvUpAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcTalentLvUpAsk)
    MergeFrom(*source);
  }
}

void SkillRpcTalentLvUpAsk::MergeFrom(const SkillRpcTalentLvUpAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcTalentLvUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  talent_.MergeFrom(from.talent_);
}

void SkillRpcTalentLvUpAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcTalentLvUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcTalentLvUpAsk::CopyFrom(const SkillRpcTalentLvUpAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcTalentLvUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcTalentLvUpAsk::IsInitialized() const {
  return true;
}

void SkillRpcTalentLvUpAsk::Swap(SkillRpcTalentLvUpAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcTalentLvUpAsk::InternalSwap(SkillRpcTalentLvUpAsk* other) {
  using std::swap;
  talent_.InternalSwap(&other->talent_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcTalentLvUpAsk::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcTalentLvUpAsk

// repeated .SkillRpcTalentLvObj Talent = 1;
int SkillRpcTalentLvUpAsk::talent_size() const {
  return talent_.size();
}
void SkillRpcTalentLvUpAsk::clear_talent() {
  talent_.Clear();
}
const ::SkillRpcTalentLvObj& SkillRpcTalentLvUpAsk::talent(int index) const {
  // @@protoc_insertion_point(field_get:SkillRpcTalentLvUpAsk.Talent)
  return talent_.Get(index);
}
::SkillRpcTalentLvObj* SkillRpcTalentLvUpAsk::mutable_talent(int index) {
  // @@protoc_insertion_point(field_mutable:SkillRpcTalentLvUpAsk.Talent)
  return talent_.Mutable(index);
}
::SkillRpcTalentLvObj* SkillRpcTalentLvUpAsk::add_talent() {
  // @@protoc_insertion_point(field_add:SkillRpcTalentLvUpAsk.Talent)
  return talent_.Add();
}
::google::protobuf::RepeatedPtrField< ::SkillRpcTalentLvObj >*
SkillRpcTalentLvUpAsk::mutable_talent() {
  // @@protoc_insertion_point(field_mutable_list:SkillRpcTalentLvUpAsk.Talent)
  return &talent_;
}
const ::google::protobuf::RepeatedPtrField< ::SkillRpcTalentLvObj >&
SkillRpcTalentLvUpAsk::talent() const {
  // @@protoc_insertion_point(field_list:SkillRpcTalentLvUpAsk.Talent)
  return talent_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillRpcTalentLvUpReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcTalentLvUpReply::SkillRpcTalentLvUpReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcTalentLvUpReply)
}
SkillRpcTalentLvUpReply::SkillRpcTalentLvUpReply(const SkillRpcTalentLvUpReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:SkillRpcTalentLvUpReply)
}

void SkillRpcTalentLvUpReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

SkillRpcTalentLvUpReply::~SkillRpcTalentLvUpReply() {
  // @@protoc_insertion_point(destructor:SkillRpcTalentLvUpReply)
  SharedDtor();
}

void SkillRpcTalentLvUpReply::SharedDtor() {
}

void SkillRpcTalentLvUpReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcTalentLvUpReply::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcTalentLvUpReply& SkillRpcTalentLvUpReply::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcTalentLvUpReply* SkillRpcTalentLvUpReply::New(::google::protobuf::Arena* arena) const {
  SkillRpcTalentLvUpReply* n = new SkillRpcTalentLvUpReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcTalentLvUpReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcTalentLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcTalentLvUpReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcTalentLvUpReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcTalentLvUpReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcTalentLvUpReply)
  return false;
#undef DO_
}

void SkillRpcTalentLvUpReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcTalentLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcTalentLvUpReply)
}

::google::protobuf::uint8* SkillRpcTalentLvUpReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcTalentLvUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcTalentLvUpReply)
  return target;
}

size_t SkillRpcTalentLvUpReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcTalentLvUpReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcTalentLvUpReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcTalentLvUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcTalentLvUpReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcTalentLvUpReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcTalentLvUpReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcTalentLvUpReply)
    MergeFrom(*source);
  }
}

void SkillRpcTalentLvUpReply::MergeFrom(const SkillRpcTalentLvUpReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcTalentLvUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void SkillRpcTalentLvUpReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcTalentLvUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcTalentLvUpReply::CopyFrom(const SkillRpcTalentLvUpReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcTalentLvUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcTalentLvUpReply::IsInitialized() const {
  return true;
}

void SkillRpcTalentLvUpReply::Swap(SkillRpcTalentLvUpReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcTalentLvUpReply::InternalSwap(SkillRpcTalentLvUpReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcTalentLvUpReply::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcTalentLvUpReply

// optional sint32 Result = 1 [default = -9999];
bool SkillRpcTalentLvUpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillRpcTalentLvUpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillRpcTalentLvUpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillRpcTalentLvUpReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 SkillRpcTalentLvUpReply::result() const {
  // @@protoc_insertion_point(field_get:SkillRpcTalentLvUpReply.Result)
  return result_;
}
void SkillRpcTalentLvUpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcTalentLvUpReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillRpcLifeSkillUpAsk::kLifeSkillIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcLifeSkillUpAsk::SkillRpcLifeSkillUpAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcLifeSkillUpAsk)
}
SkillRpcLifeSkillUpAsk::SkillRpcLifeSkillUpAsk(const SkillRpcLifeSkillUpAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lifeskillid_ = from.lifeskillid_;
  // @@protoc_insertion_point(copy_constructor:SkillRpcLifeSkillUpAsk)
}

void SkillRpcLifeSkillUpAsk::SharedCtor() {
  _cached_size_ = 0;
  lifeskillid_ = -1;
}

SkillRpcLifeSkillUpAsk::~SkillRpcLifeSkillUpAsk() {
  // @@protoc_insertion_point(destructor:SkillRpcLifeSkillUpAsk)
  SharedDtor();
}

void SkillRpcLifeSkillUpAsk::SharedDtor() {
}

void SkillRpcLifeSkillUpAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcLifeSkillUpAsk::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcLifeSkillUpAsk& SkillRpcLifeSkillUpAsk::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcLifeSkillUpAsk* SkillRpcLifeSkillUpAsk::New(::google::protobuf::Arena* arena) const {
  SkillRpcLifeSkillUpAsk* n = new SkillRpcLifeSkillUpAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcLifeSkillUpAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcLifeSkillUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lifeskillid_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcLifeSkillUpAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcLifeSkillUpAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 LifeSkillId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_lifeskillid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &lifeskillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcLifeSkillUpAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcLifeSkillUpAsk)
  return false;
#undef DO_
}

void SkillRpcLifeSkillUpAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcLifeSkillUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 LifeSkillId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->lifeskillid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcLifeSkillUpAsk)
}

::google::protobuf::uint8* SkillRpcLifeSkillUpAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcLifeSkillUpAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 LifeSkillId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->lifeskillid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcLifeSkillUpAsk)
  return target;
}

size_t SkillRpcLifeSkillUpAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcLifeSkillUpAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 LifeSkillId = 1 [default = -1];
  if (has_lifeskillid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->lifeskillid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcLifeSkillUpAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcLifeSkillUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcLifeSkillUpAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcLifeSkillUpAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcLifeSkillUpAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcLifeSkillUpAsk)
    MergeFrom(*source);
  }
}

void SkillRpcLifeSkillUpAsk::MergeFrom(const SkillRpcLifeSkillUpAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcLifeSkillUpAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lifeskillid()) {
    set_lifeskillid(from.lifeskillid());
  }
}

void SkillRpcLifeSkillUpAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcLifeSkillUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcLifeSkillUpAsk::CopyFrom(const SkillRpcLifeSkillUpAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcLifeSkillUpAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcLifeSkillUpAsk::IsInitialized() const {
  return true;
}

void SkillRpcLifeSkillUpAsk::Swap(SkillRpcLifeSkillUpAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcLifeSkillUpAsk::InternalSwap(SkillRpcLifeSkillUpAsk* other) {
  using std::swap;
  swap(lifeskillid_, other->lifeskillid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcLifeSkillUpAsk::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcLifeSkillUpAsk

// optional sint32 LifeSkillId = 1 [default = -1];
bool SkillRpcLifeSkillUpAsk::has_lifeskillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillRpcLifeSkillUpAsk::set_has_lifeskillid() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillRpcLifeSkillUpAsk::clear_has_lifeskillid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillRpcLifeSkillUpAsk::clear_lifeskillid() {
  lifeskillid_ = -1;
  clear_has_lifeskillid();
}
::google::protobuf::int32 SkillRpcLifeSkillUpAsk::lifeskillid() const {
  // @@protoc_insertion_point(field_get:SkillRpcLifeSkillUpAsk.LifeSkillId)
  return lifeskillid_;
}
void SkillRpcLifeSkillUpAsk::set_lifeskillid(::google::protobuf::int32 value) {
  set_has_lifeskillid();
  lifeskillid_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcLifeSkillUpAsk.LifeSkillId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillRpcLifeSkillUpReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillRpcLifeSkillUpReply::SkillRpcLifeSkillUpReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_SkillRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillRpcLifeSkillUpReply)
}
SkillRpcLifeSkillUpReply::SkillRpcLifeSkillUpReply(const SkillRpcLifeSkillUpReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:SkillRpcLifeSkillUpReply)
}

void SkillRpcLifeSkillUpReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

SkillRpcLifeSkillUpReply::~SkillRpcLifeSkillUpReply() {
  // @@protoc_insertion_point(destructor:SkillRpcLifeSkillUpReply)
  SharedDtor();
}

void SkillRpcLifeSkillUpReply::SharedDtor() {
}

void SkillRpcLifeSkillUpReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillRpcLifeSkillUpReply::descriptor() {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SkillRpcLifeSkillUpReply& SkillRpcLifeSkillUpReply::default_instance() {
  protobuf_SkillRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkillRpcLifeSkillUpReply* SkillRpcLifeSkillUpReply::New(::google::protobuf::Arena* arena) const {
  SkillRpcLifeSkillUpReply* n = new SkillRpcLifeSkillUpReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillRpcLifeSkillUpReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillRpcLifeSkillUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkillRpcLifeSkillUpReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillRpcLifeSkillUpReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillRpcLifeSkillUpReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillRpcLifeSkillUpReply)
  return false;
#undef DO_
}

void SkillRpcLifeSkillUpReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillRpcLifeSkillUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SkillRpcLifeSkillUpReply)
}

::google::protobuf::uint8* SkillRpcLifeSkillUpReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillRpcLifeSkillUpReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SkillRpcLifeSkillUpReply)
  return target;
}

size_t SkillRpcLifeSkillUpReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SkillRpcLifeSkillUpReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillRpcLifeSkillUpReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillRpcLifeSkillUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SkillRpcLifeSkillUpReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillRpcLifeSkillUpReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillRpcLifeSkillUpReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillRpcLifeSkillUpReply)
    MergeFrom(*source);
  }
}

void SkillRpcLifeSkillUpReply::MergeFrom(const SkillRpcLifeSkillUpReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillRpcLifeSkillUpReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void SkillRpcLifeSkillUpReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillRpcLifeSkillUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillRpcLifeSkillUpReply::CopyFrom(const SkillRpcLifeSkillUpReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillRpcLifeSkillUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillRpcLifeSkillUpReply::IsInitialized() const {
  return true;
}

void SkillRpcLifeSkillUpReply::Swap(SkillRpcLifeSkillUpReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillRpcLifeSkillUpReply::InternalSwap(SkillRpcLifeSkillUpReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillRpcLifeSkillUpReply::GetMetadata() const {
  protobuf_SkillRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SkillRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillRpcLifeSkillUpReply

// optional sint32 Result = 1 [default = -9999];
bool SkillRpcLifeSkillUpReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkillRpcLifeSkillUpReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void SkillRpcLifeSkillUpReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkillRpcLifeSkillUpReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 SkillRpcLifeSkillUpReply::result() const {
  // @@protoc_insertion_point(field_get:SkillRpcLifeSkillUpReply.Result)
  return result_;
}
void SkillRpcLifeSkillUpReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SkillRpcLifeSkillUpReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
