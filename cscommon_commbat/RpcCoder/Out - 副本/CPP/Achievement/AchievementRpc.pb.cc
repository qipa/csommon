// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AchievementRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AchievementRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class AchievementRpcGetTheRewardsAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AchievementRpcGetTheRewardsAsk>
     _instance;
} _AchievementRpcGetTheRewardsAsk_default_instance_;
class AchievementRpcGetTheRewardsReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AchievementRpcGetTheRewardsReply>
     _instance;
} _AchievementRpcGetTheRewardsReply_default_instance_;
class AchievementRpcSyncDataAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AchievementRpcSyncDataAsk>
     _instance;
} _AchievementRpcSyncDataAsk_default_instance_;
class AchievementRpcSyncDataReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AchievementRpcSyncDataReply>
     _instance;
} _AchievementRpcSyncDataReply_default_instance_;

namespace protobuf_AchievementRpc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementRpcGetTheRewardsAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementRpcGetTheRewardsAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementRpcGetTheRewardsAsk, groupid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementRpcGetTheRewardsReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementRpcGetTheRewardsReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementRpcGetTheRewardsReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementRpcGetTheRewardsReply, groupid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementRpcSyncDataAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementRpcSyncDataAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementRpcSyncDataReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementRpcSyncDataReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AchievementRpcSyncDataReply, result_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(AchievementRpcGetTheRewardsAsk)},
  { 7, 14, sizeof(AchievementRpcGetTheRewardsReply)},
  { 16, 21, sizeof(AchievementRpcSyncDataAsk)},
  { 21, 27, sizeof(AchievementRpcSyncDataReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AchievementRpcGetTheRewardsAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AchievementRpcGetTheRewardsReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AchievementRpcSyncDataAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AchievementRpcSyncDataReply_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "AchievementRpc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _AchievementRpcGetTheRewardsAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AchievementRpcGetTheRewardsAsk_default_instance_);_AchievementRpcGetTheRewardsReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AchievementRpcGetTheRewardsReply_default_instance_);_AchievementRpcSyncDataAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AchievementRpcSyncDataAsk_default_instance_);_AchievementRpcSyncDataReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AchievementRpcSyncDataReply_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024AchievementRpc.proto\032\022PublicStruct.pro"
      "to\"5\n\036AchievementRpcGetTheRewardsAsk\022\023\n\007"
      "GroupId\030\002 \001(\021:\002-1\"N\n AchievementRpcGetTh"
      "eRewardsReply\022\025\n\006Result\030\001 \001(\021:\005-9999\022\023\n\007"
      "GroupId\030\002 \001(\021:\002-1\"\033\n\031AchievementRpcSyncD"
      "ataAsk\"4\n\033AchievementRpcSyncDataReply\022\025\n"
      "\006Result\030\001 \001(\021:\005-9999"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 260);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AchievementRpc.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_AchievementRpc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AchievementRpcGetTheRewardsAsk::kGroupIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AchievementRpcGetTheRewardsAsk::AchievementRpcGetTheRewardsAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_AchievementRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AchievementRpcGetTheRewardsAsk)
}
AchievementRpcGetTheRewardsAsk::AchievementRpcGetTheRewardsAsk(const AchievementRpcGetTheRewardsAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  groupid_ = from.groupid_;
  // @@protoc_insertion_point(copy_constructor:AchievementRpcGetTheRewardsAsk)
}

void AchievementRpcGetTheRewardsAsk::SharedCtor() {
  _cached_size_ = 0;
  groupid_ = -1;
}

AchievementRpcGetTheRewardsAsk::~AchievementRpcGetTheRewardsAsk() {
  // @@protoc_insertion_point(destructor:AchievementRpcGetTheRewardsAsk)
  SharedDtor();
}

void AchievementRpcGetTheRewardsAsk::SharedDtor() {
}

void AchievementRpcGetTheRewardsAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AchievementRpcGetTheRewardsAsk::descriptor() {
  protobuf_AchievementRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AchievementRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AchievementRpcGetTheRewardsAsk& AchievementRpcGetTheRewardsAsk::default_instance() {
  protobuf_AchievementRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

AchievementRpcGetTheRewardsAsk* AchievementRpcGetTheRewardsAsk::New(::google::protobuf::Arena* arena) const {
  AchievementRpcGetTheRewardsAsk* n = new AchievementRpcGetTheRewardsAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AchievementRpcGetTheRewardsAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:AchievementRpcGetTheRewardsAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupid_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AchievementRpcGetTheRewardsAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AchievementRpcGetTheRewardsAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 GroupId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_groupid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AchievementRpcGetTheRewardsAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AchievementRpcGetTheRewardsAsk)
  return false;
#undef DO_
}

void AchievementRpcGetTheRewardsAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AchievementRpcGetTheRewardsAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 GroupId = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->groupid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AchievementRpcGetTheRewardsAsk)
}

::google::protobuf::uint8* AchievementRpcGetTheRewardsAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AchievementRpcGetTheRewardsAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 GroupId = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->groupid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AchievementRpcGetTheRewardsAsk)
  return target;
}

size_t AchievementRpcGetTheRewardsAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AchievementRpcGetTheRewardsAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 GroupId = 2 [default = -1];
  if (has_groupid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->groupid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AchievementRpcGetTheRewardsAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AchievementRpcGetTheRewardsAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const AchievementRpcGetTheRewardsAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AchievementRpcGetTheRewardsAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AchievementRpcGetTheRewardsAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AchievementRpcGetTheRewardsAsk)
    MergeFrom(*source);
  }
}

void AchievementRpcGetTheRewardsAsk::MergeFrom(const AchievementRpcGetTheRewardsAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AchievementRpcGetTheRewardsAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_groupid()) {
    set_groupid(from.groupid());
  }
}

void AchievementRpcGetTheRewardsAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AchievementRpcGetTheRewardsAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AchievementRpcGetTheRewardsAsk::CopyFrom(const AchievementRpcGetTheRewardsAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AchievementRpcGetTheRewardsAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AchievementRpcGetTheRewardsAsk::IsInitialized() const {
  return true;
}

void AchievementRpcGetTheRewardsAsk::Swap(AchievementRpcGetTheRewardsAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AchievementRpcGetTheRewardsAsk::InternalSwap(AchievementRpcGetTheRewardsAsk* other) {
  using std::swap;
  swap(groupid_, other->groupid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AchievementRpcGetTheRewardsAsk::GetMetadata() const {
  protobuf_AchievementRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AchievementRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AchievementRpcGetTheRewardsAsk

// optional sint32 GroupId = 2 [default = -1];
bool AchievementRpcGetTheRewardsAsk::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AchievementRpcGetTheRewardsAsk::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
void AchievementRpcGetTheRewardsAsk::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AchievementRpcGetTheRewardsAsk::clear_groupid() {
  groupid_ = -1;
  clear_has_groupid();
}
::google::protobuf::int32 AchievementRpcGetTheRewardsAsk::groupid() const {
  // @@protoc_insertion_point(field_get:AchievementRpcGetTheRewardsAsk.GroupId)
  return groupid_;
}
void AchievementRpcGetTheRewardsAsk::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:AchievementRpcGetTheRewardsAsk.GroupId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AchievementRpcGetTheRewardsReply::kResultFieldNumber;
const int AchievementRpcGetTheRewardsReply::kGroupIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AchievementRpcGetTheRewardsReply::AchievementRpcGetTheRewardsReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_AchievementRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AchievementRpcGetTheRewardsReply)
}
AchievementRpcGetTheRewardsReply::AchievementRpcGetTheRewardsReply(const AchievementRpcGetTheRewardsReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&groupid_) -
    reinterpret_cast<char*>(&result_)) + sizeof(groupid_));
  // @@protoc_insertion_point(copy_constructor:AchievementRpcGetTheRewardsReply)
}

void AchievementRpcGetTheRewardsReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  groupid_ = -1;
}

AchievementRpcGetTheRewardsReply::~AchievementRpcGetTheRewardsReply() {
  // @@protoc_insertion_point(destructor:AchievementRpcGetTheRewardsReply)
  SharedDtor();
}

void AchievementRpcGetTheRewardsReply::SharedDtor() {
}

void AchievementRpcGetTheRewardsReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AchievementRpcGetTheRewardsReply::descriptor() {
  protobuf_AchievementRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AchievementRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AchievementRpcGetTheRewardsReply& AchievementRpcGetTheRewardsReply::default_instance() {
  protobuf_AchievementRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

AchievementRpcGetTheRewardsReply* AchievementRpcGetTheRewardsReply::New(::google::protobuf::Arena* arena) const {
  AchievementRpcGetTheRewardsReply* n = new AchievementRpcGetTheRewardsReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AchievementRpcGetTheRewardsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:AchievementRpcGetTheRewardsReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    result_ = -9999;
    groupid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AchievementRpcGetTheRewardsReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AchievementRpcGetTheRewardsReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 GroupId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_groupid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &groupid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AchievementRpcGetTheRewardsReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AchievementRpcGetTheRewardsReply)
  return false;
#undef DO_
}

void AchievementRpcGetTheRewardsReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AchievementRpcGetTheRewardsReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 GroupId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->groupid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AchievementRpcGetTheRewardsReply)
}

::google::protobuf::uint8* AchievementRpcGetTheRewardsReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AchievementRpcGetTheRewardsReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 GroupId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->groupid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AchievementRpcGetTheRewardsReply)
  return target;
}

size_t AchievementRpcGetTheRewardsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AchievementRpcGetTheRewardsReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 GroupId = 2 [default = -1];
    if (has_groupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->groupid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AchievementRpcGetTheRewardsReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AchievementRpcGetTheRewardsReply)
  GOOGLE_DCHECK_NE(&from, this);
  const AchievementRpcGetTheRewardsReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AchievementRpcGetTheRewardsReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AchievementRpcGetTheRewardsReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AchievementRpcGetTheRewardsReply)
    MergeFrom(*source);
  }
}

void AchievementRpcGetTheRewardsReply::MergeFrom(const AchievementRpcGetTheRewardsReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AchievementRpcGetTheRewardsReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      groupid_ = from.groupid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AchievementRpcGetTheRewardsReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AchievementRpcGetTheRewardsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AchievementRpcGetTheRewardsReply::CopyFrom(const AchievementRpcGetTheRewardsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AchievementRpcGetTheRewardsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AchievementRpcGetTheRewardsReply::IsInitialized() const {
  return true;
}

void AchievementRpcGetTheRewardsReply::Swap(AchievementRpcGetTheRewardsReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AchievementRpcGetTheRewardsReply::InternalSwap(AchievementRpcGetTheRewardsReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(groupid_, other->groupid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AchievementRpcGetTheRewardsReply::GetMetadata() const {
  protobuf_AchievementRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AchievementRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AchievementRpcGetTheRewardsReply

// optional sint32 Result = 1 [default = -9999];
bool AchievementRpcGetTheRewardsReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AchievementRpcGetTheRewardsReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void AchievementRpcGetTheRewardsReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void AchievementRpcGetTheRewardsReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 AchievementRpcGetTheRewardsReply::result() const {
  // @@protoc_insertion_point(field_get:AchievementRpcGetTheRewardsReply.Result)
  return result_;
}
void AchievementRpcGetTheRewardsReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:AchievementRpcGetTheRewardsReply.Result)
}

// optional sint32 GroupId = 2 [default = -1];
bool AchievementRpcGetTheRewardsReply::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AchievementRpcGetTheRewardsReply::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
void AchievementRpcGetTheRewardsReply::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
void AchievementRpcGetTheRewardsReply::clear_groupid() {
  groupid_ = -1;
  clear_has_groupid();
}
::google::protobuf::int32 AchievementRpcGetTheRewardsReply::groupid() const {
  // @@protoc_insertion_point(field_get:AchievementRpcGetTheRewardsReply.GroupId)
  return groupid_;
}
void AchievementRpcGetTheRewardsReply::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:AchievementRpcGetTheRewardsReply.GroupId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AchievementRpcSyncDataAsk::AchievementRpcSyncDataAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_AchievementRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AchievementRpcSyncDataAsk)
}
AchievementRpcSyncDataAsk::AchievementRpcSyncDataAsk(const AchievementRpcSyncDataAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AchievementRpcSyncDataAsk)
}

void AchievementRpcSyncDataAsk::SharedCtor() {
  _cached_size_ = 0;
}

AchievementRpcSyncDataAsk::~AchievementRpcSyncDataAsk() {
  // @@protoc_insertion_point(destructor:AchievementRpcSyncDataAsk)
  SharedDtor();
}

void AchievementRpcSyncDataAsk::SharedDtor() {
}

void AchievementRpcSyncDataAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AchievementRpcSyncDataAsk::descriptor() {
  protobuf_AchievementRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AchievementRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AchievementRpcSyncDataAsk& AchievementRpcSyncDataAsk::default_instance() {
  protobuf_AchievementRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

AchievementRpcSyncDataAsk* AchievementRpcSyncDataAsk::New(::google::protobuf::Arena* arena) const {
  AchievementRpcSyncDataAsk* n = new AchievementRpcSyncDataAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AchievementRpcSyncDataAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:AchievementRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AchievementRpcSyncDataAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AchievementRpcSyncDataAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AchievementRpcSyncDataAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AchievementRpcSyncDataAsk)
  return false;
#undef DO_
}

void AchievementRpcSyncDataAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AchievementRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AchievementRpcSyncDataAsk)
}

::google::protobuf::uint8* AchievementRpcSyncDataAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AchievementRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AchievementRpcSyncDataAsk)
  return target;
}

size_t AchievementRpcSyncDataAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AchievementRpcSyncDataAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AchievementRpcSyncDataAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AchievementRpcSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const AchievementRpcSyncDataAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AchievementRpcSyncDataAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AchievementRpcSyncDataAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AchievementRpcSyncDataAsk)
    MergeFrom(*source);
  }
}

void AchievementRpcSyncDataAsk::MergeFrom(const AchievementRpcSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AchievementRpcSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AchievementRpcSyncDataAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AchievementRpcSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AchievementRpcSyncDataAsk::CopyFrom(const AchievementRpcSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AchievementRpcSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AchievementRpcSyncDataAsk::IsInitialized() const {
  return true;
}

void AchievementRpcSyncDataAsk::Swap(AchievementRpcSyncDataAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AchievementRpcSyncDataAsk::InternalSwap(AchievementRpcSyncDataAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AchievementRpcSyncDataAsk::GetMetadata() const {
  protobuf_AchievementRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AchievementRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AchievementRpcSyncDataAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AchievementRpcSyncDataReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AchievementRpcSyncDataReply::AchievementRpcSyncDataReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_AchievementRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AchievementRpcSyncDataReply)
}
AchievementRpcSyncDataReply::AchievementRpcSyncDataReply(const AchievementRpcSyncDataReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:AchievementRpcSyncDataReply)
}

void AchievementRpcSyncDataReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

AchievementRpcSyncDataReply::~AchievementRpcSyncDataReply() {
  // @@protoc_insertion_point(destructor:AchievementRpcSyncDataReply)
  SharedDtor();
}

void AchievementRpcSyncDataReply::SharedDtor() {
}

void AchievementRpcSyncDataReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AchievementRpcSyncDataReply::descriptor() {
  protobuf_AchievementRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AchievementRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AchievementRpcSyncDataReply& AchievementRpcSyncDataReply::default_instance() {
  protobuf_AchievementRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

AchievementRpcSyncDataReply* AchievementRpcSyncDataReply::New(::google::protobuf::Arena* arena) const {
  AchievementRpcSyncDataReply* n = new AchievementRpcSyncDataReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AchievementRpcSyncDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:AchievementRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AchievementRpcSyncDataReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AchievementRpcSyncDataReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AchievementRpcSyncDataReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AchievementRpcSyncDataReply)
  return false;
#undef DO_
}

void AchievementRpcSyncDataReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AchievementRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AchievementRpcSyncDataReply)
}

::google::protobuf::uint8* AchievementRpcSyncDataReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AchievementRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AchievementRpcSyncDataReply)
  return target;
}

size_t AchievementRpcSyncDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AchievementRpcSyncDataReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AchievementRpcSyncDataReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AchievementRpcSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  const AchievementRpcSyncDataReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AchievementRpcSyncDataReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AchievementRpcSyncDataReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AchievementRpcSyncDataReply)
    MergeFrom(*source);
  }
}

void AchievementRpcSyncDataReply::MergeFrom(const AchievementRpcSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AchievementRpcSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void AchievementRpcSyncDataReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AchievementRpcSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AchievementRpcSyncDataReply::CopyFrom(const AchievementRpcSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AchievementRpcSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AchievementRpcSyncDataReply::IsInitialized() const {
  return true;
}

void AchievementRpcSyncDataReply::Swap(AchievementRpcSyncDataReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AchievementRpcSyncDataReply::InternalSwap(AchievementRpcSyncDataReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AchievementRpcSyncDataReply::GetMetadata() const {
  protobuf_AchievementRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AchievementRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AchievementRpcSyncDataReply

// optional sint32 Result = 1 [default = -9999];
bool AchievementRpcSyncDataReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AchievementRpcSyncDataReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void AchievementRpcSyncDataReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void AchievementRpcSyncDataReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 AchievementRpcSyncDataReply::result() const {
  // @@protoc_insertion_point(field_get:AchievementRpcSyncDataReply.Result)
  return result_;
}
void AchievementRpcSyncDataReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:AchievementRpcSyncDataReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
