// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AchievementRpc.proto

#ifndef PROTOBUF_AchievementRpc_2eproto__INCLUDED
#define PROTOBUF_AchievementRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)
class AchievementRpcGetTheRewardsAsk;
class AchievementRpcGetTheRewardsAskDefaultTypeInternal;
extern AchievementRpcGetTheRewardsAskDefaultTypeInternal _AchievementRpcGetTheRewardsAsk_default_instance_;
class AchievementRpcGetTheRewardsReply;
class AchievementRpcGetTheRewardsReplyDefaultTypeInternal;
extern AchievementRpcGetTheRewardsReplyDefaultTypeInternal _AchievementRpcGetTheRewardsReply_default_instance_;
class AchievementRpcSyncDataAsk;
class AchievementRpcSyncDataAskDefaultTypeInternal;
extern AchievementRpcSyncDataAskDefaultTypeInternal _AchievementRpcSyncDataAsk_default_instance_;
class AchievementRpcSyncDataReply;
class AchievementRpcSyncDataReplyDefaultTypeInternal;
extern AchievementRpcSyncDataReplyDefaultTypeInternal _AchievementRpcSyncDataReply_default_instance_;

namespace protobuf_AchievementRpc_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_AchievementRpc_2eproto

// ===================================================================

class AchievementRpcGetTheRewardsAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AchievementRpcGetTheRewardsAsk) */ {
 public:
  AchievementRpcGetTheRewardsAsk();
  virtual ~AchievementRpcGetTheRewardsAsk();

  AchievementRpcGetTheRewardsAsk(const AchievementRpcGetTheRewardsAsk& from);

  inline AchievementRpcGetTheRewardsAsk& operator=(const AchievementRpcGetTheRewardsAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AchievementRpcGetTheRewardsAsk(AchievementRpcGetTheRewardsAsk&& from) noexcept
    : AchievementRpcGetTheRewardsAsk() {
    *this = ::std::move(from);
  }

  inline AchievementRpcGetTheRewardsAsk& operator=(AchievementRpcGetTheRewardsAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AchievementRpcGetTheRewardsAsk& default_instance();

  static inline const AchievementRpcGetTheRewardsAsk* internal_default_instance() {
    return reinterpret_cast<const AchievementRpcGetTheRewardsAsk*>(
               &_AchievementRpcGetTheRewardsAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AchievementRpcGetTheRewardsAsk* other);
  friend void swap(AchievementRpcGetTheRewardsAsk& a, AchievementRpcGetTheRewardsAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AchievementRpcGetTheRewardsAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  AchievementRpcGetTheRewardsAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AchievementRpcGetTheRewardsAsk& from);
  void MergeFrom(const AchievementRpcGetTheRewardsAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AchievementRpcGetTheRewardsAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 GroupId = 2 [default = -1];
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIdFieldNumber = 2;
  ::google::protobuf::int32 groupid() const;
  void set_groupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AchievementRpcGetTheRewardsAsk)
 private:
  void set_has_groupid();
  void clear_has_groupid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 groupid_;
  friend struct protobuf_AchievementRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AchievementRpcGetTheRewardsReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AchievementRpcGetTheRewardsReply) */ {
 public:
  AchievementRpcGetTheRewardsReply();
  virtual ~AchievementRpcGetTheRewardsReply();

  AchievementRpcGetTheRewardsReply(const AchievementRpcGetTheRewardsReply& from);

  inline AchievementRpcGetTheRewardsReply& operator=(const AchievementRpcGetTheRewardsReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AchievementRpcGetTheRewardsReply(AchievementRpcGetTheRewardsReply&& from) noexcept
    : AchievementRpcGetTheRewardsReply() {
    *this = ::std::move(from);
  }

  inline AchievementRpcGetTheRewardsReply& operator=(AchievementRpcGetTheRewardsReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AchievementRpcGetTheRewardsReply& default_instance();

  static inline const AchievementRpcGetTheRewardsReply* internal_default_instance() {
    return reinterpret_cast<const AchievementRpcGetTheRewardsReply*>(
               &_AchievementRpcGetTheRewardsReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AchievementRpcGetTheRewardsReply* other);
  friend void swap(AchievementRpcGetTheRewardsReply& a, AchievementRpcGetTheRewardsReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AchievementRpcGetTheRewardsReply* New() const PROTOBUF_FINAL { return New(NULL); }

  AchievementRpcGetTheRewardsReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AchievementRpcGetTheRewardsReply& from);
  void MergeFrom(const AchievementRpcGetTheRewardsReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AchievementRpcGetTheRewardsReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional sint32 GroupId = 2 [default = -1];
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupIdFieldNumber = 2;
  ::google::protobuf::int32 groupid() const;
  void set_groupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AchievementRpcGetTheRewardsReply)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_groupid();
  void clear_has_groupid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 groupid_;
  friend struct protobuf_AchievementRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AchievementRpcSyncDataAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AchievementRpcSyncDataAsk) */ {
 public:
  AchievementRpcSyncDataAsk();
  virtual ~AchievementRpcSyncDataAsk();

  AchievementRpcSyncDataAsk(const AchievementRpcSyncDataAsk& from);

  inline AchievementRpcSyncDataAsk& operator=(const AchievementRpcSyncDataAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AchievementRpcSyncDataAsk(AchievementRpcSyncDataAsk&& from) noexcept
    : AchievementRpcSyncDataAsk() {
    *this = ::std::move(from);
  }

  inline AchievementRpcSyncDataAsk& operator=(AchievementRpcSyncDataAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AchievementRpcSyncDataAsk& default_instance();

  static inline const AchievementRpcSyncDataAsk* internal_default_instance() {
    return reinterpret_cast<const AchievementRpcSyncDataAsk*>(
               &_AchievementRpcSyncDataAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(AchievementRpcSyncDataAsk* other);
  friend void swap(AchievementRpcSyncDataAsk& a, AchievementRpcSyncDataAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AchievementRpcSyncDataAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  AchievementRpcSyncDataAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AchievementRpcSyncDataAsk& from);
  void MergeFrom(const AchievementRpcSyncDataAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AchievementRpcSyncDataAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:AchievementRpcSyncDataAsk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_AchievementRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AchievementRpcSyncDataReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AchievementRpcSyncDataReply) */ {
 public:
  AchievementRpcSyncDataReply();
  virtual ~AchievementRpcSyncDataReply();

  AchievementRpcSyncDataReply(const AchievementRpcSyncDataReply& from);

  inline AchievementRpcSyncDataReply& operator=(const AchievementRpcSyncDataReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AchievementRpcSyncDataReply(AchievementRpcSyncDataReply&& from) noexcept
    : AchievementRpcSyncDataReply() {
    *this = ::std::move(from);
  }

  inline AchievementRpcSyncDataReply& operator=(AchievementRpcSyncDataReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AchievementRpcSyncDataReply& default_instance();

  static inline const AchievementRpcSyncDataReply* internal_default_instance() {
    return reinterpret_cast<const AchievementRpcSyncDataReply*>(
               &_AchievementRpcSyncDataReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AchievementRpcSyncDataReply* other);
  friend void swap(AchievementRpcSyncDataReply& a, AchievementRpcSyncDataReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AchievementRpcSyncDataReply* New() const PROTOBUF_FINAL { return New(NULL); }

  AchievementRpcSyncDataReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AchievementRpcSyncDataReply& from);
  void MergeFrom(const AchievementRpcSyncDataReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AchievementRpcSyncDataReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AchievementRpcSyncDataReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_AchievementRpc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AchievementRpcGetTheRewardsAsk

// optional sint32 GroupId = 2 [default = -1];
inline bool AchievementRpcGetTheRewardsAsk::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AchievementRpcGetTheRewardsAsk::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AchievementRpcGetTheRewardsAsk::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AchievementRpcGetTheRewardsAsk::clear_groupid() {
  groupid_ = -1;
  clear_has_groupid();
}
inline ::google::protobuf::int32 AchievementRpcGetTheRewardsAsk::groupid() const {
  // @@protoc_insertion_point(field_get:AchievementRpcGetTheRewardsAsk.GroupId)
  return groupid_;
}
inline void AchievementRpcGetTheRewardsAsk::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:AchievementRpcGetTheRewardsAsk.GroupId)
}

// -------------------------------------------------------------------

// AchievementRpcGetTheRewardsReply

// optional sint32 Result = 1 [default = -9999];
inline bool AchievementRpcGetTheRewardsReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AchievementRpcGetTheRewardsReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AchievementRpcGetTheRewardsReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AchievementRpcGetTheRewardsReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 AchievementRpcGetTheRewardsReply::result() const {
  // @@protoc_insertion_point(field_get:AchievementRpcGetTheRewardsReply.Result)
  return result_;
}
inline void AchievementRpcGetTheRewardsReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:AchievementRpcGetTheRewardsReply.Result)
}

// optional sint32 GroupId = 2 [default = -1];
inline bool AchievementRpcGetTheRewardsReply::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AchievementRpcGetTheRewardsReply::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AchievementRpcGetTheRewardsReply::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AchievementRpcGetTheRewardsReply::clear_groupid() {
  groupid_ = -1;
  clear_has_groupid();
}
inline ::google::protobuf::int32 AchievementRpcGetTheRewardsReply::groupid() const {
  // @@protoc_insertion_point(field_get:AchievementRpcGetTheRewardsReply.GroupId)
  return groupid_;
}
inline void AchievementRpcGetTheRewardsReply::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:AchievementRpcGetTheRewardsReply.GroupId)
}

// -------------------------------------------------------------------

// AchievementRpcSyncDataAsk

// -------------------------------------------------------------------

// AchievementRpcSyncDataReply

// optional sint32 Result = 1 [default = -9999];
inline bool AchievementRpcSyncDataReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AchievementRpcSyncDataReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AchievementRpcSyncDataReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AchievementRpcSyncDataReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 AchievementRpcSyncDataReply::result() const {
  // @@protoc_insertion_point(field_get:AchievementRpcSyncDataReply.Result)
  return result_;
}
inline void AchievementRpcSyncDataReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:AchievementRpcSyncDataReply.Result)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AchievementRpc_2eproto__INCLUDED
