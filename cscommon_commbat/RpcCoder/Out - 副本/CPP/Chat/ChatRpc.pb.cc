// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChatRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ChatRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class ChatRpcSendChatAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatRpcSendChatAsk>
     _instance;
} _ChatRpcSendChatAsk_default_instance_;
class ChatRpcSendChatReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatRpcSendChatReply>
     _instance;
} _ChatRpcSendChatReply_default_instance_;
class ChatRpcSyncChatNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatRpcSyncChatNotify>
     _instance;
} _ChatRpcSyncChatNotify_default_instance_;
class ChatRpcSyncPrivateChatMsgNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatRpcSyncPrivateChatMsgNotify>
     _instance;
} _ChatRpcSyncPrivateChatMsgNotify_default_instance_;
class ChatRpcSvrChatNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatRpcSvrChatNotify>
     _instance;
} _ChatRpcSvrChatNotify_default_instance_;
class ChatRpcChatFun1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatRpcChatFun1>
     _instance;
} _ChatRpcChatFun1_default_instance_;

namespace protobuf_ChatRpc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRpcSendChatAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRpcSendChatAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRpcSendChatAsk, chatmsg_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRpcSendChatReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRpcSendChatReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRpcSendChatReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRpcSyncChatNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRpcSyncChatNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRpcSyncChatNotify, chatdata_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRpcSyncPrivateChatMsgNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRpcSyncPrivateChatMsgNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRpcSyncPrivateChatMsgNotify, chatdata_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRpcSvrChatNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRpcSvrChatNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRpcSvrChatNotify, chatdata_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRpcChatFun1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRpcChatFun1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRpcChatFun1, targetuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatRpcChatFun1, templateid_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(ChatRpcSendChatAsk)},
  { 7, 13, sizeof(ChatRpcSendChatReply)},
  { 14, 20, sizeof(ChatRpcSyncChatNotify)},
  { 21, 27, sizeof(ChatRpcSyncPrivateChatMsgNotify)},
  { 28, 34, sizeof(ChatRpcSvrChatNotify)},
  { 35, 42, sizeof(ChatRpcChatFun1)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatRpcSendChatAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatRpcSendChatReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatRpcSyncChatNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatRpcSyncPrivateChatMsgNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatRpcSvrChatNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatRpcChatFun1_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ChatRpc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _ChatRpcSendChatAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatRpcSendChatAsk_default_instance_);_ChatRpcSendChatReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatRpcSendChatReply_default_instance_);_ChatRpcSyncChatNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatRpcSyncChatNotify_default_instance_);_ChatRpcSyncPrivateChatMsgNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatRpcSyncPrivateChatMsgNotify_default_instance_);_ChatRpcSvrChatNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatRpcSvrChatNotify_default_instance_);_ChatRpcChatFun1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatRpcChatFun1_default_instance_);_ChatRpcSendChatAsk_default_instance_._instance.get_mutable()->chatmsg_ = const_cast< ::ChatMsgObj*>(
      ::ChatMsgObj::internal_default_instance());
  _ChatRpcSyncChatNotify_default_instance_._instance.get_mutable()->chatdata_ = const_cast< ::ChatObj*>(
      ::ChatObj::internal_default_instance());
  _ChatRpcSvrChatNotify_default_instance_._instance.get_mutable()->chatdata_ = const_cast< ::ChatNetData*>(
      ::ChatNetData::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rChatRpc.proto\032\022PublicStruct.proto\"2\n\022C"
      "hatRpcSendChatAsk\022\034\n\007ChatMsg\030\001 \001(\0132\013.Cha"
      "tMsgObj\"-\n\024ChatRpcSendChatReply\022\025\n\006Resul"
      "t\030\001 \001(\021:\005-9999\"3\n\025ChatRpcSyncChatNotify\022"
      "\032\n\010ChatData\030\004 \001(\0132\010.ChatObj\"=\n\037ChatRpcSy"
      "ncPrivateChatMsgNotify\022\032\n\010ChatData\030\003 \003(\013"
      "2\010.ChatObj\"6\n\024ChatRpcSvrChatNotify\022\036\n\010Ch"
      "atData\030\001 \001(\0132\014.ChatNetData\"C\n\017ChatRpcCha"
      "tFun1\022\030\n\014TargetUserId\030\002 \001(\022:\002-1\022\026\n\nTempl"
      "ateId\030\003 \001(\021:\002-1"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 375);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ChatRpc.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_ChatRpc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatRpcSendChatAsk::kChatMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatRpcSendChatAsk::ChatRpcSendChatAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ChatRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatRpcSendChatAsk)
}
ChatRpcSendChatAsk::ChatRpcSendChatAsk(const ChatRpcSendChatAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_chatmsg()) {
    chatmsg_ = new ::ChatMsgObj(*from.chatmsg_);
  } else {
    chatmsg_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ChatRpcSendChatAsk)
}

void ChatRpcSendChatAsk::SharedCtor() {
  _cached_size_ = 0;
  chatmsg_ = NULL;
}

ChatRpcSendChatAsk::~ChatRpcSendChatAsk() {
  // @@protoc_insertion_point(destructor:ChatRpcSendChatAsk)
  SharedDtor();
}

void ChatRpcSendChatAsk::SharedDtor() {
  if (this != internal_default_instance()) delete chatmsg_;
}

void ChatRpcSendChatAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatRpcSendChatAsk::descriptor() {
  protobuf_ChatRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ChatRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatRpcSendChatAsk& ChatRpcSendChatAsk::default_instance() {
  protobuf_ChatRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatRpcSendChatAsk* ChatRpcSendChatAsk::New(::google::protobuf::Arena* arena) const {
  ChatRpcSendChatAsk* n = new ChatRpcSendChatAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatRpcSendChatAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatRpcSendChatAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_chatmsg()) {
    GOOGLE_DCHECK(chatmsg_ != NULL);
    chatmsg_->::ChatMsgObj::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChatRpcSendChatAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatRpcSendChatAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ChatMsgObj ChatMsg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chatmsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatRpcSendChatAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatRpcSendChatAsk)
  return false;
#undef DO_
}

void ChatRpcSendChatAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatRpcSendChatAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ChatMsgObj ChatMsg = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->chatmsg_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatRpcSendChatAsk)
}

::google::protobuf::uint8* ChatRpcSendChatAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatRpcSendChatAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ChatMsgObj ChatMsg = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->chatmsg_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatRpcSendChatAsk)
  return target;
}

size_t ChatRpcSendChatAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatRpcSendChatAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .ChatMsgObj ChatMsg = 1;
  if (has_chatmsg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->chatmsg_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatRpcSendChatAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatRpcSendChatAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatRpcSendChatAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatRpcSendChatAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatRpcSendChatAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatRpcSendChatAsk)
    MergeFrom(*source);
  }
}

void ChatRpcSendChatAsk::MergeFrom(const ChatRpcSendChatAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatRpcSendChatAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chatmsg()) {
    mutable_chatmsg()->::ChatMsgObj::MergeFrom(from.chatmsg());
  }
}

void ChatRpcSendChatAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatRpcSendChatAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatRpcSendChatAsk::CopyFrom(const ChatRpcSendChatAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatRpcSendChatAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatRpcSendChatAsk::IsInitialized() const {
  return true;
}

void ChatRpcSendChatAsk::Swap(ChatRpcSendChatAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatRpcSendChatAsk::InternalSwap(ChatRpcSendChatAsk* other) {
  using std::swap;
  swap(chatmsg_, other->chatmsg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatRpcSendChatAsk::GetMetadata() const {
  protobuf_ChatRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ChatRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatRpcSendChatAsk

// optional .ChatMsgObj ChatMsg = 1;
bool ChatRpcSendChatAsk::has_chatmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChatRpcSendChatAsk::set_has_chatmsg() {
  _has_bits_[0] |= 0x00000001u;
}
void ChatRpcSendChatAsk::clear_has_chatmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChatRpcSendChatAsk::clear_chatmsg() {
  if (chatmsg_ != NULL) chatmsg_->::ChatMsgObj::Clear();
  clear_has_chatmsg();
}
const ::ChatMsgObj& ChatRpcSendChatAsk::chatmsg() const {
  const ::ChatMsgObj* p = chatmsg_;
  // @@protoc_insertion_point(field_get:ChatRpcSendChatAsk.ChatMsg)
  return p != NULL ? *p : *reinterpret_cast<const ::ChatMsgObj*>(
      &::_ChatMsgObj_default_instance_);
}
::ChatMsgObj* ChatRpcSendChatAsk::mutable_chatmsg() {
  set_has_chatmsg();
  if (chatmsg_ == NULL) {
    chatmsg_ = new ::ChatMsgObj;
  }
  // @@protoc_insertion_point(field_mutable:ChatRpcSendChatAsk.ChatMsg)
  return chatmsg_;
}
::ChatMsgObj* ChatRpcSendChatAsk::release_chatmsg() {
  // @@protoc_insertion_point(field_release:ChatRpcSendChatAsk.ChatMsg)
  clear_has_chatmsg();
  ::ChatMsgObj* temp = chatmsg_;
  chatmsg_ = NULL;
  return temp;
}
void ChatRpcSendChatAsk::set_allocated_chatmsg(::ChatMsgObj* chatmsg) {
  delete chatmsg_;
  chatmsg_ = chatmsg;
  if (chatmsg) {
    set_has_chatmsg();
  } else {
    clear_has_chatmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:ChatRpcSendChatAsk.ChatMsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatRpcSendChatReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatRpcSendChatReply::ChatRpcSendChatReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ChatRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatRpcSendChatReply)
}
ChatRpcSendChatReply::ChatRpcSendChatReply(const ChatRpcSendChatReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ChatRpcSendChatReply)
}

void ChatRpcSendChatReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

ChatRpcSendChatReply::~ChatRpcSendChatReply() {
  // @@protoc_insertion_point(destructor:ChatRpcSendChatReply)
  SharedDtor();
}

void ChatRpcSendChatReply::SharedDtor() {
}

void ChatRpcSendChatReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatRpcSendChatReply::descriptor() {
  protobuf_ChatRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ChatRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatRpcSendChatReply& ChatRpcSendChatReply::default_instance() {
  protobuf_ChatRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatRpcSendChatReply* ChatRpcSendChatReply::New(::google::protobuf::Arena* arena) const {
  ChatRpcSendChatReply* n = new ChatRpcSendChatReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatRpcSendChatReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatRpcSendChatReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChatRpcSendChatReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatRpcSendChatReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatRpcSendChatReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatRpcSendChatReply)
  return false;
#undef DO_
}

void ChatRpcSendChatReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatRpcSendChatReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatRpcSendChatReply)
}

::google::protobuf::uint8* ChatRpcSendChatReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatRpcSendChatReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatRpcSendChatReply)
  return target;
}

size_t ChatRpcSendChatReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatRpcSendChatReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatRpcSendChatReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatRpcSendChatReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatRpcSendChatReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatRpcSendChatReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatRpcSendChatReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatRpcSendChatReply)
    MergeFrom(*source);
  }
}

void ChatRpcSendChatReply::MergeFrom(const ChatRpcSendChatReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatRpcSendChatReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void ChatRpcSendChatReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatRpcSendChatReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatRpcSendChatReply::CopyFrom(const ChatRpcSendChatReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatRpcSendChatReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatRpcSendChatReply::IsInitialized() const {
  return true;
}

void ChatRpcSendChatReply::Swap(ChatRpcSendChatReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatRpcSendChatReply::InternalSwap(ChatRpcSendChatReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatRpcSendChatReply::GetMetadata() const {
  protobuf_ChatRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ChatRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatRpcSendChatReply

// optional sint32 Result = 1 [default = -9999];
bool ChatRpcSendChatReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChatRpcSendChatReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void ChatRpcSendChatReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChatRpcSendChatReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 ChatRpcSendChatReply::result() const {
  // @@protoc_insertion_point(field_get:ChatRpcSendChatReply.Result)
  return result_;
}
void ChatRpcSendChatReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ChatRpcSendChatReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatRpcSyncChatNotify::kChatDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatRpcSyncChatNotify::ChatRpcSyncChatNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ChatRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatRpcSyncChatNotify)
}
ChatRpcSyncChatNotify::ChatRpcSyncChatNotify(const ChatRpcSyncChatNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_chatdata()) {
    chatdata_ = new ::ChatObj(*from.chatdata_);
  } else {
    chatdata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ChatRpcSyncChatNotify)
}

void ChatRpcSyncChatNotify::SharedCtor() {
  _cached_size_ = 0;
  chatdata_ = NULL;
}

ChatRpcSyncChatNotify::~ChatRpcSyncChatNotify() {
  // @@protoc_insertion_point(destructor:ChatRpcSyncChatNotify)
  SharedDtor();
}

void ChatRpcSyncChatNotify::SharedDtor() {
  if (this != internal_default_instance()) delete chatdata_;
}

void ChatRpcSyncChatNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatRpcSyncChatNotify::descriptor() {
  protobuf_ChatRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ChatRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatRpcSyncChatNotify& ChatRpcSyncChatNotify::default_instance() {
  protobuf_ChatRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatRpcSyncChatNotify* ChatRpcSyncChatNotify::New(::google::protobuf::Arena* arena) const {
  ChatRpcSyncChatNotify* n = new ChatRpcSyncChatNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatRpcSyncChatNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatRpcSyncChatNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_chatdata()) {
    GOOGLE_DCHECK(chatdata_ != NULL);
    chatdata_->::ChatObj::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChatRpcSyncChatNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatRpcSyncChatNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ChatObj ChatData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chatdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatRpcSyncChatNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatRpcSyncChatNotify)
  return false;
#undef DO_
}

void ChatRpcSyncChatNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatRpcSyncChatNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ChatObj ChatData = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->chatdata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatRpcSyncChatNotify)
}

::google::protobuf::uint8* ChatRpcSyncChatNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatRpcSyncChatNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ChatObj ChatData = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->chatdata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatRpcSyncChatNotify)
  return target;
}

size_t ChatRpcSyncChatNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatRpcSyncChatNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .ChatObj ChatData = 4;
  if (has_chatdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->chatdata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatRpcSyncChatNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatRpcSyncChatNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatRpcSyncChatNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatRpcSyncChatNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatRpcSyncChatNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatRpcSyncChatNotify)
    MergeFrom(*source);
  }
}

void ChatRpcSyncChatNotify::MergeFrom(const ChatRpcSyncChatNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatRpcSyncChatNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chatdata()) {
    mutable_chatdata()->::ChatObj::MergeFrom(from.chatdata());
  }
}

void ChatRpcSyncChatNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatRpcSyncChatNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatRpcSyncChatNotify::CopyFrom(const ChatRpcSyncChatNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatRpcSyncChatNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatRpcSyncChatNotify::IsInitialized() const {
  return true;
}

void ChatRpcSyncChatNotify::Swap(ChatRpcSyncChatNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatRpcSyncChatNotify::InternalSwap(ChatRpcSyncChatNotify* other) {
  using std::swap;
  swap(chatdata_, other->chatdata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatRpcSyncChatNotify::GetMetadata() const {
  protobuf_ChatRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ChatRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatRpcSyncChatNotify

// optional .ChatObj ChatData = 4;
bool ChatRpcSyncChatNotify::has_chatdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChatRpcSyncChatNotify::set_has_chatdata() {
  _has_bits_[0] |= 0x00000001u;
}
void ChatRpcSyncChatNotify::clear_has_chatdata() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChatRpcSyncChatNotify::clear_chatdata() {
  if (chatdata_ != NULL) chatdata_->::ChatObj::Clear();
  clear_has_chatdata();
}
const ::ChatObj& ChatRpcSyncChatNotify::chatdata() const {
  const ::ChatObj* p = chatdata_;
  // @@protoc_insertion_point(field_get:ChatRpcSyncChatNotify.ChatData)
  return p != NULL ? *p : *reinterpret_cast<const ::ChatObj*>(
      &::_ChatObj_default_instance_);
}
::ChatObj* ChatRpcSyncChatNotify::mutable_chatdata() {
  set_has_chatdata();
  if (chatdata_ == NULL) {
    chatdata_ = new ::ChatObj;
  }
  // @@protoc_insertion_point(field_mutable:ChatRpcSyncChatNotify.ChatData)
  return chatdata_;
}
::ChatObj* ChatRpcSyncChatNotify::release_chatdata() {
  // @@protoc_insertion_point(field_release:ChatRpcSyncChatNotify.ChatData)
  clear_has_chatdata();
  ::ChatObj* temp = chatdata_;
  chatdata_ = NULL;
  return temp;
}
void ChatRpcSyncChatNotify::set_allocated_chatdata(::ChatObj* chatdata) {
  delete chatdata_;
  chatdata_ = chatdata;
  if (chatdata) {
    set_has_chatdata();
  } else {
    clear_has_chatdata();
  }
  // @@protoc_insertion_point(field_set_allocated:ChatRpcSyncChatNotify.ChatData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatRpcSyncPrivateChatMsgNotify::kChatDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatRpcSyncPrivateChatMsgNotify::ChatRpcSyncPrivateChatMsgNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ChatRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatRpcSyncPrivateChatMsgNotify)
}
ChatRpcSyncPrivateChatMsgNotify::ChatRpcSyncPrivateChatMsgNotify(const ChatRpcSyncPrivateChatMsgNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      chatdata_(from.chatdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChatRpcSyncPrivateChatMsgNotify)
}

void ChatRpcSyncPrivateChatMsgNotify::SharedCtor() {
  _cached_size_ = 0;
}

ChatRpcSyncPrivateChatMsgNotify::~ChatRpcSyncPrivateChatMsgNotify() {
  // @@protoc_insertion_point(destructor:ChatRpcSyncPrivateChatMsgNotify)
  SharedDtor();
}

void ChatRpcSyncPrivateChatMsgNotify::SharedDtor() {
}

void ChatRpcSyncPrivateChatMsgNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatRpcSyncPrivateChatMsgNotify::descriptor() {
  protobuf_ChatRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ChatRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatRpcSyncPrivateChatMsgNotify& ChatRpcSyncPrivateChatMsgNotify::default_instance() {
  protobuf_ChatRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatRpcSyncPrivateChatMsgNotify* ChatRpcSyncPrivateChatMsgNotify::New(::google::protobuf::Arena* arena) const {
  ChatRpcSyncPrivateChatMsgNotify* n = new ChatRpcSyncPrivateChatMsgNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatRpcSyncPrivateChatMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatRpcSyncPrivateChatMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chatdata_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChatRpcSyncPrivateChatMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatRpcSyncPrivateChatMsgNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ChatObj ChatData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_chatdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatRpcSyncPrivateChatMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatRpcSyncPrivateChatMsgNotify)
  return false;
#undef DO_
}

void ChatRpcSyncPrivateChatMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatRpcSyncPrivateChatMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ChatObj ChatData = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chatdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->chatdata(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatRpcSyncPrivateChatMsgNotify)
}

::google::protobuf::uint8* ChatRpcSyncPrivateChatMsgNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatRpcSyncPrivateChatMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ChatObj ChatData = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chatdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->chatdata(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatRpcSyncPrivateChatMsgNotify)
  return target;
}

size_t ChatRpcSyncPrivateChatMsgNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatRpcSyncPrivateChatMsgNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ChatObj ChatData = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->chatdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->chatdata(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatRpcSyncPrivateChatMsgNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatRpcSyncPrivateChatMsgNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatRpcSyncPrivateChatMsgNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatRpcSyncPrivateChatMsgNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatRpcSyncPrivateChatMsgNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatRpcSyncPrivateChatMsgNotify)
    MergeFrom(*source);
  }
}

void ChatRpcSyncPrivateChatMsgNotify::MergeFrom(const ChatRpcSyncPrivateChatMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatRpcSyncPrivateChatMsgNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  chatdata_.MergeFrom(from.chatdata_);
}

void ChatRpcSyncPrivateChatMsgNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatRpcSyncPrivateChatMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatRpcSyncPrivateChatMsgNotify::CopyFrom(const ChatRpcSyncPrivateChatMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatRpcSyncPrivateChatMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatRpcSyncPrivateChatMsgNotify::IsInitialized() const {
  return true;
}

void ChatRpcSyncPrivateChatMsgNotify::Swap(ChatRpcSyncPrivateChatMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatRpcSyncPrivateChatMsgNotify::InternalSwap(ChatRpcSyncPrivateChatMsgNotify* other) {
  using std::swap;
  chatdata_.InternalSwap(&other->chatdata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatRpcSyncPrivateChatMsgNotify::GetMetadata() const {
  protobuf_ChatRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ChatRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatRpcSyncPrivateChatMsgNotify

// repeated .ChatObj ChatData = 3;
int ChatRpcSyncPrivateChatMsgNotify::chatdata_size() const {
  return chatdata_.size();
}
void ChatRpcSyncPrivateChatMsgNotify::clear_chatdata() {
  chatdata_.Clear();
}
const ::ChatObj& ChatRpcSyncPrivateChatMsgNotify::chatdata(int index) const {
  // @@protoc_insertion_point(field_get:ChatRpcSyncPrivateChatMsgNotify.ChatData)
  return chatdata_.Get(index);
}
::ChatObj* ChatRpcSyncPrivateChatMsgNotify::mutable_chatdata(int index) {
  // @@protoc_insertion_point(field_mutable:ChatRpcSyncPrivateChatMsgNotify.ChatData)
  return chatdata_.Mutable(index);
}
::ChatObj* ChatRpcSyncPrivateChatMsgNotify::add_chatdata() {
  // @@protoc_insertion_point(field_add:ChatRpcSyncPrivateChatMsgNotify.ChatData)
  return chatdata_.Add();
}
::google::protobuf::RepeatedPtrField< ::ChatObj >*
ChatRpcSyncPrivateChatMsgNotify::mutable_chatdata() {
  // @@protoc_insertion_point(field_mutable_list:ChatRpcSyncPrivateChatMsgNotify.ChatData)
  return &chatdata_;
}
const ::google::protobuf::RepeatedPtrField< ::ChatObj >&
ChatRpcSyncPrivateChatMsgNotify::chatdata() const {
  // @@protoc_insertion_point(field_list:ChatRpcSyncPrivateChatMsgNotify.ChatData)
  return chatdata_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatRpcSvrChatNotify::kChatDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatRpcSvrChatNotify::ChatRpcSvrChatNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ChatRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatRpcSvrChatNotify)
}
ChatRpcSvrChatNotify::ChatRpcSvrChatNotify(const ChatRpcSvrChatNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_chatdata()) {
    chatdata_ = new ::ChatNetData(*from.chatdata_);
  } else {
    chatdata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ChatRpcSvrChatNotify)
}

void ChatRpcSvrChatNotify::SharedCtor() {
  _cached_size_ = 0;
  chatdata_ = NULL;
}

ChatRpcSvrChatNotify::~ChatRpcSvrChatNotify() {
  // @@protoc_insertion_point(destructor:ChatRpcSvrChatNotify)
  SharedDtor();
}

void ChatRpcSvrChatNotify::SharedDtor() {
  if (this != internal_default_instance()) delete chatdata_;
}

void ChatRpcSvrChatNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatRpcSvrChatNotify::descriptor() {
  protobuf_ChatRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ChatRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatRpcSvrChatNotify& ChatRpcSvrChatNotify::default_instance() {
  protobuf_ChatRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatRpcSvrChatNotify* ChatRpcSvrChatNotify::New(::google::protobuf::Arena* arena) const {
  ChatRpcSvrChatNotify* n = new ChatRpcSvrChatNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatRpcSvrChatNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatRpcSvrChatNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_chatdata()) {
    GOOGLE_DCHECK(chatdata_ != NULL);
    chatdata_->::ChatNetData::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChatRpcSvrChatNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatRpcSvrChatNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ChatNetData ChatData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chatdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatRpcSvrChatNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatRpcSvrChatNotify)
  return false;
#undef DO_
}

void ChatRpcSvrChatNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatRpcSvrChatNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ChatNetData ChatData = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->chatdata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatRpcSvrChatNotify)
}

::google::protobuf::uint8* ChatRpcSvrChatNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatRpcSvrChatNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ChatNetData ChatData = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->chatdata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatRpcSvrChatNotify)
  return target;
}

size_t ChatRpcSvrChatNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatRpcSvrChatNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .ChatNetData ChatData = 1;
  if (has_chatdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->chatdata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatRpcSvrChatNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatRpcSvrChatNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatRpcSvrChatNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatRpcSvrChatNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatRpcSvrChatNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatRpcSvrChatNotify)
    MergeFrom(*source);
  }
}

void ChatRpcSvrChatNotify::MergeFrom(const ChatRpcSvrChatNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatRpcSvrChatNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chatdata()) {
    mutable_chatdata()->::ChatNetData::MergeFrom(from.chatdata());
  }
}

void ChatRpcSvrChatNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatRpcSvrChatNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatRpcSvrChatNotify::CopyFrom(const ChatRpcSvrChatNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatRpcSvrChatNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatRpcSvrChatNotify::IsInitialized() const {
  return true;
}

void ChatRpcSvrChatNotify::Swap(ChatRpcSvrChatNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatRpcSvrChatNotify::InternalSwap(ChatRpcSvrChatNotify* other) {
  using std::swap;
  swap(chatdata_, other->chatdata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatRpcSvrChatNotify::GetMetadata() const {
  protobuf_ChatRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ChatRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatRpcSvrChatNotify

// optional .ChatNetData ChatData = 1;
bool ChatRpcSvrChatNotify::has_chatdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChatRpcSvrChatNotify::set_has_chatdata() {
  _has_bits_[0] |= 0x00000001u;
}
void ChatRpcSvrChatNotify::clear_has_chatdata() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChatRpcSvrChatNotify::clear_chatdata() {
  if (chatdata_ != NULL) chatdata_->::ChatNetData::Clear();
  clear_has_chatdata();
}
const ::ChatNetData& ChatRpcSvrChatNotify::chatdata() const {
  const ::ChatNetData* p = chatdata_;
  // @@protoc_insertion_point(field_get:ChatRpcSvrChatNotify.ChatData)
  return p != NULL ? *p : *reinterpret_cast<const ::ChatNetData*>(
      &::_ChatNetData_default_instance_);
}
::ChatNetData* ChatRpcSvrChatNotify::mutable_chatdata() {
  set_has_chatdata();
  if (chatdata_ == NULL) {
    chatdata_ = new ::ChatNetData;
  }
  // @@protoc_insertion_point(field_mutable:ChatRpcSvrChatNotify.ChatData)
  return chatdata_;
}
::ChatNetData* ChatRpcSvrChatNotify::release_chatdata() {
  // @@protoc_insertion_point(field_release:ChatRpcSvrChatNotify.ChatData)
  clear_has_chatdata();
  ::ChatNetData* temp = chatdata_;
  chatdata_ = NULL;
  return temp;
}
void ChatRpcSvrChatNotify::set_allocated_chatdata(::ChatNetData* chatdata) {
  delete chatdata_;
  chatdata_ = chatdata;
  if (chatdata) {
    set_has_chatdata();
  } else {
    clear_has_chatdata();
  }
  // @@protoc_insertion_point(field_set_allocated:ChatRpcSvrChatNotify.ChatData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatRpcChatFun1::kTargetUserIdFieldNumber;
const int ChatRpcChatFun1::kTemplateIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatRpcChatFun1::ChatRpcChatFun1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ChatRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatRpcChatFun1)
}
ChatRpcChatFun1::ChatRpcChatFun1(const ChatRpcChatFun1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&templateid_, &from.templateid_,
    static_cast<size_t>(reinterpret_cast<char*>(&targetuserid_) -
    reinterpret_cast<char*>(&templateid_)) + sizeof(targetuserid_));
  // @@protoc_insertion_point(copy_constructor:ChatRpcChatFun1)
}

void ChatRpcChatFun1::SharedCtor() {
  _cached_size_ = 0;
  templateid_ = -1;
  targetuserid_ = GOOGLE_LONGLONG(-1);
}

ChatRpcChatFun1::~ChatRpcChatFun1() {
  // @@protoc_insertion_point(destructor:ChatRpcChatFun1)
  SharedDtor();
}

void ChatRpcChatFun1::SharedDtor() {
}

void ChatRpcChatFun1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatRpcChatFun1::descriptor() {
  protobuf_ChatRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ChatRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatRpcChatFun1& ChatRpcChatFun1::default_instance() {
  protobuf_ChatRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatRpcChatFun1* ChatRpcChatFun1::New(::google::protobuf::Arena* arena) const {
  ChatRpcChatFun1* n = new ChatRpcChatFun1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatRpcChatFun1::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatRpcChatFun1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    templateid_ = -1;
    targetuserid_ = GOOGLE_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChatRpcChatFun1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatRpcChatFun1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 TargetUserId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_targetuserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &targetuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TemplateId = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatRpcChatFun1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatRpcChatFun1)
  return false;
#undef DO_
}

void ChatRpcChatFun1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatRpcChatFun1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 TargetUserId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->targetuserid(), output);
  }

  // optional sint32 TemplateId = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->templateid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ChatRpcChatFun1)
}

::google::protobuf::uint8* ChatRpcChatFun1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatRpcChatFun1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 TargetUserId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->targetuserid(), target);
  }

  // optional sint32 TemplateId = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->templateid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatRpcChatFun1)
  return target;
}

size_t ChatRpcChatFun1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatRpcChatFun1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 TemplateId = 3 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint64 TargetUserId = 2 [default = -1];
    if (has_targetuserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->targetuserid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatRpcChatFun1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatRpcChatFun1)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatRpcChatFun1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatRpcChatFun1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatRpcChatFun1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatRpcChatFun1)
    MergeFrom(*source);
  }
}

void ChatRpcChatFun1::MergeFrom(const ChatRpcChatFun1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatRpcChatFun1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000002u) {
      targetuserid_ = from.targetuserid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChatRpcChatFun1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatRpcChatFun1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatRpcChatFun1::CopyFrom(const ChatRpcChatFun1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatRpcChatFun1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatRpcChatFun1::IsInitialized() const {
  return true;
}

void ChatRpcChatFun1::Swap(ChatRpcChatFun1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatRpcChatFun1::InternalSwap(ChatRpcChatFun1* other) {
  using std::swap;
  swap(templateid_, other->templateid_);
  swap(targetuserid_, other->targetuserid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatRpcChatFun1::GetMetadata() const {
  protobuf_ChatRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ChatRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatRpcChatFun1

// optional sint64 TargetUserId = 2 [default = -1];
bool ChatRpcChatFun1::has_targetuserid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ChatRpcChatFun1::set_has_targetuserid() {
  _has_bits_[0] |= 0x00000002u;
}
void ChatRpcChatFun1::clear_has_targetuserid() {
  _has_bits_[0] &= ~0x00000002u;
}
void ChatRpcChatFun1::clear_targetuserid() {
  targetuserid_ = GOOGLE_LONGLONG(-1);
  clear_has_targetuserid();
}
::google::protobuf::int64 ChatRpcChatFun1::targetuserid() const {
  // @@protoc_insertion_point(field_get:ChatRpcChatFun1.TargetUserId)
  return targetuserid_;
}
void ChatRpcChatFun1::set_targetuserid(::google::protobuf::int64 value) {
  set_has_targetuserid();
  targetuserid_ = value;
  // @@protoc_insertion_point(field_set:ChatRpcChatFun1.TargetUserId)
}

// optional sint32 TemplateId = 3 [default = -1];
bool ChatRpcChatFun1::has_templateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChatRpcChatFun1::set_has_templateid() {
  _has_bits_[0] |= 0x00000001u;
}
void ChatRpcChatFun1::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChatRpcChatFun1::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 ChatRpcChatFun1::templateid() const {
  // @@protoc_insertion_point(field_get:ChatRpcChatFun1.TemplateId)
  return templateid_;
}
void ChatRpcChatFun1::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:ChatRpcChatFun1.TemplateId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
