// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChatRpc.proto

#ifndef PROTOBUF_ChatRpc_2eproto__INCLUDED
#define PROTOBUF_ChatRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)
class ChatRpcChatFun1;
class ChatRpcChatFun1DefaultTypeInternal;
extern ChatRpcChatFun1DefaultTypeInternal _ChatRpcChatFun1_default_instance_;
class ChatRpcSendChatAsk;
class ChatRpcSendChatAskDefaultTypeInternal;
extern ChatRpcSendChatAskDefaultTypeInternal _ChatRpcSendChatAsk_default_instance_;
class ChatRpcSendChatReply;
class ChatRpcSendChatReplyDefaultTypeInternal;
extern ChatRpcSendChatReplyDefaultTypeInternal _ChatRpcSendChatReply_default_instance_;
class ChatRpcSvrChatNotify;
class ChatRpcSvrChatNotifyDefaultTypeInternal;
extern ChatRpcSvrChatNotifyDefaultTypeInternal _ChatRpcSvrChatNotify_default_instance_;
class ChatRpcSyncChatNotify;
class ChatRpcSyncChatNotifyDefaultTypeInternal;
extern ChatRpcSyncChatNotifyDefaultTypeInternal _ChatRpcSyncChatNotify_default_instance_;
class ChatRpcSyncPrivateChatMsgNotify;
class ChatRpcSyncPrivateChatMsgNotifyDefaultTypeInternal;
extern ChatRpcSyncPrivateChatMsgNotifyDefaultTypeInternal _ChatRpcSyncPrivateChatMsgNotify_default_instance_;

namespace protobuf_ChatRpc_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_ChatRpc_2eproto

// ===================================================================

class ChatRpcSendChatAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChatRpcSendChatAsk) */ {
 public:
  ChatRpcSendChatAsk();
  virtual ~ChatRpcSendChatAsk();

  ChatRpcSendChatAsk(const ChatRpcSendChatAsk& from);

  inline ChatRpcSendChatAsk& operator=(const ChatRpcSendChatAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatRpcSendChatAsk(ChatRpcSendChatAsk&& from) noexcept
    : ChatRpcSendChatAsk() {
    *this = ::std::move(from);
  }

  inline ChatRpcSendChatAsk& operator=(ChatRpcSendChatAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatRpcSendChatAsk& default_instance();

  static inline const ChatRpcSendChatAsk* internal_default_instance() {
    return reinterpret_cast<const ChatRpcSendChatAsk*>(
               &_ChatRpcSendChatAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ChatRpcSendChatAsk* other);
  friend void swap(ChatRpcSendChatAsk& a, ChatRpcSendChatAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatRpcSendChatAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatRpcSendChatAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatRpcSendChatAsk& from);
  void MergeFrom(const ChatRpcSendChatAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatRpcSendChatAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ChatMsgObj ChatMsg = 1;
  bool has_chatmsg() const;
  void clear_chatmsg();
  static const int kChatMsgFieldNumber = 1;
  const ::ChatMsgObj& chatmsg() const;
  ::ChatMsgObj* mutable_chatmsg();
  ::ChatMsgObj* release_chatmsg();
  void set_allocated_chatmsg(::ChatMsgObj* chatmsg);

  // @@protoc_insertion_point(class_scope:ChatRpcSendChatAsk)
 private:
  void set_has_chatmsg();
  void clear_has_chatmsg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ChatMsgObj* chatmsg_;
  friend struct protobuf_ChatRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatRpcSendChatReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChatRpcSendChatReply) */ {
 public:
  ChatRpcSendChatReply();
  virtual ~ChatRpcSendChatReply();

  ChatRpcSendChatReply(const ChatRpcSendChatReply& from);

  inline ChatRpcSendChatReply& operator=(const ChatRpcSendChatReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatRpcSendChatReply(ChatRpcSendChatReply&& from) noexcept
    : ChatRpcSendChatReply() {
    *this = ::std::move(from);
  }

  inline ChatRpcSendChatReply& operator=(ChatRpcSendChatReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatRpcSendChatReply& default_instance();

  static inline const ChatRpcSendChatReply* internal_default_instance() {
    return reinterpret_cast<const ChatRpcSendChatReply*>(
               &_ChatRpcSendChatReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ChatRpcSendChatReply* other);
  friend void swap(ChatRpcSendChatReply& a, ChatRpcSendChatReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatRpcSendChatReply* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatRpcSendChatReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatRpcSendChatReply& from);
  void MergeFrom(const ChatRpcSendChatReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatRpcSendChatReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChatRpcSendChatReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_ChatRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatRpcSyncChatNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChatRpcSyncChatNotify) */ {
 public:
  ChatRpcSyncChatNotify();
  virtual ~ChatRpcSyncChatNotify();

  ChatRpcSyncChatNotify(const ChatRpcSyncChatNotify& from);

  inline ChatRpcSyncChatNotify& operator=(const ChatRpcSyncChatNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatRpcSyncChatNotify(ChatRpcSyncChatNotify&& from) noexcept
    : ChatRpcSyncChatNotify() {
    *this = ::std::move(from);
  }

  inline ChatRpcSyncChatNotify& operator=(ChatRpcSyncChatNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatRpcSyncChatNotify& default_instance();

  static inline const ChatRpcSyncChatNotify* internal_default_instance() {
    return reinterpret_cast<const ChatRpcSyncChatNotify*>(
               &_ChatRpcSyncChatNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ChatRpcSyncChatNotify* other);
  friend void swap(ChatRpcSyncChatNotify& a, ChatRpcSyncChatNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatRpcSyncChatNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatRpcSyncChatNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatRpcSyncChatNotify& from);
  void MergeFrom(const ChatRpcSyncChatNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatRpcSyncChatNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ChatObj ChatData = 4;
  bool has_chatdata() const;
  void clear_chatdata();
  static const int kChatDataFieldNumber = 4;
  const ::ChatObj& chatdata() const;
  ::ChatObj* mutable_chatdata();
  ::ChatObj* release_chatdata();
  void set_allocated_chatdata(::ChatObj* chatdata);

  // @@protoc_insertion_point(class_scope:ChatRpcSyncChatNotify)
 private:
  void set_has_chatdata();
  void clear_has_chatdata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ChatObj* chatdata_;
  friend struct protobuf_ChatRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatRpcSyncPrivateChatMsgNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChatRpcSyncPrivateChatMsgNotify) */ {
 public:
  ChatRpcSyncPrivateChatMsgNotify();
  virtual ~ChatRpcSyncPrivateChatMsgNotify();

  ChatRpcSyncPrivateChatMsgNotify(const ChatRpcSyncPrivateChatMsgNotify& from);

  inline ChatRpcSyncPrivateChatMsgNotify& operator=(const ChatRpcSyncPrivateChatMsgNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatRpcSyncPrivateChatMsgNotify(ChatRpcSyncPrivateChatMsgNotify&& from) noexcept
    : ChatRpcSyncPrivateChatMsgNotify() {
    *this = ::std::move(from);
  }

  inline ChatRpcSyncPrivateChatMsgNotify& operator=(ChatRpcSyncPrivateChatMsgNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatRpcSyncPrivateChatMsgNotify& default_instance();

  static inline const ChatRpcSyncPrivateChatMsgNotify* internal_default_instance() {
    return reinterpret_cast<const ChatRpcSyncPrivateChatMsgNotify*>(
               &_ChatRpcSyncPrivateChatMsgNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ChatRpcSyncPrivateChatMsgNotify* other);
  friend void swap(ChatRpcSyncPrivateChatMsgNotify& a, ChatRpcSyncPrivateChatMsgNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatRpcSyncPrivateChatMsgNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatRpcSyncPrivateChatMsgNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatRpcSyncPrivateChatMsgNotify& from);
  void MergeFrom(const ChatRpcSyncPrivateChatMsgNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatRpcSyncPrivateChatMsgNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ChatObj ChatData = 3;
  int chatdata_size() const;
  void clear_chatdata();
  static const int kChatDataFieldNumber = 3;
  const ::ChatObj& chatdata(int index) const;
  ::ChatObj* mutable_chatdata(int index);
  ::ChatObj* add_chatdata();
  ::google::protobuf::RepeatedPtrField< ::ChatObj >*
      mutable_chatdata();
  const ::google::protobuf::RepeatedPtrField< ::ChatObj >&
      chatdata() const;

  // @@protoc_insertion_point(class_scope:ChatRpcSyncPrivateChatMsgNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ChatObj > chatdata_;
  friend struct protobuf_ChatRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatRpcSvrChatNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChatRpcSvrChatNotify) */ {
 public:
  ChatRpcSvrChatNotify();
  virtual ~ChatRpcSvrChatNotify();

  ChatRpcSvrChatNotify(const ChatRpcSvrChatNotify& from);

  inline ChatRpcSvrChatNotify& operator=(const ChatRpcSvrChatNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatRpcSvrChatNotify(ChatRpcSvrChatNotify&& from) noexcept
    : ChatRpcSvrChatNotify() {
    *this = ::std::move(from);
  }

  inline ChatRpcSvrChatNotify& operator=(ChatRpcSvrChatNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatRpcSvrChatNotify& default_instance();

  static inline const ChatRpcSvrChatNotify* internal_default_instance() {
    return reinterpret_cast<const ChatRpcSvrChatNotify*>(
               &_ChatRpcSvrChatNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ChatRpcSvrChatNotify* other);
  friend void swap(ChatRpcSvrChatNotify& a, ChatRpcSvrChatNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatRpcSvrChatNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatRpcSvrChatNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatRpcSvrChatNotify& from);
  void MergeFrom(const ChatRpcSvrChatNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatRpcSvrChatNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ChatNetData ChatData = 1;
  bool has_chatdata() const;
  void clear_chatdata();
  static const int kChatDataFieldNumber = 1;
  const ::ChatNetData& chatdata() const;
  ::ChatNetData* mutable_chatdata();
  ::ChatNetData* release_chatdata();
  void set_allocated_chatdata(::ChatNetData* chatdata);

  // @@protoc_insertion_point(class_scope:ChatRpcSvrChatNotify)
 private:
  void set_has_chatdata();
  void clear_has_chatdata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ChatNetData* chatdata_;
  friend struct protobuf_ChatRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatRpcChatFun1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChatRpcChatFun1) */ {
 public:
  ChatRpcChatFun1();
  virtual ~ChatRpcChatFun1();

  ChatRpcChatFun1(const ChatRpcChatFun1& from);

  inline ChatRpcChatFun1& operator=(const ChatRpcChatFun1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatRpcChatFun1(ChatRpcChatFun1&& from) noexcept
    : ChatRpcChatFun1() {
    *this = ::std::move(from);
  }

  inline ChatRpcChatFun1& operator=(ChatRpcChatFun1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatRpcChatFun1& default_instance();

  static inline const ChatRpcChatFun1* internal_default_instance() {
    return reinterpret_cast<const ChatRpcChatFun1*>(
               &_ChatRpcChatFun1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ChatRpcChatFun1* other);
  friend void swap(ChatRpcChatFun1& a, ChatRpcChatFun1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatRpcChatFun1* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatRpcChatFun1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatRpcChatFun1& from);
  void MergeFrom(const ChatRpcChatFun1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatRpcChatFun1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 TemplateId = 3 [default = -1];
  bool has_templateid() const;
  void clear_templateid();
  static const int kTemplateIdFieldNumber = 3;
  ::google::protobuf::int32 templateid() const;
  void set_templateid(::google::protobuf::int32 value);

  // optional sint64 TargetUserId = 2 [default = -1];
  bool has_targetuserid() const;
  void clear_targetuserid();
  static const int kTargetUserIdFieldNumber = 2;
  ::google::protobuf::int64 targetuserid() const;
  void set_targetuserid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ChatRpcChatFun1)
 private:
  void set_has_targetuserid();
  void clear_has_targetuserid();
  void set_has_templateid();
  void clear_has_templateid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 templateid_;
  ::google::protobuf::int64 targetuserid_;
  friend struct protobuf_ChatRpc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ChatRpcSendChatAsk

// optional .ChatMsgObj ChatMsg = 1;
inline bool ChatRpcSendChatAsk::has_chatmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatRpcSendChatAsk::set_has_chatmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatRpcSendChatAsk::clear_has_chatmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatRpcSendChatAsk::clear_chatmsg() {
  if (chatmsg_ != NULL) chatmsg_->::ChatMsgObj::Clear();
  clear_has_chatmsg();
}
inline const ::ChatMsgObj& ChatRpcSendChatAsk::chatmsg() const {
  const ::ChatMsgObj* p = chatmsg_;
  // @@protoc_insertion_point(field_get:ChatRpcSendChatAsk.ChatMsg)
  return p != NULL ? *p : *reinterpret_cast<const ::ChatMsgObj*>(
      &::_ChatMsgObj_default_instance_);
}
inline ::ChatMsgObj* ChatRpcSendChatAsk::mutable_chatmsg() {
  set_has_chatmsg();
  if (chatmsg_ == NULL) {
    chatmsg_ = new ::ChatMsgObj;
  }
  // @@protoc_insertion_point(field_mutable:ChatRpcSendChatAsk.ChatMsg)
  return chatmsg_;
}
inline ::ChatMsgObj* ChatRpcSendChatAsk::release_chatmsg() {
  // @@protoc_insertion_point(field_release:ChatRpcSendChatAsk.ChatMsg)
  clear_has_chatmsg();
  ::ChatMsgObj* temp = chatmsg_;
  chatmsg_ = NULL;
  return temp;
}
inline void ChatRpcSendChatAsk::set_allocated_chatmsg(::ChatMsgObj* chatmsg) {
  delete chatmsg_;
  chatmsg_ = chatmsg;
  if (chatmsg) {
    set_has_chatmsg();
  } else {
    clear_has_chatmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:ChatRpcSendChatAsk.ChatMsg)
}

// -------------------------------------------------------------------

// ChatRpcSendChatReply

// optional sint32 Result = 1 [default = -9999];
inline bool ChatRpcSendChatReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatRpcSendChatReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatRpcSendChatReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatRpcSendChatReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 ChatRpcSendChatReply::result() const {
  // @@protoc_insertion_point(field_get:ChatRpcSendChatReply.Result)
  return result_;
}
inline void ChatRpcSendChatReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ChatRpcSendChatReply.Result)
}

// -------------------------------------------------------------------

// ChatRpcSyncChatNotify

// optional .ChatObj ChatData = 4;
inline bool ChatRpcSyncChatNotify::has_chatdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatRpcSyncChatNotify::set_has_chatdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatRpcSyncChatNotify::clear_has_chatdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatRpcSyncChatNotify::clear_chatdata() {
  if (chatdata_ != NULL) chatdata_->::ChatObj::Clear();
  clear_has_chatdata();
}
inline const ::ChatObj& ChatRpcSyncChatNotify::chatdata() const {
  const ::ChatObj* p = chatdata_;
  // @@protoc_insertion_point(field_get:ChatRpcSyncChatNotify.ChatData)
  return p != NULL ? *p : *reinterpret_cast<const ::ChatObj*>(
      &::_ChatObj_default_instance_);
}
inline ::ChatObj* ChatRpcSyncChatNotify::mutable_chatdata() {
  set_has_chatdata();
  if (chatdata_ == NULL) {
    chatdata_ = new ::ChatObj;
  }
  // @@protoc_insertion_point(field_mutable:ChatRpcSyncChatNotify.ChatData)
  return chatdata_;
}
inline ::ChatObj* ChatRpcSyncChatNotify::release_chatdata() {
  // @@protoc_insertion_point(field_release:ChatRpcSyncChatNotify.ChatData)
  clear_has_chatdata();
  ::ChatObj* temp = chatdata_;
  chatdata_ = NULL;
  return temp;
}
inline void ChatRpcSyncChatNotify::set_allocated_chatdata(::ChatObj* chatdata) {
  delete chatdata_;
  chatdata_ = chatdata;
  if (chatdata) {
    set_has_chatdata();
  } else {
    clear_has_chatdata();
  }
  // @@protoc_insertion_point(field_set_allocated:ChatRpcSyncChatNotify.ChatData)
}

// -------------------------------------------------------------------

// ChatRpcSyncPrivateChatMsgNotify

// repeated .ChatObj ChatData = 3;
inline int ChatRpcSyncPrivateChatMsgNotify::chatdata_size() const {
  return chatdata_.size();
}
inline void ChatRpcSyncPrivateChatMsgNotify::clear_chatdata() {
  chatdata_.Clear();
}
inline const ::ChatObj& ChatRpcSyncPrivateChatMsgNotify::chatdata(int index) const {
  // @@protoc_insertion_point(field_get:ChatRpcSyncPrivateChatMsgNotify.ChatData)
  return chatdata_.Get(index);
}
inline ::ChatObj* ChatRpcSyncPrivateChatMsgNotify::mutable_chatdata(int index) {
  // @@protoc_insertion_point(field_mutable:ChatRpcSyncPrivateChatMsgNotify.ChatData)
  return chatdata_.Mutable(index);
}
inline ::ChatObj* ChatRpcSyncPrivateChatMsgNotify::add_chatdata() {
  // @@protoc_insertion_point(field_add:ChatRpcSyncPrivateChatMsgNotify.ChatData)
  return chatdata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ChatObj >*
ChatRpcSyncPrivateChatMsgNotify::mutable_chatdata() {
  // @@protoc_insertion_point(field_mutable_list:ChatRpcSyncPrivateChatMsgNotify.ChatData)
  return &chatdata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ChatObj >&
ChatRpcSyncPrivateChatMsgNotify::chatdata() const {
  // @@protoc_insertion_point(field_list:ChatRpcSyncPrivateChatMsgNotify.ChatData)
  return chatdata_;
}

// -------------------------------------------------------------------

// ChatRpcSvrChatNotify

// optional .ChatNetData ChatData = 1;
inline bool ChatRpcSvrChatNotify::has_chatdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatRpcSvrChatNotify::set_has_chatdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatRpcSvrChatNotify::clear_has_chatdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatRpcSvrChatNotify::clear_chatdata() {
  if (chatdata_ != NULL) chatdata_->::ChatNetData::Clear();
  clear_has_chatdata();
}
inline const ::ChatNetData& ChatRpcSvrChatNotify::chatdata() const {
  const ::ChatNetData* p = chatdata_;
  // @@protoc_insertion_point(field_get:ChatRpcSvrChatNotify.ChatData)
  return p != NULL ? *p : *reinterpret_cast<const ::ChatNetData*>(
      &::_ChatNetData_default_instance_);
}
inline ::ChatNetData* ChatRpcSvrChatNotify::mutable_chatdata() {
  set_has_chatdata();
  if (chatdata_ == NULL) {
    chatdata_ = new ::ChatNetData;
  }
  // @@protoc_insertion_point(field_mutable:ChatRpcSvrChatNotify.ChatData)
  return chatdata_;
}
inline ::ChatNetData* ChatRpcSvrChatNotify::release_chatdata() {
  // @@protoc_insertion_point(field_release:ChatRpcSvrChatNotify.ChatData)
  clear_has_chatdata();
  ::ChatNetData* temp = chatdata_;
  chatdata_ = NULL;
  return temp;
}
inline void ChatRpcSvrChatNotify::set_allocated_chatdata(::ChatNetData* chatdata) {
  delete chatdata_;
  chatdata_ = chatdata;
  if (chatdata) {
    set_has_chatdata();
  } else {
    clear_has_chatdata();
  }
  // @@protoc_insertion_point(field_set_allocated:ChatRpcSvrChatNotify.ChatData)
}

// -------------------------------------------------------------------

// ChatRpcChatFun1

// optional sint64 TargetUserId = 2 [default = -1];
inline bool ChatRpcChatFun1::has_targetuserid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatRpcChatFun1::set_has_targetuserid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatRpcChatFun1::clear_has_targetuserid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatRpcChatFun1::clear_targetuserid() {
  targetuserid_ = GOOGLE_LONGLONG(-1);
  clear_has_targetuserid();
}
inline ::google::protobuf::int64 ChatRpcChatFun1::targetuserid() const {
  // @@protoc_insertion_point(field_get:ChatRpcChatFun1.TargetUserId)
  return targetuserid_;
}
inline void ChatRpcChatFun1::set_targetuserid(::google::protobuf::int64 value) {
  set_has_targetuserid();
  targetuserid_ = value;
  // @@protoc_insertion_point(field_set:ChatRpcChatFun1.TargetUserId)
}

// optional sint32 TemplateId = 3 [default = -1];
inline bool ChatRpcChatFun1::has_templateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatRpcChatFun1::set_has_templateid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatRpcChatFun1::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatRpcChatFun1::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
inline ::google::protobuf::int32 ChatRpcChatFun1::templateid() const {
  // @@protoc_insertion_point(field_get:ChatRpcChatFun1.TemplateId)
  return templateid_;
}
inline void ChatRpcChatFun1::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:ChatRpcChatFun1.TemplateId)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ChatRpc_2eproto__INCLUDED
