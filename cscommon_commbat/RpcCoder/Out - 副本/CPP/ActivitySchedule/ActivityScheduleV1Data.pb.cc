// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActivityScheduleV1Data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ActivityScheduleV1Data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class ActivityScheduleActiveDateV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityScheduleActiveDateV1>
     _instance;
} _ActivityScheduleActiveDateV1_default_instance_;
class ActivityScheduleActiveValueV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityScheduleActiveValueV1>
     _instance;
} _ActivityScheduleActiveValueV1_default_instance_;

namespace protobuf_ActivityScheduleV1Data_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleActiveDateV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleActiveDateV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleActiveDateV1, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleActiveDateV1, time_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleActiveValueV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleActiveValueV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleActiveValueV1, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleActiveValueV1, num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleActiveValueV1, vitality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleActiveValueV1, starttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleActiveValueV1, finishtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleActiveValueV1, activitymaxnum_),
  0,
  1,
  2,
  4,
  5,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(ActivityScheduleActiveDateV1)},
  { 9, 20, sizeof(ActivityScheduleActiveValueV1)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityScheduleActiveDateV1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityScheduleActiveValueV1_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ActivityScheduleV1Data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _ActivityScheduleActiveDateV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityScheduleActiveDateV1_default_instance_);_ActivityScheduleActiveValueV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityScheduleActiveValueV1_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\034ActivityScheduleV1Data.proto\032\022PublicSt"
      "ruct.proto\"_\n\034ActivityScheduleActiveDate"
      "V1\022-\n\005Value\030\001 \003(\0132\036.ActivityScheduleActi"
      "veValueV1\022\020\n\004Time\030\002 \001(\021:\002-1\"\236\001\n\035Activity"
      "ScheduleActiveValueV1\022\r\n\002ID\030\001 \001(\021:\0010\022\016\n\003"
      "Num\030\002 \001(\021:\0010\022\023\n\010Vitality\030\003 \001(\021:\0010\022\025\n\tSta"
      "rtTime\030\004 \001(\021:\002-1\022\026\n\nFinishTime\030\005 \001(\021:\002-1"
      "\022\032\n\016ActivityMaxNum\030\006 \001(\021:\002-1"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 308);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ActivityScheduleV1Data.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_ActivityScheduleV1Data_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityScheduleActiveDateV1::kValueFieldNumber;
const int ActivityScheduleActiveDateV1::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityScheduleActiveDateV1::ActivityScheduleActiveDateV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityScheduleV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityScheduleActiveDateV1)
}
ActivityScheduleActiveDateV1::ActivityScheduleActiveDateV1(const ActivityScheduleActiveDateV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      value_(from.value_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:ActivityScheduleActiveDateV1)
}

void ActivityScheduleActiveDateV1::SharedCtor() {
  _cached_size_ = 0;
  time_ = -1;
}

ActivityScheduleActiveDateV1::~ActivityScheduleActiveDateV1() {
  // @@protoc_insertion_point(destructor:ActivityScheduleActiveDateV1)
  SharedDtor();
}

void ActivityScheduleActiveDateV1::SharedDtor() {
}

void ActivityScheduleActiveDateV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityScheduleActiveDateV1::descriptor() {
  protobuf_ActivityScheduleV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityScheduleActiveDateV1& ActivityScheduleActiveDateV1::default_instance() {
  protobuf_ActivityScheduleV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityScheduleActiveDateV1* ActivityScheduleActiveDateV1::New(::google::protobuf::Arena* arena) const {
  ActivityScheduleActiveDateV1* n = new ActivityScheduleActiveDateV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityScheduleActiveDateV1::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityScheduleActiveDateV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  time_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityScheduleActiveDateV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityScheduleActiveDateV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ActivityScheduleActiveValueV1 Value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Time = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityScheduleActiveDateV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityScheduleActiveDateV1)
  return false;
#undef DO_
}

void ActivityScheduleActiveDateV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityScheduleActiveDateV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ActivityScheduleActiveValueV1 Value = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->value_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->value(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional sint32 Time = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityScheduleActiveDateV1)
}

::google::protobuf::uint8* ActivityScheduleActiveDateV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityScheduleActiveDateV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ActivityScheduleActiveValueV1 Value = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->value_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->value(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional sint32 Time = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityScheduleActiveDateV1)
  return target;
}

size_t ActivityScheduleActiveDateV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityScheduleActiveDateV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ActivityScheduleActiveValueV1 Value = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->value_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->value(static_cast<int>(i)));
    }
  }

  // optional sint32 Time = 2 [default = -1];
  if (has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityScheduleActiveDateV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityScheduleActiveDateV1)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityScheduleActiveDateV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityScheduleActiveDateV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityScheduleActiveDateV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityScheduleActiveDateV1)
    MergeFrom(*source);
  }
}

void ActivityScheduleActiveDateV1::MergeFrom(const ActivityScheduleActiveDateV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityScheduleActiveDateV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
  if (from.has_time()) {
    set_time(from.time());
  }
}

void ActivityScheduleActiveDateV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityScheduleActiveDateV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityScheduleActiveDateV1::CopyFrom(const ActivityScheduleActiveDateV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityScheduleActiveDateV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityScheduleActiveDateV1::IsInitialized() const {
  return true;
}

void ActivityScheduleActiveDateV1::Swap(ActivityScheduleActiveDateV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityScheduleActiveDateV1::InternalSwap(ActivityScheduleActiveDateV1* other) {
  using std::swap;
  value_.InternalSwap(&other->value_);
  swap(time_, other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityScheduleActiveDateV1::GetMetadata() const {
  protobuf_ActivityScheduleV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityScheduleActiveDateV1

// repeated .ActivityScheduleActiveValueV1 Value = 1;
int ActivityScheduleActiveDateV1::value_size() const {
  return value_.size();
}
void ActivityScheduleActiveDateV1::clear_value() {
  value_.Clear();
}
const ::ActivityScheduleActiveValueV1& ActivityScheduleActiveDateV1::value(int index) const {
  // @@protoc_insertion_point(field_get:ActivityScheduleActiveDateV1.Value)
  return value_.Get(index);
}
::ActivityScheduleActiveValueV1* ActivityScheduleActiveDateV1::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityScheduleActiveDateV1.Value)
  return value_.Mutable(index);
}
::ActivityScheduleActiveValueV1* ActivityScheduleActiveDateV1::add_value() {
  // @@protoc_insertion_point(field_add:ActivityScheduleActiveDateV1.Value)
  return value_.Add();
}
::google::protobuf::RepeatedPtrField< ::ActivityScheduleActiveValueV1 >*
ActivityScheduleActiveDateV1::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:ActivityScheduleActiveDateV1.Value)
  return &value_;
}
const ::google::protobuf::RepeatedPtrField< ::ActivityScheduleActiveValueV1 >&
ActivityScheduleActiveDateV1::value() const {
  // @@protoc_insertion_point(field_list:ActivityScheduleActiveDateV1.Value)
  return value_;
}

// optional sint32 Time = 2 [default = -1];
bool ActivityScheduleActiveDateV1::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityScheduleActiveDateV1::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityScheduleActiveDateV1::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityScheduleActiveDateV1::clear_time() {
  time_ = -1;
  clear_has_time();
}
::google::protobuf::int32 ActivityScheduleActiveDateV1::time() const {
  // @@protoc_insertion_point(field_get:ActivityScheduleActiveDateV1.Time)
  return time_;
}
void ActivityScheduleActiveDateV1::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:ActivityScheduleActiveDateV1.Time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityScheduleActiveValueV1::kIDFieldNumber;
const int ActivityScheduleActiveValueV1::kNumFieldNumber;
const int ActivityScheduleActiveValueV1::kVitalityFieldNumber;
const int ActivityScheduleActiveValueV1::kStartTimeFieldNumber;
const int ActivityScheduleActiveValueV1::kFinishTimeFieldNumber;
const int ActivityScheduleActiveValueV1::kActivityMaxNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityScheduleActiveValueV1::ActivityScheduleActiveValueV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityScheduleV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityScheduleActiveValueV1)
}
ActivityScheduleActiveValueV1::ActivityScheduleActiveValueV1(const ActivityScheduleActiveValueV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&finishtime_) -
    reinterpret_cast<char*>(&id_)) + sizeof(finishtime_));
  // @@protoc_insertion_point(copy_constructor:ActivityScheduleActiveValueV1)
}

void ActivityScheduleActiveValueV1::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vitality_) -
      reinterpret_cast<char*>(&id_)) + sizeof(vitality_));
  activitymaxnum_ = -1;
  starttime_ = -1;
  finishtime_ = -1;
}

ActivityScheduleActiveValueV1::~ActivityScheduleActiveValueV1() {
  // @@protoc_insertion_point(destructor:ActivityScheduleActiveValueV1)
  SharedDtor();
}

void ActivityScheduleActiveValueV1::SharedDtor() {
}

void ActivityScheduleActiveValueV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityScheduleActiveValueV1::descriptor() {
  protobuf_ActivityScheduleV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityScheduleActiveValueV1& ActivityScheduleActiveValueV1::default_instance() {
  protobuf_ActivityScheduleV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityScheduleActiveValueV1* ActivityScheduleActiveValueV1::New(::google::protobuf::Arena* arena) const {
  ActivityScheduleActiveValueV1* n = new ActivityScheduleActiveValueV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityScheduleActiveValueV1::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityScheduleActiveValueV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vitality_) -
        reinterpret_cast<char*>(&id_)) + sizeof(vitality_));
    activitymaxnum_ = -1;
    starttime_ = -1;
    finishtime_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityScheduleActiveValueV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityScheduleActiveValueV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 ID = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Num = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Vitality = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_vitality();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &vitality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 StartTime = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_starttime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &starttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 FinishTime = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_finishtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &finishtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ActivityMaxNum = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_activitymaxnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &activitymaxnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityScheduleActiveValueV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityScheduleActiveValueV1)
  return false;
#undef DO_
}

void ActivityScheduleActiveValueV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityScheduleActiveValueV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ID = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->id(), output);
  }

  // optional sint32 Num = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->num(), output);
  }

  // optional sint32 Vitality = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->vitality(), output);
  }

  // optional sint32 StartTime = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->starttime(), output);
  }

  // optional sint32 FinishTime = 5 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->finishtime(), output);
  }

  // optional sint32 ActivityMaxNum = 6 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->activitymaxnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityScheduleActiveValueV1)
}

::google::protobuf::uint8* ActivityScheduleActiveValueV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityScheduleActiveValueV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ID = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->id(), target);
  }

  // optional sint32 Num = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->num(), target);
  }

  // optional sint32 Vitality = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->vitality(), target);
  }

  // optional sint32 StartTime = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->starttime(), target);
  }

  // optional sint32 FinishTime = 5 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->finishtime(), target);
  }

  // optional sint32 ActivityMaxNum = 6 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->activitymaxnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityScheduleActiveValueV1)
  return target;
}

size_t ActivityScheduleActiveValueV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityScheduleActiveValueV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional sint32 ID = 1 [default = 0];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->id());
    }

    // optional sint32 Num = 2 [default = 0];
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->num());
    }

    // optional sint32 Vitality = 3 [default = 0];
    if (has_vitality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->vitality());
    }

    // optional sint32 ActivityMaxNum = 6 [default = -1];
    if (has_activitymaxnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->activitymaxnum());
    }

    // optional sint32 StartTime = 4 [default = -1];
    if (has_starttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->starttime());
    }

    // optional sint32 FinishTime = 5 [default = -1];
    if (has_finishtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->finishtime());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityScheduleActiveValueV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityScheduleActiveValueV1)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityScheduleActiveValueV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityScheduleActiveValueV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityScheduleActiveValueV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityScheduleActiveValueV1)
    MergeFrom(*source);
  }
}

void ActivityScheduleActiveValueV1::MergeFrom(const ActivityScheduleActiveValueV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityScheduleActiveValueV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_ = from.num_;
    }
    if (cached_has_bits & 0x00000004u) {
      vitality_ = from.vitality_;
    }
    if (cached_has_bits & 0x00000008u) {
      activitymaxnum_ = from.activitymaxnum_;
    }
    if (cached_has_bits & 0x00000010u) {
      starttime_ = from.starttime_;
    }
    if (cached_has_bits & 0x00000020u) {
      finishtime_ = from.finishtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ActivityScheduleActiveValueV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityScheduleActiveValueV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityScheduleActiveValueV1::CopyFrom(const ActivityScheduleActiveValueV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityScheduleActiveValueV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityScheduleActiveValueV1::IsInitialized() const {
  return true;
}

void ActivityScheduleActiveValueV1::Swap(ActivityScheduleActiveValueV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityScheduleActiveValueV1::InternalSwap(ActivityScheduleActiveValueV1* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(num_, other->num_);
  swap(vitality_, other->vitality_);
  swap(activitymaxnum_, other->activitymaxnum_);
  swap(starttime_, other->starttime_);
  swap(finishtime_, other->finishtime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityScheduleActiveValueV1::GetMetadata() const {
  protobuf_ActivityScheduleV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityScheduleActiveValueV1

// optional sint32 ID = 1 [default = 0];
bool ActivityScheduleActiveValueV1::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityScheduleActiveValueV1::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityScheduleActiveValueV1::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityScheduleActiveValueV1::clear_id() {
  id_ = 0;
  clear_has_id();
}
::google::protobuf::int32 ActivityScheduleActiveValueV1::id() const {
  // @@protoc_insertion_point(field_get:ActivityScheduleActiveValueV1.ID)
  return id_;
}
void ActivityScheduleActiveValueV1::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ActivityScheduleActiveValueV1.ID)
}

// optional sint32 Num = 2 [default = 0];
bool ActivityScheduleActiveValueV1::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ActivityScheduleActiveValueV1::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
void ActivityScheduleActiveValueV1::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void ActivityScheduleActiveValueV1::clear_num() {
  num_ = 0;
  clear_has_num();
}
::google::protobuf::int32 ActivityScheduleActiveValueV1::num() const {
  // @@protoc_insertion_point(field_get:ActivityScheduleActiveValueV1.Num)
  return num_;
}
void ActivityScheduleActiveValueV1::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:ActivityScheduleActiveValueV1.Num)
}

// optional sint32 Vitality = 3 [default = 0];
bool ActivityScheduleActiveValueV1::has_vitality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ActivityScheduleActiveValueV1::set_has_vitality() {
  _has_bits_[0] |= 0x00000004u;
}
void ActivityScheduleActiveValueV1::clear_has_vitality() {
  _has_bits_[0] &= ~0x00000004u;
}
void ActivityScheduleActiveValueV1::clear_vitality() {
  vitality_ = 0;
  clear_has_vitality();
}
::google::protobuf::int32 ActivityScheduleActiveValueV1::vitality() const {
  // @@protoc_insertion_point(field_get:ActivityScheduleActiveValueV1.Vitality)
  return vitality_;
}
void ActivityScheduleActiveValueV1::set_vitality(::google::protobuf::int32 value) {
  set_has_vitality();
  vitality_ = value;
  // @@protoc_insertion_point(field_set:ActivityScheduleActiveValueV1.Vitality)
}

// optional sint32 StartTime = 4 [default = -1];
bool ActivityScheduleActiveValueV1::has_starttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ActivityScheduleActiveValueV1::set_has_starttime() {
  _has_bits_[0] |= 0x00000010u;
}
void ActivityScheduleActiveValueV1::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000010u;
}
void ActivityScheduleActiveValueV1::clear_starttime() {
  starttime_ = -1;
  clear_has_starttime();
}
::google::protobuf::int32 ActivityScheduleActiveValueV1::starttime() const {
  // @@protoc_insertion_point(field_get:ActivityScheduleActiveValueV1.StartTime)
  return starttime_;
}
void ActivityScheduleActiveValueV1::set_starttime(::google::protobuf::int32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:ActivityScheduleActiveValueV1.StartTime)
}

// optional sint32 FinishTime = 5 [default = -1];
bool ActivityScheduleActiveValueV1::has_finishtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ActivityScheduleActiveValueV1::set_has_finishtime() {
  _has_bits_[0] |= 0x00000020u;
}
void ActivityScheduleActiveValueV1::clear_has_finishtime() {
  _has_bits_[0] &= ~0x00000020u;
}
void ActivityScheduleActiveValueV1::clear_finishtime() {
  finishtime_ = -1;
  clear_has_finishtime();
}
::google::protobuf::int32 ActivityScheduleActiveValueV1::finishtime() const {
  // @@protoc_insertion_point(field_get:ActivityScheduleActiveValueV1.FinishTime)
  return finishtime_;
}
void ActivityScheduleActiveValueV1::set_finishtime(::google::protobuf::int32 value) {
  set_has_finishtime();
  finishtime_ = value;
  // @@protoc_insertion_point(field_set:ActivityScheduleActiveValueV1.FinishTime)
}

// optional sint32 ActivityMaxNum = 6 [default = -1];
bool ActivityScheduleActiveValueV1::has_activitymaxnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ActivityScheduleActiveValueV1::set_has_activitymaxnum() {
  _has_bits_[0] |= 0x00000008u;
}
void ActivityScheduleActiveValueV1::clear_has_activitymaxnum() {
  _has_bits_[0] &= ~0x00000008u;
}
void ActivityScheduleActiveValueV1::clear_activitymaxnum() {
  activitymaxnum_ = -1;
  clear_has_activitymaxnum();
}
::google::protobuf::int32 ActivityScheduleActiveValueV1::activitymaxnum() const {
  // @@protoc_insertion_point(field_get:ActivityScheduleActiveValueV1.ActivityMaxNum)
  return activitymaxnum_;
}
void ActivityScheduleActiveValueV1::set_activitymaxnum(::google::protobuf::int32 value) {
  set_has_activitymaxnum();
  activitymaxnum_ = value;
  // @@protoc_insertion_point(field_set:ActivityScheduleActiveValueV1.ActivityMaxNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
