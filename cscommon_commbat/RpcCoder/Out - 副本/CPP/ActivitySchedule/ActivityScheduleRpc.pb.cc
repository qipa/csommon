// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActivityScheduleRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ActivityScheduleRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class ActivityScheduleRpcSyncDataAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityScheduleRpcSyncDataAsk>
     _instance;
} _ActivityScheduleRpcSyncDataAsk_default_instance_;
class ActivityScheduleRpcSyncDataReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityScheduleRpcSyncDataReply>
     _instance;
} _ActivityScheduleRpcSyncDataReply_default_instance_;
class ActivityScheduleRpcThiefBeOpenedNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityScheduleRpcThiefBeOpenedNotify>
     _instance;
} _ActivityScheduleRpcThiefBeOpenedNotify_default_instance_;
class ActivityScheduleRpcThiefRefreshNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityScheduleRpcThiefRefreshNotify>
     _instance;
} _ActivityScheduleRpcThiefRefreshNotify_default_instance_;
class ActivityScheduleRpcThiefOpenMonsterAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityScheduleRpcThiefOpenMonsterAsk>
     _instance;
} _ActivityScheduleRpcThiefOpenMonsterAsk_default_instance_;
class ActivityScheduleRpcThiefOpenMonsterReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityScheduleRpcThiefOpenMonsterReply>
     _instance;
} _ActivityScheduleRpcThiefOpenMonsterReply_default_instance_;
class ActivityScheduleRpcSubdueMonsterEnterAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityScheduleRpcSubdueMonsterEnterAsk>
     _instance;
} _ActivityScheduleRpcSubdueMonsterEnterAsk_default_instance_;
class ActivityScheduleRpcSubdueMonsterEnterReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityScheduleRpcSubdueMonsterEnterReply>
     _instance;
} _ActivityScheduleRpcSubdueMonsterEnterReply_default_instance_;
class ActivityScheduleRpcSubdueMonsterBeOpenedNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityScheduleRpcSubdueMonsterBeOpenedNotify>
     _instance;
} _ActivityScheduleRpcSubdueMonsterBeOpenedNotify_default_instance_;
class ActivityScheduleRpcSubdueMonsterRefreshNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityScheduleRpcSubdueMonsterRefreshNotify>
     _instance;
} _ActivityScheduleRpcSubdueMonsterRefreshNotify_default_instance_;
class ActivityScheduleRpcWorldBossEnterDungeonAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityScheduleRpcWorldBossEnterDungeonAsk>
     _instance;
} _ActivityScheduleRpcWorldBossEnterDungeonAsk_default_instance_;
class ActivityScheduleRpcWorldBossEnterDungeonReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityScheduleRpcWorldBossEnterDungeonReply>
     _instance;
} _ActivityScheduleRpcWorldBossEnterDungeonReply_default_instance_;
class ActivityScheduleRpcWorldBossSyncDataAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityScheduleRpcWorldBossSyncDataAsk>
     _instance;
} _ActivityScheduleRpcWorldBossSyncDataAsk_default_instance_;
class ActivityScheduleRpcWorldBossSyncDataReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ActivityScheduleRpcWorldBossSyncDataReply>
     _instance;
} _ActivityScheduleRpcWorldBossSyncDataReply_default_instance_;

namespace protobuf_ActivityScheduleRpc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[14];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSyncDataAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSyncDataAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSyncDataReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSyncDataReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSyncDataReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSyncDataReply, thiefdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSyncDataReply, subduemonsterdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSyncDataReply, worldbossdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSyncDataReply, worldbossrank_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcThiefBeOpenedNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcThiefBeOpenedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcThiefBeOpenedNotify, thiefdata_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcThiefRefreshNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcThiefRefreshNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcThiefRefreshNotify, thiefdata_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcThiefOpenMonsterAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcThiefOpenMonsterAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcThiefOpenMonsterAsk, thiefdata_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcThiefOpenMonsterReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcThiefOpenMonsterReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcThiefOpenMonsterReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSubdueMonsterEnterAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSubdueMonsterEnterAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSubdueMonsterEnterAsk, subduemonsterdata_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSubdueMonsterEnterReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSubdueMonsterEnterReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSubdueMonsterEnterReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSubdueMonsterBeOpenedNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSubdueMonsterBeOpenedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSubdueMonsterBeOpenedNotify, subduemonsterdata_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSubdueMonsterRefreshNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSubdueMonsterRefreshNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcSubdueMonsterRefreshNotify, subduemonsterdata_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcWorldBossEnterDungeonAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcWorldBossEnterDungeonAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcWorldBossEnterDungeonReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcWorldBossEnterDungeonReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcWorldBossEnterDungeonReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcWorldBossSyncDataAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcWorldBossSyncDataAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcWorldBossSyncDataReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcWorldBossSyncDataReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcWorldBossSyncDataReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcWorldBossSyncDataReply, worldbossdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivityScheduleRpcWorldBossSyncDataReply, worldbossrank_),
  0,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(ActivityScheduleRpcSyncDataAsk)},
  { 5, 15, sizeof(ActivityScheduleRpcSyncDataReply)},
  { 20, 26, sizeof(ActivityScheduleRpcThiefBeOpenedNotify)},
  { 27, 33, sizeof(ActivityScheduleRpcThiefRefreshNotify)},
  { 34, 40, sizeof(ActivityScheduleRpcThiefOpenMonsterAsk)},
  { 41, 47, sizeof(ActivityScheduleRpcThiefOpenMonsterReply)},
  { 48, 54, sizeof(ActivityScheduleRpcSubdueMonsterEnterAsk)},
  { 55, 61, sizeof(ActivityScheduleRpcSubdueMonsterEnterReply)},
  { 62, 68, sizeof(ActivityScheduleRpcSubdueMonsterBeOpenedNotify)},
  { 69, 75, sizeof(ActivityScheduleRpcSubdueMonsterRefreshNotify)},
  { 76, 81, sizeof(ActivityScheduleRpcWorldBossEnterDungeonAsk)},
  { 81, 87, sizeof(ActivityScheduleRpcWorldBossEnterDungeonReply)},
  { 88, 93, sizeof(ActivityScheduleRpcWorldBossSyncDataAsk)},
  { 93, 101, sizeof(ActivityScheduleRpcWorldBossSyncDataReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityScheduleRpcSyncDataAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityScheduleRpcSyncDataReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityScheduleRpcThiefBeOpenedNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityScheduleRpcThiefRefreshNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityScheduleRpcThiefOpenMonsterAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityScheduleRpcThiefOpenMonsterReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityScheduleRpcSubdueMonsterEnterAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityScheduleRpcSubdueMonsterEnterReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityScheduleRpcSubdueMonsterBeOpenedNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityScheduleRpcSubdueMonsterRefreshNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityScheduleRpcWorldBossEnterDungeonAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityScheduleRpcWorldBossEnterDungeonReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityScheduleRpcWorldBossSyncDataAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActivityScheduleRpcWorldBossSyncDataReply_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ActivityScheduleRpc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _ActivityScheduleRpcSyncDataAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityScheduleRpcSyncDataAsk_default_instance_);_ActivityScheduleRpcSyncDataReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityScheduleRpcSyncDataReply_default_instance_);_ActivityScheduleRpcThiefBeOpenedNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityScheduleRpcThiefBeOpenedNotify_default_instance_);_ActivityScheduleRpcThiefRefreshNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityScheduleRpcThiefRefreshNotify_default_instance_);_ActivityScheduleRpcThiefOpenMonsterAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityScheduleRpcThiefOpenMonsterAsk_default_instance_);_ActivityScheduleRpcThiefOpenMonsterReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityScheduleRpcThiefOpenMonsterReply_default_instance_);_ActivityScheduleRpcSubdueMonsterEnterAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityScheduleRpcSubdueMonsterEnterAsk_default_instance_);_ActivityScheduleRpcSubdueMonsterEnterReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityScheduleRpcSubdueMonsterEnterReply_default_instance_);_ActivityScheduleRpcSubdueMonsterBeOpenedNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityScheduleRpcSubdueMonsterBeOpenedNotify_default_instance_);_ActivityScheduleRpcSubdueMonsterRefreshNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityScheduleRpcSubdueMonsterRefreshNotify_default_instance_);_ActivityScheduleRpcWorldBossEnterDungeonAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityScheduleRpcWorldBossEnterDungeonAsk_default_instance_);_ActivityScheduleRpcWorldBossEnterDungeonReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityScheduleRpcWorldBossEnterDungeonReply_default_instance_);_ActivityScheduleRpcWorldBossSyncDataAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityScheduleRpcWorldBossSyncDataAsk_default_instance_);_ActivityScheduleRpcWorldBossSyncDataReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ActivityScheduleRpcWorldBossSyncDataReply_default_instance_);_ActivityScheduleRpcThiefBeOpenedNotify_default_instance_._instance.get_mutable()->thiefdata_ = const_cast< ::ActivityNpcData*>(
      ::ActivityNpcData::internal_default_instance());
  _ActivityScheduleRpcThiefOpenMonsterAsk_default_instance_._instance.get_mutable()->thiefdata_ = const_cast< ::ActivityNpcData*>(
      ::ActivityNpcData::internal_default_instance());
  _ActivityScheduleRpcSubdueMonsterEnterAsk_default_instance_._instance.get_mutable()->subduemonsterdata_ = const_cast< ::ActivityNpcData*>(
      ::ActivityNpcData::internal_default_instance());
  _ActivityScheduleRpcSubdueMonsterBeOpenedNotify_default_instance_._instance.get_mutable()->subduemonsterdata_ = const_cast< ::ActivityNpcData*>(
      ::ActivityNpcData::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031ActivityScheduleRpc.proto\032\022PublicStruc"
      "t.proto\" \n\036ActivityScheduleRpcSyncDataAs"
      "k\"\333\001\n ActivityScheduleRpcSyncDataReply\022\025"
      "\n\006Result\030\001 \001(\021:\005-9999\022#\n\tThiefData\030\002 \003(\013"
      "2\020.ActivityNpcData\022+\n\021SubdueMonsterData\030"
      "\003 \003(\0132\020.ActivityNpcData\022$\n\rWorldBossData"
      "\030\004 \003(\0132\r.WorldBossObj\022(\n\rWorldBossRank\030\005"
      " \003(\0132\021.WorldBossRankObj\"M\n&ActivitySched"
      "uleRpcThiefBeOpenedNotify\022#\n\tThiefData\030\001"
      " \001(\0132\020.ActivityNpcData\"L\n%ActivitySchedu"
      "leRpcThiefRefreshNotify\022#\n\tThiefData\030\001 \003"
      "(\0132\020.ActivityNpcData\"M\n&ActivitySchedule"
      "RpcThiefOpenMonsterAsk\022#\n\tThiefData\030\001 \001("
      "\0132\020.ActivityNpcData\"A\n(ActivityScheduleR"
      "pcThiefOpenMonsterReply\022\025\n\006Result\030\001 \001(\021:"
      "\005-9999\"W\n(ActivityScheduleRpcSubdueMonst"
      "erEnterAsk\022+\n\021SubdueMonsterData\030\002 \001(\0132\020."
      "ActivityNpcData\"C\n*ActivityScheduleRpcSu"
      "bdueMonsterEnterReply\022\025\n\006Result\030\001 \001(\021:\005-"
      "9999\"]\n.ActivityScheduleRpcSubdueMonster"
      "BeOpenedNotify\022+\n\021SubdueMonsterData\030\001 \001("
      "\0132\020.ActivityNpcData\"\\\n-ActivityScheduleR"
      "pcSubdueMonsterRefreshNotify\022+\n\021SubdueMo"
      "nsterData\030\001 \003(\0132\020.ActivityNpcData\"-\n+Act"
      "ivityScheduleRpcWorldBossEnterDungeonAsk"
      "\"F\n-ActivityScheduleRpcWorldBossEnterDun"
      "geonReply\022\025\n\006Result\030\001 \001(\021:\005-9999\")\n\'Acti"
      "vityScheduleRpcWorldBossSyncDataAsk\"\222\001\n)"
      "ActivityScheduleRpcWorldBossSyncDataRepl"
      "y\022\025\n\006Result\030\001 \001(\021:\005-9999\022$\n\rWorldBossDat"
      "a\030\002 \003(\0132\r.WorldBossObj\022(\n\rWorldBossRank\030"
      "\003 \003(\0132\021.WorldBossRankObj"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1264);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ActivityScheduleRpc.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_ActivityScheduleRpc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityScheduleRpcSyncDataAsk::ActivityScheduleRpcSyncDataAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityScheduleRpcSyncDataAsk)
}
ActivityScheduleRpcSyncDataAsk::ActivityScheduleRpcSyncDataAsk(const ActivityScheduleRpcSyncDataAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ActivityScheduleRpcSyncDataAsk)
}

void ActivityScheduleRpcSyncDataAsk::SharedCtor() {
  _cached_size_ = 0;
}

ActivityScheduleRpcSyncDataAsk::~ActivityScheduleRpcSyncDataAsk() {
  // @@protoc_insertion_point(destructor:ActivityScheduleRpcSyncDataAsk)
  SharedDtor();
}

void ActivityScheduleRpcSyncDataAsk::SharedDtor() {
}

void ActivityScheduleRpcSyncDataAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityScheduleRpcSyncDataAsk::descriptor() {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityScheduleRpcSyncDataAsk& ActivityScheduleRpcSyncDataAsk::default_instance() {
  protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityScheduleRpcSyncDataAsk* ActivityScheduleRpcSyncDataAsk::New(::google::protobuf::Arena* arena) const {
  ActivityScheduleRpcSyncDataAsk* n = new ActivityScheduleRpcSyncDataAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityScheduleRpcSyncDataAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityScheduleRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityScheduleRpcSyncDataAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityScheduleRpcSyncDataAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityScheduleRpcSyncDataAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityScheduleRpcSyncDataAsk)
  return false;
#undef DO_
}

void ActivityScheduleRpcSyncDataAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityScheduleRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityScheduleRpcSyncDataAsk)
}

::google::protobuf::uint8* ActivityScheduleRpcSyncDataAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityScheduleRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityScheduleRpcSyncDataAsk)
  return target;
}

size_t ActivityScheduleRpcSyncDataAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityScheduleRpcSyncDataAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityScheduleRpcSyncDataAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityScheduleRpcSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityScheduleRpcSyncDataAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityScheduleRpcSyncDataAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityScheduleRpcSyncDataAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityScheduleRpcSyncDataAsk)
    MergeFrom(*source);
  }
}

void ActivityScheduleRpcSyncDataAsk::MergeFrom(const ActivityScheduleRpcSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityScheduleRpcSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ActivityScheduleRpcSyncDataAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityScheduleRpcSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityScheduleRpcSyncDataAsk::CopyFrom(const ActivityScheduleRpcSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityScheduleRpcSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityScheduleRpcSyncDataAsk::IsInitialized() const {
  return true;
}

void ActivityScheduleRpcSyncDataAsk::Swap(ActivityScheduleRpcSyncDataAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityScheduleRpcSyncDataAsk::InternalSwap(ActivityScheduleRpcSyncDataAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityScheduleRpcSyncDataAsk::GetMetadata() const {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityScheduleRpcSyncDataAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityScheduleRpcSyncDataReply::kResultFieldNumber;
const int ActivityScheduleRpcSyncDataReply::kThiefDataFieldNumber;
const int ActivityScheduleRpcSyncDataReply::kSubdueMonsterDataFieldNumber;
const int ActivityScheduleRpcSyncDataReply::kWorldBossDataFieldNumber;
const int ActivityScheduleRpcSyncDataReply::kWorldBossRankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityScheduleRpcSyncDataReply::ActivityScheduleRpcSyncDataReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityScheduleRpcSyncDataReply)
}
ActivityScheduleRpcSyncDataReply::ActivityScheduleRpcSyncDataReply(const ActivityScheduleRpcSyncDataReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      thiefdata_(from.thiefdata_),
      subduemonsterdata_(from.subduemonsterdata_),
      worldbossdata_(from.worldbossdata_),
      worldbossrank_(from.worldbossrank_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ActivityScheduleRpcSyncDataReply)
}

void ActivityScheduleRpcSyncDataReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

ActivityScheduleRpcSyncDataReply::~ActivityScheduleRpcSyncDataReply() {
  // @@protoc_insertion_point(destructor:ActivityScheduleRpcSyncDataReply)
  SharedDtor();
}

void ActivityScheduleRpcSyncDataReply::SharedDtor() {
}

void ActivityScheduleRpcSyncDataReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityScheduleRpcSyncDataReply::descriptor() {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityScheduleRpcSyncDataReply& ActivityScheduleRpcSyncDataReply::default_instance() {
  protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityScheduleRpcSyncDataReply* ActivityScheduleRpcSyncDataReply::New(::google::protobuf::Arena* arena) const {
  ActivityScheduleRpcSyncDataReply* n = new ActivityScheduleRpcSyncDataReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityScheduleRpcSyncDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityScheduleRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  thiefdata_.Clear();
  subduemonsterdata_.Clear();
  worldbossdata_.Clear();
  worldbossrank_.Clear();
  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityScheduleRpcSyncDataReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityScheduleRpcSyncDataReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ActivityNpcData ThiefData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_thiefdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ActivityNpcData SubdueMonsterData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_subduemonsterdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .WorldBossObj WorldBossData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_worldbossdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .WorldBossRankObj WorldBossRank = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_worldbossrank()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityScheduleRpcSyncDataReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityScheduleRpcSyncDataReply)
  return false;
#undef DO_
}

void ActivityScheduleRpcSyncDataReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityScheduleRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // repeated .ActivityNpcData ThiefData = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->thiefdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->thiefdata(static_cast<int>(i)), output);
  }

  // repeated .ActivityNpcData SubdueMonsterData = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subduemonsterdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->subduemonsterdata(static_cast<int>(i)), output);
  }

  // repeated .WorldBossObj WorldBossData = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->worldbossdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->worldbossdata(static_cast<int>(i)), output);
  }

  // repeated .WorldBossRankObj WorldBossRank = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->worldbossrank_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->worldbossrank(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityScheduleRpcSyncDataReply)
}

::google::protobuf::uint8* ActivityScheduleRpcSyncDataReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityScheduleRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // repeated .ActivityNpcData ThiefData = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->thiefdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->thiefdata(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ActivityNpcData SubdueMonsterData = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subduemonsterdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->subduemonsterdata(static_cast<int>(i)), deterministic, target);
  }

  // repeated .WorldBossObj WorldBossData = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->worldbossdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->worldbossdata(static_cast<int>(i)), deterministic, target);
  }

  // repeated .WorldBossRankObj WorldBossRank = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->worldbossrank_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->worldbossrank(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityScheduleRpcSyncDataReply)
  return target;
}

size_t ActivityScheduleRpcSyncDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityScheduleRpcSyncDataReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ActivityNpcData ThiefData = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->thiefdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->thiefdata(static_cast<int>(i)));
    }
  }

  // repeated .ActivityNpcData SubdueMonsterData = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->subduemonsterdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->subduemonsterdata(static_cast<int>(i)));
    }
  }

  // repeated .WorldBossObj WorldBossData = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->worldbossdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->worldbossdata(static_cast<int>(i)));
    }
  }

  // repeated .WorldBossRankObj WorldBossRank = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->worldbossrank_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->worldbossrank(static_cast<int>(i)));
    }
  }

  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityScheduleRpcSyncDataReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityScheduleRpcSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityScheduleRpcSyncDataReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityScheduleRpcSyncDataReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityScheduleRpcSyncDataReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityScheduleRpcSyncDataReply)
    MergeFrom(*source);
  }
}

void ActivityScheduleRpcSyncDataReply::MergeFrom(const ActivityScheduleRpcSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityScheduleRpcSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  thiefdata_.MergeFrom(from.thiefdata_);
  subduemonsterdata_.MergeFrom(from.subduemonsterdata_);
  worldbossdata_.MergeFrom(from.worldbossdata_);
  worldbossrank_.MergeFrom(from.worldbossrank_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void ActivityScheduleRpcSyncDataReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityScheduleRpcSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityScheduleRpcSyncDataReply::CopyFrom(const ActivityScheduleRpcSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityScheduleRpcSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityScheduleRpcSyncDataReply::IsInitialized() const {
  return true;
}

void ActivityScheduleRpcSyncDataReply::Swap(ActivityScheduleRpcSyncDataReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityScheduleRpcSyncDataReply::InternalSwap(ActivityScheduleRpcSyncDataReply* other) {
  using std::swap;
  thiefdata_.InternalSwap(&other->thiefdata_);
  subduemonsterdata_.InternalSwap(&other->subduemonsterdata_);
  worldbossdata_.InternalSwap(&other->worldbossdata_);
  worldbossrank_.InternalSwap(&other->worldbossrank_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityScheduleRpcSyncDataReply::GetMetadata() const {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityScheduleRpcSyncDataReply

// optional sint32 Result = 1 [default = -9999];
bool ActivityScheduleRpcSyncDataReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityScheduleRpcSyncDataReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityScheduleRpcSyncDataReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityScheduleRpcSyncDataReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 ActivityScheduleRpcSyncDataReply::result() const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcSyncDataReply.Result)
  return result_;
}
void ActivityScheduleRpcSyncDataReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ActivityScheduleRpcSyncDataReply.Result)
}

// repeated .ActivityNpcData ThiefData = 2;
int ActivityScheduleRpcSyncDataReply::thiefdata_size() const {
  return thiefdata_.size();
}
void ActivityScheduleRpcSyncDataReply::clear_thiefdata() {
  thiefdata_.Clear();
}
const ::ActivityNpcData& ActivityScheduleRpcSyncDataReply::thiefdata(int index) const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcSyncDataReply.ThiefData)
  return thiefdata_.Get(index);
}
::ActivityNpcData* ActivityScheduleRpcSyncDataReply::mutable_thiefdata(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcSyncDataReply.ThiefData)
  return thiefdata_.Mutable(index);
}
::ActivityNpcData* ActivityScheduleRpcSyncDataReply::add_thiefdata() {
  // @@protoc_insertion_point(field_add:ActivityScheduleRpcSyncDataReply.ThiefData)
  return thiefdata_.Add();
}
::google::protobuf::RepeatedPtrField< ::ActivityNpcData >*
ActivityScheduleRpcSyncDataReply::mutable_thiefdata() {
  // @@protoc_insertion_point(field_mutable_list:ActivityScheduleRpcSyncDataReply.ThiefData)
  return &thiefdata_;
}
const ::google::protobuf::RepeatedPtrField< ::ActivityNpcData >&
ActivityScheduleRpcSyncDataReply::thiefdata() const {
  // @@protoc_insertion_point(field_list:ActivityScheduleRpcSyncDataReply.ThiefData)
  return thiefdata_;
}

// repeated .ActivityNpcData SubdueMonsterData = 3;
int ActivityScheduleRpcSyncDataReply::subduemonsterdata_size() const {
  return subduemonsterdata_.size();
}
void ActivityScheduleRpcSyncDataReply::clear_subduemonsterdata() {
  subduemonsterdata_.Clear();
}
const ::ActivityNpcData& ActivityScheduleRpcSyncDataReply::subduemonsterdata(int index) const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcSyncDataReply.SubdueMonsterData)
  return subduemonsterdata_.Get(index);
}
::ActivityNpcData* ActivityScheduleRpcSyncDataReply::mutable_subduemonsterdata(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcSyncDataReply.SubdueMonsterData)
  return subduemonsterdata_.Mutable(index);
}
::ActivityNpcData* ActivityScheduleRpcSyncDataReply::add_subduemonsterdata() {
  // @@protoc_insertion_point(field_add:ActivityScheduleRpcSyncDataReply.SubdueMonsterData)
  return subduemonsterdata_.Add();
}
::google::protobuf::RepeatedPtrField< ::ActivityNpcData >*
ActivityScheduleRpcSyncDataReply::mutable_subduemonsterdata() {
  // @@protoc_insertion_point(field_mutable_list:ActivityScheduleRpcSyncDataReply.SubdueMonsterData)
  return &subduemonsterdata_;
}
const ::google::protobuf::RepeatedPtrField< ::ActivityNpcData >&
ActivityScheduleRpcSyncDataReply::subduemonsterdata() const {
  // @@protoc_insertion_point(field_list:ActivityScheduleRpcSyncDataReply.SubdueMonsterData)
  return subduemonsterdata_;
}

// repeated .WorldBossObj WorldBossData = 4;
int ActivityScheduleRpcSyncDataReply::worldbossdata_size() const {
  return worldbossdata_.size();
}
void ActivityScheduleRpcSyncDataReply::clear_worldbossdata() {
  worldbossdata_.Clear();
}
const ::WorldBossObj& ActivityScheduleRpcSyncDataReply::worldbossdata(int index) const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcSyncDataReply.WorldBossData)
  return worldbossdata_.Get(index);
}
::WorldBossObj* ActivityScheduleRpcSyncDataReply::mutable_worldbossdata(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcSyncDataReply.WorldBossData)
  return worldbossdata_.Mutable(index);
}
::WorldBossObj* ActivityScheduleRpcSyncDataReply::add_worldbossdata() {
  // @@protoc_insertion_point(field_add:ActivityScheduleRpcSyncDataReply.WorldBossData)
  return worldbossdata_.Add();
}
::google::protobuf::RepeatedPtrField< ::WorldBossObj >*
ActivityScheduleRpcSyncDataReply::mutable_worldbossdata() {
  // @@protoc_insertion_point(field_mutable_list:ActivityScheduleRpcSyncDataReply.WorldBossData)
  return &worldbossdata_;
}
const ::google::protobuf::RepeatedPtrField< ::WorldBossObj >&
ActivityScheduleRpcSyncDataReply::worldbossdata() const {
  // @@protoc_insertion_point(field_list:ActivityScheduleRpcSyncDataReply.WorldBossData)
  return worldbossdata_;
}

// repeated .WorldBossRankObj WorldBossRank = 5;
int ActivityScheduleRpcSyncDataReply::worldbossrank_size() const {
  return worldbossrank_.size();
}
void ActivityScheduleRpcSyncDataReply::clear_worldbossrank() {
  worldbossrank_.Clear();
}
const ::WorldBossRankObj& ActivityScheduleRpcSyncDataReply::worldbossrank(int index) const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcSyncDataReply.WorldBossRank)
  return worldbossrank_.Get(index);
}
::WorldBossRankObj* ActivityScheduleRpcSyncDataReply::mutable_worldbossrank(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcSyncDataReply.WorldBossRank)
  return worldbossrank_.Mutable(index);
}
::WorldBossRankObj* ActivityScheduleRpcSyncDataReply::add_worldbossrank() {
  // @@protoc_insertion_point(field_add:ActivityScheduleRpcSyncDataReply.WorldBossRank)
  return worldbossrank_.Add();
}
::google::protobuf::RepeatedPtrField< ::WorldBossRankObj >*
ActivityScheduleRpcSyncDataReply::mutable_worldbossrank() {
  // @@protoc_insertion_point(field_mutable_list:ActivityScheduleRpcSyncDataReply.WorldBossRank)
  return &worldbossrank_;
}
const ::google::protobuf::RepeatedPtrField< ::WorldBossRankObj >&
ActivityScheduleRpcSyncDataReply::worldbossrank() const {
  // @@protoc_insertion_point(field_list:ActivityScheduleRpcSyncDataReply.WorldBossRank)
  return worldbossrank_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityScheduleRpcThiefBeOpenedNotify::kThiefDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityScheduleRpcThiefBeOpenedNotify::ActivityScheduleRpcThiefBeOpenedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityScheduleRpcThiefBeOpenedNotify)
}
ActivityScheduleRpcThiefBeOpenedNotify::ActivityScheduleRpcThiefBeOpenedNotify(const ActivityScheduleRpcThiefBeOpenedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_thiefdata()) {
    thiefdata_ = new ::ActivityNpcData(*from.thiefdata_);
  } else {
    thiefdata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ActivityScheduleRpcThiefBeOpenedNotify)
}

void ActivityScheduleRpcThiefBeOpenedNotify::SharedCtor() {
  _cached_size_ = 0;
  thiefdata_ = NULL;
}

ActivityScheduleRpcThiefBeOpenedNotify::~ActivityScheduleRpcThiefBeOpenedNotify() {
  // @@protoc_insertion_point(destructor:ActivityScheduleRpcThiefBeOpenedNotify)
  SharedDtor();
}

void ActivityScheduleRpcThiefBeOpenedNotify::SharedDtor() {
  if (this != internal_default_instance()) delete thiefdata_;
}

void ActivityScheduleRpcThiefBeOpenedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityScheduleRpcThiefBeOpenedNotify::descriptor() {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityScheduleRpcThiefBeOpenedNotify& ActivityScheduleRpcThiefBeOpenedNotify::default_instance() {
  protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityScheduleRpcThiefBeOpenedNotify* ActivityScheduleRpcThiefBeOpenedNotify::New(::google::protobuf::Arena* arena) const {
  ActivityScheduleRpcThiefBeOpenedNotify* n = new ActivityScheduleRpcThiefBeOpenedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityScheduleRpcThiefBeOpenedNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityScheduleRpcThiefBeOpenedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_thiefdata()) {
    GOOGLE_DCHECK(thiefdata_ != NULL);
    thiefdata_->::ActivityNpcData::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityScheduleRpcThiefBeOpenedNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityScheduleRpcThiefBeOpenedNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ActivityNpcData ThiefData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_thiefdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityScheduleRpcThiefBeOpenedNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityScheduleRpcThiefBeOpenedNotify)
  return false;
#undef DO_
}

void ActivityScheduleRpcThiefBeOpenedNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityScheduleRpcThiefBeOpenedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ActivityNpcData ThiefData = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->thiefdata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityScheduleRpcThiefBeOpenedNotify)
}

::google::protobuf::uint8* ActivityScheduleRpcThiefBeOpenedNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityScheduleRpcThiefBeOpenedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ActivityNpcData ThiefData = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->thiefdata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityScheduleRpcThiefBeOpenedNotify)
  return target;
}

size_t ActivityScheduleRpcThiefBeOpenedNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityScheduleRpcThiefBeOpenedNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .ActivityNpcData ThiefData = 1;
  if (has_thiefdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->thiefdata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityScheduleRpcThiefBeOpenedNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityScheduleRpcThiefBeOpenedNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityScheduleRpcThiefBeOpenedNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityScheduleRpcThiefBeOpenedNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityScheduleRpcThiefBeOpenedNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityScheduleRpcThiefBeOpenedNotify)
    MergeFrom(*source);
  }
}

void ActivityScheduleRpcThiefBeOpenedNotify::MergeFrom(const ActivityScheduleRpcThiefBeOpenedNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityScheduleRpcThiefBeOpenedNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_thiefdata()) {
    mutable_thiefdata()->::ActivityNpcData::MergeFrom(from.thiefdata());
  }
}

void ActivityScheduleRpcThiefBeOpenedNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityScheduleRpcThiefBeOpenedNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityScheduleRpcThiefBeOpenedNotify::CopyFrom(const ActivityScheduleRpcThiefBeOpenedNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityScheduleRpcThiefBeOpenedNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityScheduleRpcThiefBeOpenedNotify::IsInitialized() const {
  return true;
}

void ActivityScheduleRpcThiefBeOpenedNotify::Swap(ActivityScheduleRpcThiefBeOpenedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityScheduleRpcThiefBeOpenedNotify::InternalSwap(ActivityScheduleRpcThiefBeOpenedNotify* other) {
  using std::swap;
  swap(thiefdata_, other->thiefdata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityScheduleRpcThiefBeOpenedNotify::GetMetadata() const {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityScheduleRpcThiefBeOpenedNotify

// optional .ActivityNpcData ThiefData = 1;
bool ActivityScheduleRpcThiefBeOpenedNotify::has_thiefdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityScheduleRpcThiefBeOpenedNotify::set_has_thiefdata() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityScheduleRpcThiefBeOpenedNotify::clear_has_thiefdata() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityScheduleRpcThiefBeOpenedNotify::clear_thiefdata() {
  if (thiefdata_ != NULL) thiefdata_->::ActivityNpcData::Clear();
  clear_has_thiefdata();
}
const ::ActivityNpcData& ActivityScheduleRpcThiefBeOpenedNotify::thiefdata() const {
  const ::ActivityNpcData* p = thiefdata_;
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcThiefBeOpenedNotify.ThiefData)
  return p != NULL ? *p : *reinterpret_cast<const ::ActivityNpcData*>(
      &::_ActivityNpcData_default_instance_);
}
::ActivityNpcData* ActivityScheduleRpcThiefBeOpenedNotify::mutable_thiefdata() {
  set_has_thiefdata();
  if (thiefdata_ == NULL) {
    thiefdata_ = new ::ActivityNpcData;
  }
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcThiefBeOpenedNotify.ThiefData)
  return thiefdata_;
}
::ActivityNpcData* ActivityScheduleRpcThiefBeOpenedNotify::release_thiefdata() {
  // @@protoc_insertion_point(field_release:ActivityScheduleRpcThiefBeOpenedNotify.ThiefData)
  clear_has_thiefdata();
  ::ActivityNpcData* temp = thiefdata_;
  thiefdata_ = NULL;
  return temp;
}
void ActivityScheduleRpcThiefBeOpenedNotify::set_allocated_thiefdata(::ActivityNpcData* thiefdata) {
  delete thiefdata_;
  thiefdata_ = thiefdata;
  if (thiefdata) {
    set_has_thiefdata();
  } else {
    clear_has_thiefdata();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityScheduleRpcThiefBeOpenedNotify.ThiefData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityScheduleRpcThiefRefreshNotify::kThiefDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityScheduleRpcThiefRefreshNotify::ActivityScheduleRpcThiefRefreshNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityScheduleRpcThiefRefreshNotify)
}
ActivityScheduleRpcThiefRefreshNotify::ActivityScheduleRpcThiefRefreshNotify(const ActivityScheduleRpcThiefRefreshNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      thiefdata_(from.thiefdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ActivityScheduleRpcThiefRefreshNotify)
}

void ActivityScheduleRpcThiefRefreshNotify::SharedCtor() {
  _cached_size_ = 0;
}

ActivityScheduleRpcThiefRefreshNotify::~ActivityScheduleRpcThiefRefreshNotify() {
  // @@protoc_insertion_point(destructor:ActivityScheduleRpcThiefRefreshNotify)
  SharedDtor();
}

void ActivityScheduleRpcThiefRefreshNotify::SharedDtor() {
}

void ActivityScheduleRpcThiefRefreshNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityScheduleRpcThiefRefreshNotify::descriptor() {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityScheduleRpcThiefRefreshNotify& ActivityScheduleRpcThiefRefreshNotify::default_instance() {
  protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityScheduleRpcThiefRefreshNotify* ActivityScheduleRpcThiefRefreshNotify::New(::google::protobuf::Arena* arena) const {
  ActivityScheduleRpcThiefRefreshNotify* n = new ActivityScheduleRpcThiefRefreshNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityScheduleRpcThiefRefreshNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityScheduleRpcThiefRefreshNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  thiefdata_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityScheduleRpcThiefRefreshNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityScheduleRpcThiefRefreshNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ActivityNpcData ThiefData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_thiefdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityScheduleRpcThiefRefreshNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityScheduleRpcThiefRefreshNotify)
  return false;
#undef DO_
}

void ActivityScheduleRpcThiefRefreshNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityScheduleRpcThiefRefreshNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ActivityNpcData ThiefData = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->thiefdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->thiefdata(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityScheduleRpcThiefRefreshNotify)
}

::google::protobuf::uint8* ActivityScheduleRpcThiefRefreshNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityScheduleRpcThiefRefreshNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ActivityNpcData ThiefData = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->thiefdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->thiefdata(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityScheduleRpcThiefRefreshNotify)
  return target;
}

size_t ActivityScheduleRpcThiefRefreshNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityScheduleRpcThiefRefreshNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ActivityNpcData ThiefData = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->thiefdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->thiefdata(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityScheduleRpcThiefRefreshNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityScheduleRpcThiefRefreshNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityScheduleRpcThiefRefreshNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityScheduleRpcThiefRefreshNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityScheduleRpcThiefRefreshNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityScheduleRpcThiefRefreshNotify)
    MergeFrom(*source);
  }
}

void ActivityScheduleRpcThiefRefreshNotify::MergeFrom(const ActivityScheduleRpcThiefRefreshNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityScheduleRpcThiefRefreshNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  thiefdata_.MergeFrom(from.thiefdata_);
}

void ActivityScheduleRpcThiefRefreshNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityScheduleRpcThiefRefreshNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityScheduleRpcThiefRefreshNotify::CopyFrom(const ActivityScheduleRpcThiefRefreshNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityScheduleRpcThiefRefreshNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityScheduleRpcThiefRefreshNotify::IsInitialized() const {
  return true;
}

void ActivityScheduleRpcThiefRefreshNotify::Swap(ActivityScheduleRpcThiefRefreshNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityScheduleRpcThiefRefreshNotify::InternalSwap(ActivityScheduleRpcThiefRefreshNotify* other) {
  using std::swap;
  thiefdata_.InternalSwap(&other->thiefdata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityScheduleRpcThiefRefreshNotify::GetMetadata() const {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityScheduleRpcThiefRefreshNotify

// repeated .ActivityNpcData ThiefData = 1;
int ActivityScheduleRpcThiefRefreshNotify::thiefdata_size() const {
  return thiefdata_.size();
}
void ActivityScheduleRpcThiefRefreshNotify::clear_thiefdata() {
  thiefdata_.Clear();
}
const ::ActivityNpcData& ActivityScheduleRpcThiefRefreshNotify::thiefdata(int index) const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcThiefRefreshNotify.ThiefData)
  return thiefdata_.Get(index);
}
::ActivityNpcData* ActivityScheduleRpcThiefRefreshNotify::mutable_thiefdata(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcThiefRefreshNotify.ThiefData)
  return thiefdata_.Mutable(index);
}
::ActivityNpcData* ActivityScheduleRpcThiefRefreshNotify::add_thiefdata() {
  // @@protoc_insertion_point(field_add:ActivityScheduleRpcThiefRefreshNotify.ThiefData)
  return thiefdata_.Add();
}
::google::protobuf::RepeatedPtrField< ::ActivityNpcData >*
ActivityScheduleRpcThiefRefreshNotify::mutable_thiefdata() {
  // @@protoc_insertion_point(field_mutable_list:ActivityScheduleRpcThiefRefreshNotify.ThiefData)
  return &thiefdata_;
}
const ::google::protobuf::RepeatedPtrField< ::ActivityNpcData >&
ActivityScheduleRpcThiefRefreshNotify::thiefdata() const {
  // @@protoc_insertion_point(field_list:ActivityScheduleRpcThiefRefreshNotify.ThiefData)
  return thiefdata_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityScheduleRpcThiefOpenMonsterAsk::kThiefDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityScheduleRpcThiefOpenMonsterAsk::ActivityScheduleRpcThiefOpenMonsterAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityScheduleRpcThiefOpenMonsterAsk)
}
ActivityScheduleRpcThiefOpenMonsterAsk::ActivityScheduleRpcThiefOpenMonsterAsk(const ActivityScheduleRpcThiefOpenMonsterAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_thiefdata()) {
    thiefdata_ = new ::ActivityNpcData(*from.thiefdata_);
  } else {
    thiefdata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ActivityScheduleRpcThiefOpenMonsterAsk)
}

void ActivityScheduleRpcThiefOpenMonsterAsk::SharedCtor() {
  _cached_size_ = 0;
  thiefdata_ = NULL;
}

ActivityScheduleRpcThiefOpenMonsterAsk::~ActivityScheduleRpcThiefOpenMonsterAsk() {
  // @@protoc_insertion_point(destructor:ActivityScheduleRpcThiefOpenMonsterAsk)
  SharedDtor();
}

void ActivityScheduleRpcThiefOpenMonsterAsk::SharedDtor() {
  if (this != internal_default_instance()) delete thiefdata_;
}

void ActivityScheduleRpcThiefOpenMonsterAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityScheduleRpcThiefOpenMonsterAsk::descriptor() {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityScheduleRpcThiefOpenMonsterAsk& ActivityScheduleRpcThiefOpenMonsterAsk::default_instance() {
  protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityScheduleRpcThiefOpenMonsterAsk* ActivityScheduleRpcThiefOpenMonsterAsk::New(::google::protobuf::Arena* arena) const {
  ActivityScheduleRpcThiefOpenMonsterAsk* n = new ActivityScheduleRpcThiefOpenMonsterAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityScheduleRpcThiefOpenMonsterAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityScheduleRpcThiefOpenMonsterAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_thiefdata()) {
    GOOGLE_DCHECK(thiefdata_ != NULL);
    thiefdata_->::ActivityNpcData::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityScheduleRpcThiefOpenMonsterAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityScheduleRpcThiefOpenMonsterAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ActivityNpcData ThiefData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_thiefdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityScheduleRpcThiefOpenMonsterAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityScheduleRpcThiefOpenMonsterAsk)
  return false;
#undef DO_
}

void ActivityScheduleRpcThiefOpenMonsterAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityScheduleRpcThiefOpenMonsterAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ActivityNpcData ThiefData = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->thiefdata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityScheduleRpcThiefOpenMonsterAsk)
}

::google::protobuf::uint8* ActivityScheduleRpcThiefOpenMonsterAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityScheduleRpcThiefOpenMonsterAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ActivityNpcData ThiefData = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->thiefdata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityScheduleRpcThiefOpenMonsterAsk)
  return target;
}

size_t ActivityScheduleRpcThiefOpenMonsterAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityScheduleRpcThiefOpenMonsterAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .ActivityNpcData ThiefData = 1;
  if (has_thiefdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->thiefdata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityScheduleRpcThiefOpenMonsterAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityScheduleRpcThiefOpenMonsterAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityScheduleRpcThiefOpenMonsterAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityScheduleRpcThiefOpenMonsterAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityScheduleRpcThiefOpenMonsterAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityScheduleRpcThiefOpenMonsterAsk)
    MergeFrom(*source);
  }
}

void ActivityScheduleRpcThiefOpenMonsterAsk::MergeFrom(const ActivityScheduleRpcThiefOpenMonsterAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityScheduleRpcThiefOpenMonsterAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_thiefdata()) {
    mutable_thiefdata()->::ActivityNpcData::MergeFrom(from.thiefdata());
  }
}

void ActivityScheduleRpcThiefOpenMonsterAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityScheduleRpcThiefOpenMonsterAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityScheduleRpcThiefOpenMonsterAsk::CopyFrom(const ActivityScheduleRpcThiefOpenMonsterAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityScheduleRpcThiefOpenMonsterAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityScheduleRpcThiefOpenMonsterAsk::IsInitialized() const {
  return true;
}

void ActivityScheduleRpcThiefOpenMonsterAsk::Swap(ActivityScheduleRpcThiefOpenMonsterAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityScheduleRpcThiefOpenMonsterAsk::InternalSwap(ActivityScheduleRpcThiefOpenMonsterAsk* other) {
  using std::swap;
  swap(thiefdata_, other->thiefdata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityScheduleRpcThiefOpenMonsterAsk::GetMetadata() const {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityScheduleRpcThiefOpenMonsterAsk

// optional .ActivityNpcData ThiefData = 1;
bool ActivityScheduleRpcThiefOpenMonsterAsk::has_thiefdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityScheduleRpcThiefOpenMonsterAsk::set_has_thiefdata() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityScheduleRpcThiefOpenMonsterAsk::clear_has_thiefdata() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityScheduleRpcThiefOpenMonsterAsk::clear_thiefdata() {
  if (thiefdata_ != NULL) thiefdata_->::ActivityNpcData::Clear();
  clear_has_thiefdata();
}
const ::ActivityNpcData& ActivityScheduleRpcThiefOpenMonsterAsk::thiefdata() const {
  const ::ActivityNpcData* p = thiefdata_;
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcThiefOpenMonsterAsk.ThiefData)
  return p != NULL ? *p : *reinterpret_cast<const ::ActivityNpcData*>(
      &::_ActivityNpcData_default_instance_);
}
::ActivityNpcData* ActivityScheduleRpcThiefOpenMonsterAsk::mutable_thiefdata() {
  set_has_thiefdata();
  if (thiefdata_ == NULL) {
    thiefdata_ = new ::ActivityNpcData;
  }
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcThiefOpenMonsterAsk.ThiefData)
  return thiefdata_;
}
::ActivityNpcData* ActivityScheduleRpcThiefOpenMonsterAsk::release_thiefdata() {
  // @@protoc_insertion_point(field_release:ActivityScheduleRpcThiefOpenMonsterAsk.ThiefData)
  clear_has_thiefdata();
  ::ActivityNpcData* temp = thiefdata_;
  thiefdata_ = NULL;
  return temp;
}
void ActivityScheduleRpcThiefOpenMonsterAsk::set_allocated_thiefdata(::ActivityNpcData* thiefdata) {
  delete thiefdata_;
  thiefdata_ = thiefdata;
  if (thiefdata) {
    set_has_thiefdata();
  } else {
    clear_has_thiefdata();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityScheduleRpcThiefOpenMonsterAsk.ThiefData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityScheduleRpcThiefOpenMonsterReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityScheduleRpcThiefOpenMonsterReply::ActivityScheduleRpcThiefOpenMonsterReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityScheduleRpcThiefOpenMonsterReply)
}
ActivityScheduleRpcThiefOpenMonsterReply::ActivityScheduleRpcThiefOpenMonsterReply(const ActivityScheduleRpcThiefOpenMonsterReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ActivityScheduleRpcThiefOpenMonsterReply)
}

void ActivityScheduleRpcThiefOpenMonsterReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

ActivityScheduleRpcThiefOpenMonsterReply::~ActivityScheduleRpcThiefOpenMonsterReply() {
  // @@protoc_insertion_point(destructor:ActivityScheduleRpcThiefOpenMonsterReply)
  SharedDtor();
}

void ActivityScheduleRpcThiefOpenMonsterReply::SharedDtor() {
}

void ActivityScheduleRpcThiefOpenMonsterReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityScheduleRpcThiefOpenMonsterReply::descriptor() {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityScheduleRpcThiefOpenMonsterReply& ActivityScheduleRpcThiefOpenMonsterReply::default_instance() {
  protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityScheduleRpcThiefOpenMonsterReply* ActivityScheduleRpcThiefOpenMonsterReply::New(::google::protobuf::Arena* arena) const {
  ActivityScheduleRpcThiefOpenMonsterReply* n = new ActivityScheduleRpcThiefOpenMonsterReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityScheduleRpcThiefOpenMonsterReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityScheduleRpcThiefOpenMonsterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityScheduleRpcThiefOpenMonsterReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityScheduleRpcThiefOpenMonsterReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityScheduleRpcThiefOpenMonsterReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityScheduleRpcThiefOpenMonsterReply)
  return false;
#undef DO_
}

void ActivityScheduleRpcThiefOpenMonsterReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityScheduleRpcThiefOpenMonsterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityScheduleRpcThiefOpenMonsterReply)
}

::google::protobuf::uint8* ActivityScheduleRpcThiefOpenMonsterReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityScheduleRpcThiefOpenMonsterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityScheduleRpcThiefOpenMonsterReply)
  return target;
}

size_t ActivityScheduleRpcThiefOpenMonsterReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityScheduleRpcThiefOpenMonsterReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityScheduleRpcThiefOpenMonsterReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityScheduleRpcThiefOpenMonsterReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityScheduleRpcThiefOpenMonsterReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityScheduleRpcThiefOpenMonsterReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityScheduleRpcThiefOpenMonsterReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityScheduleRpcThiefOpenMonsterReply)
    MergeFrom(*source);
  }
}

void ActivityScheduleRpcThiefOpenMonsterReply::MergeFrom(const ActivityScheduleRpcThiefOpenMonsterReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityScheduleRpcThiefOpenMonsterReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void ActivityScheduleRpcThiefOpenMonsterReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityScheduleRpcThiefOpenMonsterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityScheduleRpcThiefOpenMonsterReply::CopyFrom(const ActivityScheduleRpcThiefOpenMonsterReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityScheduleRpcThiefOpenMonsterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityScheduleRpcThiefOpenMonsterReply::IsInitialized() const {
  return true;
}

void ActivityScheduleRpcThiefOpenMonsterReply::Swap(ActivityScheduleRpcThiefOpenMonsterReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityScheduleRpcThiefOpenMonsterReply::InternalSwap(ActivityScheduleRpcThiefOpenMonsterReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityScheduleRpcThiefOpenMonsterReply::GetMetadata() const {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityScheduleRpcThiefOpenMonsterReply

// optional sint32 Result = 1 [default = -9999];
bool ActivityScheduleRpcThiefOpenMonsterReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityScheduleRpcThiefOpenMonsterReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityScheduleRpcThiefOpenMonsterReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityScheduleRpcThiefOpenMonsterReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 ActivityScheduleRpcThiefOpenMonsterReply::result() const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcThiefOpenMonsterReply.Result)
  return result_;
}
void ActivityScheduleRpcThiefOpenMonsterReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ActivityScheduleRpcThiefOpenMonsterReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityScheduleRpcSubdueMonsterEnterAsk::kSubdueMonsterDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityScheduleRpcSubdueMonsterEnterAsk::ActivityScheduleRpcSubdueMonsterEnterAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityScheduleRpcSubdueMonsterEnterAsk)
}
ActivityScheduleRpcSubdueMonsterEnterAsk::ActivityScheduleRpcSubdueMonsterEnterAsk(const ActivityScheduleRpcSubdueMonsterEnterAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_subduemonsterdata()) {
    subduemonsterdata_ = new ::ActivityNpcData(*from.subduemonsterdata_);
  } else {
    subduemonsterdata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ActivityScheduleRpcSubdueMonsterEnterAsk)
}

void ActivityScheduleRpcSubdueMonsterEnterAsk::SharedCtor() {
  _cached_size_ = 0;
  subduemonsterdata_ = NULL;
}

ActivityScheduleRpcSubdueMonsterEnterAsk::~ActivityScheduleRpcSubdueMonsterEnterAsk() {
  // @@protoc_insertion_point(destructor:ActivityScheduleRpcSubdueMonsterEnterAsk)
  SharedDtor();
}

void ActivityScheduleRpcSubdueMonsterEnterAsk::SharedDtor() {
  if (this != internal_default_instance()) delete subduemonsterdata_;
}

void ActivityScheduleRpcSubdueMonsterEnterAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityScheduleRpcSubdueMonsterEnterAsk::descriptor() {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityScheduleRpcSubdueMonsterEnterAsk& ActivityScheduleRpcSubdueMonsterEnterAsk::default_instance() {
  protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityScheduleRpcSubdueMonsterEnterAsk* ActivityScheduleRpcSubdueMonsterEnterAsk::New(::google::protobuf::Arena* arena) const {
  ActivityScheduleRpcSubdueMonsterEnterAsk* n = new ActivityScheduleRpcSubdueMonsterEnterAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityScheduleRpcSubdueMonsterEnterAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityScheduleRpcSubdueMonsterEnterAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_subduemonsterdata()) {
    GOOGLE_DCHECK(subduemonsterdata_ != NULL);
    subduemonsterdata_->::ActivityNpcData::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityScheduleRpcSubdueMonsterEnterAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityScheduleRpcSubdueMonsterEnterAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ActivityNpcData SubdueMonsterData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_subduemonsterdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityScheduleRpcSubdueMonsterEnterAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityScheduleRpcSubdueMonsterEnterAsk)
  return false;
#undef DO_
}

void ActivityScheduleRpcSubdueMonsterEnterAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityScheduleRpcSubdueMonsterEnterAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ActivityNpcData SubdueMonsterData = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->subduemonsterdata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityScheduleRpcSubdueMonsterEnterAsk)
}

::google::protobuf::uint8* ActivityScheduleRpcSubdueMonsterEnterAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityScheduleRpcSubdueMonsterEnterAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ActivityNpcData SubdueMonsterData = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->subduemonsterdata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityScheduleRpcSubdueMonsterEnterAsk)
  return target;
}

size_t ActivityScheduleRpcSubdueMonsterEnterAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityScheduleRpcSubdueMonsterEnterAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .ActivityNpcData SubdueMonsterData = 2;
  if (has_subduemonsterdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->subduemonsterdata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityScheduleRpcSubdueMonsterEnterAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityScheduleRpcSubdueMonsterEnterAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityScheduleRpcSubdueMonsterEnterAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityScheduleRpcSubdueMonsterEnterAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityScheduleRpcSubdueMonsterEnterAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityScheduleRpcSubdueMonsterEnterAsk)
    MergeFrom(*source);
  }
}

void ActivityScheduleRpcSubdueMonsterEnterAsk::MergeFrom(const ActivityScheduleRpcSubdueMonsterEnterAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityScheduleRpcSubdueMonsterEnterAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_subduemonsterdata()) {
    mutable_subduemonsterdata()->::ActivityNpcData::MergeFrom(from.subduemonsterdata());
  }
}

void ActivityScheduleRpcSubdueMonsterEnterAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityScheduleRpcSubdueMonsterEnterAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityScheduleRpcSubdueMonsterEnterAsk::CopyFrom(const ActivityScheduleRpcSubdueMonsterEnterAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityScheduleRpcSubdueMonsterEnterAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityScheduleRpcSubdueMonsterEnterAsk::IsInitialized() const {
  return true;
}

void ActivityScheduleRpcSubdueMonsterEnterAsk::Swap(ActivityScheduleRpcSubdueMonsterEnterAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityScheduleRpcSubdueMonsterEnterAsk::InternalSwap(ActivityScheduleRpcSubdueMonsterEnterAsk* other) {
  using std::swap;
  swap(subduemonsterdata_, other->subduemonsterdata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityScheduleRpcSubdueMonsterEnterAsk::GetMetadata() const {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityScheduleRpcSubdueMonsterEnterAsk

// optional .ActivityNpcData SubdueMonsterData = 2;
bool ActivityScheduleRpcSubdueMonsterEnterAsk::has_subduemonsterdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityScheduleRpcSubdueMonsterEnterAsk::set_has_subduemonsterdata() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityScheduleRpcSubdueMonsterEnterAsk::clear_has_subduemonsterdata() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityScheduleRpcSubdueMonsterEnterAsk::clear_subduemonsterdata() {
  if (subduemonsterdata_ != NULL) subduemonsterdata_->::ActivityNpcData::Clear();
  clear_has_subduemonsterdata();
}
const ::ActivityNpcData& ActivityScheduleRpcSubdueMonsterEnterAsk::subduemonsterdata() const {
  const ::ActivityNpcData* p = subduemonsterdata_;
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcSubdueMonsterEnterAsk.SubdueMonsterData)
  return p != NULL ? *p : *reinterpret_cast<const ::ActivityNpcData*>(
      &::_ActivityNpcData_default_instance_);
}
::ActivityNpcData* ActivityScheduleRpcSubdueMonsterEnterAsk::mutable_subduemonsterdata() {
  set_has_subduemonsterdata();
  if (subduemonsterdata_ == NULL) {
    subduemonsterdata_ = new ::ActivityNpcData;
  }
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcSubdueMonsterEnterAsk.SubdueMonsterData)
  return subduemonsterdata_;
}
::ActivityNpcData* ActivityScheduleRpcSubdueMonsterEnterAsk::release_subduemonsterdata() {
  // @@protoc_insertion_point(field_release:ActivityScheduleRpcSubdueMonsterEnterAsk.SubdueMonsterData)
  clear_has_subduemonsterdata();
  ::ActivityNpcData* temp = subduemonsterdata_;
  subduemonsterdata_ = NULL;
  return temp;
}
void ActivityScheduleRpcSubdueMonsterEnterAsk::set_allocated_subduemonsterdata(::ActivityNpcData* subduemonsterdata) {
  delete subduemonsterdata_;
  subduemonsterdata_ = subduemonsterdata;
  if (subduemonsterdata) {
    set_has_subduemonsterdata();
  } else {
    clear_has_subduemonsterdata();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityScheduleRpcSubdueMonsterEnterAsk.SubdueMonsterData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityScheduleRpcSubdueMonsterEnterReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityScheduleRpcSubdueMonsterEnterReply::ActivityScheduleRpcSubdueMonsterEnterReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityScheduleRpcSubdueMonsterEnterReply)
}
ActivityScheduleRpcSubdueMonsterEnterReply::ActivityScheduleRpcSubdueMonsterEnterReply(const ActivityScheduleRpcSubdueMonsterEnterReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ActivityScheduleRpcSubdueMonsterEnterReply)
}

void ActivityScheduleRpcSubdueMonsterEnterReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

ActivityScheduleRpcSubdueMonsterEnterReply::~ActivityScheduleRpcSubdueMonsterEnterReply() {
  // @@protoc_insertion_point(destructor:ActivityScheduleRpcSubdueMonsterEnterReply)
  SharedDtor();
}

void ActivityScheduleRpcSubdueMonsterEnterReply::SharedDtor() {
}

void ActivityScheduleRpcSubdueMonsterEnterReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityScheduleRpcSubdueMonsterEnterReply::descriptor() {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityScheduleRpcSubdueMonsterEnterReply& ActivityScheduleRpcSubdueMonsterEnterReply::default_instance() {
  protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityScheduleRpcSubdueMonsterEnterReply* ActivityScheduleRpcSubdueMonsterEnterReply::New(::google::protobuf::Arena* arena) const {
  ActivityScheduleRpcSubdueMonsterEnterReply* n = new ActivityScheduleRpcSubdueMonsterEnterReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityScheduleRpcSubdueMonsterEnterReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityScheduleRpcSubdueMonsterEnterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityScheduleRpcSubdueMonsterEnterReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityScheduleRpcSubdueMonsterEnterReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityScheduleRpcSubdueMonsterEnterReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityScheduleRpcSubdueMonsterEnterReply)
  return false;
#undef DO_
}

void ActivityScheduleRpcSubdueMonsterEnterReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityScheduleRpcSubdueMonsterEnterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityScheduleRpcSubdueMonsterEnterReply)
}

::google::protobuf::uint8* ActivityScheduleRpcSubdueMonsterEnterReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityScheduleRpcSubdueMonsterEnterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityScheduleRpcSubdueMonsterEnterReply)
  return target;
}

size_t ActivityScheduleRpcSubdueMonsterEnterReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityScheduleRpcSubdueMonsterEnterReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityScheduleRpcSubdueMonsterEnterReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityScheduleRpcSubdueMonsterEnterReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityScheduleRpcSubdueMonsterEnterReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityScheduleRpcSubdueMonsterEnterReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityScheduleRpcSubdueMonsterEnterReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityScheduleRpcSubdueMonsterEnterReply)
    MergeFrom(*source);
  }
}

void ActivityScheduleRpcSubdueMonsterEnterReply::MergeFrom(const ActivityScheduleRpcSubdueMonsterEnterReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityScheduleRpcSubdueMonsterEnterReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void ActivityScheduleRpcSubdueMonsterEnterReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityScheduleRpcSubdueMonsterEnterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityScheduleRpcSubdueMonsterEnterReply::CopyFrom(const ActivityScheduleRpcSubdueMonsterEnterReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityScheduleRpcSubdueMonsterEnterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityScheduleRpcSubdueMonsterEnterReply::IsInitialized() const {
  return true;
}

void ActivityScheduleRpcSubdueMonsterEnterReply::Swap(ActivityScheduleRpcSubdueMonsterEnterReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityScheduleRpcSubdueMonsterEnterReply::InternalSwap(ActivityScheduleRpcSubdueMonsterEnterReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityScheduleRpcSubdueMonsterEnterReply::GetMetadata() const {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityScheduleRpcSubdueMonsterEnterReply

// optional sint32 Result = 1 [default = -9999];
bool ActivityScheduleRpcSubdueMonsterEnterReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityScheduleRpcSubdueMonsterEnterReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityScheduleRpcSubdueMonsterEnterReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityScheduleRpcSubdueMonsterEnterReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 ActivityScheduleRpcSubdueMonsterEnterReply::result() const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcSubdueMonsterEnterReply.Result)
  return result_;
}
void ActivityScheduleRpcSubdueMonsterEnterReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ActivityScheduleRpcSubdueMonsterEnterReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityScheduleRpcSubdueMonsterBeOpenedNotify::kSubdueMonsterDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityScheduleRpcSubdueMonsterBeOpenedNotify::ActivityScheduleRpcSubdueMonsterBeOpenedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityScheduleRpcSubdueMonsterBeOpenedNotify)
}
ActivityScheduleRpcSubdueMonsterBeOpenedNotify::ActivityScheduleRpcSubdueMonsterBeOpenedNotify(const ActivityScheduleRpcSubdueMonsterBeOpenedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_subduemonsterdata()) {
    subduemonsterdata_ = new ::ActivityNpcData(*from.subduemonsterdata_);
  } else {
    subduemonsterdata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ActivityScheduleRpcSubdueMonsterBeOpenedNotify)
}

void ActivityScheduleRpcSubdueMonsterBeOpenedNotify::SharedCtor() {
  _cached_size_ = 0;
  subduemonsterdata_ = NULL;
}

ActivityScheduleRpcSubdueMonsterBeOpenedNotify::~ActivityScheduleRpcSubdueMonsterBeOpenedNotify() {
  // @@protoc_insertion_point(destructor:ActivityScheduleRpcSubdueMonsterBeOpenedNotify)
  SharedDtor();
}

void ActivityScheduleRpcSubdueMonsterBeOpenedNotify::SharedDtor() {
  if (this != internal_default_instance()) delete subduemonsterdata_;
}

void ActivityScheduleRpcSubdueMonsterBeOpenedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityScheduleRpcSubdueMonsterBeOpenedNotify::descriptor() {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityScheduleRpcSubdueMonsterBeOpenedNotify& ActivityScheduleRpcSubdueMonsterBeOpenedNotify::default_instance() {
  protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityScheduleRpcSubdueMonsterBeOpenedNotify* ActivityScheduleRpcSubdueMonsterBeOpenedNotify::New(::google::protobuf::Arena* arena) const {
  ActivityScheduleRpcSubdueMonsterBeOpenedNotify* n = new ActivityScheduleRpcSubdueMonsterBeOpenedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityScheduleRpcSubdueMonsterBeOpenedNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityScheduleRpcSubdueMonsterBeOpenedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_subduemonsterdata()) {
    GOOGLE_DCHECK(subduemonsterdata_ != NULL);
    subduemonsterdata_->::ActivityNpcData::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityScheduleRpcSubdueMonsterBeOpenedNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityScheduleRpcSubdueMonsterBeOpenedNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ActivityNpcData SubdueMonsterData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_subduemonsterdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityScheduleRpcSubdueMonsterBeOpenedNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityScheduleRpcSubdueMonsterBeOpenedNotify)
  return false;
#undef DO_
}

void ActivityScheduleRpcSubdueMonsterBeOpenedNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityScheduleRpcSubdueMonsterBeOpenedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ActivityNpcData SubdueMonsterData = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->subduemonsterdata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityScheduleRpcSubdueMonsterBeOpenedNotify)
}

::google::protobuf::uint8* ActivityScheduleRpcSubdueMonsterBeOpenedNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityScheduleRpcSubdueMonsterBeOpenedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ActivityNpcData SubdueMonsterData = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->subduemonsterdata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityScheduleRpcSubdueMonsterBeOpenedNotify)
  return target;
}

size_t ActivityScheduleRpcSubdueMonsterBeOpenedNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityScheduleRpcSubdueMonsterBeOpenedNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .ActivityNpcData SubdueMonsterData = 1;
  if (has_subduemonsterdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->subduemonsterdata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityScheduleRpcSubdueMonsterBeOpenedNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityScheduleRpcSubdueMonsterBeOpenedNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityScheduleRpcSubdueMonsterBeOpenedNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityScheduleRpcSubdueMonsterBeOpenedNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityScheduleRpcSubdueMonsterBeOpenedNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityScheduleRpcSubdueMonsterBeOpenedNotify)
    MergeFrom(*source);
  }
}

void ActivityScheduleRpcSubdueMonsterBeOpenedNotify::MergeFrom(const ActivityScheduleRpcSubdueMonsterBeOpenedNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityScheduleRpcSubdueMonsterBeOpenedNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_subduemonsterdata()) {
    mutable_subduemonsterdata()->::ActivityNpcData::MergeFrom(from.subduemonsterdata());
  }
}

void ActivityScheduleRpcSubdueMonsterBeOpenedNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityScheduleRpcSubdueMonsterBeOpenedNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityScheduleRpcSubdueMonsterBeOpenedNotify::CopyFrom(const ActivityScheduleRpcSubdueMonsterBeOpenedNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityScheduleRpcSubdueMonsterBeOpenedNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityScheduleRpcSubdueMonsterBeOpenedNotify::IsInitialized() const {
  return true;
}

void ActivityScheduleRpcSubdueMonsterBeOpenedNotify::Swap(ActivityScheduleRpcSubdueMonsterBeOpenedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityScheduleRpcSubdueMonsterBeOpenedNotify::InternalSwap(ActivityScheduleRpcSubdueMonsterBeOpenedNotify* other) {
  using std::swap;
  swap(subduemonsterdata_, other->subduemonsterdata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityScheduleRpcSubdueMonsterBeOpenedNotify::GetMetadata() const {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityScheduleRpcSubdueMonsterBeOpenedNotify

// optional .ActivityNpcData SubdueMonsterData = 1;
bool ActivityScheduleRpcSubdueMonsterBeOpenedNotify::has_subduemonsterdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityScheduleRpcSubdueMonsterBeOpenedNotify::set_has_subduemonsterdata() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityScheduleRpcSubdueMonsterBeOpenedNotify::clear_has_subduemonsterdata() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityScheduleRpcSubdueMonsterBeOpenedNotify::clear_subduemonsterdata() {
  if (subduemonsterdata_ != NULL) subduemonsterdata_->::ActivityNpcData::Clear();
  clear_has_subduemonsterdata();
}
const ::ActivityNpcData& ActivityScheduleRpcSubdueMonsterBeOpenedNotify::subduemonsterdata() const {
  const ::ActivityNpcData* p = subduemonsterdata_;
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcSubdueMonsterBeOpenedNotify.SubdueMonsterData)
  return p != NULL ? *p : *reinterpret_cast<const ::ActivityNpcData*>(
      &::_ActivityNpcData_default_instance_);
}
::ActivityNpcData* ActivityScheduleRpcSubdueMonsterBeOpenedNotify::mutable_subduemonsterdata() {
  set_has_subduemonsterdata();
  if (subduemonsterdata_ == NULL) {
    subduemonsterdata_ = new ::ActivityNpcData;
  }
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcSubdueMonsterBeOpenedNotify.SubdueMonsterData)
  return subduemonsterdata_;
}
::ActivityNpcData* ActivityScheduleRpcSubdueMonsterBeOpenedNotify::release_subduemonsterdata() {
  // @@protoc_insertion_point(field_release:ActivityScheduleRpcSubdueMonsterBeOpenedNotify.SubdueMonsterData)
  clear_has_subduemonsterdata();
  ::ActivityNpcData* temp = subduemonsterdata_;
  subduemonsterdata_ = NULL;
  return temp;
}
void ActivityScheduleRpcSubdueMonsterBeOpenedNotify::set_allocated_subduemonsterdata(::ActivityNpcData* subduemonsterdata) {
  delete subduemonsterdata_;
  subduemonsterdata_ = subduemonsterdata;
  if (subduemonsterdata) {
    set_has_subduemonsterdata();
  } else {
    clear_has_subduemonsterdata();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityScheduleRpcSubdueMonsterBeOpenedNotify.SubdueMonsterData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityScheduleRpcSubdueMonsterRefreshNotify::kSubdueMonsterDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityScheduleRpcSubdueMonsterRefreshNotify::ActivityScheduleRpcSubdueMonsterRefreshNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityScheduleRpcSubdueMonsterRefreshNotify)
}
ActivityScheduleRpcSubdueMonsterRefreshNotify::ActivityScheduleRpcSubdueMonsterRefreshNotify(const ActivityScheduleRpcSubdueMonsterRefreshNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      subduemonsterdata_(from.subduemonsterdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ActivityScheduleRpcSubdueMonsterRefreshNotify)
}

void ActivityScheduleRpcSubdueMonsterRefreshNotify::SharedCtor() {
  _cached_size_ = 0;
}

ActivityScheduleRpcSubdueMonsterRefreshNotify::~ActivityScheduleRpcSubdueMonsterRefreshNotify() {
  // @@protoc_insertion_point(destructor:ActivityScheduleRpcSubdueMonsterRefreshNotify)
  SharedDtor();
}

void ActivityScheduleRpcSubdueMonsterRefreshNotify::SharedDtor() {
}

void ActivityScheduleRpcSubdueMonsterRefreshNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityScheduleRpcSubdueMonsterRefreshNotify::descriptor() {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityScheduleRpcSubdueMonsterRefreshNotify& ActivityScheduleRpcSubdueMonsterRefreshNotify::default_instance() {
  protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityScheduleRpcSubdueMonsterRefreshNotify* ActivityScheduleRpcSubdueMonsterRefreshNotify::New(::google::protobuf::Arena* arena) const {
  ActivityScheduleRpcSubdueMonsterRefreshNotify* n = new ActivityScheduleRpcSubdueMonsterRefreshNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityScheduleRpcSubdueMonsterRefreshNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityScheduleRpcSubdueMonsterRefreshNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subduemonsterdata_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityScheduleRpcSubdueMonsterRefreshNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityScheduleRpcSubdueMonsterRefreshNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ActivityNpcData SubdueMonsterData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_subduemonsterdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityScheduleRpcSubdueMonsterRefreshNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityScheduleRpcSubdueMonsterRefreshNotify)
  return false;
#undef DO_
}

void ActivityScheduleRpcSubdueMonsterRefreshNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityScheduleRpcSubdueMonsterRefreshNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ActivityNpcData SubdueMonsterData = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subduemonsterdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->subduemonsterdata(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityScheduleRpcSubdueMonsterRefreshNotify)
}

::google::protobuf::uint8* ActivityScheduleRpcSubdueMonsterRefreshNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityScheduleRpcSubdueMonsterRefreshNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ActivityNpcData SubdueMonsterData = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subduemonsterdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->subduemonsterdata(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityScheduleRpcSubdueMonsterRefreshNotify)
  return target;
}

size_t ActivityScheduleRpcSubdueMonsterRefreshNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityScheduleRpcSubdueMonsterRefreshNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ActivityNpcData SubdueMonsterData = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->subduemonsterdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->subduemonsterdata(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityScheduleRpcSubdueMonsterRefreshNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityScheduleRpcSubdueMonsterRefreshNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityScheduleRpcSubdueMonsterRefreshNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityScheduleRpcSubdueMonsterRefreshNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityScheduleRpcSubdueMonsterRefreshNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityScheduleRpcSubdueMonsterRefreshNotify)
    MergeFrom(*source);
  }
}

void ActivityScheduleRpcSubdueMonsterRefreshNotify::MergeFrom(const ActivityScheduleRpcSubdueMonsterRefreshNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityScheduleRpcSubdueMonsterRefreshNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subduemonsterdata_.MergeFrom(from.subduemonsterdata_);
}

void ActivityScheduleRpcSubdueMonsterRefreshNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityScheduleRpcSubdueMonsterRefreshNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityScheduleRpcSubdueMonsterRefreshNotify::CopyFrom(const ActivityScheduleRpcSubdueMonsterRefreshNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityScheduleRpcSubdueMonsterRefreshNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityScheduleRpcSubdueMonsterRefreshNotify::IsInitialized() const {
  return true;
}

void ActivityScheduleRpcSubdueMonsterRefreshNotify::Swap(ActivityScheduleRpcSubdueMonsterRefreshNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityScheduleRpcSubdueMonsterRefreshNotify::InternalSwap(ActivityScheduleRpcSubdueMonsterRefreshNotify* other) {
  using std::swap;
  subduemonsterdata_.InternalSwap(&other->subduemonsterdata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityScheduleRpcSubdueMonsterRefreshNotify::GetMetadata() const {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityScheduleRpcSubdueMonsterRefreshNotify

// repeated .ActivityNpcData SubdueMonsterData = 1;
int ActivityScheduleRpcSubdueMonsterRefreshNotify::subduemonsterdata_size() const {
  return subduemonsterdata_.size();
}
void ActivityScheduleRpcSubdueMonsterRefreshNotify::clear_subduemonsterdata() {
  subduemonsterdata_.Clear();
}
const ::ActivityNpcData& ActivityScheduleRpcSubdueMonsterRefreshNotify::subduemonsterdata(int index) const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcSubdueMonsterRefreshNotify.SubdueMonsterData)
  return subduemonsterdata_.Get(index);
}
::ActivityNpcData* ActivityScheduleRpcSubdueMonsterRefreshNotify::mutable_subduemonsterdata(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcSubdueMonsterRefreshNotify.SubdueMonsterData)
  return subduemonsterdata_.Mutable(index);
}
::ActivityNpcData* ActivityScheduleRpcSubdueMonsterRefreshNotify::add_subduemonsterdata() {
  // @@protoc_insertion_point(field_add:ActivityScheduleRpcSubdueMonsterRefreshNotify.SubdueMonsterData)
  return subduemonsterdata_.Add();
}
::google::protobuf::RepeatedPtrField< ::ActivityNpcData >*
ActivityScheduleRpcSubdueMonsterRefreshNotify::mutable_subduemonsterdata() {
  // @@protoc_insertion_point(field_mutable_list:ActivityScheduleRpcSubdueMonsterRefreshNotify.SubdueMonsterData)
  return &subduemonsterdata_;
}
const ::google::protobuf::RepeatedPtrField< ::ActivityNpcData >&
ActivityScheduleRpcSubdueMonsterRefreshNotify::subduemonsterdata() const {
  // @@protoc_insertion_point(field_list:ActivityScheduleRpcSubdueMonsterRefreshNotify.SubdueMonsterData)
  return subduemonsterdata_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityScheduleRpcWorldBossEnterDungeonAsk::ActivityScheduleRpcWorldBossEnterDungeonAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityScheduleRpcWorldBossEnterDungeonAsk)
}
ActivityScheduleRpcWorldBossEnterDungeonAsk::ActivityScheduleRpcWorldBossEnterDungeonAsk(const ActivityScheduleRpcWorldBossEnterDungeonAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ActivityScheduleRpcWorldBossEnterDungeonAsk)
}

void ActivityScheduleRpcWorldBossEnterDungeonAsk::SharedCtor() {
  _cached_size_ = 0;
}

ActivityScheduleRpcWorldBossEnterDungeonAsk::~ActivityScheduleRpcWorldBossEnterDungeonAsk() {
  // @@protoc_insertion_point(destructor:ActivityScheduleRpcWorldBossEnterDungeonAsk)
  SharedDtor();
}

void ActivityScheduleRpcWorldBossEnterDungeonAsk::SharedDtor() {
}

void ActivityScheduleRpcWorldBossEnterDungeonAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityScheduleRpcWorldBossEnterDungeonAsk::descriptor() {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityScheduleRpcWorldBossEnterDungeonAsk& ActivityScheduleRpcWorldBossEnterDungeonAsk::default_instance() {
  protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityScheduleRpcWorldBossEnterDungeonAsk* ActivityScheduleRpcWorldBossEnterDungeonAsk::New(::google::protobuf::Arena* arena) const {
  ActivityScheduleRpcWorldBossEnterDungeonAsk* n = new ActivityScheduleRpcWorldBossEnterDungeonAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityScheduleRpcWorldBossEnterDungeonAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityScheduleRpcWorldBossEnterDungeonAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityScheduleRpcWorldBossEnterDungeonAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityScheduleRpcWorldBossEnterDungeonAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityScheduleRpcWorldBossEnterDungeonAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityScheduleRpcWorldBossEnterDungeonAsk)
  return false;
#undef DO_
}

void ActivityScheduleRpcWorldBossEnterDungeonAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityScheduleRpcWorldBossEnterDungeonAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityScheduleRpcWorldBossEnterDungeonAsk)
}

::google::protobuf::uint8* ActivityScheduleRpcWorldBossEnterDungeonAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityScheduleRpcWorldBossEnterDungeonAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityScheduleRpcWorldBossEnterDungeonAsk)
  return target;
}

size_t ActivityScheduleRpcWorldBossEnterDungeonAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityScheduleRpcWorldBossEnterDungeonAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityScheduleRpcWorldBossEnterDungeonAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityScheduleRpcWorldBossEnterDungeonAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityScheduleRpcWorldBossEnterDungeonAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityScheduleRpcWorldBossEnterDungeonAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityScheduleRpcWorldBossEnterDungeonAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityScheduleRpcWorldBossEnterDungeonAsk)
    MergeFrom(*source);
  }
}

void ActivityScheduleRpcWorldBossEnterDungeonAsk::MergeFrom(const ActivityScheduleRpcWorldBossEnterDungeonAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityScheduleRpcWorldBossEnterDungeonAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ActivityScheduleRpcWorldBossEnterDungeonAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityScheduleRpcWorldBossEnterDungeonAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityScheduleRpcWorldBossEnterDungeonAsk::CopyFrom(const ActivityScheduleRpcWorldBossEnterDungeonAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityScheduleRpcWorldBossEnterDungeonAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityScheduleRpcWorldBossEnterDungeonAsk::IsInitialized() const {
  return true;
}

void ActivityScheduleRpcWorldBossEnterDungeonAsk::Swap(ActivityScheduleRpcWorldBossEnterDungeonAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityScheduleRpcWorldBossEnterDungeonAsk::InternalSwap(ActivityScheduleRpcWorldBossEnterDungeonAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityScheduleRpcWorldBossEnterDungeonAsk::GetMetadata() const {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityScheduleRpcWorldBossEnterDungeonAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityScheduleRpcWorldBossEnterDungeonReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityScheduleRpcWorldBossEnterDungeonReply::ActivityScheduleRpcWorldBossEnterDungeonReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityScheduleRpcWorldBossEnterDungeonReply)
}
ActivityScheduleRpcWorldBossEnterDungeonReply::ActivityScheduleRpcWorldBossEnterDungeonReply(const ActivityScheduleRpcWorldBossEnterDungeonReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ActivityScheduleRpcWorldBossEnterDungeonReply)
}

void ActivityScheduleRpcWorldBossEnterDungeonReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

ActivityScheduleRpcWorldBossEnterDungeonReply::~ActivityScheduleRpcWorldBossEnterDungeonReply() {
  // @@protoc_insertion_point(destructor:ActivityScheduleRpcWorldBossEnterDungeonReply)
  SharedDtor();
}

void ActivityScheduleRpcWorldBossEnterDungeonReply::SharedDtor() {
}

void ActivityScheduleRpcWorldBossEnterDungeonReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityScheduleRpcWorldBossEnterDungeonReply::descriptor() {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityScheduleRpcWorldBossEnterDungeonReply& ActivityScheduleRpcWorldBossEnterDungeonReply::default_instance() {
  protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityScheduleRpcWorldBossEnterDungeonReply* ActivityScheduleRpcWorldBossEnterDungeonReply::New(::google::protobuf::Arena* arena) const {
  ActivityScheduleRpcWorldBossEnterDungeonReply* n = new ActivityScheduleRpcWorldBossEnterDungeonReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityScheduleRpcWorldBossEnterDungeonReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityScheduleRpcWorldBossEnterDungeonReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityScheduleRpcWorldBossEnterDungeonReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityScheduleRpcWorldBossEnterDungeonReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityScheduleRpcWorldBossEnterDungeonReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityScheduleRpcWorldBossEnterDungeonReply)
  return false;
#undef DO_
}

void ActivityScheduleRpcWorldBossEnterDungeonReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityScheduleRpcWorldBossEnterDungeonReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityScheduleRpcWorldBossEnterDungeonReply)
}

::google::protobuf::uint8* ActivityScheduleRpcWorldBossEnterDungeonReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityScheduleRpcWorldBossEnterDungeonReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityScheduleRpcWorldBossEnterDungeonReply)
  return target;
}

size_t ActivityScheduleRpcWorldBossEnterDungeonReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityScheduleRpcWorldBossEnterDungeonReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityScheduleRpcWorldBossEnterDungeonReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityScheduleRpcWorldBossEnterDungeonReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityScheduleRpcWorldBossEnterDungeonReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityScheduleRpcWorldBossEnterDungeonReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityScheduleRpcWorldBossEnterDungeonReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityScheduleRpcWorldBossEnterDungeonReply)
    MergeFrom(*source);
  }
}

void ActivityScheduleRpcWorldBossEnterDungeonReply::MergeFrom(const ActivityScheduleRpcWorldBossEnterDungeonReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityScheduleRpcWorldBossEnterDungeonReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void ActivityScheduleRpcWorldBossEnterDungeonReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityScheduleRpcWorldBossEnterDungeonReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityScheduleRpcWorldBossEnterDungeonReply::CopyFrom(const ActivityScheduleRpcWorldBossEnterDungeonReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityScheduleRpcWorldBossEnterDungeonReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityScheduleRpcWorldBossEnterDungeonReply::IsInitialized() const {
  return true;
}

void ActivityScheduleRpcWorldBossEnterDungeonReply::Swap(ActivityScheduleRpcWorldBossEnterDungeonReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityScheduleRpcWorldBossEnterDungeonReply::InternalSwap(ActivityScheduleRpcWorldBossEnterDungeonReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityScheduleRpcWorldBossEnterDungeonReply::GetMetadata() const {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityScheduleRpcWorldBossEnterDungeonReply

// optional sint32 Result = 1 [default = -9999];
bool ActivityScheduleRpcWorldBossEnterDungeonReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityScheduleRpcWorldBossEnterDungeonReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityScheduleRpcWorldBossEnterDungeonReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityScheduleRpcWorldBossEnterDungeonReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 ActivityScheduleRpcWorldBossEnterDungeonReply::result() const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcWorldBossEnterDungeonReply.Result)
  return result_;
}
void ActivityScheduleRpcWorldBossEnterDungeonReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ActivityScheduleRpcWorldBossEnterDungeonReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityScheduleRpcWorldBossSyncDataAsk::ActivityScheduleRpcWorldBossSyncDataAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityScheduleRpcWorldBossSyncDataAsk)
}
ActivityScheduleRpcWorldBossSyncDataAsk::ActivityScheduleRpcWorldBossSyncDataAsk(const ActivityScheduleRpcWorldBossSyncDataAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ActivityScheduleRpcWorldBossSyncDataAsk)
}

void ActivityScheduleRpcWorldBossSyncDataAsk::SharedCtor() {
  _cached_size_ = 0;
}

ActivityScheduleRpcWorldBossSyncDataAsk::~ActivityScheduleRpcWorldBossSyncDataAsk() {
  // @@protoc_insertion_point(destructor:ActivityScheduleRpcWorldBossSyncDataAsk)
  SharedDtor();
}

void ActivityScheduleRpcWorldBossSyncDataAsk::SharedDtor() {
}

void ActivityScheduleRpcWorldBossSyncDataAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityScheduleRpcWorldBossSyncDataAsk::descriptor() {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityScheduleRpcWorldBossSyncDataAsk& ActivityScheduleRpcWorldBossSyncDataAsk::default_instance() {
  protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityScheduleRpcWorldBossSyncDataAsk* ActivityScheduleRpcWorldBossSyncDataAsk::New(::google::protobuf::Arena* arena) const {
  ActivityScheduleRpcWorldBossSyncDataAsk* n = new ActivityScheduleRpcWorldBossSyncDataAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityScheduleRpcWorldBossSyncDataAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityScheduleRpcWorldBossSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityScheduleRpcWorldBossSyncDataAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityScheduleRpcWorldBossSyncDataAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityScheduleRpcWorldBossSyncDataAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityScheduleRpcWorldBossSyncDataAsk)
  return false;
#undef DO_
}

void ActivityScheduleRpcWorldBossSyncDataAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityScheduleRpcWorldBossSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityScheduleRpcWorldBossSyncDataAsk)
}

::google::protobuf::uint8* ActivityScheduleRpcWorldBossSyncDataAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityScheduleRpcWorldBossSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityScheduleRpcWorldBossSyncDataAsk)
  return target;
}

size_t ActivityScheduleRpcWorldBossSyncDataAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityScheduleRpcWorldBossSyncDataAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityScheduleRpcWorldBossSyncDataAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityScheduleRpcWorldBossSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityScheduleRpcWorldBossSyncDataAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityScheduleRpcWorldBossSyncDataAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityScheduleRpcWorldBossSyncDataAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityScheduleRpcWorldBossSyncDataAsk)
    MergeFrom(*source);
  }
}

void ActivityScheduleRpcWorldBossSyncDataAsk::MergeFrom(const ActivityScheduleRpcWorldBossSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityScheduleRpcWorldBossSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ActivityScheduleRpcWorldBossSyncDataAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityScheduleRpcWorldBossSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityScheduleRpcWorldBossSyncDataAsk::CopyFrom(const ActivityScheduleRpcWorldBossSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityScheduleRpcWorldBossSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityScheduleRpcWorldBossSyncDataAsk::IsInitialized() const {
  return true;
}

void ActivityScheduleRpcWorldBossSyncDataAsk::Swap(ActivityScheduleRpcWorldBossSyncDataAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityScheduleRpcWorldBossSyncDataAsk::InternalSwap(ActivityScheduleRpcWorldBossSyncDataAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityScheduleRpcWorldBossSyncDataAsk::GetMetadata() const {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityScheduleRpcWorldBossSyncDataAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActivityScheduleRpcWorldBossSyncDataReply::kResultFieldNumber;
const int ActivityScheduleRpcWorldBossSyncDataReply::kWorldBossDataFieldNumber;
const int ActivityScheduleRpcWorldBossSyncDataReply::kWorldBossRankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActivityScheduleRpcWorldBossSyncDataReply::ActivityScheduleRpcWorldBossSyncDataReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActivityScheduleRpcWorldBossSyncDataReply)
}
ActivityScheduleRpcWorldBossSyncDataReply::ActivityScheduleRpcWorldBossSyncDataReply(const ActivityScheduleRpcWorldBossSyncDataReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      worldbossdata_(from.worldbossdata_),
      worldbossrank_(from.worldbossrank_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ActivityScheduleRpcWorldBossSyncDataReply)
}

void ActivityScheduleRpcWorldBossSyncDataReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

ActivityScheduleRpcWorldBossSyncDataReply::~ActivityScheduleRpcWorldBossSyncDataReply() {
  // @@protoc_insertion_point(destructor:ActivityScheduleRpcWorldBossSyncDataReply)
  SharedDtor();
}

void ActivityScheduleRpcWorldBossSyncDataReply::SharedDtor() {
}

void ActivityScheduleRpcWorldBossSyncDataReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivityScheduleRpcWorldBossSyncDataReply::descriptor() {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActivityScheduleRpcWorldBossSyncDataReply& ActivityScheduleRpcWorldBossSyncDataReply::default_instance() {
  protobuf_ActivityScheduleRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActivityScheduleRpcWorldBossSyncDataReply* ActivityScheduleRpcWorldBossSyncDataReply::New(::google::protobuf::Arena* arena) const {
  ActivityScheduleRpcWorldBossSyncDataReply* n = new ActivityScheduleRpcWorldBossSyncDataReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActivityScheduleRpcWorldBossSyncDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ActivityScheduleRpcWorldBossSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  worldbossdata_.Clear();
  worldbossrank_.Clear();
  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActivityScheduleRpcWorldBossSyncDataReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActivityScheduleRpcWorldBossSyncDataReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .WorldBossObj WorldBossData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_worldbossdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .WorldBossRankObj WorldBossRank = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_worldbossrank()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActivityScheduleRpcWorldBossSyncDataReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActivityScheduleRpcWorldBossSyncDataReply)
  return false;
#undef DO_
}

void ActivityScheduleRpcWorldBossSyncDataReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActivityScheduleRpcWorldBossSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // repeated .WorldBossObj WorldBossData = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->worldbossdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->worldbossdata(static_cast<int>(i)), output);
  }

  // repeated .WorldBossRankObj WorldBossRank = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->worldbossrank_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->worldbossrank(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActivityScheduleRpcWorldBossSyncDataReply)
}

::google::protobuf::uint8* ActivityScheduleRpcWorldBossSyncDataReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ActivityScheduleRpcWorldBossSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // repeated .WorldBossObj WorldBossData = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->worldbossdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->worldbossdata(static_cast<int>(i)), deterministic, target);
  }

  // repeated .WorldBossRankObj WorldBossRank = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->worldbossrank_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->worldbossrank(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActivityScheduleRpcWorldBossSyncDataReply)
  return target;
}

size_t ActivityScheduleRpcWorldBossSyncDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ActivityScheduleRpcWorldBossSyncDataReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .WorldBossObj WorldBossData = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->worldbossdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->worldbossdata(static_cast<int>(i)));
    }
  }

  // repeated .WorldBossRankObj WorldBossRank = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->worldbossrank_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->worldbossrank(static_cast<int>(i)));
    }
  }

  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityScheduleRpcWorldBossSyncDataReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActivityScheduleRpcWorldBossSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ActivityScheduleRpcWorldBossSyncDataReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActivityScheduleRpcWorldBossSyncDataReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActivityScheduleRpcWorldBossSyncDataReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActivityScheduleRpcWorldBossSyncDataReply)
    MergeFrom(*source);
  }
}

void ActivityScheduleRpcWorldBossSyncDataReply::MergeFrom(const ActivityScheduleRpcWorldBossSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActivityScheduleRpcWorldBossSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  worldbossdata_.MergeFrom(from.worldbossdata_);
  worldbossrank_.MergeFrom(from.worldbossrank_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void ActivityScheduleRpcWorldBossSyncDataReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActivityScheduleRpcWorldBossSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivityScheduleRpcWorldBossSyncDataReply::CopyFrom(const ActivityScheduleRpcWorldBossSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActivityScheduleRpcWorldBossSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityScheduleRpcWorldBossSyncDataReply::IsInitialized() const {
  return true;
}

void ActivityScheduleRpcWorldBossSyncDataReply::Swap(ActivityScheduleRpcWorldBossSyncDataReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActivityScheduleRpcWorldBossSyncDataReply::InternalSwap(ActivityScheduleRpcWorldBossSyncDataReply* other) {
  using std::swap;
  worldbossdata_.InternalSwap(&other->worldbossdata_);
  worldbossrank_.InternalSwap(&other->worldbossrank_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActivityScheduleRpcWorldBossSyncDataReply::GetMetadata() const {
  protobuf_ActivityScheduleRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActivityScheduleRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActivityScheduleRpcWorldBossSyncDataReply

// optional sint32 Result = 1 [default = -9999];
bool ActivityScheduleRpcWorldBossSyncDataReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActivityScheduleRpcWorldBossSyncDataReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void ActivityScheduleRpcWorldBossSyncDataReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActivityScheduleRpcWorldBossSyncDataReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 ActivityScheduleRpcWorldBossSyncDataReply::result() const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcWorldBossSyncDataReply.Result)
  return result_;
}
void ActivityScheduleRpcWorldBossSyncDataReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ActivityScheduleRpcWorldBossSyncDataReply.Result)
}

// repeated .WorldBossObj WorldBossData = 2;
int ActivityScheduleRpcWorldBossSyncDataReply::worldbossdata_size() const {
  return worldbossdata_.size();
}
void ActivityScheduleRpcWorldBossSyncDataReply::clear_worldbossdata() {
  worldbossdata_.Clear();
}
const ::WorldBossObj& ActivityScheduleRpcWorldBossSyncDataReply::worldbossdata(int index) const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcWorldBossSyncDataReply.WorldBossData)
  return worldbossdata_.Get(index);
}
::WorldBossObj* ActivityScheduleRpcWorldBossSyncDataReply::mutable_worldbossdata(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcWorldBossSyncDataReply.WorldBossData)
  return worldbossdata_.Mutable(index);
}
::WorldBossObj* ActivityScheduleRpcWorldBossSyncDataReply::add_worldbossdata() {
  // @@protoc_insertion_point(field_add:ActivityScheduleRpcWorldBossSyncDataReply.WorldBossData)
  return worldbossdata_.Add();
}
::google::protobuf::RepeatedPtrField< ::WorldBossObj >*
ActivityScheduleRpcWorldBossSyncDataReply::mutable_worldbossdata() {
  // @@protoc_insertion_point(field_mutable_list:ActivityScheduleRpcWorldBossSyncDataReply.WorldBossData)
  return &worldbossdata_;
}
const ::google::protobuf::RepeatedPtrField< ::WorldBossObj >&
ActivityScheduleRpcWorldBossSyncDataReply::worldbossdata() const {
  // @@protoc_insertion_point(field_list:ActivityScheduleRpcWorldBossSyncDataReply.WorldBossData)
  return worldbossdata_;
}

// repeated .WorldBossRankObj WorldBossRank = 3;
int ActivityScheduleRpcWorldBossSyncDataReply::worldbossrank_size() const {
  return worldbossrank_.size();
}
void ActivityScheduleRpcWorldBossSyncDataReply::clear_worldbossrank() {
  worldbossrank_.Clear();
}
const ::WorldBossRankObj& ActivityScheduleRpcWorldBossSyncDataReply::worldbossrank(int index) const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcWorldBossSyncDataReply.WorldBossRank)
  return worldbossrank_.Get(index);
}
::WorldBossRankObj* ActivityScheduleRpcWorldBossSyncDataReply::mutable_worldbossrank(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcWorldBossSyncDataReply.WorldBossRank)
  return worldbossrank_.Mutable(index);
}
::WorldBossRankObj* ActivityScheduleRpcWorldBossSyncDataReply::add_worldbossrank() {
  // @@protoc_insertion_point(field_add:ActivityScheduleRpcWorldBossSyncDataReply.WorldBossRank)
  return worldbossrank_.Add();
}
::google::protobuf::RepeatedPtrField< ::WorldBossRankObj >*
ActivityScheduleRpcWorldBossSyncDataReply::mutable_worldbossrank() {
  // @@protoc_insertion_point(field_mutable_list:ActivityScheduleRpcWorldBossSyncDataReply.WorldBossRank)
  return &worldbossrank_;
}
const ::google::protobuf::RepeatedPtrField< ::WorldBossRankObj >&
ActivityScheduleRpcWorldBossSyncDataReply::worldbossrank() const {
  // @@protoc_insertion_point(field_list:ActivityScheduleRpcWorldBossSyncDataReply.WorldBossRank)
  return worldbossrank_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
