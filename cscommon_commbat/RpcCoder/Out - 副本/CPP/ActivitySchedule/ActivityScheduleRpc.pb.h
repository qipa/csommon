// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActivityScheduleRpc.proto

#ifndef PROTOBUF_ActivityScheduleRpc_2eproto__INCLUDED
#define PROTOBUF_ActivityScheduleRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)
class ActivityScheduleRpcSubdueMonsterBeOpenedNotify;
class ActivityScheduleRpcSubdueMonsterBeOpenedNotifyDefaultTypeInternal;
extern ActivityScheduleRpcSubdueMonsterBeOpenedNotifyDefaultTypeInternal _ActivityScheduleRpcSubdueMonsterBeOpenedNotify_default_instance_;
class ActivityScheduleRpcSubdueMonsterEnterAsk;
class ActivityScheduleRpcSubdueMonsterEnterAskDefaultTypeInternal;
extern ActivityScheduleRpcSubdueMonsterEnterAskDefaultTypeInternal _ActivityScheduleRpcSubdueMonsterEnterAsk_default_instance_;
class ActivityScheduleRpcSubdueMonsterEnterReply;
class ActivityScheduleRpcSubdueMonsterEnterReplyDefaultTypeInternal;
extern ActivityScheduleRpcSubdueMonsterEnterReplyDefaultTypeInternal _ActivityScheduleRpcSubdueMonsterEnterReply_default_instance_;
class ActivityScheduleRpcSubdueMonsterRefreshNotify;
class ActivityScheduleRpcSubdueMonsterRefreshNotifyDefaultTypeInternal;
extern ActivityScheduleRpcSubdueMonsterRefreshNotifyDefaultTypeInternal _ActivityScheduleRpcSubdueMonsterRefreshNotify_default_instance_;
class ActivityScheduleRpcSyncDataAsk;
class ActivityScheduleRpcSyncDataAskDefaultTypeInternal;
extern ActivityScheduleRpcSyncDataAskDefaultTypeInternal _ActivityScheduleRpcSyncDataAsk_default_instance_;
class ActivityScheduleRpcSyncDataReply;
class ActivityScheduleRpcSyncDataReplyDefaultTypeInternal;
extern ActivityScheduleRpcSyncDataReplyDefaultTypeInternal _ActivityScheduleRpcSyncDataReply_default_instance_;
class ActivityScheduleRpcThiefBeOpenedNotify;
class ActivityScheduleRpcThiefBeOpenedNotifyDefaultTypeInternal;
extern ActivityScheduleRpcThiefBeOpenedNotifyDefaultTypeInternal _ActivityScheduleRpcThiefBeOpenedNotify_default_instance_;
class ActivityScheduleRpcThiefOpenMonsterAsk;
class ActivityScheduleRpcThiefOpenMonsterAskDefaultTypeInternal;
extern ActivityScheduleRpcThiefOpenMonsterAskDefaultTypeInternal _ActivityScheduleRpcThiefOpenMonsterAsk_default_instance_;
class ActivityScheduleRpcThiefOpenMonsterReply;
class ActivityScheduleRpcThiefOpenMonsterReplyDefaultTypeInternal;
extern ActivityScheduleRpcThiefOpenMonsterReplyDefaultTypeInternal _ActivityScheduleRpcThiefOpenMonsterReply_default_instance_;
class ActivityScheduleRpcThiefRefreshNotify;
class ActivityScheduleRpcThiefRefreshNotifyDefaultTypeInternal;
extern ActivityScheduleRpcThiefRefreshNotifyDefaultTypeInternal _ActivityScheduleRpcThiefRefreshNotify_default_instance_;
class ActivityScheduleRpcWorldBossEnterDungeonAsk;
class ActivityScheduleRpcWorldBossEnterDungeonAskDefaultTypeInternal;
extern ActivityScheduleRpcWorldBossEnterDungeonAskDefaultTypeInternal _ActivityScheduleRpcWorldBossEnterDungeonAsk_default_instance_;
class ActivityScheduleRpcWorldBossEnterDungeonReply;
class ActivityScheduleRpcWorldBossEnterDungeonReplyDefaultTypeInternal;
extern ActivityScheduleRpcWorldBossEnterDungeonReplyDefaultTypeInternal _ActivityScheduleRpcWorldBossEnterDungeonReply_default_instance_;
class ActivityScheduleRpcWorldBossSyncDataAsk;
class ActivityScheduleRpcWorldBossSyncDataAskDefaultTypeInternal;
extern ActivityScheduleRpcWorldBossSyncDataAskDefaultTypeInternal _ActivityScheduleRpcWorldBossSyncDataAsk_default_instance_;
class ActivityScheduleRpcWorldBossSyncDataReply;
class ActivityScheduleRpcWorldBossSyncDataReplyDefaultTypeInternal;
extern ActivityScheduleRpcWorldBossSyncDataReplyDefaultTypeInternal _ActivityScheduleRpcWorldBossSyncDataReply_default_instance_;

namespace protobuf_ActivityScheduleRpc_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_ActivityScheduleRpc_2eproto

// ===================================================================

class ActivityScheduleRpcSyncDataAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityScheduleRpcSyncDataAsk) */ {
 public:
  ActivityScheduleRpcSyncDataAsk();
  virtual ~ActivityScheduleRpcSyncDataAsk();

  ActivityScheduleRpcSyncDataAsk(const ActivityScheduleRpcSyncDataAsk& from);

  inline ActivityScheduleRpcSyncDataAsk& operator=(const ActivityScheduleRpcSyncDataAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActivityScheduleRpcSyncDataAsk(ActivityScheduleRpcSyncDataAsk&& from) noexcept
    : ActivityScheduleRpcSyncDataAsk() {
    *this = ::std::move(from);
  }

  inline ActivityScheduleRpcSyncDataAsk& operator=(ActivityScheduleRpcSyncDataAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityScheduleRpcSyncDataAsk& default_instance();

  static inline const ActivityScheduleRpcSyncDataAsk* internal_default_instance() {
    return reinterpret_cast<const ActivityScheduleRpcSyncDataAsk*>(
               &_ActivityScheduleRpcSyncDataAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ActivityScheduleRpcSyncDataAsk* other);
  friend void swap(ActivityScheduleRpcSyncDataAsk& a, ActivityScheduleRpcSyncDataAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActivityScheduleRpcSyncDataAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  ActivityScheduleRpcSyncDataAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActivityScheduleRpcSyncDataAsk& from);
  void MergeFrom(const ActivityScheduleRpcSyncDataAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActivityScheduleRpcSyncDataAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ActivityScheduleRpcSyncDataAsk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_ActivityScheduleRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActivityScheduleRpcSyncDataReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityScheduleRpcSyncDataReply) */ {
 public:
  ActivityScheduleRpcSyncDataReply();
  virtual ~ActivityScheduleRpcSyncDataReply();

  ActivityScheduleRpcSyncDataReply(const ActivityScheduleRpcSyncDataReply& from);

  inline ActivityScheduleRpcSyncDataReply& operator=(const ActivityScheduleRpcSyncDataReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActivityScheduleRpcSyncDataReply(ActivityScheduleRpcSyncDataReply&& from) noexcept
    : ActivityScheduleRpcSyncDataReply() {
    *this = ::std::move(from);
  }

  inline ActivityScheduleRpcSyncDataReply& operator=(ActivityScheduleRpcSyncDataReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityScheduleRpcSyncDataReply& default_instance();

  static inline const ActivityScheduleRpcSyncDataReply* internal_default_instance() {
    return reinterpret_cast<const ActivityScheduleRpcSyncDataReply*>(
               &_ActivityScheduleRpcSyncDataReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ActivityScheduleRpcSyncDataReply* other);
  friend void swap(ActivityScheduleRpcSyncDataReply& a, ActivityScheduleRpcSyncDataReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActivityScheduleRpcSyncDataReply* New() const PROTOBUF_FINAL { return New(NULL); }

  ActivityScheduleRpcSyncDataReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActivityScheduleRpcSyncDataReply& from);
  void MergeFrom(const ActivityScheduleRpcSyncDataReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActivityScheduleRpcSyncDataReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ActivityNpcData ThiefData = 2;
  int thiefdata_size() const;
  void clear_thiefdata();
  static const int kThiefDataFieldNumber = 2;
  const ::ActivityNpcData& thiefdata(int index) const;
  ::ActivityNpcData* mutable_thiefdata(int index);
  ::ActivityNpcData* add_thiefdata();
  ::google::protobuf::RepeatedPtrField< ::ActivityNpcData >*
      mutable_thiefdata();
  const ::google::protobuf::RepeatedPtrField< ::ActivityNpcData >&
      thiefdata() const;

  // repeated .ActivityNpcData SubdueMonsterData = 3;
  int subduemonsterdata_size() const;
  void clear_subduemonsterdata();
  static const int kSubdueMonsterDataFieldNumber = 3;
  const ::ActivityNpcData& subduemonsterdata(int index) const;
  ::ActivityNpcData* mutable_subduemonsterdata(int index);
  ::ActivityNpcData* add_subduemonsterdata();
  ::google::protobuf::RepeatedPtrField< ::ActivityNpcData >*
      mutable_subduemonsterdata();
  const ::google::protobuf::RepeatedPtrField< ::ActivityNpcData >&
      subduemonsterdata() const;

  // repeated .WorldBossObj WorldBossData = 4;
  int worldbossdata_size() const;
  void clear_worldbossdata();
  static const int kWorldBossDataFieldNumber = 4;
  const ::WorldBossObj& worldbossdata(int index) const;
  ::WorldBossObj* mutable_worldbossdata(int index);
  ::WorldBossObj* add_worldbossdata();
  ::google::protobuf::RepeatedPtrField< ::WorldBossObj >*
      mutable_worldbossdata();
  const ::google::protobuf::RepeatedPtrField< ::WorldBossObj >&
      worldbossdata() const;

  // repeated .WorldBossRankObj WorldBossRank = 5;
  int worldbossrank_size() const;
  void clear_worldbossrank();
  static const int kWorldBossRankFieldNumber = 5;
  const ::WorldBossRankObj& worldbossrank(int index) const;
  ::WorldBossRankObj* mutable_worldbossrank(int index);
  ::WorldBossRankObj* add_worldbossrank();
  ::google::protobuf::RepeatedPtrField< ::WorldBossRankObj >*
      mutable_worldbossrank();
  const ::google::protobuf::RepeatedPtrField< ::WorldBossRankObj >&
      worldbossrank() const;

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivityScheduleRpcSyncDataReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ActivityNpcData > thiefdata_;
  ::google::protobuf::RepeatedPtrField< ::ActivityNpcData > subduemonsterdata_;
  ::google::protobuf::RepeatedPtrField< ::WorldBossObj > worldbossdata_;
  ::google::protobuf::RepeatedPtrField< ::WorldBossRankObj > worldbossrank_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_ActivityScheduleRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActivityScheduleRpcThiefBeOpenedNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityScheduleRpcThiefBeOpenedNotify) */ {
 public:
  ActivityScheduleRpcThiefBeOpenedNotify();
  virtual ~ActivityScheduleRpcThiefBeOpenedNotify();

  ActivityScheduleRpcThiefBeOpenedNotify(const ActivityScheduleRpcThiefBeOpenedNotify& from);

  inline ActivityScheduleRpcThiefBeOpenedNotify& operator=(const ActivityScheduleRpcThiefBeOpenedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActivityScheduleRpcThiefBeOpenedNotify(ActivityScheduleRpcThiefBeOpenedNotify&& from) noexcept
    : ActivityScheduleRpcThiefBeOpenedNotify() {
    *this = ::std::move(from);
  }

  inline ActivityScheduleRpcThiefBeOpenedNotify& operator=(ActivityScheduleRpcThiefBeOpenedNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityScheduleRpcThiefBeOpenedNotify& default_instance();

  static inline const ActivityScheduleRpcThiefBeOpenedNotify* internal_default_instance() {
    return reinterpret_cast<const ActivityScheduleRpcThiefBeOpenedNotify*>(
               &_ActivityScheduleRpcThiefBeOpenedNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ActivityScheduleRpcThiefBeOpenedNotify* other);
  friend void swap(ActivityScheduleRpcThiefBeOpenedNotify& a, ActivityScheduleRpcThiefBeOpenedNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActivityScheduleRpcThiefBeOpenedNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ActivityScheduleRpcThiefBeOpenedNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActivityScheduleRpcThiefBeOpenedNotify& from);
  void MergeFrom(const ActivityScheduleRpcThiefBeOpenedNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActivityScheduleRpcThiefBeOpenedNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ActivityNpcData ThiefData = 1;
  bool has_thiefdata() const;
  void clear_thiefdata();
  static const int kThiefDataFieldNumber = 1;
  const ::ActivityNpcData& thiefdata() const;
  ::ActivityNpcData* mutable_thiefdata();
  ::ActivityNpcData* release_thiefdata();
  void set_allocated_thiefdata(::ActivityNpcData* thiefdata);

  // @@protoc_insertion_point(class_scope:ActivityScheduleRpcThiefBeOpenedNotify)
 private:
  void set_has_thiefdata();
  void clear_has_thiefdata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ActivityNpcData* thiefdata_;
  friend struct protobuf_ActivityScheduleRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActivityScheduleRpcThiefRefreshNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityScheduleRpcThiefRefreshNotify) */ {
 public:
  ActivityScheduleRpcThiefRefreshNotify();
  virtual ~ActivityScheduleRpcThiefRefreshNotify();

  ActivityScheduleRpcThiefRefreshNotify(const ActivityScheduleRpcThiefRefreshNotify& from);

  inline ActivityScheduleRpcThiefRefreshNotify& operator=(const ActivityScheduleRpcThiefRefreshNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActivityScheduleRpcThiefRefreshNotify(ActivityScheduleRpcThiefRefreshNotify&& from) noexcept
    : ActivityScheduleRpcThiefRefreshNotify() {
    *this = ::std::move(from);
  }

  inline ActivityScheduleRpcThiefRefreshNotify& operator=(ActivityScheduleRpcThiefRefreshNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityScheduleRpcThiefRefreshNotify& default_instance();

  static inline const ActivityScheduleRpcThiefRefreshNotify* internal_default_instance() {
    return reinterpret_cast<const ActivityScheduleRpcThiefRefreshNotify*>(
               &_ActivityScheduleRpcThiefRefreshNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ActivityScheduleRpcThiefRefreshNotify* other);
  friend void swap(ActivityScheduleRpcThiefRefreshNotify& a, ActivityScheduleRpcThiefRefreshNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActivityScheduleRpcThiefRefreshNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ActivityScheduleRpcThiefRefreshNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActivityScheduleRpcThiefRefreshNotify& from);
  void MergeFrom(const ActivityScheduleRpcThiefRefreshNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActivityScheduleRpcThiefRefreshNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ActivityNpcData ThiefData = 1;
  int thiefdata_size() const;
  void clear_thiefdata();
  static const int kThiefDataFieldNumber = 1;
  const ::ActivityNpcData& thiefdata(int index) const;
  ::ActivityNpcData* mutable_thiefdata(int index);
  ::ActivityNpcData* add_thiefdata();
  ::google::protobuf::RepeatedPtrField< ::ActivityNpcData >*
      mutable_thiefdata();
  const ::google::protobuf::RepeatedPtrField< ::ActivityNpcData >&
      thiefdata() const;

  // @@protoc_insertion_point(class_scope:ActivityScheduleRpcThiefRefreshNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ActivityNpcData > thiefdata_;
  friend struct protobuf_ActivityScheduleRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActivityScheduleRpcThiefOpenMonsterAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityScheduleRpcThiefOpenMonsterAsk) */ {
 public:
  ActivityScheduleRpcThiefOpenMonsterAsk();
  virtual ~ActivityScheduleRpcThiefOpenMonsterAsk();

  ActivityScheduleRpcThiefOpenMonsterAsk(const ActivityScheduleRpcThiefOpenMonsterAsk& from);

  inline ActivityScheduleRpcThiefOpenMonsterAsk& operator=(const ActivityScheduleRpcThiefOpenMonsterAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActivityScheduleRpcThiefOpenMonsterAsk(ActivityScheduleRpcThiefOpenMonsterAsk&& from) noexcept
    : ActivityScheduleRpcThiefOpenMonsterAsk() {
    *this = ::std::move(from);
  }

  inline ActivityScheduleRpcThiefOpenMonsterAsk& operator=(ActivityScheduleRpcThiefOpenMonsterAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityScheduleRpcThiefOpenMonsterAsk& default_instance();

  static inline const ActivityScheduleRpcThiefOpenMonsterAsk* internal_default_instance() {
    return reinterpret_cast<const ActivityScheduleRpcThiefOpenMonsterAsk*>(
               &_ActivityScheduleRpcThiefOpenMonsterAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ActivityScheduleRpcThiefOpenMonsterAsk* other);
  friend void swap(ActivityScheduleRpcThiefOpenMonsterAsk& a, ActivityScheduleRpcThiefOpenMonsterAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActivityScheduleRpcThiefOpenMonsterAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  ActivityScheduleRpcThiefOpenMonsterAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActivityScheduleRpcThiefOpenMonsterAsk& from);
  void MergeFrom(const ActivityScheduleRpcThiefOpenMonsterAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActivityScheduleRpcThiefOpenMonsterAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ActivityNpcData ThiefData = 1;
  bool has_thiefdata() const;
  void clear_thiefdata();
  static const int kThiefDataFieldNumber = 1;
  const ::ActivityNpcData& thiefdata() const;
  ::ActivityNpcData* mutable_thiefdata();
  ::ActivityNpcData* release_thiefdata();
  void set_allocated_thiefdata(::ActivityNpcData* thiefdata);

  // @@protoc_insertion_point(class_scope:ActivityScheduleRpcThiefOpenMonsterAsk)
 private:
  void set_has_thiefdata();
  void clear_has_thiefdata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ActivityNpcData* thiefdata_;
  friend struct protobuf_ActivityScheduleRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActivityScheduleRpcThiefOpenMonsterReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityScheduleRpcThiefOpenMonsterReply) */ {
 public:
  ActivityScheduleRpcThiefOpenMonsterReply();
  virtual ~ActivityScheduleRpcThiefOpenMonsterReply();

  ActivityScheduleRpcThiefOpenMonsterReply(const ActivityScheduleRpcThiefOpenMonsterReply& from);

  inline ActivityScheduleRpcThiefOpenMonsterReply& operator=(const ActivityScheduleRpcThiefOpenMonsterReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActivityScheduleRpcThiefOpenMonsterReply(ActivityScheduleRpcThiefOpenMonsterReply&& from) noexcept
    : ActivityScheduleRpcThiefOpenMonsterReply() {
    *this = ::std::move(from);
  }

  inline ActivityScheduleRpcThiefOpenMonsterReply& operator=(ActivityScheduleRpcThiefOpenMonsterReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityScheduleRpcThiefOpenMonsterReply& default_instance();

  static inline const ActivityScheduleRpcThiefOpenMonsterReply* internal_default_instance() {
    return reinterpret_cast<const ActivityScheduleRpcThiefOpenMonsterReply*>(
               &_ActivityScheduleRpcThiefOpenMonsterReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ActivityScheduleRpcThiefOpenMonsterReply* other);
  friend void swap(ActivityScheduleRpcThiefOpenMonsterReply& a, ActivityScheduleRpcThiefOpenMonsterReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActivityScheduleRpcThiefOpenMonsterReply* New() const PROTOBUF_FINAL { return New(NULL); }

  ActivityScheduleRpcThiefOpenMonsterReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActivityScheduleRpcThiefOpenMonsterReply& from);
  void MergeFrom(const ActivityScheduleRpcThiefOpenMonsterReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActivityScheduleRpcThiefOpenMonsterReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivityScheduleRpcThiefOpenMonsterReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_ActivityScheduleRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActivityScheduleRpcSubdueMonsterEnterAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityScheduleRpcSubdueMonsterEnterAsk) */ {
 public:
  ActivityScheduleRpcSubdueMonsterEnterAsk();
  virtual ~ActivityScheduleRpcSubdueMonsterEnterAsk();

  ActivityScheduleRpcSubdueMonsterEnterAsk(const ActivityScheduleRpcSubdueMonsterEnterAsk& from);

  inline ActivityScheduleRpcSubdueMonsterEnterAsk& operator=(const ActivityScheduleRpcSubdueMonsterEnterAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActivityScheduleRpcSubdueMonsterEnterAsk(ActivityScheduleRpcSubdueMonsterEnterAsk&& from) noexcept
    : ActivityScheduleRpcSubdueMonsterEnterAsk() {
    *this = ::std::move(from);
  }

  inline ActivityScheduleRpcSubdueMonsterEnterAsk& operator=(ActivityScheduleRpcSubdueMonsterEnterAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityScheduleRpcSubdueMonsterEnterAsk& default_instance();

  static inline const ActivityScheduleRpcSubdueMonsterEnterAsk* internal_default_instance() {
    return reinterpret_cast<const ActivityScheduleRpcSubdueMonsterEnterAsk*>(
               &_ActivityScheduleRpcSubdueMonsterEnterAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ActivityScheduleRpcSubdueMonsterEnterAsk* other);
  friend void swap(ActivityScheduleRpcSubdueMonsterEnterAsk& a, ActivityScheduleRpcSubdueMonsterEnterAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActivityScheduleRpcSubdueMonsterEnterAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  ActivityScheduleRpcSubdueMonsterEnterAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActivityScheduleRpcSubdueMonsterEnterAsk& from);
  void MergeFrom(const ActivityScheduleRpcSubdueMonsterEnterAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActivityScheduleRpcSubdueMonsterEnterAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ActivityNpcData SubdueMonsterData = 2;
  bool has_subduemonsterdata() const;
  void clear_subduemonsterdata();
  static const int kSubdueMonsterDataFieldNumber = 2;
  const ::ActivityNpcData& subduemonsterdata() const;
  ::ActivityNpcData* mutable_subduemonsterdata();
  ::ActivityNpcData* release_subduemonsterdata();
  void set_allocated_subduemonsterdata(::ActivityNpcData* subduemonsterdata);

  // @@protoc_insertion_point(class_scope:ActivityScheduleRpcSubdueMonsterEnterAsk)
 private:
  void set_has_subduemonsterdata();
  void clear_has_subduemonsterdata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ActivityNpcData* subduemonsterdata_;
  friend struct protobuf_ActivityScheduleRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActivityScheduleRpcSubdueMonsterEnterReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityScheduleRpcSubdueMonsterEnterReply) */ {
 public:
  ActivityScheduleRpcSubdueMonsterEnterReply();
  virtual ~ActivityScheduleRpcSubdueMonsterEnterReply();

  ActivityScheduleRpcSubdueMonsterEnterReply(const ActivityScheduleRpcSubdueMonsterEnterReply& from);

  inline ActivityScheduleRpcSubdueMonsterEnterReply& operator=(const ActivityScheduleRpcSubdueMonsterEnterReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActivityScheduleRpcSubdueMonsterEnterReply(ActivityScheduleRpcSubdueMonsterEnterReply&& from) noexcept
    : ActivityScheduleRpcSubdueMonsterEnterReply() {
    *this = ::std::move(from);
  }

  inline ActivityScheduleRpcSubdueMonsterEnterReply& operator=(ActivityScheduleRpcSubdueMonsterEnterReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityScheduleRpcSubdueMonsterEnterReply& default_instance();

  static inline const ActivityScheduleRpcSubdueMonsterEnterReply* internal_default_instance() {
    return reinterpret_cast<const ActivityScheduleRpcSubdueMonsterEnterReply*>(
               &_ActivityScheduleRpcSubdueMonsterEnterReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ActivityScheduleRpcSubdueMonsterEnterReply* other);
  friend void swap(ActivityScheduleRpcSubdueMonsterEnterReply& a, ActivityScheduleRpcSubdueMonsterEnterReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActivityScheduleRpcSubdueMonsterEnterReply* New() const PROTOBUF_FINAL { return New(NULL); }

  ActivityScheduleRpcSubdueMonsterEnterReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActivityScheduleRpcSubdueMonsterEnterReply& from);
  void MergeFrom(const ActivityScheduleRpcSubdueMonsterEnterReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActivityScheduleRpcSubdueMonsterEnterReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivityScheduleRpcSubdueMonsterEnterReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_ActivityScheduleRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActivityScheduleRpcSubdueMonsterBeOpenedNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityScheduleRpcSubdueMonsterBeOpenedNotify) */ {
 public:
  ActivityScheduleRpcSubdueMonsterBeOpenedNotify();
  virtual ~ActivityScheduleRpcSubdueMonsterBeOpenedNotify();

  ActivityScheduleRpcSubdueMonsterBeOpenedNotify(const ActivityScheduleRpcSubdueMonsterBeOpenedNotify& from);

  inline ActivityScheduleRpcSubdueMonsterBeOpenedNotify& operator=(const ActivityScheduleRpcSubdueMonsterBeOpenedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActivityScheduleRpcSubdueMonsterBeOpenedNotify(ActivityScheduleRpcSubdueMonsterBeOpenedNotify&& from) noexcept
    : ActivityScheduleRpcSubdueMonsterBeOpenedNotify() {
    *this = ::std::move(from);
  }

  inline ActivityScheduleRpcSubdueMonsterBeOpenedNotify& operator=(ActivityScheduleRpcSubdueMonsterBeOpenedNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityScheduleRpcSubdueMonsterBeOpenedNotify& default_instance();

  static inline const ActivityScheduleRpcSubdueMonsterBeOpenedNotify* internal_default_instance() {
    return reinterpret_cast<const ActivityScheduleRpcSubdueMonsterBeOpenedNotify*>(
               &_ActivityScheduleRpcSubdueMonsterBeOpenedNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ActivityScheduleRpcSubdueMonsterBeOpenedNotify* other);
  friend void swap(ActivityScheduleRpcSubdueMonsterBeOpenedNotify& a, ActivityScheduleRpcSubdueMonsterBeOpenedNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActivityScheduleRpcSubdueMonsterBeOpenedNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ActivityScheduleRpcSubdueMonsterBeOpenedNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActivityScheduleRpcSubdueMonsterBeOpenedNotify& from);
  void MergeFrom(const ActivityScheduleRpcSubdueMonsterBeOpenedNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActivityScheduleRpcSubdueMonsterBeOpenedNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ActivityNpcData SubdueMonsterData = 1;
  bool has_subduemonsterdata() const;
  void clear_subduemonsterdata();
  static const int kSubdueMonsterDataFieldNumber = 1;
  const ::ActivityNpcData& subduemonsterdata() const;
  ::ActivityNpcData* mutable_subduemonsterdata();
  ::ActivityNpcData* release_subduemonsterdata();
  void set_allocated_subduemonsterdata(::ActivityNpcData* subduemonsterdata);

  // @@protoc_insertion_point(class_scope:ActivityScheduleRpcSubdueMonsterBeOpenedNotify)
 private:
  void set_has_subduemonsterdata();
  void clear_has_subduemonsterdata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ActivityNpcData* subduemonsterdata_;
  friend struct protobuf_ActivityScheduleRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActivityScheduleRpcSubdueMonsterRefreshNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityScheduleRpcSubdueMonsterRefreshNotify) */ {
 public:
  ActivityScheduleRpcSubdueMonsterRefreshNotify();
  virtual ~ActivityScheduleRpcSubdueMonsterRefreshNotify();

  ActivityScheduleRpcSubdueMonsterRefreshNotify(const ActivityScheduleRpcSubdueMonsterRefreshNotify& from);

  inline ActivityScheduleRpcSubdueMonsterRefreshNotify& operator=(const ActivityScheduleRpcSubdueMonsterRefreshNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActivityScheduleRpcSubdueMonsterRefreshNotify(ActivityScheduleRpcSubdueMonsterRefreshNotify&& from) noexcept
    : ActivityScheduleRpcSubdueMonsterRefreshNotify() {
    *this = ::std::move(from);
  }

  inline ActivityScheduleRpcSubdueMonsterRefreshNotify& operator=(ActivityScheduleRpcSubdueMonsterRefreshNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityScheduleRpcSubdueMonsterRefreshNotify& default_instance();

  static inline const ActivityScheduleRpcSubdueMonsterRefreshNotify* internal_default_instance() {
    return reinterpret_cast<const ActivityScheduleRpcSubdueMonsterRefreshNotify*>(
               &_ActivityScheduleRpcSubdueMonsterRefreshNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ActivityScheduleRpcSubdueMonsterRefreshNotify* other);
  friend void swap(ActivityScheduleRpcSubdueMonsterRefreshNotify& a, ActivityScheduleRpcSubdueMonsterRefreshNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActivityScheduleRpcSubdueMonsterRefreshNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ActivityScheduleRpcSubdueMonsterRefreshNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActivityScheduleRpcSubdueMonsterRefreshNotify& from);
  void MergeFrom(const ActivityScheduleRpcSubdueMonsterRefreshNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActivityScheduleRpcSubdueMonsterRefreshNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ActivityNpcData SubdueMonsterData = 1;
  int subduemonsterdata_size() const;
  void clear_subduemonsterdata();
  static const int kSubdueMonsterDataFieldNumber = 1;
  const ::ActivityNpcData& subduemonsterdata(int index) const;
  ::ActivityNpcData* mutable_subduemonsterdata(int index);
  ::ActivityNpcData* add_subduemonsterdata();
  ::google::protobuf::RepeatedPtrField< ::ActivityNpcData >*
      mutable_subduemonsterdata();
  const ::google::protobuf::RepeatedPtrField< ::ActivityNpcData >&
      subduemonsterdata() const;

  // @@protoc_insertion_point(class_scope:ActivityScheduleRpcSubdueMonsterRefreshNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ActivityNpcData > subduemonsterdata_;
  friend struct protobuf_ActivityScheduleRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActivityScheduleRpcWorldBossEnterDungeonAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityScheduleRpcWorldBossEnterDungeonAsk) */ {
 public:
  ActivityScheduleRpcWorldBossEnterDungeonAsk();
  virtual ~ActivityScheduleRpcWorldBossEnterDungeonAsk();

  ActivityScheduleRpcWorldBossEnterDungeonAsk(const ActivityScheduleRpcWorldBossEnterDungeonAsk& from);

  inline ActivityScheduleRpcWorldBossEnterDungeonAsk& operator=(const ActivityScheduleRpcWorldBossEnterDungeonAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActivityScheduleRpcWorldBossEnterDungeonAsk(ActivityScheduleRpcWorldBossEnterDungeonAsk&& from) noexcept
    : ActivityScheduleRpcWorldBossEnterDungeonAsk() {
    *this = ::std::move(from);
  }

  inline ActivityScheduleRpcWorldBossEnterDungeonAsk& operator=(ActivityScheduleRpcWorldBossEnterDungeonAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityScheduleRpcWorldBossEnterDungeonAsk& default_instance();

  static inline const ActivityScheduleRpcWorldBossEnterDungeonAsk* internal_default_instance() {
    return reinterpret_cast<const ActivityScheduleRpcWorldBossEnterDungeonAsk*>(
               &_ActivityScheduleRpcWorldBossEnterDungeonAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(ActivityScheduleRpcWorldBossEnterDungeonAsk* other);
  friend void swap(ActivityScheduleRpcWorldBossEnterDungeonAsk& a, ActivityScheduleRpcWorldBossEnterDungeonAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActivityScheduleRpcWorldBossEnterDungeonAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  ActivityScheduleRpcWorldBossEnterDungeonAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActivityScheduleRpcWorldBossEnterDungeonAsk& from);
  void MergeFrom(const ActivityScheduleRpcWorldBossEnterDungeonAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActivityScheduleRpcWorldBossEnterDungeonAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ActivityScheduleRpcWorldBossEnterDungeonAsk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_ActivityScheduleRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActivityScheduleRpcWorldBossEnterDungeonReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityScheduleRpcWorldBossEnterDungeonReply) */ {
 public:
  ActivityScheduleRpcWorldBossEnterDungeonReply();
  virtual ~ActivityScheduleRpcWorldBossEnterDungeonReply();

  ActivityScheduleRpcWorldBossEnterDungeonReply(const ActivityScheduleRpcWorldBossEnterDungeonReply& from);

  inline ActivityScheduleRpcWorldBossEnterDungeonReply& operator=(const ActivityScheduleRpcWorldBossEnterDungeonReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActivityScheduleRpcWorldBossEnterDungeonReply(ActivityScheduleRpcWorldBossEnterDungeonReply&& from) noexcept
    : ActivityScheduleRpcWorldBossEnterDungeonReply() {
    *this = ::std::move(from);
  }

  inline ActivityScheduleRpcWorldBossEnterDungeonReply& operator=(ActivityScheduleRpcWorldBossEnterDungeonReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityScheduleRpcWorldBossEnterDungeonReply& default_instance();

  static inline const ActivityScheduleRpcWorldBossEnterDungeonReply* internal_default_instance() {
    return reinterpret_cast<const ActivityScheduleRpcWorldBossEnterDungeonReply*>(
               &_ActivityScheduleRpcWorldBossEnterDungeonReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(ActivityScheduleRpcWorldBossEnterDungeonReply* other);
  friend void swap(ActivityScheduleRpcWorldBossEnterDungeonReply& a, ActivityScheduleRpcWorldBossEnterDungeonReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActivityScheduleRpcWorldBossEnterDungeonReply* New() const PROTOBUF_FINAL { return New(NULL); }

  ActivityScheduleRpcWorldBossEnterDungeonReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActivityScheduleRpcWorldBossEnterDungeonReply& from);
  void MergeFrom(const ActivityScheduleRpcWorldBossEnterDungeonReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActivityScheduleRpcWorldBossEnterDungeonReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivityScheduleRpcWorldBossEnterDungeonReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_ActivityScheduleRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActivityScheduleRpcWorldBossSyncDataAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityScheduleRpcWorldBossSyncDataAsk) */ {
 public:
  ActivityScheduleRpcWorldBossSyncDataAsk();
  virtual ~ActivityScheduleRpcWorldBossSyncDataAsk();

  ActivityScheduleRpcWorldBossSyncDataAsk(const ActivityScheduleRpcWorldBossSyncDataAsk& from);

  inline ActivityScheduleRpcWorldBossSyncDataAsk& operator=(const ActivityScheduleRpcWorldBossSyncDataAsk& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActivityScheduleRpcWorldBossSyncDataAsk(ActivityScheduleRpcWorldBossSyncDataAsk&& from) noexcept
    : ActivityScheduleRpcWorldBossSyncDataAsk() {
    *this = ::std::move(from);
  }

  inline ActivityScheduleRpcWorldBossSyncDataAsk& operator=(ActivityScheduleRpcWorldBossSyncDataAsk&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityScheduleRpcWorldBossSyncDataAsk& default_instance();

  static inline const ActivityScheduleRpcWorldBossSyncDataAsk* internal_default_instance() {
    return reinterpret_cast<const ActivityScheduleRpcWorldBossSyncDataAsk*>(
               &_ActivityScheduleRpcWorldBossSyncDataAsk_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(ActivityScheduleRpcWorldBossSyncDataAsk* other);
  friend void swap(ActivityScheduleRpcWorldBossSyncDataAsk& a, ActivityScheduleRpcWorldBossSyncDataAsk& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActivityScheduleRpcWorldBossSyncDataAsk* New() const PROTOBUF_FINAL { return New(NULL); }

  ActivityScheduleRpcWorldBossSyncDataAsk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActivityScheduleRpcWorldBossSyncDataAsk& from);
  void MergeFrom(const ActivityScheduleRpcWorldBossSyncDataAsk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActivityScheduleRpcWorldBossSyncDataAsk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ActivityScheduleRpcWorldBossSyncDataAsk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_ActivityScheduleRpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActivityScheduleRpcWorldBossSyncDataReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivityScheduleRpcWorldBossSyncDataReply) */ {
 public:
  ActivityScheduleRpcWorldBossSyncDataReply();
  virtual ~ActivityScheduleRpcWorldBossSyncDataReply();

  ActivityScheduleRpcWorldBossSyncDataReply(const ActivityScheduleRpcWorldBossSyncDataReply& from);

  inline ActivityScheduleRpcWorldBossSyncDataReply& operator=(const ActivityScheduleRpcWorldBossSyncDataReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActivityScheduleRpcWorldBossSyncDataReply(ActivityScheduleRpcWorldBossSyncDataReply&& from) noexcept
    : ActivityScheduleRpcWorldBossSyncDataReply() {
    *this = ::std::move(from);
  }

  inline ActivityScheduleRpcWorldBossSyncDataReply& operator=(ActivityScheduleRpcWorldBossSyncDataReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivityScheduleRpcWorldBossSyncDataReply& default_instance();

  static inline const ActivityScheduleRpcWorldBossSyncDataReply* internal_default_instance() {
    return reinterpret_cast<const ActivityScheduleRpcWorldBossSyncDataReply*>(
               &_ActivityScheduleRpcWorldBossSyncDataReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(ActivityScheduleRpcWorldBossSyncDataReply* other);
  friend void swap(ActivityScheduleRpcWorldBossSyncDataReply& a, ActivityScheduleRpcWorldBossSyncDataReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActivityScheduleRpcWorldBossSyncDataReply* New() const PROTOBUF_FINAL { return New(NULL); }

  ActivityScheduleRpcWorldBossSyncDataReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActivityScheduleRpcWorldBossSyncDataReply& from);
  void MergeFrom(const ActivityScheduleRpcWorldBossSyncDataReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActivityScheduleRpcWorldBossSyncDataReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .WorldBossObj WorldBossData = 2;
  int worldbossdata_size() const;
  void clear_worldbossdata();
  static const int kWorldBossDataFieldNumber = 2;
  const ::WorldBossObj& worldbossdata(int index) const;
  ::WorldBossObj* mutable_worldbossdata(int index);
  ::WorldBossObj* add_worldbossdata();
  ::google::protobuf::RepeatedPtrField< ::WorldBossObj >*
      mutable_worldbossdata();
  const ::google::protobuf::RepeatedPtrField< ::WorldBossObj >&
      worldbossdata() const;

  // repeated .WorldBossRankObj WorldBossRank = 3;
  int worldbossrank_size() const;
  void clear_worldbossrank();
  static const int kWorldBossRankFieldNumber = 3;
  const ::WorldBossRankObj& worldbossrank(int index) const;
  ::WorldBossRankObj* mutable_worldbossrank(int index);
  ::WorldBossRankObj* add_worldbossrank();
  ::google::protobuf::RepeatedPtrField< ::WorldBossRankObj >*
      mutable_worldbossrank();
  const ::google::protobuf::RepeatedPtrField< ::WorldBossRankObj >&
      worldbossrank() const;

  // optional sint32 Result = 1 [default = -9999];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ActivityScheduleRpcWorldBossSyncDataReply)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::WorldBossObj > worldbossdata_;
  ::google::protobuf::RepeatedPtrField< ::WorldBossRankObj > worldbossrank_;
  ::google::protobuf::int32 result_;
  friend struct protobuf_ActivityScheduleRpc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ActivityScheduleRpcSyncDataAsk

// -------------------------------------------------------------------

// ActivityScheduleRpcSyncDataReply

// optional sint32 Result = 1 [default = -9999];
inline bool ActivityScheduleRpcSyncDataReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityScheduleRpcSyncDataReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityScheduleRpcSyncDataReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityScheduleRpcSyncDataReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 ActivityScheduleRpcSyncDataReply::result() const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcSyncDataReply.Result)
  return result_;
}
inline void ActivityScheduleRpcSyncDataReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ActivityScheduleRpcSyncDataReply.Result)
}

// repeated .ActivityNpcData ThiefData = 2;
inline int ActivityScheduleRpcSyncDataReply::thiefdata_size() const {
  return thiefdata_.size();
}
inline void ActivityScheduleRpcSyncDataReply::clear_thiefdata() {
  thiefdata_.Clear();
}
inline const ::ActivityNpcData& ActivityScheduleRpcSyncDataReply::thiefdata(int index) const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcSyncDataReply.ThiefData)
  return thiefdata_.Get(index);
}
inline ::ActivityNpcData* ActivityScheduleRpcSyncDataReply::mutable_thiefdata(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcSyncDataReply.ThiefData)
  return thiefdata_.Mutable(index);
}
inline ::ActivityNpcData* ActivityScheduleRpcSyncDataReply::add_thiefdata() {
  // @@protoc_insertion_point(field_add:ActivityScheduleRpcSyncDataReply.ThiefData)
  return thiefdata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ActivityNpcData >*
ActivityScheduleRpcSyncDataReply::mutable_thiefdata() {
  // @@protoc_insertion_point(field_mutable_list:ActivityScheduleRpcSyncDataReply.ThiefData)
  return &thiefdata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivityNpcData >&
ActivityScheduleRpcSyncDataReply::thiefdata() const {
  // @@protoc_insertion_point(field_list:ActivityScheduleRpcSyncDataReply.ThiefData)
  return thiefdata_;
}

// repeated .ActivityNpcData SubdueMonsterData = 3;
inline int ActivityScheduleRpcSyncDataReply::subduemonsterdata_size() const {
  return subduemonsterdata_.size();
}
inline void ActivityScheduleRpcSyncDataReply::clear_subduemonsterdata() {
  subduemonsterdata_.Clear();
}
inline const ::ActivityNpcData& ActivityScheduleRpcSyncDataReply::subduemonsterdata(int index) const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcSyncDataReply.SubdueMonsterData)
  return subduemonsterdata_.Get(index);
}
inline ::ActivityNpcData* ActivityScheduleRpcSyncDataReply::mutable_subduemonsterdata(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcSyncDataReply.SubdueMonsterData)
  return subduemonsterdata_.Mutable(index);
}
inline ::ActivityNpcData* ActivityScheduleRpcSyncDataReply::add_subduemonsterdata() {
  // @@protoc_insertion_point(field_add:ActivityScheduleRpcSyncDataReply.SubdueMonsterData)
  return subduemonsterdata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ActivityNpcData >*
ActivityScheduleRpcSyncDataReply::mutable_subduemonsterdata() {
  // @@protoc_insertion_point(field_mutable_list:ActivityScheduleRpcSyncDataReply.SubdueMonsterData)
  return &subduemonsterdata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivityNpcData >&
ActivityScheduleRpcSyncDataReply::subduemonsterdata() const {
  // @@protoc_insertion_point(field_list:ActivityScheduleRpcSyncDataReply.SubdueMonsterData)
  return subduemonsterdata_;
}

// repeated .WorldBossObj WorldBossData = 4;
inline int ActivityScheduleRpcSyncDataReply::worldbossdata_size() const {
  return worldbossdata_.size();
}
inline void ActivityScheduleRpcSyncDataReply::clear_worldbossdata() {
  worldbossdata_.Clear();
}
inline const ::WorldBossObj& ActivityScheduleRpcSyncDataReply::worldbossdata(int index) const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcSyncDataReply.WorldBossData)
  return worldbossdata_.Get(index);
}
inline ::WorldBossObj* ActivityScheduleRpcSyncDataReply::mutable_worldbossdata(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcSyncDataReply.WorldBossData)
  return worldbossdata_.Mutable(index);
}
inline ::WorldBossObj* ActivityScheduleRpcSyncDataReply::add_worldbossdata() {
  // @@protoc_insertion_point(field_add:ActivityScheduleRpcSyncDataReply.WorldBossData)
  return worldbossdata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::WorldBossObj >*
ActivityScheduleRpcSyncDataReply::mutable_worldbossdata() {
  // @@protoc_insertion_point(field_mutable_list:ActivityScheduleRpcSyncDataReply.WorldBossData)
  return &worldbossdata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::WorldBossObj >&
ActivityScheduleRpcSyncDataReply::worldbossdata() const {
  // @@protoc_insertion_point(field_list:ActivityScheduleRpcSyncDataReply.WorldBossData)
  return worldbossdata_;
}

// repeated .WorldBossRankObj WorldBossRank = 5;
inline int ActivityScheduleRpcSyncDataReply::worldbossrank_size() const {
  return worldbossrank_.size();
}
inline void ActivityScheduleRpcSyncDataReply::clear_worldbossrank() {
  worldbossrank_.Clear();
}
inline const ::WorldBossRankObj& ActivityScheduleRpcSyncDataReply::worldbossrank(int index) const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcSyncDataReply.WorldBossRank)
  return worldbossrank_.Get(index);
}
inline ::WorldBossRankObj* ActivityScheduleRpcSyncDataReply::mutable_worldbossrank(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcSyncDataReply.WorldBossRank)
  return worldbossrank_.Mutable(index);
}
inline ::WorldBossRankObj* ActivityScheduleRpcSyncDataReply::add_worldbossrank() {
  // @@protoc_insertion_point(field_add:ActivityScheduleRpcSyncDataReply.WorldBossRank)
  return worldbossrank_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::WorldBossRankObj >*
ActivityScheduleRpcSyncDataReply::mutable_worldbossrank() {
  // @@protoc_insertion_point(field_mutable_list:ActivityScheduleRpcSyncDataReply.WorldBossRank)
  return &worldbossrank_;
}
inline const ::google::protobuf::RepeatedPtrField< ::WorldBossRankObj >&
ActivityScheduleRpcSyncDataReply::worldbossrank() const {
  // @@protoc_insertion_point(field_list:ActivityScheduleRpcSyncDataReply.WorldBossRank)
  return worldbossrank_;
}

// -------------------------------------------------------------------

// ActivityScheduleRpcThiefBeOpenedNotify

// optional .ActivityNpcData ThiefData = 1;
inline bool ActivityScheduleRpcThiefBeOpenedNotify::has_thiefdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityScheduleRpcThiefBeOpenedNotify::set_has_thiefdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityScheduleRpcThiefBeOpenedNotify::clear_has_thiefdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityScheduleRpcThiefBeOpenedNotify::clear_thiefdata() {
  if (thiefdata_ != NULL) thiefdata_->::ActivityNpcData::Clear();
  clear_has_thiefdata();
}
inline const ::ActivityNpcData& ActivityScheduleRpcThiefBeOpenedNotify::thiefdata() const {
  const ::ActivityNpcData* p = thiefdata_;
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcThiefBeOpenedNotify.ThiefData)
  return p != NULL ? *p : *reinterpret_cast<const ::ActivityNpcData*>(
      &::_ActivityNpcData_default_instance_);
}
inline ::ActivityNpcData* ActivityScheduleRpcThiefBeOpenedNotify::mutable_thiefdata() {
  set_has_thiefdata();
  if (thiefdata_ == NULL) {
    thiefdata_ = new ::ActivityNpcData;
  }
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcThiefBeOpenedNotify.ThiefData)
  return thiefdata_;
}
inline ::ActivityNpcData* ActivityScheduleRpcThiefBeOpenedNotify::release_thiefdata() {
  // @@protoc_insertion_point(field_release:ActivityScheduleRpcThiefBeOpenedNotify.ThiefData)
  clear_has_thiefdata();
  ::ActivityNpcData* temp = thiefdata_;
  thiefdata_ = NULL;
  return temp;
}
inline void ActivityScheduleRpcThiefBeOpenedNotify::set_allocated_thiefdata(::ActivityNpcData* thiefdata) {
  delete thiefdata_;
  thiefdata_ = thiefdata;
  if (thiefdata) {
    set_has_thiefdata();
  } else {
    clear_has_thiefdata();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityScheduleRpcThiefBeOpenedNotify.ThiefData)
}

// -------------------------------------------------------------------

// ActivityScheduleRpcThiefRefreshNotify

// repeated .ActivityNpcData ThiefData = 1;
inline int ActivityScheduleRpcThiefRefreshNotify::thiefdata_size() const {
  return thiefdata_.size();
}
inline void ActivityScheduleRpcThiefRefreshNotify::clear_thiefdata() {
  thiefdata_.Clear();
}
inline const ::ActivityNpcData& ActivityScheduleRpcThiefRefreshNotify::thiefdata(int index) const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcThiefRefreshNotify.ThiefData)
  return thiefdata_.Get(index);
}
inline ::ActivityNpcData* ActivityScheduleRpcThiefRefreshNotify::mutable_thiefdata(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcThiefRefreshNotify.ThiefData)
  return thiefdata_.Mutable(index);
}
inline ::ActivityNpcData* ActivityScheduleRpcThiefRefreshNotify::add_thiefdata() {
  // @@protoc_insertion_point(field_add:ActivityScheduleRpcThiefRefreshNotify.ThiefData)
  return thiefdata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ActivityNpcData >*
ActivityScheduleRpcThiefRefreshNotify::mutable_thiefdata() {
  // @@protoc_insertion_point(field_mutable_list:ActivityScheduleRpcThiefRefreshNotify.ThiefData)
  return &thiefdata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivityNpcData >&
ActivityScheduleRpcThiefRefreshNotify::thiefdata() const {
  // @@protoc_insertion_point(field_list:ActivityScheduleRpcThiefRefreshNotify.ThiefData)
  return thiefdata_;
}

// -------------------------------------------------------------------

// ActivityScheduleRpcThiefOpenMonsterAsk

// optional .ActivityNpcData ThiefData = 1;
inline bool ActivityScheduleRpcThiefOpenMonsterAsk::has_thiefdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityScheduleRpcThiefOpenMonsterAsk::set_has_thiefdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityScheduleRpcThiefOpenMonsterAsk::clear_has_thiefdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityScheduleRpcThiefOpenMonsterAsk::clear_thiefdata() {
  if (thiefdata_ != NULL) thiefdata_->::ActivityNpcData::Clear();
  clear_has_thiefdata();
}
inline const ::ActivityNpcData& ActivityScheduleRpcThiefOpenMonsterAsk::thiefdata() const {
  const ::ActivityNpcData* p = thiefdata_;
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcThiefOpenMonsterAsk.ThiefData)
  return p != NULL ? *p : *reinterpret_cast<const ::ActivityNpcData*>(
      &::_ActivityNpcData_default_instance_);
}
inline ::ActivityNpcData* ActivityScheduleRpcThiefOpenMonsterAsk::mutable_thiefdata() {
  set_has_thiefdata();
  if (thiefdata_ == NULL) {
    thiefdata_ = new ::ActivityNpcData;
  }
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcThiefOpenMonsterAsk.ThiefData)
  return thiefdata_;
}
inline ::ActivityNpcData* ActivityScheduleRpcThiefOpenMonsterAsk::release_thiefdata() {
  // @@protoc_insertion_point(field_release:ActivityScheduleRpcThiefOpenMonsterAsk.ThiefData)
  clear_has_thiefdata();
  ::ActivityNpcData* temp = thiefdata_;
  thiefdata_ = NULL;
  return temp;
}
inline void ActivityScheduleRpcThiefOpenMonsterAsk::set_allocated_thiefdata(::ActivityNpcData* thiefdata) {
  delete thiefdata_;
  thiefdata_ = thiefdata;
  if (thiefdata) {
    set_has_thiefdata();
  } else {
    clear_has_thiefdata();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityScheduleRpcThiefOpenMonsterAsk.ThiefData)
}

// -------------------------------------------------------------------

// ActivityScheduleRpcThiefOpenMonsterReply

// optional sint32 Result = 1 [default = -9999];
inline bool ActivityScheduleRpcThiefOpenMonsterReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityScheduleRpcThiefOpenMonsterReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityScheduleRpcThiefOpenMonsterReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityScheduleRpcThiefOpenMonsterReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 ActivityScheduleRpcThiefOpenMonsterReply::result() const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcThiefOpenMonsterReply.Result)
  return result_;
}
inline void ActivityScheduleRpcThiefOpenMonsterReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ActivityScheduleRpcThiefOpenMonsterReply.Result)
}

// -------------------------------------------------------------------

// ActivityScheduleRpcSubdueMonsterEnterAsk

// optional .ActivityNpcData SubdueMonsterData = 2;
inline bool ActivityScheduleRpcSubdueMonsterEnterAsk::has_subduemonsterdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityScheduleRpcSubdueMonsterEnterAsk::set_has_subduemonsterdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityScheduleRpcSubdueMonsterEnterAsk::clear_has_subduemonsterdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityScheduleRpcSubdueMonsterEnterAsk::clear_subduemonsterdata() {
  if (subduemonsterdata_ != NULL) subduemonsterdata_->::ActivityNpcData::Clear();
  clear_has_subduemonsterdata();
}
inline const ::ActivityNpcData& ActivityScheduleRpcSubdueMonsterEnterAsk::subduemonsterdata() const {
  const ::ActivityNpcData* p = subduemonsterdata_;
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcSubdueMonsterEnterAsk.SubdueMonsterData)
  return p != NULL ? *p : *reinterpret_cast<const ::ActivityNpcData*>(
      &::_ActivityNpcData_default_instance_);
}
inline ::ActivityNpcData* ActivityScheduleRpcSubdueMonsterEnterAsk::mutable_subduemonsterdata() {
  set_has_subduemonsterdata();
  if (subduemonsterdata_ == NULL) {
    subduemonsterdata_ = new ::ActivityNpcData;
  }
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcSubdueMonsterEnterAsk.SubdueMonsterData)
  return subduemonsterdata_;
}
inline ::ActivityNpcData* ActivityScheduleRpcSubdueMonsterEnterAsk::release_subduemonsterdata() {
  // @@protoc_insertion_point(field_release:ActivityScheduleRpcSubdueMonsterEnterAsk.SubdueMonsterData)
  clear_has_subduemonsterdata();
  ::ActivityNpcData* temp = subduemonsterdata_;
  subduemonsterdata_ = NULL;
  return temp;
}
inline void ActivityScheduleRpcSubdueMonsterEnterAsk::set_allocated_subduemonsterdata(::ActivityNpcData* subduemonsterdata) {
  delete subduemonsterdata_;
  subduemonsterdata_ = subduemonsterdata;
  if (subduemonsterdata) {
    set_has_subduemonsterdata();
  } else {
    clear_has_subduemonsterdata();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityScheduleRpcSubdueMonsterEnterAsk.SubdueMonsterData)
}

// -------------------------------------------------------------------

// ActivityScheduleRpcSubdueMonsterEnterReply

// optional sint32 Result = 1 [default = -9999];
inline bool ActivityScheduleRpcSubdueMonsterEnterReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityScheduleRpcSubdueMonsterEnterReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityScheduleRpcSubdueMonsterEnterReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityScheduleRpcSubdueMonsterEnterReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 ActivityScheduleRpcSubdueMonsterEnterReply::result() const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcSubdueMonsterEnterReply.Result)
  return result_;
}
inline void ActivityScheduleRpcSubdueMonsterEnterReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ActivityScheduleRpcSubdueMonsterEnterReply.Result)
}

// -------------------------------------------------------------------

// ActivityScheduleRpcSubdueMonsterBeOpenedNotify

// optional .ActivityNpcData SubdueMonsterData = 1;
inline bool ActivityScheduleRpcSubdueMonsterBeOpenedNotify::has_subduemonsterdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityScheduleRpcSubdueMonsterBeOpenedNotify::set_has_subduemonsterdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityScheduleRpcSubdueMonsterBeOpenedNotify::clear_has_subduemonsterdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityScheduleRpcSubdueMonsterBeOpenedNotify::clear_subduemonsterdata() {
  if (subduemonsterdata_ != NULL) subduemonsterdata_->::ActivityNpcData::Clear();
  clear_has_subduemonsterdata();
}
inline const ::ActivityNpcData& ActivityScheduleRpcSubdueMonsterBeOpenedNotify::subduemonsterdata() const {
  const ::ActivityNpcData* p = subduemonsterdata_;
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcSubdueMonsterBeOpenedNotify.SubdueMonsterData)
  return p != NULL ? *p : *reinterpret_cast<const ::ActivityNpcData*>(
      &::_ActivityNpcData_default_instance_);
}
inline ::ActivityNpcData* ActivityScheduleRpcSubdueMonsterBeOpenedNotify::mutable_subduemonsterdata() {
  set_has_subduemonsterdata();
  if (subduemonsterdata_ == NULL) {
    subduemonsterdata_ = new ::ActivityNpcData;
  }
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcSubdueMonsterBeOpenedNotify.SubdueMonsterData)
  return subduemonsterdata_;
}
inline ::ActivityNpcData* ActivityScheduleRpcSubdueMonsterBeOpenedNotify::release_subduemonsterdata() {
  // @@protoc_insertion_point(field_release:ActivityScheduleRpcSubdueMonsterBeOpenedNotify.SubdueMonsterData)
  clear_has_subduemonsterdata();
  ::ActivityNpcData* temp = subduemonsterdata_;
  subduemonsterdata_ = NULL;
  return temp;
}
inline void ActivityScheduleRpcSubdueMonsterBeOpenedNotify::set_allocated_subduemonsterdata(::ActivityNpcData* subduemonsterdata) {
  delete subduemonsterdata_;
  subduemonsterdata_ = subduemonsterdata;
  if (subduemonsterdata) {
    set_has_subduemonsterdata();
  } else {
    clear_has_subduemonsterdata();
  }
  // @@protoc_insertion_point(field_set_allocated:ActivityScheduleRpcSubdueMonsterBeOpenedNotify.SubdueMonsterData)
}

// -------------------------------------------------------------------

// ActivityScheduleRpcSubdueMonsterRefreshNotify

// repeated .ActivityNpcData SubdueMonsterData = 1;
inline int ActivityScheduleRpcSubdueMonsterRefreshNotify::subduemonsterdata_size() const {
  return subduemonsterdata_.size();
}
inline void ActivityScheduleRpcSubdueMonsterRefreshNotify::clear_subduemonsterdata() {
  subduemonsterdata_.Clear();
}
inline const ::ActivityNpcData& ActivityScheduleRpcSubdueMonsterRefreshNotify::subduemonsterdata(int index) const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcSubdueMonsterRefreshNotify.SubdueMonsterData)
  return subduemonsterdata_.Get(index);
}
inline ::ActivityNpcData* ActivityScheduleRpcSubdueMonsterRefreshNotify::mutable_subduemonsterdata(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcSubdueMonsterRefreshNotify.SubdueMonsterData)
  return subduemonsterdata_.Mutable(index);
}
inline ::ActivityNpcData* ActivityScheduleRpcSubdueMonsterRefreshNotify::add_subduemonsterdata() {
  // @@protoc_insertion_point(field_add:ActivityScheduleRpcSubdueMonsterRefreshNotify.SubdueMonsterData)
  return subduemonsterdata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ActivityNpcData >*
ActivityScheduleRpcSubdueMonsterRefreshNotify::mutable_subduemonsterdata() {
  // @@protoc_insertion_point(field_mutable_list:ActivityScheduleRpcSubdueMonsterRefreshNotify.SubdueMonsterData)
  return &subduemonsterdata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ActivityNpcData >&
ActivityScheduleRpcSubdueMonsterRefreshNotify::subduemonsterdata() const {
  // @@protoc_insertion_point(field_list:ActivityScheduleRpcSubdueMonsterRefreshNotify.SubdueMonsterData)
  return subduemonsterdata_;
}

// -------------------------------------------------------------------

// ActivityScheduleRpcWorldBossEnterDungeonAsk

// -------------------------------------------------------------------

// ActivityScheduleRpcWorldBossEnterDungeonReply

// optional sint32 Result = 1 [default = -9999];
inline bool ActivityScheduleRpcWorldBossEnterDungeonReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityScheduleRpcWorldBossEnterDungeonReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityScheduleRpcWorldBossEnterDungeonReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityScheduleRpcWorldBossEnterDungeonReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 ActivityScheduleRpcWorldBossEnterDungeonReply::result() const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcWorldBossEnterDungeonReply.Result)
  return result_;
}
inline void ActivityScheduleRpcWorldBossEnterDungeonReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ActivityScheduleRpcWorldBossEnterDungeonReply.Result)
}

// -------------------------------------------------------------------

// ActivityScheduleRpcWorldBossSyncDataAsk

// -------------------------------------------------------------------

// ActivityScheduleRpcWorldBossSyncDataReply

// optional sint32 Result = 1 [default = -9999];
inline bool ActivityScheduleRpcWorldBossSyncDataReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityScheduleRpcWorldBossSyncDataReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityScheduleRpcWorldBossSyncDataReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityScheduleRpcWorldBossSyncDataReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
inline ::google::protobuf::int32 ActivityScheduleRpcWorldBossSyncDataReply::result() const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcWorldBossSyncDataReply.Result)
  return result_;
}
inline void ActivityScheduleRpcWorldBossSyncDataReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ActivityScheduleRpcWorldBossSyncDataReply.Result)
}

// repeated .WorldBossObj WorldBossData = 2;
inline int ActivityScheduleRpcWorldBossSyncDataReply::worldbossdata_size() const {
  return worldbossdata_.size();
}
inline void ActivityScheduleRpcWorldBossSyncDataReply::clear_worldbossdata() {
  worldbossdata_.Clear();
}
inline const ::WorldBossObj& ActivityScheduleRpcWorldBossSyncDataReply::worldbossdata(int index) const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcWorldBossSyncDataReply.WorldBossData)
  return worldbossdata_.Get(index);
}
inline ::WorldBossObj* ActivityScheduleRpcWorldBossSyncDataReply::mutable_worldbossdata(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcWorldBossSyncDataReply.WorldBossData)
  return worldbossdata_.Mutable(index);
}
inline ::WorldBossObj* ActivityScheduleRpcWorldBossSyncDataReply::add_worldbossdata() {
  // @@protoc_insertion_point(field_add:ActivityScheduleRpcWorldBossSyncDataReply.WorldBossData)
  return worldbossdata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::WorldBossObj >*
ActivityScheduleRpcWorldBossSyncDataReply::mutable_worldbossdata() {
  // @@protoc_insertion_point(field_mutable_list:ActivityScheduleRpcWorldBossSyncDataReply.WorldBossData)
  return &worldbossdata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::WorldBossObj >&
ActivityScheduleRpcWorldBossSyncDataReply::worldbossdata() const {
  // @@protoc_insertion_point(field_list:ActivityScheduleRpcWorldBossSyncDataReply.WorldBossData)
  return worldbossdata_;
}

// repeated .WorldBossRankObj WorldBossRank = 3;
inline int ActivityScheduleRpcWorldBossSyncDataReply::worldbossrank_size() const {
  return worldbossrank_.size();
}
inline void ActivityScheduleRpcWorldBossSyncDataReply::clear_worldbossrank() {
  worldbossrank_.Clear();
}
inline const ::WorldBossRankObj& ActivityScheduleRpcWorldBossSyncDataReply::worldbossrank(int index) const {
  // @@protoc_insertion_point(field_get:ActivityScheduleRpcWorldBossSyncDataReply.WorldBossRank)
  return worldbossrank_.Get(index);
}
inline ::WorldBossRankObj* ActivityScheduleRpcWorldBossSyncDataReply::mutable_worldbossrank(int index) {
  // @@protoc_insertion_point(field_mutable:ActivityScheduleRpcWorldBossSyncDataReply.WorldBossRank)
  return worldbossrank_.Mutable(index);
}
inline ::WorldBossRankObj* ActivityScheduleRpcWorldBossSyncDataReply::add_worldbossrank() {
  // @@protoc_insertion_point(field_add:ActivityScheduleRpcWorldBossSyncDataReply.WorldBossRank)
  return worldbossrank_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::WorldBossRankObj >*
ActivityScheduleRpcWorldBossSyncDataReply::mutable_worldbossrank() {
  // @@protoc_insertion_point(field_mutable_list:ActivityScheduleRpcWorldBossSyncDataReply.WorldBossRank)
  return &worldbossrank_;
}
inline const ::google::protobuf::RepeatedPtrField< ::WorldBossRankObj >&
ActivityScheduleRpcWorldBossSyncDataReply::worldbossrank() const {
  // @@protoc_insertion_point(field_list:ActivityScheduleRpcWorldBossSyncDataReply.WorldBossRank)
  return worldbossrank_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ActivityScheduleRpc_2eproto__INCLUDED
