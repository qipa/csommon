// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BagRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BagRpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class BagRpcSyncDataAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcSyncDataAsk>
     _instance;
} _BagRpcSyncDataAsk_default_instance_;
class BagRpcSyncDataReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcSyncDataReply>
     _instance;
} _BagRpcSyncDataReply_default_instance_;
class BagRpcSellAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcSellAsk>
     _instance;
} _BagRpcSellAsk_default_instance_;
class BagRpcSellReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcSellReply>
     _instance;
} _BagRpcSellReply_default_instance_;
class BagRpcDecomposeAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcDecomposeAsk>
     _instance;
} _BagRpcDecomposeAsk_default_instance_;
class BagRpcDecomposeReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcDecomposeReply>
     _instance;
} _BagRpcDecomposeReply_default_instance_;
class BagRpcUseAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcUseAsk>
     _instance;
} _BagRpcUseAsk_default_instance_;
class BagRpcUseReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcUseReply>
     _instance;
} _BagRpcUseReply_default_instance_;
class BagRpcEquipWearAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipWearAsk>
     _instance;
} _BagRpcEquipWearAsk_default_instance_;
class BagRpcEquipWearReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipWearReply>
     _instance;
} _BagRpcEquipWearReply_default_instance_;
class BagRpcEquipUndressAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipUndressAsk>
     _instance;
} _BagRpcEquipUndressAsk_default_instance_;
class BagRpcEquipUndressReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipUndressReply>
     _instance;
} _BagRpcEquipUndressReply_default_instance_;
class BagRpcEquipEnhanceAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipEnhanceAsk>
     _instance;
} _BagRpcEquipEnhanceAsk_default_instance_;
class BagRpcEquipEnhanceReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipEnhanceReply>
     _instance;
} _BagRpcEquipEnhanceReply_default_instance_;
class BagRpcEquipPolishedAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipPolishedAsk>
     _instance;
} _BagRpcEquipPolishedAsk_default_instance_;
class BagRpcEquipPolishedReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipPolishedReply>
     _instance;
} _BagRpcEquipPolishedReply_default_instance_;
class BagRpcEquipPolishedReplaceAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipPolishedReplaceAsk>
     _instance;
} _BagRpcEquipPolishedReplaceAsk_default_instance_;
class BagRpcEquipPolishedReplaceReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipPolishedReplaceReply>
     _instance;
} _BagRpcEquipPolishedReplaceReply_default_instance_;
class BagRpcBagTidyAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcBagTidyAsk>
     _instance;
} _BagRpcBagTidyAsk_default_instance_;
class BagRpcBagTidyReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcBagTidyReply>
     _instance;
} _BagRpcBagTidyReply_default_instance_;
class BagRpcBagRecycleBuyAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcBagRecycleBuyAsk>
     _instance;
} _BagRpcBagRecycleBuyAsk_default_instance_;
class BagRpcBagRecycleBuyReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcBagRecycleBuyReply>
     _instance;
} _BagRpcBagRecycleBuyReply_default_instance_;
class BagRpcUnlockGridAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcUnlockGridAsk>
     _instance;
} _BagRpcUnlockGridAsk_default_instance_;
class BagRpcUnlockGridReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcUnlockGridReply>
     _instance;
} _BagRpcUnlockGridReply_default_instance_;
class BagRpcSellGridObjDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcSellGridObj>
     _instance;
} _BagRpcSellGridObj_default_instance_;
class BagRpcBagRecycleSellAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcBagRecycleSellAsk>
     _instance;
} _BagRpcBagRecycleSellAsk_default_instance_;
class BagRpcBagRecycleSellReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcBagRecycleSellReply>
     _instance;
} _BagRpcBagRecycleSellReply_default_instance_;
class BagRpcSplitAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcSplitAsk>
     _instance;
} _BagRpcSplitAsk_default_instance_;
class BagRpcSplitReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcSplitReply>
     _instance;
} _BagRpcSplitReply_default_instance_;
class BagRpcEquipBaseAttrPlishedAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipBaseAttrPlishedAsk>
     _instance;
} _BagRpcEquipBaseAttrPlishedAsk_default_instance_;
class BagRpcEquipBaseAttrPlishedReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipBaseAttrPlishedReply>
     _instance;
} _BagRpcEquipBaseAttrPlishedReply_default_instance_;
class BagRpcEquipBaseAttrPolishedReplaceAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipBaseAttrPolishedReplaceAsk>
     _instance;
} _BagRpcEquipBaseAttrPolishedReplaceAsk_default_instance_;
class BagRpcEquipBaseAttrPolishedReplaceReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipBaseAttrPolishedReplaceReply>
     _instance;
} _BagRpcEquipBaseAttrPolishedReplaceReply_default_instance_;
class BagRpcEquipExAttrModifyAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipExAttrModifyAsk>
     _instance;
} _BagRpcEquipExAttrModifyAsk_default_instance_;
class BagRpcEquipExAttrModifyReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipExAttrModifyReply>
     _instance;
} _BagRpcEquipExAttrModifyReply_default_instance_;
class BagRpcEquipInlayGemAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipInlayGemAsk>
     _instance;
} _BagRpcEquipInlayGemAsk_default_instance_;
class BagRpcEquipInlayGemReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipInlayGemReply>
     _instance;
} _BagRpcEquipInlayGemReply_default_instance_;
class BagRpcEquipGemSlotUnlockAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipGemSlotUnlockAsk>
     _instance;
} _BagRpcEquipGemSlotUnlockAsk_default_instance_;
class BagRpcEquipGemSlotUnlockReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipGemSlotUnlockReply>
     _instance;
} _BagRpcEquipGemSlotUnlockReply_default_instance_;
class BagRpcEquipEnhanceSwapAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipEnhanceSwapAsk>
     _instance;
} _BagRpcEquipEnhanceSwapAsk_default_instance_;
class BagRpcEquipEnhanceSwapReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipEnhanceSwapReply>
     _instance;
} _BagRpcEquipEnhanceSwapReply_default_instance_;
class BagRpcEquipGemRemoveAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipGemRemoveAsk>
     _instance;
} _BagRpcEquipGemRemoveAsk_default_instance_;
class BagRpcEquipGemRemoveReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcEquipGemRemoveReply>
     _instance;
} _BagRpcEquipGemRemoveReply_default_instance_;
class BagRpcBagPutInStorageAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcBagPutInStorageAsk>
     _instance;
} _BagRpcBagPutInStorageAsk_default_instance_;
class BagRpcBagPutInStorageReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcBagPutInStorageReply>
     _instance;
} _BagRpcBagPutInStorageReply_default_instance_;
class BagRpcBagFetchFromStorageAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcBagFetchFromStorageAsk>
     _instance;
} _BagRpcBagFetchFromStorageAsk_default_instance_;
class BagRpcBagFetchFromStorageReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcBagFetchFromStorageReply>
     _instance;
} _BagRpcBagFetchFromStorageReply_default_instance_;
class BagRpcBagStorageSaveMoneyAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcBagStorageSaveMoneyAsk>
     _instance;
} _BagRpcBagStorageSaveMoneyAsk_default_instance_;
class BagRpcBagStorageSaveMoneyReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcBagStorageSaveMoneyReply>
     _instance;
} _BagRpcBagStorageSaveMoneyReply_default_instance_;
class BagRpcBagStorageDrawMoneyAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcBagStorageDrawMoneyAsk>
     _instance;
} _BagRpcBagStorageDrawMoneyAsk_default_instance_;
class BagRpcBagStorageDrawMoneyReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcBagStorageDrawMoneyReply>
     _instance;
} _BagRpcBagStorageDrawMoneyReply_default_instance_;
class BagRpcStorageTidyAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcStorageTidyAsk>
     _instance;
} _BagRpcStorageTidyAsk_default_instance_;
class BagRpcStorageTidyReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcStorageTidyReply>
     _instance;
} _BagRpcStorageTidyReply_default_instance_;
class BagRpcTalismanLvupAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcTalismanLvupAsk>
     _instance;
} _BagRpcTalismanLvupAsk_default_instance_;
class BagRpcTalismanLvupReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcTalismanLvupReply>
     _instance;
} _BagRpcTalismanLvupReply_default_instance_;
class BagRpcTalismanInheritAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcTalismanInheritAsk>
     _instance;
} _BagRpcTalismanInheritAsk_default_instance_;
class BagRpcTalismanInheritReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcTalismanInheritReply>
     _instance;
} _BagRpcTalismanInheritReply_default_instance_;
class BagRpcBagAddNewItemNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcBagAddNewItemNotify>
     _instance;
} _BagRpcBagAddNewItemNotify_default_instance_;
class BagRpcBagSetAutoPickupAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcBagSetAutoPickupAsk>
     _instance;
} _BagRpcBagSetAutoPickupAsk_default_instance_;
class BagRpcBagSetAutoPickupReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcBagSetAutoPickupReply>
     _instance;
} _BagRpcBagSetAutoPickupReply_default_instance_;
class BagRpcGetNewItemNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcGetNewItemNotify>
     _instance;
} _BagRpcGetNewItemNotify_default_instance_;
class BagRpcBagErrorNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcBagErrorNotify>
     _instance;
} _BagRpcBagErrorNotify_default_instance_;
class BagRpcTalismanRefindStarAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcTalismanRefindStarAsk>
     _instance;
} _BagRpcTalismanRefindStarAsk_default_instance_;
class BagRpcTalismanRefindStarReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcTalismanRefindStarReply>
     _instance;
} _BagRpcTalismanRefindStarReply_default_instance_;
class BagRpcTalismanUpSlotSkillLevelAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcTalismanUpSlotSkillLevelAsk>
     _instance;
} _BagRpcTalismanUpSlotSkillLevelAsk_default_instance_;
class BagRpcTalismanUpSlotSkillLevelReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcTalismanUpSlotSkillLevelReply>
     _instance;
} _BagRpcTalismanUpSlotSkillLevelReply_default_instance_;
class BagRpcTalismanAttrChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcTalismanAttrChangeNotify>
     _instance;
} _BagRpcTalismanAttrChangeNotify_default_instance_;
class BagRpcTalismanGatherSpriteAskDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcTalismanGatherSpriteAsk>
     _instance;
} _BagRpcTalismanGatherSpriteAsk_default_instance_;
class BagRpcTalismanGatherSpriteReplyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BagRpcTalismanGatherSpriteReply>
     _instance;
} _BagRpcTalismanGatherSpriteReply_default_instance_;

namespace protobuf_BagRpc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[69];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSyncDataAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSyncDataAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSyncDataReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSyncDataReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSyncDataReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSellAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSellAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSellAsk, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSellAsk, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSellAsk, num_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSellReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSellReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSellReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSellReply, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSellReply, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSellReply, num_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcDecomposeAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcDecomposeAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcDecomposeAsk, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcDecomposeAsk, pos_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcDecomposeReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcDecomposeReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcDecomposeReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcDecomposeReply, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcDecomposeReply, pos_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcUseAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcUseAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcUseAsk, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcUseAsk, pos_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcUseReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcUseReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcUseReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcUseReply, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcUseReply, itemid_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipWearAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipWearAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipWearAsk, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipWearAsk, bagpos_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipWearReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipWearReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipWearReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipWearReply, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipWearReply, bagpos_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipUndressAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipUndressAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipUndressAsk, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipUndressAsk, equippos_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipUndressReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipUndressReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipUndressReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipUndressReply, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipUndressReply, equippos_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceAsk, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceAsk, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceAsk, bagcontainertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceAsk, lv_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceReply, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceReply, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceReply, bagcontainertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceReply, lv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceReply, isfirstenhance_),
  2,
  3,
  4,
  5,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedAsk, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedAsk, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedAsk, bagcontainertype_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedReply, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedReply, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedReply, bagcontainertype_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedReplaceAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedReplaceAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedReplaceAsk, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedReplaceAsk, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedReplaceAsk, bagcontainertype_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedReplaceReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedReplaceReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedReplaceReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedReplaceReply, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedReplaceReply, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipPolishedReplaceReply, bagcontainertype_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagTidyAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagTidyAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagTidyReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagTidyReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagTidyReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagRecycleBuyAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagRecycleBuyAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagRecycleBuyAsk, gridpos_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagRecycleBuyReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagRecycleBuyReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagRecycleBuyReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagRecycleBuyReply, gridpos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagRecycleBuyReply, gridlist_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcUnlockGridAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcUnlockGridAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcUnlockGridAsk, gridcount_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcUnlockGridReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcUnlockGridReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcUnlockGridReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcUnlockGridReply, gridcount_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSellGridObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSellGridObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSellGridObj, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSellGridObj, num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSellGridObj, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSellGridObj, itemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSellGridObj, itemtype_),
  0,
  1,
  3,
  2,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagRecycleSellAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagRecycleSellAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagRecycleSellAsk, gridlist_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagRecycleSellReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagRecycleSellReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagRecycleSellReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagRecycleSellReply, gridlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagRecycleSellReply, money_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSplitAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSplitAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSplitAsk, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSplitAsk, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSplitAsk, num_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSplitReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSplitReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSplitReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSplitReply, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSplitReply, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcSplitReply, num_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPlishedAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPlishedAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPlishedAsk, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPlishedAsk, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPlishedAsk, bagcontainertype_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPlishedReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPlishedReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPlishedReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPlishedReply, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPlishedReply, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPlishedReply, bagcontainertype_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPolishedReplaceAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPolishedReplaceAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPolishedReplaceAsk, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPolishedReplaceAsk, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPolishedReplaceAsk, bagcontainertype_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPolishedReplaceReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPolishedReplaceReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPolishedReplaceReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPolishedReplaceReply, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPolishedReplaceReply, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipBaseAttrPolishedReplaceReply, bagcontainertype_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipExAttrModifyAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipExAttrModifyAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipExAttrModifyAsk, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipExAttrModifyAsk, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipExAttrModifyAsk, bagcontainertype_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipExAttrModifyReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipExAttrModifyReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipExAttrModifyReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipExAttrModifyReply, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipExAttrModifyReply, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipExAttrModifyReply, bagcontainertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipExAttrModifyReply, index_),
  1,
  2,
  3,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipInlayGemAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipInlayGemAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipInlayGemAsk, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipInlayGemAsk, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipInlayGemAsk, bagcontainertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipInlayGemAsk, slotpos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipInlayGemAsk, gemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipInlayGemAsk, gempos_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipInlayGemReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipInlayGemReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipInlayGemReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipInlayGemReply, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipInlayGemReply, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipInlayGemReply, bagcontainertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipInlayGemReply, slotpos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipInlayGemReply, gemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipInlayGemReply, gempos_),
  1,
  2,
  3,
  4,
  5,
  6,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemSlotUnlockAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemSlotUnlockAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemSlotUnlockAsk, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemSlotUnlockAsk, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemSlotUnlockAsk, bagcontainertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemSlotUnlockAsk, slotpos_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemSlotUnlockReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemSlotUnlockReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemSlotUnlockReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemSlotUnlockReply, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemSlotUnlockReply, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemSlotUnlockReply, bagcontainertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemSlotUnlockReply, slotpos_),
  1,
  2,
  3,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceSwapAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceSwapAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceSwapAsk, templateid1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceSwapAsk, pos1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceSwapAsk, templateid2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceSwapAsk, pos2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceSwapAsk, bagcontainertype1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceSwapAsk, bagcontainertype2_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceSwapReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceSwapReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceSwapReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceSwapReply, templateid1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceSwapReply, pos1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceSwapReply, templateid2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceSwapReply, pos2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceSwapReply, bagcontainertype1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipEnhanceSwapReply, bagcontainertype2_),
  1,
  2,
  3,
  4,
  5,
  6,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemRemoveAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemRemoveAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemRemoveAsk, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemRemoveAsk, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemRemoveAsk, bagcontainertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemRemoveAsk, slotpos_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemRemoveReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemRemoveReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemRemoveReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemRemoveReply, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemRemoveReply, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemRemoveReply, bagcontainertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcEquipGemRemoveReply, slotpos_),
  1,
  2,
  3,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagPutInStorageAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagPutInStorageAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagPutInStorageAsk, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagPutInStorageAsk, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagPutInStorageAsk, num_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagPutInStorageReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagPutInStorageReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagPutInStorageReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagPutInStorageReply, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagPutInStorageReply, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagPutInStorageReply, num_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagFetchFromStorageAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagFetchFromStorageAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagFetchFromStorageAsk, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagFetchFromStorageAsk, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagFetchFromStorageAsk, num_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagFetchFromStorageReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagFetchFromStorageReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagFetchFromStorageReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagFetchFromStorageReply, templateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagFetchFromStorageReply, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagFetchFromStorageReply, num_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagStorageSaveMoneyAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagStorageSaveMoneyAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagStorageSaveMoneyAsk, money_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagStorageSaveMoneyReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagStorageSaveMoneyReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagStorageSaveMoneyReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagStorageSaveMoneyReply, money_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagStorageDrawMoneyAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagStorageDrawMoneyAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagStorageDrawMoneyAsk, money_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagStorageDrawMoneyReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagStorageDrawMoneyReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagStorageDrawMoneyReply, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagStorageDrawMoneyReply, money_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcStorageTidyAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcStorageTidyAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcStorageTidyReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcStorageTidyReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcStorageTidyReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanLvupAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanLvupAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanLvupAsk, costtalisman_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanLvupReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanLvupReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanLvupReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanInheritAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanInheritAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanInheritAsk, rightsidetalisman_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanInheritReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanInheritReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanInheritReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagAddNewItemNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagAddNewItemNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagAddNewItemNotify, newitem_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagSetAutoPickupAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagSetAutoPickupAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagSetAutoPickupAsk, autopick_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagSetAutoPickupReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagSetAutoPickupReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagSetAutoPickupReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcGetNewItemNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcGetNewItemNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcGetNewItemNotify, item_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcGetNewItemNotify, moduleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcGetNewItemNotify, pathwayid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcGetNewItemNotify, moduleparam_),
  ~0u,
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagErrorNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagErrorNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcBagErrorNotify, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanRefindStarAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanRefindStarAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanRefindStarAsk, fabaoid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanRefindStarReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanRefindStarReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanRefindStarReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanUpSlotSkillLevelAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanUpSlotSkillLevelAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanUpSlotSkillLevelAsk, fabaoid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanUpSlotSkillLevelAsk, slotid_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanUpSlotSkillLevelReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanUpSlotSkillLevelReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanUpSlotSkillLevelReply, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanAttrChangeNotify, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanAttrChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanAttrChangeNotify, attr_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanGatherSpriteAsk, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanGatherSpriteAsk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanGatherSpriteAsk, fabaoid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanGatherSpriteAsk, gatherspriteid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanGatherSpriteAsk, slotid_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanGatherSpriteReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanGatherSpriteReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BagRpcTalismanGatherSpriteReply, result_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(BagRpcSyncDataAsk)},
  { 5, 11, sizeof(BagRpcSyncDataReply)},
  { 12, 20, sizeof(BagRpcSellAsk)},
  { 23, 32, sizeof(BagRpcSellReply)},
  { 36, 43, sizeof(BagRpcDecomposeAsk)},
  { 45, 53, sizeof(BagRpcDecomposeReply)},
  { 56, 63, sizeof(BagRpcUseAsk)},
  { 65, 73, sizeof(BagRpcUseReply)},
  { 76, 83, sizeof(BagRpcEquipWearAsk)},
  { 85, 93, sizeof(BagRpcEquipWearReply)},
  { 96, 103, sizeof(BagRpcEquipUndressAsk)},
  { 105, 113, sizeof(BagRpcEquipUndressReply)},
  { 116, 125, sizeof(BagRpcEquipEnhanceAsk)},
  { 129, 140, sizeof(BagRpcEquipEnhanceReply)},
  { 146, 154, sizeof(BagRpcEquipPolishedAsk)},
  { 157, 166, sizeof(BagRpcEquipPolishedReply)},
  { 170, 178, sizeof(BagRpcEquipPolishedReplaceAsk)},
  { 181, 190, sizeof(BagRpcEquipPolishedReplaceReply)},
  { 194, 199, sizeof(BagRpcBagTidyAsk)},
  { 199, 205, sizeof(BagRpcBagTidyReply)},
  { 206, 212, sizeof(BagRpcBagRecycleBuyAsk)},
  { 213, 221, sizeof(BagRpcBagRecycleBuyReply)},
  { 224, 230, sizeof(BagRpcUnlockGridAsk)},
  { 231, 238, sizeof(BagRpcUnlockGridReply)},
  { 240, 250, sizeof(BagRpcSellGridObj)},
  { 255, 261, sizeof(BagRpcBagRecycleSellAsk)},
  { 262, 270, sizeof(BagRpcBagRecycleSellReply)},
  { 273, 281, sizeof(BagRpcSplitAsk)},
  { 284, 293, sizeof(BagRpcSplitReply)},
  { 297, 305, sizeof(BagRpcEquipBaseAttrPlishedAsk)},
  { 308, 317, sizeof(BagRpcEquipBaseAttrPlishedReply)},
  { 321, 329, sizeof(BagRpcEquipBaseAttrPolishedReplaceAsk)},
  { 332, 341, sizeof(BagRpcEquipBaseAttrPolishedReplaceReply)},
  { 345, 353, sizeof(BagRpcEquipExAttrModifyAsk)},
  { 356, 366, sizeof(BagRpcEquipExAttrModifyReply)},
  { 371, 382, sizeof(BagRpcEquipInlayGemAsk)},
  { 388, 400, sizeof(BagRpcEquipInlayGemReply)},
  { 407, 416, sizeof(BagRpcEquipGemSlotUnlockAsk)},
  { 420, 430, sizeof(BagRpcEquipGemSlotUnlockReply)},
  { 435, 446, sizeof(BagRpcEquipEnhanceSwapAsk)},
  { 452, 464, sizeof(BagRpcEquipEnhanceSwapReply)},
  { 471, 480, sizeof(BagRpcEquipGemRemoveAsk)},
  { 484, 494, sizeof(BagRpcEquipGemRemoveReply)},
  { 499, 507, sizeof(BagRpcBagPutInStorageAsk)},
  { 510, 519, sizeof(BagRpcBagPutInStorageReply)},
  { 523, 531, sizeof(BagRpcBagFetchFromStorageAsk)},
  { 534, 543, sizeof(BagRpcBagFetchFromStorageReply)},
  { 547, 553, sizeof(BagRpcBagStorageSaveMoneyAsk)},
  { 554, 561, sizeof(BagRpcBagStorageSaveMoneyReply)},
  { 563, 569, sizeof(BagRpcBagStorageDrawMoneyAsk)},
  { 570, 577, sizeof(BagRpcBagStorageDrawMoneyReply)},
  { 579, 584, sizeof(BagRpcStorageTidyAsk)},
  { 584, 590, sizeof(BagRpcStorageTidyReply)},
  { 591, 597, sizeof(BagRpcTalismanLvupAsk)},
  { 598, 604, sizeof(BagRpcTalismanLvupReply)},
  { 605, 611, sizeof(BagRpcTalismanInheritAsk)},
  { 612, 618, sizeof(BagRpcTalismanInheritReply)},
  { 619, 625, sizeof(BagRpcBagAddNewItemNotify)},
  { 626, 632, sizeof(BagRpcBagSetAutoPickupAsk)},
  { 633, 639, sizeof(BagRpcBagSetAutoPickupReply)},
  { 640, 649, sizeof(BagRpcGetNewItemNotify)},
  { 653, 659, sizeof(BagRpcBagErrorNotify)},
  { 660, 666, sizeof(BagRpcTalismanRefindStarAsk)},
  { 667, 673, sizeof(BagRpcTalismanRefindStarReply)},
  { 674, 681, sizeof(BagRpcTalismanUpSlotSkillLevelAsk)},
  { 683, 689, sizeof(BagRpcTalismanUpSlotSkillLevelReply)},
  { 690, 696, sizeof(BagRpcTalismanAttrChangeNotify)},
  { 697, 705, sizeof(BagRpcTalismanGatherSpriteAsk)},
  { 708, 714, sizeof(BagRpcTalismanGatherSpriteReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcSyncDataAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcSyncDataReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcSellAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcSellReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcDecomposeAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcDecomposeReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcUseAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcUseReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipWearAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipWearReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipUndressAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipUndressReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipEnhanceAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipEnhanceReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipPolishedAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipPolishedReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipPolishedReplaceAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipPolishedReplaceReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcBagTidyAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcBagTidyReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcBagRecycleBuyAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcBagRecycleBuyReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcUnlockGridAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcUnlockGridReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcSellGridObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcBagRecycleSellAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcBagRecycleSellReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcSplitAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcSplitReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipBaseAttrPlishedAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipBaseAttrPlishedReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipBaseAttrPolishedReplaceAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipBaseAttrPolishedReplaceReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipExAttrModifyAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipExAttrModifyReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipInlayGemAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipInlayGemReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipGemSlotUnlockAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipGemSlotUnlockReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipEnhanceSwapAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipEnhanceSwapReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipGemRemoveAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcEquipGemRemoveReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcBagPutInStorageAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcBagPutInStorageReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcBagFetchFromStorageAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcBagFetchFromStorageReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcBagStorageSaveMoneyAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcBagStorageSaveMoneyReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcBagStorageDrawMoneyAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcBagStorageDrawMoneyReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcStorageTidyAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcStorageTidyReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcTalismanLvupAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcTalismanLvupReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcTalismanInheritAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcTalismanInheritReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcBagAddNewItemNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcBagSetAutoPickupAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcBagSetAutoPickupReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcGetNewItemNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcBagErrorNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcTalismanRefindStarAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcTalismanRefindStarReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcTalismanUpSlotSkillLevelAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcTalismanUpSlotSkillLevelReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcTalismanAttrChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcTalismanGatherSpriteAsk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BagRpcTalismanGatherSpriteReply_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "BagRpc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 69);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _BagRpcSyncDataAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcSyncDataAsk_default_instance_);_BagRpcSyncDataReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcSyncDataReply_default_instance_);_BagRpcSellAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcSellAsk_default_instance_);_BagRpcSellReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcSellReply_default_instance_);_BagRpcDecomposeAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcDecomposeAsk_default_instance_);_BagRpcDecomposeReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcDecomposeReply_default_instance_);_BagRpcUseAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcUseAsk_default_instance_);_BagRpcUseReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcUseReply_default_instance_);_BagRpcEquipWearAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipWearAsk_default_instance_);_BagRpcEquipWearReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipWearReply_default_instance_);_BagRpcEquipUndressAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipUndressAsk_default_instance_);_BagRpcEquipUndressReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipUndressReply_default_instance_);_BagRpcEquipEnhanceAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipEnhanceAsk_default_instance_);_BagRpcEquipEnhanceReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipEnhanceReply_default_instance_);_BagRpcEquipPolishedAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipPolishedAsk_default_instance_);_BagRpcEquipPolishedReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipPolishedReply_default_instance_);_BagRpcEquipPolishedReplaceAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipPolishedReplaceAsk_default_instance_);_BagRpcEquipPolishedReplaceReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipPolishedReplaceReply_default_instance_);_BagRpcBagTidyAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcBagTidyAsk_default_instance_);_BagRpcBagTidyReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcBagTidyReply_default_instance_);_BagRpcBagRecycleBuyAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcBagRecycleBuyAsk_default_instance_);_BagRpcBagRecycleBuyReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcBagRecycleBuyReply_default_instance_);_BagRpcUnlockGridAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcUnlockGridAsk_default_instance_);_BagRpcUnlockGridReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcUnlockGridReply_default_instance_);_BagRpcSellGridObj_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcSellGridObj_default_instance_);_BagRpcBagRecycleSellAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcBagRecycleSellAsk_default_instance_);_BagRpcBagRecycleSellReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcBagRecycleSellReply_default_instance_);_BagRpcSplitAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcSplitAsk_default_instance_);_BagRpcSplitReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcSplitReply_default_instance_);_BagRpcEquipBaseAttrPlishedAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipBaseAttrPlishedAsk_default_instance_);_BagRpcEquipBaseAttrPlishedReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipBaseAttrPlishedReply_default_instance_);_BagRpcEquipBaseAttrPolishedReplaceAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipBaseAttrPolishedReplaceAsk_default_instance_);_BagRpcEquipBaseAttrPolishedReplaceReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipBaseAttrPolishedReplaceReply_default_instance_);_BagRpcEquipExAttrModifyAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipExAttrModifyAsk_default_instance_);_BagRpcEquipExAttrModifyReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipExAttrModifyReply_default_instance_);_BagRpcEquipInlayGemAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipInlayGemAsk_default_instance_);_BagRpcEquipInlayGemReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipInlayGemReply_default_instance_);_BagRpcEquipGemSlotUnlockAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipGemSlotUnlockAsk_default_instance_);_BagRpcEquipGemSlotUnlockReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipGemSlotUnlockReply_default_instance_);_BagRpcEquipEnhanceSwapAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipEnhanceSwapAsk_default_instance_);_BagRpcEquipEnhanceSwapReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipEnhanceSwapReply_default_instance_);_BagRpcEquipGemRemoveAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipGemRemoveAsk_default_instance_);_BagRpcEquipGemRemoveReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcEquipGemRemoveReply_default_instance_);_BagRpcBagPutInStorageAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcBagPutInStorageAsk_default_instance_);_BagRpcBagPutInStorageReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcBagPutInStorageReply_default_instance_);_BagRpcBagFetchFromStorageAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcBagFetchFromStorageAsk_default_instance_);_BagRpcBagFetchFromStorageReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcBagFetchFromStorageReply_default_instance_);_BagRpcBagStorageSaveMoneyAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcBagStorageSaveMoneyAsk_default_instance_);_BagRpcBagStorageSaveMoneyReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcBagStorageSaveMoneyReply_default_instance_);_BagRpcBagStorageDrawMoneyAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcBagStorageDrawMoneyAsk_default_instance_);_BagRpcBagStorageDrawMoneyReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcBagStorageDrawMoneyReply_default_instance_);_BagRpcStorageTidyAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcStorageTidyAsk_default_instance_);_BagRpcStorageTidyReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcStorageTidyReply_default_instance_);_BagRpcTalismanLvupAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcTalismanLvupAsk_default_instance_);_BagRpcTalismanLvupReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcTalismanLvupReply_default_instance_);_BagRpcTalismanInheritAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcTalismanInheritAsk_default_instance_);_BagRpcTalismanInheritReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcTalismanInheritReply_default_instance_);_BagRpcBagAddNewItemNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcBagAddNewItemNotify_default_instance_);_BagRpcBagSetAutoPickupAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcBagSetAutoPickupAsk_default_instance_);_BagRpcBagSetAutoPickupReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcBagSetAutoPickupReply_default_instance_);_BagRpcGetNewItemNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcGetNewItemNotify_default_instance_);_BagRpcBagErrorNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcBagErrorNotify_default_instance_);_BagRpcTalismanRefindStarAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcTalismanRefindStarAsk_default_instance_);_BagRpcTalismanRefindStarReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcTalismanRefindStarReply_default_instance_);_BagRpcTalismanUpSlotSkillLevelAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcTalismanUpSlotSkillLevelAsk_default_instance_);_BagRpcTalismanUpSlotSkillLevelReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcTalismanUpSlotSkillLevelReply_default_instance_);_BagRpcTalismanAttrChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcTalismanAttrChangeNotify_default_instance_);_BagRpcTalismanGatherSpriteAsk_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcTalismanGatherSpriteAsk_default_instance_);_BagRpcTalismanGatherSpriteReply_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BagRpcTalismanGatherSpriteReply_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014BagRpc.proto\032\022PublicStruct.proto\"\023\n\021Ba"
      "gRpcSyncDataAsk\",\n\023BagRpcSyncDataReply\022\025"
      "\n\006Result\030\001 \001(\021:\005-9999\"E\n\rBagRpcSellAsk\022\022"
      "\n\006ItemID\030\001 \001(\021:\002-1\022\017\n\003Pos\030\002 \001(\021:\002-1\022\017\n\003N"
      "um\030\003 \001(\021:\002-1\"^\n\017BagRpcSellReply\022\025\n\006Resul"
      "t\030\001 \001(\021:\005-9999\022\022\n\006ItemID\030\002 \001(\021:\002-1\022\017\n\003Po"
      "s\030\003 \001(\021:\002-1\022\017\n\003Num\030\004 \001(\021:\002-1\"9\n\022BagRpcDe"
      "composeAsk\022\022\n\006ItemID\030\001 \001(\021:\002-1\022\017\n\003Pos\030\002 "
      "\001(\021:\002-1\"R\n\024BagRpcDecomposeReply\022\025\n\006Resul"
      "t\030\001 \001(\021:\005-9999\022\022\n\006ItemID\030\002 \001(\021:\002-1\022\017\n\003Po"
      "s\030\003 \001(\021:\002-1\"3\n\014BagRpcUseAsk\022\022\n\006ItemID\030\001 "
      "\001(\021:\002-1\022\017\n\003Pos\030\002 \001(\021:\002-1\"L\n\016BagRpcUseRep"
      "ly\022\025\n\006Result\030\001 \001(\021:\005-9999\022\017\n\003Pos\030\002 \001(\021:\002"
      "-1\022\022\n\006ItemID\030\003 \001(\021:\002-1\"<\n\022BagRpcEquipWea"
      "rAsk\022\022\n\006ItemId\030\001 \001(\021:\002-1\022\022\n\006BagPos\030\002 \001(\021"
      ":\002-1\"U\n\024BagRpcEquipWearReply\022\025\n\006Result\030\001"
      " \001(\021:\005-9999\022\022\n\006ItemId\030\002 \001(\021:\002-1\022\022\n\006BagPo"
      "s\030\004 \001(\021:\002-1\"A\n\025BagRpcEquipUndressAsk\022\022\n\006"
      "ItemId\030\001 \001(\021:\002-1\022\024\n\010EquipPos\030\003 \001(\021:\002-1\"Z"
      "\n\027BagRpcEquipUndressReply\022\025\n\006Result\030\001 \001("
      "\021:\005-9999\022\022\n\006ItemId\030\002 \001(\021:\002-1\022\024\n\010EquipPos"
      "\030\004 \001(\021:\002-1\"j\n\025BagRpcEquipEnhanceAsk\022\022\n\006I"
      "temId\030\001 \001(\021:\002-1\022\017\n\003Pos\030\002 \001(\021:\002-1\022\034\n\020BagC"
      "ontainerType\030\003 \001(\021:\002-1\022\016\n\002Lv\030\004 \001(\021:\002-1\"\242"
      "\001\n\027BagRpcEquipEnhanceReply\022\025\n\006Result\030\001 \001"
      "(\021:\005-9999\022\022\n\006ItemId\030\002 \001(\021:\002-1\022\017\n\003Pos\030\003 \001"
      "(\021:\002-1\022\034\n\020BagContainerType\030\004 \001(\021:\002-1\022\016\n\002"
      "Lv\030\005 \001(\021:\002-1\022\035\n\016IsFirstEnhance\030\006 \001(\010:\005fa"
      "lse\"[\n\026BagRpcEquipPolishedAsk\022\022\n\006ItemId\030"
      "\002 \001(\021:\002-1\022\017\n\003Pos\030\003 \001(\021:\002-1\022\034\n\020BagContain"
      "erType\030\004 \001(\021:\002-1\"t\n\030BagRpcEquipPolishedR"
      "eply\022\025\n\006Result\030\001 \001(\021:\005-9999\022\022\n\006ItemId\030\002 "
      "\001(\021:\002-1\022\017\n\003Pos\030\003 \001(\021:\002-1\022\034\n\020BagContainer"
      "Type\030\004 \001(\021:\002-1\"b\n\035BagRpcEquipPolishedRep"
      "laceAsk\022\022\n\006ItemId\030\002 \001(\021:\002-1\022\017\n\003Pos\030\003 \001(\021"
      ":\002-1\022\034\n\020BagContainerType\030\004 \001(\021:\002-1\"{\n\037Ba"
      "gRpcEquipPolishedReplaceReply\022\025\n\006Result\030"
      "\001 \001(\021:\005-9999\022\022\n\006ItemId\030\002 \001(\021:\002-1\022\017\n\003Pos\030"
      "\003 \001(\021:\002-1\022\034\n\020BagContainerType\030\004 \001(\021:\002-1\""
      "\022\n\020BagRpcBagTidyAsk\"+\n\022BagRpcBagTidyRepl"
      "y\022\025\n\006Result\030\001 \001(\021:\005-9999\"-\n\026BagRpcBagRec"
      "ycleBuyAsk\022\023\n\007GridPos\030\001 \001(\021:\002-1\"l\n\030BagRp"
      "cBagRecycleBuyReply\022\025\n\006Result\030\001 \001(\021:\005-99"
      "99\022\023\n\007GridPos\030\002 \001(\021:\002-1\022$\n\010GridList\030\003 \003("
      "\0132\022.BagRecycleGridObj\",\n\023BagRpcUnlockGri"
      "dAsk\022\025\n\tGridCount\030\001 \001(\021:\002-1\"E\n\025BagRpcUnl"
      "ockGridReply\022\025\n\006Result\030\001 \001(\021:\005-9999\022\025\n\tG"
      "ridCount\030\002 \001(\021:\002-1\"w\n\021BagRpcSellGridObj\022"
      "\026\n\nTemplateId\030\002 \001(\021:\002-1\022\017\n\003Num\030\003 \001(\021:\002-1"
      "\022\017\n\003Pos\030\004 \001(\021:\002-1\022\022\n\006ItemId\030\005 \001(\022:\002-1\022\024\n"
      "\010ItemType\030\006 \001(\021:\002-1\"\?\n\027BagRpcBagRecycleS"
      "ellAsk\022$\n\010GridList\030\001 \003(\0132\022.BagRpcSellGri"
      "dObj\"k\n\031BagRpcBagRecycleSellReply\022\025\n\006Res"
      "ult\030\001 \001(\021:\005-9999\022$\n\010GridList\030\002 \003(\0132\022.Bag"
      "RecycleGridObj\022\021\n\005Money\030\004 \001(\021:\002-1\"J\n\016Bag"
      "RpcSplitAsk\022\026\n\nTemplateId\030\001 \001(\021:\002-1\022\017\n\003P"
      "os\030\002 \001(\021:\002-1\022\017\n\003Num\030\003 \001(\021:\002-1\"c\n\020BagRpcS"
      "plitReply\022\025\n\006Result\030\001 \001(\021:\005-9999\022\026\n\nTemp"
      "lateId\030\002 \001(\021:\002-1\022\017\n\003Pos\030\003 \001(\021:\002-1\022\017\n\003Num"
      "\030\004 \001(\021:\002-1\"f\n\035BagRpcEquipBaseAttrPlished"
      "Ask\022\026\n\nTemplateId\030\001 \001(\021:\002-1\022\017\n\003Pos\030\002 \001(\021"
      ":\002-1\022\034\n\020BagContainerType\030\003 \001(\021:\002-1\"\177\n\037Ba"
      "gRpcEquipBaseAttrPlishedReply\022\025\n\006Result\030"
      "\001 \001(\021:\005-9999\022\026\n\nTemplateId\030\003 \001(\021:\002-1\022\017\n\003"
      "Pos\030\004 \001(\021:\002-1\022\034\n\020BagContainerType\030\005 \001(\021:"
      "\002-1\"n\n%BagRpcEquipBaseAttrPolishedReplac"
      "eAsk\022\026\n\nTemplateId\030\001 \001(\021:\002-1\022\017\n\003Pos\030\002 \001("
      "\021:\002-1\022\034\n\020BagContainerType\030\003 \001(\021:\002-1\"\207\001\n\'"
      "BagRpcEquipBaseAttrPolishedReplaceReply\022"
      "\025\n\006Result\030\001 \001(\021:\005-9999\022\026\n\nTemplateId\030\002 \001"
      "(\021:\002-1\022\017\n\003Pos\030\003 \001(\021:\002-1\022\034\n\020BagContainerT"
      "ype\030\004 \001(\021:\002-1\"c\n\032BagRpcEquipExAttrModify"
      "Ask\022\026\n\nTemplateId\030\001 \001(\021:\002-1\022\017\n\003Pos\030\002 \001(\021"
      ":\002-1\022\034\n\020BagContainerType\030\003 \001(\021:\002-1\"\217\001\n\034B"
      "agRpcEquipExAttrModifyReply\022\025\n\006Result\030\001 "
      "\001(\021:\005-9999\022\026\n\nTemplateId\030\002 \001(\021:\002-1\022\017\n\003Po"
      "s\030\003 \001(\021:\002-1\022\034\n\020BagContainerType\030\004 \001(\021:\002-"
      "1\022\021\n\005Index\030\006 \001(\021:\002-1\"\233\001\n\026BagRpcEquipInla"
      "yGemAsk\022\026\n\nTemplateId\030\001 \001(\021:\002-1\022\017\n\003Pos\030\002"
      " \001(\021:\002-1\022\034\n\020BagContainerType\030\003 \001(\021:\002-1\022\023"
      "\n\007SlotPos\030\004 \001(\021:\002-1\022\021\n\005GemId\030\005 \001(\021:\002-1\022\022"
      "\n\006GemPos\030\006 \001(\021:\002-1\"\264\001\n\030BagRpcEquipInlayG"
      "emReply\022\025\n\006Result\030\001 \001(\021:\005-9999\022\026\n\nTempla"
      "teId\030\002 \001(\021:\002-1\022\017\n\003Pos\030\003 \001(\021:\002-1\022\034\n\020BagCo"
      "ntainerType\030\004 \001(\021:\002-1\022\023\n\007SlotPos\030\005 \001(\021:\002"
      "-1\022\021\n\005GemId\030\006 \001(\021:\002-1\022\022\n\006GemPos\030\007 \001(\021:\002-"
      "1\"y\n\033BagRpcEquipGemSlotUnlockAsk\022\026\n\nTemp"
      "lateId\030\001 \001(\021:\002-1\022\017\n\003Pos\030\002 \001(\021:\002-1\022\034\n\020Bag"
      "ContainerType\030\003 \001(\021:\002-1\022\023\n\007SlotPos\030\005 \001(\021"
      ":\002-1\"\222\001\n\035BagRpcEquipGemSlotUnlockReply\022\025"
      "\n\006Result\030\001 \001(\021:\005-9999\022\026\n\nTemplateId\030\002 \001("
      "\021:\002-1\022\017\n\003Pos\030\003 \001(\021:\002-1\022\034\n\020BagContainerTy"
      "pe\030\004 \001(\021:\002-1\022\023\n\007SlotPos\030\006 \001(\021:\002-1\"\257\001\n\031Ba"
      "gRpcEquipEnhanceSwapAsk\022\027\n\013TemplateId1\030\001"
      " \001(\021:\002-1\022\020\n\004Pos1\030\002 \001(\021:\002-1\022\027\n\013TemplateId"
      "2\030\003 \001(\021:\002-1\022\020\n\004Pos2\030\004 \001(\021:\002-1\022\035\n\021BagCont"
      "ainerType1\030\005 \001(\021:\002-1\022\035\n\021BagContainerType"
      "2\030\006 \001(\021:\002-1\"\310\001\n\033BagRpcEquipEnhanceSwapRe"
      "ply\022\025\n\006Result\030\001 \001(\021:\005-9999\022\027\n\013TemplateId"
      "1\030\004 \001(\021:\002-1\022\020\n\004Pos1\030\005 \001(\021:\002-1\022\027\n\013Templat"
      "eId2\030\006 \001(\021:\002-1\022\020\n\004Pos2\030\007 \001(\021:\002-1\022\035\n\021BagC"
      "ontainerType1\030\010 \001(\021:\002-1\022\035\n\021BagContainerT"
      "ype2\030\t \001(\021:\002-1\"u\n\027BagRpcEquipGemRemoveAs"
      "k\022\026\n\nTemplateId\030\002 \001(\021:\002-1\022\017\n\003Pos\030\003 \001(\021:\002"
      "-1\022\034\n\020BagContainerType\030\004 \001(\021:\002-1\022\023\n\007Slot"
      "Pos\030\005 \001(\021:\002-1\"\216\001\n\031BagRpcEquipGemRemoveRe"
      "ply\022\025\n\006Result\030\001 \001(\021:\005-9999\022\026\n\nTemplateId"
      "\030\002 \001(\021:\002-1\022\017\n\003Pos\030\003 \001(\021:\002-1\022\034\n\020BagContai"
      "nerType\030\004 \001(\021:\002-1\022\023\n\007SlotPos\030\005 \001(\021:\002-1\"T"
      "\n\030BagRpcBagPutInStorageAsk\022\026\n\nTemplateId"
      "\030\002 \001(\021:\002-1\022\017\n\003Pos\030\003 \001(\021:\002-1\022\017\n\003Num\030\004 \001(\021"
      ":\002-1\"m\n\032BagRpcBagPutInStorageReply\022\025\n\006Re"
      "sult\030\001 \001(\021:\005-9999\022\026\n\nTemplateId\030\002 \001(\021:\002-"
      "1\022\017\n\003Pos\030\003 \001(\021:\002-1\022\017\n\003Num\030\004 \001(\021:\002-1\"X\n\034B"
      "agRpcBagFetchFromStorageAsk\022\026\n\nTemplateI"
      "d\030\001 \001(\021:\002-1\022\017\n\003Pos\030\002 \001(\021:\002-1\022\017\n\003Num\030\003 \001("
      "\021:\002-1\"q\n\036BagRpcBagFetchFromStorageReply\022"
      "\025\n\006Result\030\001 \001(\021:\005-9999\022\026\n\nTemplateId\030\002 \001"
      "(\021:\002-1\022\017\n\003Pos\030\003 \001(\021:\002-1\022\017\n\003Num\030\004 \001(\021:\002-1"
      "\"1\n\034BagRpcBagStorageSaveMoneyAsk\022\021\n\005Mone"
      "y\030\001 \001(\021:\002-1\"J\n\036BagRpcBagStorageSaveMoney"
      "Reply\022\025\n\006Result\030\001 \001(\021:\005-9999\022\021\n\005Money\030\002 "
      "\001(\021:\002-1\"1\n\034BagRpcBagStorageDrawMoneyAsk\022"
      "\021\n\005Money\030\001 \001(\021:\002-1\"J\n\036BagRpcBagStorageDr"
      "awMoneyReply\022\025\n\006Result\030\001 \001(\021:\005-9999\022\021\n\005M"
      "oney\030\002 \001(\021:\002-1\"\026\n\024BagRpcStorageTidyAsk\"/"
      "\n\026BagRpcStorageTidyReply\022\025\n\006Result\030\001 \001(\021"
      ":\005-9999\"-\n\025BagRpcTalismanLvupAsk\022\024\n\014Cost"
      "Talisman\030\001 \003(\021\"0\n\027BagRpcTalismanLvupRepl"
      "y\022\025\n\006Result\030\001 \001(\021:\005-9999\"9\n\030BagRpcTalism"
      "anInheritAsk\022\035\n\021RightSideTalisman\030\001 \001(\021:"
      "\002-1\"3\n\032BagRpcTalismanInheritReply\022\025\n\006Res"
      "ult\030\001 \001(\021:\005-9999\"9\n\031BagRpcBagAddNewItemN"
      "otify\022\034\n\007NewItem\030\001 \003(\0132\013.BagGridObj\"@\n\031B"
      "agRpcBagSetAutoPickupAsk\022#\n\010AutoPick\030\001 \003"
      "(\0132\021.KeyValue2IntBool\"4\n\033BagRpcBagSetAut"
      "oPickupReply\022\025\n\006Result\030\001 \001(\021:\005-9999\"~\n\026B"
      "agRpcGetNewItemNotify\022\036\n\004Item\030\001 \003(\0132\020.Ke"
      "yValue2IntInt\022\024\n\010ModuleId\030\002 \001(\021:\002-1\022\025\n\tP"
      "athWayId\030\003 \001(\021:\002-1\022\027\n\013ModuleParam\030\004 \001(\021:"
      "\002-1\"-\n\024BagRpcBagErrorNotify\022\025\n\006Result\030\002 "
      "\001(\021:\005-9999\"2\n\033BagRpcTalismanRefindStarAs"
      "k\022\023\n\007FabaoId\030\001 \001(\022:\002-1\"6\n\035BagRpcTalisman"
      "RefindStarReply\022\025\n\006Result\030\001 \001(\021:\005-9999\"L"
      "\n!BagRpcTalismanUpSlotSkillLevelAsk\022\023\n\007F"
      "abaoId\030\001 \001(\022:\002-1\022\022\n\006SlotId\030\002 \001(\021:\002-1\"<\n#"
      "BagRpcTalismanUpSlotSkillLevelReply\022\025\n\006R"
      "esult\030\001 \001(\021:\005-9999\"@\n\036BagRpcTalismanAttr"
      "ChangeNotify\022\036\n\004Attr\030\001 \003(\0132\020.KeyValue2In"
      "tInt\"d\n\035BagRpcTalismanGatherSpriteAsk\022\023\n"
      "\007FabaoId\030\001 \001(\022:\002-1\022\032\n\016GatherSpriteId\030\002 \001"
      "(\021:\002-1\022\022\n\006SlotId\030\003 \001(\021:\002-1\"8\n\037BagRpcTali"
      "smanGatherSpriteReply\022\025\n\006Result\030\001 \001(\021:\005-"
      "9999"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6124);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BagRpc.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_BagRpc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcSyncDataAsk::BagRpcSyncDataAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcSyncDataAsk)
}
BagRpcSyncDataAsk::BagRpcSyncDataAsk(const BagRpcSyncDataAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:BagRpcSyncDataAsk)
}

void BagRpcSyncDataAsk::SharedCtor() {
  _cached_size_ = 0;
}

BagRpcSyncDataAsk::~BagRpcSyncDataAsk() {
  // @@protoc_insertion_point(destructor:BagRpcSyncDataAsk)
  SharedDtor();
}

void BagRpcSyncDataAsk::SharedDtor() {
}

void BagRpcSyncDataAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcSyncDataAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcSyncDataAsk& BagRpcSyncDataAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcSyncDataAsk* BagRpcSyncDataAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcSyncDataAsk* n = new BagRpcSyncDataAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcSyncDataAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcSyncDataAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcSyncDataAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcSyncDataAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcSyncDataAsk)
  return false;
#undef DO_
}

void BagRpcSyncDataAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcSyncDataAsk)
}

::google::protobuf::uint8* BagRpcSyncDataAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcSyncDataAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcSyncDataAsk)
  return target;
}

size_t BagRpcSyncDataAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcSyncDataAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcSyncDataAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcSyncDataAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcSyncDataAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcSyncDataAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcSyncDataAsk)
    MergeFrom(*source);
  }
}

void BagRpcSyncDataAsk::MergeFrom(const BagRpcSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcSyncDataAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BagRpcSyncDataAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcSyncDataAsk::CopyFrom(const BagRpcSyncDataAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcSyncDataAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcSyncDataAsk::IsInitialized() const {
  return true;
}

void BagRpcSyncDataAsk::Swap(BagRpcSyncDataAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcSyncDataAsk::InternalSwap(BagRpcSyncDataAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcSyncDataAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcSyncDataAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcSyncDataReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcSyncDataReply::BagRpcSyncDataReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcSyncDataReply)
}
BagRpcSyncDataReply::BagRpcSyncDataReply(const BagRpcSyncDataReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:BagRpcSyncDataReply)
}

void BagRpcSyncDataReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

BagRpcSyncDataReply::~BagRpcSyncDataReply() {
  // @@protoc_insertion_point(destructor:BagRpcSyncDataReply)
  SharedDtor();
}

void BagRpcSyncDataReply::SharedDtor() {
}

void BagRpcSyncDataReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcSyncDataReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcSyncDataReply& BagRpcSyncDataReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcSyncDataReply* BagRpcSyncDataReply::New(::google::protobuf::Arena* arena) const {
  BagRpcSyncDataReply* n = new BagRpcSyncDataReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcSyncDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcSyncDataReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcSyncDataReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcSyncDataReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcSyncDataReply)
  return false;
#undef DO_
}

void BagRpcSyncDataReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcSyncDataReply)
}

::google::protobuf::uint8* BagRpcSyncDataReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcSyncDataReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcSyncDataReply)
  return target;
}

size_t BagRpcSyncDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcSyncDataReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcSyncDataReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcSyncDataReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcSyncDataReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcSyncDataReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcSyncDataReply)
    MergeFrom(*source);
  }
}

void BagRpcSyncDataReply::MergeFrom(const BagRpcSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcSyncDataReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void BagRpcSyncDataReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcSyncDataReply::CopyFrom(const BagRpcSyncDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcSyncDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcSyncDataReply::IsInitialized() const {
  return true;
}

void BagRpcSyncDataReply::Swap(BagRpcSyncDataReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcSyncDataReply::InternalSwap(BagRpcSyncDataReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcSyncDataReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcSyncDataReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcSyncDataReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcSyncDataReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcSyncDataReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcSyncDataReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcSyncDataReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcSyncDataReply.Result)
  return result_;
}
void BagRpcSyncDataReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcSyncDataReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcSellAsk::kItemIDFieldNumber;
const int BagRpcSellAsk::kPosFieldNumber;
const int BagRpcSellAsk::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcSellAsk::BagRpcSellAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcSellAsk)
}
BagRpcSellAsk::BagRpcSellAsk(const BagRpcSellAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&num_, &from.num_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&num_)) + sizeof(pos_));
  // @@protoc_insertion_point(copy_constructor:BagRpcSellAsk)
}

void BagRpcSellAsk::SharedCtor() {
  _cached_size_ = 0;
  num_ = -1;
  itemid_ = -1;
  pos_ = -1;
}

BagRpcSellAsk::~BagRpcSellAsk() {
  // @@protoc_insertion_point(destructor:BagRpcSellAsk)
  SharedDtor();
}

void BagRpcSellAsk::SharedDtor() {
}

void BagRpcSellAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcSellAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcSellAsk& BagRpcSellAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcSellAsk* BagRpcSellAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcSellAsk* n = new BagRpcSellAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcSellAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcSellAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    num_ = -1;
    itemid_ = -1;
    pos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcSellAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcSellAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 ItemID = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Num = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcSellAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcSellAsk)
  return false;
#undef DO_
}

void BagRpcSellAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcSellAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ItemID = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->itemid(), output);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->pos(), output);
  }

  // optional sint32 Num = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcSellAsk)
}

::google::protobuf::uint8* BagRpcSellAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcSellAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ItemID = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->itemid(), target);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->pos(), target);
  }

  // optional sint32 Num = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcSellAsk)
  return target;
}

size_t BagRpcSellAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcSellAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 Num = 3 [default = -1];
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->num());
    }

    // optional sint32 ItemID = 1 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemid());
    }

    // optional sint32 Pos = 2 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcSellAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcSellAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcSellAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcSellAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcSellAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcSellAsk)
    MergeFrom(*source);
  }
}

void BagRpcSellAsk::MergeFrom(const BagRpcSellAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcSellAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      num_ = from.num_;
    }
    if (cached_has_bits & 0x00000002u) {
      itemid_ = from.itemid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcSellAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcSellAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcSellAsk::CopyFrom(const BagRpcSellAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcSellAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcSellAsk::IsInitialized() const {
  return true;
}

void BagRpcSellAsk::Swap(BagRpcSellAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcSellAsk::InternalSwap(BagRpcSellAsk* other) {
  using std::swap;
  swap(num_, other->num_);
  swap(itemid_, other->itemid_);
  swap(pos_, other->pos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcSellAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcSellAsk

// optional sint32 ItemID = 1 [default = -1];
bool BagRpcSellAsk::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcSellAsk::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcSellAsk::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcSellAsk::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
::google::protobuf::int32 BagRpcSellAsk::itemid() const {
  // @@protoc_insertion_point(field_get:BagRpcSellAsk.ItemID)
  return itemid_;
}
void BagRpcSellAsk::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcSellAsk.ItemID)
}

// optional sint32 Pos = 2 [default = -1];
bool BagRpcSellAsk::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcSellAsk::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcSellAsk::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcSellAsk::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcSellAsk::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcSellAsk.Pos)
  return pos_;
}
void BagRpcSellAsk::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcSellAsk.Pos)
}

// optional sint32 Num = 3 [default = -1];
bool BagRpcSellAsk::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcSellAsk::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcSellAsk::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcSellAsk::clear_num() {
  num_ = -1;
  clear_has_num();
}
::google::protobuf::int32 BagRpcSellAsk::num() const {
  // @@protoc_insertion_point(field_get:BagRpcSellAsk.Num)
  return num_;
}
void BagRpcSellAsk::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:BagRpcSellAsk.Num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcSellReply::kResultFieldNumber;
const int BagRpcSellReply::kItemIDFieldNumber;
const int BagRpcSellReply::kPosFieldNumber;
const int BagRpcSellReply::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcSellReply::BagRpcSellReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcSellReply)
}
BagRpcSellReply::BagRpcSellReply(const BagRpcSellReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&result_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:BagRpcSellReply)
}

void BagRpcSellReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  itemid_ = -1;
  pos_ = -1;
  num_ = -1;
}

BagRpcSellReply::~BagRpcSellReply() {
  // @@protoc_insertion_point(destructor:BagRpcSellReply)
  SharedDtor();
}

void BagRpcSellReply::SharedDtor() {
}

void BagRpcSellReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcSellReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcSellReply& BagRpcSellReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcSellReply* BagRpcSellReply::New(::google::protobuf::Arena* arena) const {
  BagRpcSellReply* n = new BagRpcSellReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcSellReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcSellReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    result_ = -9999;
    itemid_ = -1;
    pos_ = -1;
    num_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcSellReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcSellReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ItemID = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Num = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcSellReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcSellReply)
  return false;
#undef DO_
}

void BagRpcSellReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcSellReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 ItemID = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->itemid(), output);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->pos(), output);
  }

  // optional sint32 Num = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcSellReply)
}

::google::protobuf::uint8* BagRpcSellReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcSellReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 ItemID = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->itemid(), target);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->pos(), target);
  }

  // optional sint32 Num = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcSellReply)
  return target;
}

size_t BagRpcSellReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcSellReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 ItemID = 2 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemid());
    }

    // optional sint32 Pos = 3 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 Num = 4 [default = -1];
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcSellReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcSellReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcSellReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcSellReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcSellReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcSellReply)
    MergeFrom(*source);
  }
}

void BagRpcSellReply::MergeFrom(const BagRpcSellReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcSellReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      itemid_ = from.itemid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000008u) {
      num_ = from.num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcSellReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcSellReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcSellReply::CopyFrom(const BagRpcSellReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcSellReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcSellReply::IsInitialized() const {
  return true;
}

void BagRpcSellReply::Swap(BagRpcSellReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcSellReply::InternalSwap(BagRpcSellReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(itemid_, other->itemid_);
  swap(pos_, other->pos_);
  swap(num_, other->num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcSellReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcSellReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcSellReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcSellReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcSellReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcSellReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcSellReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcSellReply.Result)
  return result_;
}
void BagRpcSellReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcSellReply.Result)
}

// optional sint32 ItemID = 2 [default = -1];
bool BagRpcSellReply::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcSellReply::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcSellReply::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcSellReply::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
::google::protobuf::int32 BagRpcSellReply::itemid() const {
  // @@protoc_insertion_point(field_get:BagRpcSellReply.ItemID)
  return itemid_;
}
void BagRpcSellReply::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcSellReply.ItemID)
}

// optional sint32 Pos = 3 [default = -1];
bool BagRpcSellReply::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcSellReply::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcSellReply::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcSellReply::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcSellReply::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcSellReply.Pos)
  return pos_;
}
void BagRpcSellReply::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcSellReply.Pos)
}

// optional sint32 Num = 4 [default = -1];
bool BagRpcSellReply::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRpcSellReply::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRpcSellReply::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRpcSellReply::clear_num() {
  num_ = -1;
  clear_has_num();
}
::google::protobuf::int32 BagRpcSellReply::num() const {
  // @@protoc_insertion_point(field_get:BagRpcSellReply.Num)
  return num_;
}
void BagRpcSellReply::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:BagRpcSellReply.Num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcDecomposeAsk::kItemIDFieldNumber;
const int BagRpcDecomposeAsk::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcDecomposeAsk::BagRpcDecomposeAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcDecomposeAsk)
}
BagRpcDecomposeAsk::BagRpcDecomposeAsk(const BagRpcDecomposeAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&itemid_, &from.itemid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&itemid_)) + sizeof(pos_));
  // @@protoc_insertion_point(copy_constructor:BagRpcDecomposeAsk)
}

void BagRpcDecomposeAsk::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = -1;
  pos_ = -1;
}

BagRpcDecomposeAsk::~BagRpcDecomposeAsk() {
  // @@protoc_insertion_point(destructor:BagRpcDecomposeAsk)
  SharedDtor();
}

void BagRpcDecomposeAsk::SharedDtor() {
}

void BagRpcDecomposeAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcDecomposeAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcDecomposeAsk& BagRpcDecomposeAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcDecomposeAsk* BagRpcDecomposeAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcDecomposeAsk* n = new BagRpcDecomposeAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcDecomposeAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcDecomposeAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    itemid_ = -1;
    pos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcDecomposeAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcDecomposeAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 ItemID = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcDecomposeAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcDecomposeAsk)
  return false;
#undef DO_
}

void BagRpcDecomposeAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcDecomposeAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ItemID = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->itemid(), output);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->pos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcDecomposeAsk)
}

::google::protobuf::uint8* BagRpcDecomposeAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcDecomposeAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ItemID = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->itemid(), target);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->pos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcDecomposeAsk)
  return target;
}

size_t BagRpcDecomposeAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcDecomposeAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 ItemID = 1 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemid());
    }

    // optional sint32 Pos = 2 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcDecomposeAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcDecomposeAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcDecomposeAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcDecomposeAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcDecomposeAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcDecomposeAsk)
    MergeFrom(*source);
  }
}

void BagRpcDecomposeAsk::MergeFrom(const BagRpcDecomposeAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcDecomposeAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      itemid_ = from.itemid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pos_ = from.pos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcDecomposeAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcDecomposeAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcDecomposeAsk::CopyFrom(const BagRpcDecomposeAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcDecomposeAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcDecomposeAsk::IsInitialized() const {
  return true;
}

void BagRpcDecomposeAsk::Swap(BagRpcDecomposeAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcDecomposeAsk::InternalSwap(BagRpcDecomposeAsk* other) {
  using std::swap;
  swap(itemid_, other->itemid_);
  swap(pos_, other->pos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcDecomposeAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcDecomposeAsk

// optional sint32 ItemID = 1 [default = -1];
bool BagRpcDecomposeAsk::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcDecomposeAsk::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcDecomposeAsk::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcDecomposeAsk::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
::google::protobuf::int32 BagRpcDecomposeAsk::itemid() const {
  // @@protoc_insertion_point(field_get:BagRpcDecomposeAsk.ItemID)
  return itemid_;
}
void BagRpcDecomposeAsk::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcDecomposeAsk.ItemID)
}

// optional sint32 Pos = 2 [default = -1];
bool BagRpcDecomposeAsk::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcDecomposeAsk::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcDecomposeAsk::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcDecomposeAsk::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcDecomposeAsk::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcDecomposeAsk.Pos)
  return pos_;
}
void BagRpcDecomposeAsk::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcDecomposeAsk.Pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcDecomposeReply::kResultFieldNumber;
const int BagRpcDecomposeReply::kItemIDFieldNumber;
const int BagRpcDecomposeReply::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcDecomposeReply::BagRpcDecomposeReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcDecomposeReply)
}
BagRpcDecomposeReply::BagRpcDecomposeReply(const BagRpcDecomposeReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pos_, &from.pos_,
    static_cast<size_t>(reinterpret_cast<char*>(&itemid_) -
    reinterpret_cast<char*>(&pos_)) + sizeof(itemid_));
  // @@protoc_insertion_point(copy_constructor:BagRpcDecomposeReply)
}

void BagRpcDecomposeReply::SharedCtor() {
  _cached_size_ = 0;
  pos_ = -1;
  result_ = -9999;
  itemid_ = -1;
}

BagRpcDecomposeReply::~BagRpcDecomposeReply() {
  // @@protoc_insertion_point(destructor:BagRpcDecomposeReply)
  SharedDtor();
}

void BagRpcDecomposeReply::SharedDtor() {
}

void BagRpcDecomposeReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcDecomposeReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcDecomposeReply& BagRpcDecomposeReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcDecomposeReply* BagRpcDecomposeReply::New(::google::protobuf::Arena* arena) const {
  BagRpcDecomposeReply* n = new BagRpcDecomposeReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcDecomposeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcDecomposeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    pos_ = -1;
    result_ = -9999;
    itemid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcDecomposeReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcDecomposeReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ItemID = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcDecomposeReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcDecomposeReply)
  return false;
#undef DO_
}

void BagRpcDecomposeReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcDecomposeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 ItemID = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->itemid(), output);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->pos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcDecomposeReply)
}

::google::protobuf::uint8* BagRpcDecomposeReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcDecomposeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 ItemID = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->itemid(), target);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->pos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcDecomposeReply)
  return target;
}

size_t BagRpcDecomposeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcDecomposeReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 Pos = 3 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 ItemID = 2 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcDecomposeReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcDecomposeReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcDecomposeReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcDecomposeReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcDecomposeReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcDecomposeReply)
    MergeFrom(*source);
  }
}

void BagRpcDecomposeReply::MergeFrom(const BagRpcDecomposeReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcDecomposeReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      itemid_ = from.itemid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcDecomposeReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcDecomposeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcDecomposeReply::CopyFrom(const BagRpcDecomposeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcDecomposeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcDecomposeReply::IsInitialized() const {
  return true;
}

void BagRpcDecomposeReply::Swap(BagRpcDecomposeReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcDecomposeReply::InternalSwap(BagRpcDecomposeReply* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(result_, other->result_);
  swap(itemid_, other->itemid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcDecomposeReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcDecomposeReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcDecomposeReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcDecomposeReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcDecomposeReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcDecomposeReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcDecomposeReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcDecomposeReply.Result)
  return result_;
}
void BagRpcDecomposeReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcDecomposeReply.Result)
}

// optional sint32 ItemID = 2 [default = -1];
bool BagRpcDecomposeReply::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcDecomposeReply::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcDecomposeReply::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcDecomposeReply::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
::google::protobuf::int32 BagRpcDecomposeReply::itemid() const {
  // @@protoc_insertion_point(field_get:BagRpcDecomposeReply.ItemID)
  return itemid_;
}
void BagRpcDecomposeReply::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcDecomposeReply.ItemID)
}

// optional sint32 Pos = 3 [default = -1];
bool BagRpcDecomposeReply::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcDecomposeReply::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcDecomposeReply::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcDecomposeReply::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcDecomposeReply::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcDecomposeReply.Pos)
  return pos_;
}
void BagRpcDecomposeReply::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcDecomposeReply.Pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcUseAsk::kItemIDFieldNumber;
const int BagRpcUseAsk::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcUseAsk::BagRpcUseAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcUseAsk)
}
BagRpcUseAsk::BagRpcUseAsk(const BagRpcUseAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&itemid_, &from.itemid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&itemid_)) + sizeof(pos_));
  // @@protoc_insertion_point(copy_constructor:BagRpcUseAsk)
}

void BagRpcUseAsk::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = -1;
  pos_ = -1;
}

BagRpcUseAsk::~BagRpcUseAsk() {
  // @@protoc_insertion_point(destructor:BagRpcUseAsk)
  SharedDtor();
}

void BagRpcUseAsk::SharedDtor() {
}

void BagRpcUseAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcUseAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcUseAsk& BagRpcUseAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcUseAsk* BagRpcUseAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcUseAsk* n = new BagRpcUseAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcUseAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcUseAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    itemid_ = -1;
    pos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcUseAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcUseAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 ItemID = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcUseAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcUseAsk)
  return false;
#undef DO_
}

void BagRpcUseAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcUseAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ItemID = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->itemid(), output);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->pos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcUseAsk)
}

::google::protobuf::uint8* BagRpcUseAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcUseAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ItemID = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->itemid(), target);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->pos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcUseAsk)
  return target;
}

size_t BagRpcUseAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcUseAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 ItemID = 1 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemid());
    }

    // optional sint32 Pos = 2 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcUseAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcUseAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcUseAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcUseAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcUseAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcUseAsk)
    MergeFrom(*source);
  }
}

void BagRpcUseAsk::MergeFrom(const BagRpcUseAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcUseAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      itemid_ = from.itemid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pos_ = from.pos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcUseAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcUseAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcUseAsk::CopyFrom(const BagRpcUseAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcUseAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcUseAsk::IsInitialized() const {
  return true;
}

void BagRpcUseAsk::Swap(BagRpcUseAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcUseAsk::InternalSwap(BagRpcUseAsk* other) {
  using std::swap;
  swap(itemid_, other->itemid_);
  swap(pos_, other->pos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcUseAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcUseAsk

// optional sint32 ItemID = 1 [default = -1];
bool BagRpcUseAsk::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcUseAsk::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcUseAsk::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcUseAsk::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
::google::protobuf::int32 BagRpcUseAsk::itemid() const {
  // @@protoc_insertion_point(field_get:BagRpcUseAsk.ItemID)
  return itemid_;
}
void BagRpcUseAsk::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcUseAsk.ItemID)
}

// optional sint32 Pos = 2 [default = -1];
bool BagRpcUseAsk::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcUseAsk::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcUseAsk::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcUseAsk::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcUseAsk::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcUseAsk.Pos)
  return pos_;
}
void BagRpcUseAsk::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcUseAsk.Pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcUseReply::kResultFieldNumber;
const int BagRpcUseReply::kPosFieldNumber;
const int BagRpcUseReply::kItemIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcUseReply::BagRpcUseReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcUseReply)
}
BagRpcUseReply::BagRpcUseReply(const BagRpcUseReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&itemid_, &from.itemid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&itemid_)) + sizeof(pos_));
  // @@protoc_insertion_point(copy_constructor:BagRpcUseReply)
}

void BagRpcUseReply::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = -1;
  result_ = -9999;
  pos_ = -1;
}

BagRpcUseReply::~BagRpcUseReply() {
  // @@protoc_insertion_point(destructor:BagRpcUseReply)
  SharedDtor();
}

void BagRpcUseReply::SharedDtor() {
}

void BagRpcUseReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcUseReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcUseReply& BagRpcUseReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcUseReply* BagRpcUseReply::New(::google::protobuf::Arena* arena) const {
  BagRpcUseReply* n = new BagRpcUseReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcUseReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcUseReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    itemid_ = -1;
    result_ = -9999;
    pos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcUseReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcUseReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ItemID = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcUseReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcUseReply)
  return false;
#undef DO_
}

void BagRpcUseReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcUseReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->pos(), output);
  }

  // optional sint32 ItemID = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->itemid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcUseReply)
}

::google::protobuf::uint8* BagRpcUseReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcUseReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->pos(), target);
  }

  // optional sint32 ItemID = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->itemid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcUseReply)
  return target;
}

size_t BagRpcUseReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcUseReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 ItemID = 3 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemid());
    }

    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 Pos = 2 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcUseReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcUseReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcUseReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcUseReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcUseReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcUseReply)
    MergeFrom(*source);
  }
}

void BagRpcUseReply::MergeFrom(const BagRpcUseReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcUseReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      itemid_ = from.itemid_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcUseReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcUseReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcUseReply::CopyFrom(const BagRpcUseReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcUseReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcUseReply::IsInitialized() const {
  return true;
}

void BagRpcUseReply::Swap(BagRpcUseReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcUseReply::InternalSwap(BagRpcUseReply* other) {
  using std::swap;
  swap(itemid_, other->itemid_);
  swap(result_, other->result_);
  swap(pos_, other->pos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcUseReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcUseReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcUseReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcUseReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcUseReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcUseReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcUseReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcUseReply.Result)
  return result_;
}
void BagRpcUseReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcUseReply.Result)
}

// optional sint32 Pos = 2 [default = -1];
bool BagRpcUseReply::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcUseReply::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcUseReply::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcUseReply::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcUseReply::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcUseReply.Pos)
  return pos_;
}
void BagRpcUseReply::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcUseReply.Pos)
}

// optional sint32 ItemID = 3 [default = -1];
bool BagRpcUseReply::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcUseReply::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcUseReply::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcUseReply::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
::google::protobuf::int32 BagRpcUseReply::itemid() const {
  // @@protoc_insertion_point(field_get:BagRpcUseReply.ItemID)
  return itemid_;
}
void BagRpcUseReply::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcUseReply.ItemID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipWearAsk::kItemIdFieldNumber;
const int BagRpcEquipWearAsk::kBagPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipWearAsk::BagRpcEquipWearAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipWearAsk)
}
BagRpcEquipWearAsk::BagRpcEquipWearAsk(const BagRpcEquipWearAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&itemid_, &from.itemid_,
    static_cast<size_t>(reinterpret_cast<char*>(&bagpos_) -
    reinterpret_cast<char*>(&itemid_)) + sizeof(bagpos_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipWearAsk)
}

void BagRpcEquipWearAsk::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = -1;
  bagpos_ = -1;
}

BagRpcEquipWearAsk::~BagRpcEquipWearAsk() {
  // @@protoc_insertion_point(destructor:BagRpcEquipWearAsk)
  SharedDtor();
}

void BagRpcEquipWearAsk::SharedDtor() {
}

void BagRpcEquipWearAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipWearAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipWearAsk& BagRpcEquipWearAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipWearAsk* BagRpcEquipWearAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipWearAsk* n = new BagRpcEquipWearAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipWearAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipWearAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    itemid_ = -1;
    bagpos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipWearAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipWearAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 ItemId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagPos = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_bagpos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipWearAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipWearAsk)
  return false;
#undef DO_
}

void BagRpcEquipWearAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipWearAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ItemId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->itemid(), output);
  }

  // optional sint32 BagPos = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->bagpos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipWearAsk)
}

::google::protobuf::uint8* BagRpcEquipWearAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipWearAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ItemId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->itemid(), target);
  }

  // optional sint32 BagPos = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->bagpos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipWearAsk)
  return target;
}

size_t BagRpcEquipWearAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipWearAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 ItemId = 1 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemid());
    }

    // optional sint32 BagPos = 2 [default = -1];
    if (has_bagpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagpos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipWearAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipWearAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipWearAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipWearAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipWearAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipWearAsk)
    MergeFrom(*source);
  }
}

void BagRpcEquipWearAsk::MergeFrom(const BagRpcEquipWearAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipWearAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      itemid_ = from.itemid_;
    }
    if (cached_has_bits & 0x00000002u) {
      bagpos_ = from.bagpos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipWearAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipWearAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipWearAsk::CopyFrom(const BagRpcEquipWearAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipWearAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipWearAsk::IsInitialized() const {
  return true;
}

void BagRpcEquipWearAsk::Swap(BagRpcEquipWearAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipWearAsk::InternalSwap(BagRpcEquipWearAsk* other) {
  using std::swap;
  swap(itemid_, other->itemid_);
  swap(bagpos_, other->bagpos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipWearAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipWearAsk

// optional sint32 ItemId = 1 [default = -1];
bool BagRpcEquipWearAsk::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipWearAsk::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipWearAsk::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipWearAsk::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
::google::protobuf::int32 BagRpcEquipWearAsk::itemid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipWearAsk.ItemId)
  return itemid_;
}
void BagRpcEquipWearAsk::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipWearAsk.ItemId)
}

// optional sint32 BagPos = 2 [default = -1];
bool BagRpcEquipWearAsk::has_bagpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipWearAsk::set_has_bagpos() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipWearAsk::clear_has_bagpos() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipWearAsk::clear_bagpos() {
  bagpos_ = -1;
  clear_has_bagpos();
}
::google::protobuf::int32 BagRpcEquipWearAsk::bagpos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipWearAsk.BagPos)
  return bagpos_;
}
void BagRpcEquipWearAsk::set_bagpos(::google::protobuf::int32 value) {
  set_has_bagpos();
  bagpos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipWearAsk.BagPos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipWearReply::kResultFieldNumber;
const int BagRpcEquipWearReply::kItemIdFieldNumber;
const int BagRpcEquipWearReply::kBagPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipWearReply::BagRpcEquipWearReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipWearReply)
}
BagRpcEquipWearReply::BagRpcEquipWearReply(const BagRpcEquipWearReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bagpos_, &from.bagpos_,
    static_cast<size_t>(reinterpret_cast<char*>(&itemid_) -
    reinterpret_cast<char*>(&bagpos_)) + sizeof(itemid_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipWearReply)
}

void BagRpcEquipWearReply::SharedCtor() {
  _cached_size_ = 0;
  bagpos_ = -1;
  result_ = -9999;
  itemid_ = -1;
}

BagRpcEquipWearReply::~BagRpcEquipWearReply() {
  // @@protoc_insertion_point(destructor:BagRpcEquipWearReply)
  SharedDtor();
}

void BagRpcEquipWearReply::SharedDtor() {
}

void BagRpcEquipWearReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipWearReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipWearReply& BagRpcEquipWearReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipWearReply* BagRpcEquipWearReply::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipWearReply* n = new BagRpcEquipWearReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipWearReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipWearReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    bagpos_ = -1;
    result_ = -9999;
    itemid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipWearReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipWearReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ItemId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagPos = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bagpos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipWearReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipWearReply)
  return false;
#undef DO_
}

void BagRpcEquipWearReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipWearReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 ItemId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->itemid(), output);
  }

  // optional sint32 BagPos = 4 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->bagpos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipWearReply)
}

::google::protobuf::uint8* BagRpcEquipWearReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipWearReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 ItemId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->itemid(), target);
  }

  // optional sint32 BagPos = 4 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->bagpos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipWearReply)
  return target;
}

size_t BagRpcEquipWearReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipWearReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 BagPos = 4 [default = -1];
    if (has_bagpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagpos());
    }

    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 ItemId = 2 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipWearReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipWearReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipWearReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipWearReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipWearReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipWearReply)
    MergeFrom(*source);
  }
}

void BagRpcEquipWearReply::MergeFrom(const BagRpcEquipWearReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipWearReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      bagpos_ = from.bagpos_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      itemid_ = from.itemid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipWearReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipWearReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipWearReply::CopyFrom(const BagRpcEquipWearReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipWearReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipWearReply::IsInitialized() const {
  return true;
}

void BagRpcEquipWearReply::Swap(BagRpcEquipWearReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipWearReply::InternalSwap(BagRpcEquipWearReply* other) {
  using std::swap;
  swap(bagpos_, other->bagpos_);
  swap(result_, other->result_);
  swap(itemid_, other->itemid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipWearReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipWearReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcEquipWearReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipWearReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipWearReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipWearReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcEquipWearReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipWearReply.Result)
  return result_;
}
void BagRpcEquipWearReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipWearReply.Result)
}

// optional sint32 ItemId = 2 [default = -1];
bool BagRpcEquipWearReply::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipWearReply::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipWearReply::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipWearReply::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
::google::protobuf::int32 BagRpcEquipWearReply::itemid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipWearReply.ItemId)
  return itemid_;
}
void BagRpcEquipWearReply::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipWearReply.ItemId)
}

// optional sint32 BagPos = 4 [default = -1];
bool BagRpcEquipWearReply::has_bagpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipWearReply::set_has_bagpos() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipWearReply::clear_has_bagpos() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipWearReply::clear_bagpos() {
  bagpos_ = -1;
  clear_has_bagpos();
}
::google::protobuf::int32 BagRpcEquipWearReply::bagpos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipWearReply.BagPos)
  return bagpos_;
}
void BagRpcEquipWearReply::set_bagpos(::google::protobuf::int32 value) {
  set_has_bagpos();
  bagpos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipWearReply.BagPos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipUndressAsk::kItemIdFieldNumber;
const int BagRpcEquipUndressAsk::kEquipPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipUndressAsk::BagRpcEquipUndressAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipUndressAsk)
}
BagRpcEquipUndressAsk::BagRpcEquipUndressAsk(const BagRpcEquipUndressAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&itemid_, &from.itemid_,
    static_cast<size_t>(reinterpret_cast<char*>(&equippos_) -
    reinterpret_cast<char*>(&itemid_)) + sizeof(equippos_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipUndressAsk)
}

void BagRpcEquipUndressAsk::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = -1;
  equippos_ = -1;
}

BagRpcEquipUndressAsk::~BagRpcEquipUndressAsk() {
  // @@protoc_insertion_point(destructor:BagRpcEquipUndressAsk)
  SharedDtor();
}

void BagRpcEquipUndressAsk::SharedDtor() {
}

void BagRpcEquipUndressAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipUndressAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipUndressAsk& BagRpcEquipUndressAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipUndressAsk* BagRpcEquipUndressAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipUndressAsk* n = new BagRpcEquipUndressAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipUndressAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipUndressAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    itemid_ = -1;
    equippos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipUndressAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipUndressAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 ItemId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 EquipPos = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_equippos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &equippos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipUndressAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipUndressAsk)
  return false;
#undef DO_
}

void BagRpcEquipUndressAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipUndressAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ItemId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->itemid(), output);
  }

  // optional sint32 EquipPos = 3 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->equippos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipUndressAsk)
}

::google::protobuf::uint8* BagRpcEquipUndressAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipUndressAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ItemId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->itemid(), target);
  }

  // optional sint32 EquipPos = 3 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->equippos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipUndressAsk)
  return target;
}

size_t BagRpcEquipUndressAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipUndressAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 ItemId = 1 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemid());
    }

    // optional sint32 EquipPos = 3 [default = -1];
    if (has_equippos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->equippos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipUndressAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipUndressAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipUndressAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipUndressAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipUndressAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipUndressAsk)
    MergeFrom(*source);
  }
}

void BagRpcEquipUndressAsk::MergeFrom(const BagRpcEquipUndressAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipUndressAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      itemid_ = from.itemid_;
    }
    if (cached_has_bits & 0x00000002u) {
      equippos_ = from.equippos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipUndressAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipUndressAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipUndressAsk::CopyFrom(const BagRpcEquipUndressAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipUndressAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipUndressAsk::IsInitialized() const {
  return true;
}

void BagRpcEquipUndressAsk::Swap(BagRpcEquipUndressAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipUndressAsk::InternalSwap(BagRpcEquipUndressAsk* other) {
  using std::swap;
  swap(itemid_, other->itemid_);
  swap(equippos_, other->equippos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipUndressAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipUndressAsk

// optional sint32 ItemId = 1 [default = -1];
bool BagRpcEquipUndressAsk::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipUndressAsk::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipUndressAsk::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipUndressAsk::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
::google::protobuf::int32 BagRpcEquipUndressAsk::itemid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipUndressAsk.ItemId)
  return itemid_;
}
void BagRpcEquipUndressAsk::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipUndressAsk.ItemId)
}

// optional sint32 EquipPos = 3 [default = -1];
bool BagRpcEquipUndressAsk::has_equippos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipUndressAsk::set_has_equippos() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipUndressAsk::clear_has_equippos() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipUndressAsk::clear_equippos() {
  equippos_ = -1;
  clear_has_equippos();
}
::google::protobuf::int32 BagRpcEquipUndressAsk::equippos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipUndressAsk.EquipPos)
  return equippos_;
}
void BagRpcEquipUndressAsk::set_equippos(::google::protobuf::int32 value) {
  set_has_equippos();
  equippos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipUndressAsk.EquipPos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipUndressReply::kResultFieldNumber;
const int BagRpcEquipUndressReply::kItemIdFieldNumber;
const int BagRpcEquipUndressReply::kEquipPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipUndressReply::BagRpcEquipUndressReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipUndressReply)
}
BagRpcEquipUndressReply::BagRpcEquipUndressReply(const BagRpcEquipUndressReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&equippos_, &from.equippos_,
    static_cast<size_t>(reinterpret_cast<char*>(&itemid_) -
    reinterpret_cast<char*>(&equippos_)) + sizeof(itemid_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipUndressReply)
}

void BagRpcEquipUndressReply::SharedCtor() {
  _cached_size_ = 0;
  equippos_ = -1;
  result_ = -9999;
  itemid_ = -1;
}

BagRpcEquipUndressReply::~BagRpcEquipUndressReply() {
  // @@protoc_insertion_point(destructor:BagRpcEquipUndressReply)
  SharedDtor();
}

void BagRpcEquipUndressReply::SharedDtor() {
}

void BagRpcEquipUndressReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipUndressReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipUndressReply& BagRpcEquipUndressReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipUndressReply* BagRpcEquipUndressReply::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipUndressReply* n = new BagRpcEquipUndressReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipUndressReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipUndressReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    equippos_ = -1;
    result_ = -9999;
    itemid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipUndressReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipUndressReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ItemId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 EquipPos = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_equippos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &equippos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipUndressReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipUndressReply)
  return false;
#undef DO_
}

void BagRpcEquipUndressReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipUndressReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 ItemId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->itemid(), output);
  }

  // optional sint32 EquipPos = 4 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->equippos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipUndressReply)
}

::google::protobuf::uint8* BagRpcEquipUndressReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipUndressReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 ItemId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->itemid(), target);
  }

  // optional sint32 EquipPos = 4 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->equippos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipUndressReply)
  return target;
}

size_t BagRpcEquipUndressReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipUndressReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 EquipPos = 4 [default = -1];
    if (has_equippos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->equippos());
    }

    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 ItemId = 2 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipUndressReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipUndressReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipUndressReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipUndressReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipUndressReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipUndressReply)
    MergeFrom(*source);
  }
}

void BagRpcEquipUndressReply::MergeFrom(const BagRpcEquipUndressReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipUndressReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      equippos_ = from.equippos_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      itemid_ = from.itemid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipUndressReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipUndressReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipUndressReply::CopyFrom(const BagRpcEquipUndressReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipUndressReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipUndressReply::IsInitialized() const {
  return true;
}

void BagRpcEquipUndressReply::Swap(BagRpcEquipUndressReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipUndressReply::InternalSwap(BagRpcEquipUndressReply* other) {
  using std::swap;
  swap(equippos_, other->equippos_);
  swap(result_, other->result_);
  swap(itemid_, other->itemid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipUndressReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipUndressReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcEquipUndressReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipUndressReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipUndressReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipUndressReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcEquipUndressReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipUndressReply.Result)
  return result_;
}
void BagRpcEquipUndressReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipUndressReply.Result)
}

// optional sint32 ItemId = 2 [default = -1];
bool BagRpcEquipUndressReply::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipUndressReply::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipUndressReply::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipUndressReply::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
::google::protobuf::int32 BagRpcEquipUndressReply::itemid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipUndressReply.ItemId)
  return itemid_;
}
void BagRpcEquipUndressReply::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipUndressReply.ItemId)
}

// optional sint32 EquipPos = 4 [default = -1];
bool BagRpcEquipUndressReply::has_equippos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipUndressReply::set_has_equippos() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipUndressReply::clear_has_equippos() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipUndressReply::clear_equippos() {
  equippos_ = -1;
  clear_has_equippos();
}
::google::protobuf::int32 BagRpcEquipUndressReply::equippos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipUndressReply.EquipPos)
  return equippos_;
}
void BagRpcEquipUndressReply::set_equippos(::google::protobuf::int32 value) {
  set_has_equippos();
  equippos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipUndressReply.EquipPos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipEnhanceAsk::kItemIdFieldNumber;
const int BagRpcEquipEnhanceAsk::kPosFieldNumber;
const int BagRpcEquipEnhanceAsk::kBagContainerTypeFieldNumber;
const int BagRpcEquipEnhanceAsk::kLvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipEnhanceAsk::BagRpcEquipEnhanceAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipEnhanceAsk)
}
BagRpcEquipEnhanceAsk::BagRpcEquipEnhanceAsk(const BagRpcEquipEnhanceAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&itemid_, &from.itemid_,
    static_cast<size_t>(reinterpret_cast<char*>(&lv_) -
    reinterpret_cast<char*>(&itemid_)) + sizeof(lv_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipEnhanceAsk)
}

void BagRpcEquipEnhanceAsk::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = -1;
  pos_ = -1;
  bagcontainertype_ = -1;
  lv_ = -1;
}

BagRpcEquipEnhanceAsk::~BagRpcEquipEnhanceAsk() {
  // @@protoc_insertion_point(destructor:BagRpcEquipEnhanceAsk)
  SharedDtor();
}

void BagRpcEquipEnhanceAsk::SharedDtor() {
}

void BagRpcEquipEnhanceAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipEnhanceAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipEnhanceAsk& BagRpcEquipEnhanceAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipEnhanceAsk* BagRpcEquipEnhanceAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipEnhanceAsk* n = new BagRpcEquipEnhanceAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipEnhanceAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipEnhanceAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    itemid_ = -1;
    pos_ = -1;
    bagcontainertype_ = -1;
    lv_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipEnhanceAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipEnhanceAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 ItemId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_bagcontainertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Lv = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_lv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &lv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipEnhanceAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipEnhanceAsk)
  return false;
#undef DO_
}

void BagRpcEquipEnhanceAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipEnhanceAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ItemId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->itemid(), output);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->pos(), output);
  }

  // optional sint32 BagContainerType = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->bagcontainertype(), output);
  }

  // optional sint32 Lv = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->lv(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipEnhanceAsk)
}

::google::protobuf::uint8* BagRpcEquipEnhanceAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipEnhanceAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ItemId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->itemid(), target);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->pos(), target);
  }

  // optional sint32 BagContainerType = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->bagcontainertype(), target);
  }

  // optional sint32 Lv = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->lv(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipEnhanceAsk)
  return target;
}

size_t BagRpcEquipEnhanceAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipEnhanceAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional sint32 ItemId = 1 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemid());
    }

    // optional sint32 Pos = 2 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 BagContainerType = 3 [default = -1];
    if (has_bagcontainertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype());
    }

    // optional sint32 Lv = 4 [default = -1];
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->lv());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipEnhanceAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipEnhanceAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipEnhanceAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipEnhanceAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipEnhanceAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipEnhanceAsk)
    MergeFrom(*source);
  }
}

void BagRpcEquipEnhanceAsk::MergeFrom(const BagRpcEquipEnhanceAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipEnhanceAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      itemid_ = from.itemid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000004u) {
      bagcontainertype_ = from.bagcontainertype_;
    }
    if (cached_has_bits & 0x00000008u) {
      lv_ = from.lv_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipEnhanceAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipEnhanceAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipEnhanceAsk::CopyFrom(const BagRpcEquipEnhanceAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipEnhanceAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipEnhanceAsk::IsInitialized() const {
  return true;
}

void BagRpcEquipEnhanceAsk::Swap(BagRpcEquipEnhanceAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipEnhanceAsk::InternalSwap(BagRpcEquipEnhanceAsk* other) {
  using std::swap;
  swap(itemid_, other->itemid_);
  swap(pos_, other->pos_);
  swap(bagcontainertype_, other->bagcontainertype_);
  swap(lv_, other->lv_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipEnhanceAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipEnhanceAsk

// optional sint32 ItemId = 1 [default = -1];
bool BagRpcEquipEnhanceAsk::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipEnhanceAsk::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipEnhanceAsk::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipEnhanceAsk::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
::google::protobuf::int32 BagRpcEquipEnhanceAsk::itemid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceAsk.ItemId)
  return itemid_;
}
void BagRpcEquipEnhanceAsk::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceAsk.ItemId)
}

// optional sint32 Pos = 2 [default = -1];
bool BagRpcEquipEnhanceAsk::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipEnhanceAsk::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipEnhanceAsk::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipEnhanceAsk::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcEquipEnhanceAsk::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceAsk.Pos)
  return pos_;
}
void BagRpcEquipEnhanceAsk::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceAsk.Pos)
}

// optional sint32 BagContainerType = 3 [default = -1];
bool BagRpcEquipEnhanceAsk::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipEnhanceAsk::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipEnhanceAsk::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipEnhanceAsk::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
::google::protobuf::int32 BagRpcEquipEnhanceAsk::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceAsk.BagContainerType)
  return bagcontainertype_;
}
void BagRpcEquipEnhanceAsk::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceAsk.BagContainerType)
}

// optional sint32 Lv = 4 [default = -1];
bool BagRpcEquipEnhanceAsk::has_lv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRpcEquipEnhanceAsk::set_has_lv() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRpcEquipEnhanceAsk::clear_has_lv() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRpcEquipEnhanceAsk::clear_lv() {
  lv_ = -1;
  clear_has_lv();
}
::google::protobuf::int32 BagRpcEquipEnhanceAsk::lv() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceAsk.Lv)
  return lv_;
}
void BagRpcEquipEnhanceAsk::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceAsk.Lv)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipEnhanceReply::kResultFieldNumber;
const int BagRpcEquipEnhanceReply::kItemIdFieldNumber;
const int BagRpcEquipEnhanceReply::kPosFieldNumber;
const int BagRpcEquipEnhanceReply::kBagContainerTypeFieldNumber;
const int BagRpcEquipEnhanceReply::kLvFieldNumber;
const int BagRpcEquipEnhanceReply::kIsFirstEnhanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipEnhanceReply::BagRpcEquipEnhanceReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipEnhanceReply)
}
BagRpcEquipEnhanceReply::BagRpcEquipEnhanceReply(const BagRpcEquipEnhanceReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isfirstenhance_, &from.isfirstenhance_,
    static_cast<size_t>(reinterpret_cast<char*>(&bagcontainertype_) -
    reinterpret_cast<char*>(&isfirstenhance_)) + sizeof(bagcontainertype_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipEnhanceReply)
}

void BagRpcEquipEnhanceReply::SharedCtor() {
  _cached_size_ = 0;
  isfirstenhance_ = false;
  lv_ = -1;
  result_ = -9999;
  itemid_ = -1;
  pos_ = -1;
  bagcontainertype_ = -1;
}

BagRpcEquipEnhanceReply::~BagRpcEquipEnhanceReply() {
  // @@protoc_insertion_point(destructor:BagRpcEquipEnhanceReply)
  SharedDtor();
}

void BagRpcEquipEnhanceReply::SharedDtor() {
}

void BagRpcEquipEnhanceReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipEnhanceReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipEnhanceReply& BagRpcEquipEnhanceReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipEnhanceReply* BagRpcEquipEnhanceReply::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipEnhanceReply* n = new BagRpcEquipEnhanceReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipEnhanceReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipEnhanceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    isfirstenhance_ = false;
    lv_ = -1;
    result_ = -9999;
    itemid_ = -1;
    pos_ = -1;
    bagcontainertype_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipEnhanceReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipEnhanceReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ItemId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bagcontainertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Lv = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_lv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &lv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool IsFirstEnhance = 6 [default = false];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_isfirstenhance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isfirstenhance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipEnhanceReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipEnhanceReply)
  return false;
#undef DO_
}

void BagRpcEquipEnhanceReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipEnhanceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 ItemId = 2 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->itemid(), output);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->pos(), output);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->bagcontainertype(), output);
  }

  // optional sint32 Lv = 5 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->lv(), output);
  }

  // optional bool IsFirstEnhance = 6 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->isfirstenhance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipEnhanceReply)
}

::google::protobuf::uint8* BagRpcEquipEnhanceReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipEnhanceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 ItemId = 2 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->itemid(), target);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->pos(), target);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->bagcontainertype(), target);
  }

  // optional sint32 Lv = 5 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->lv(), target);
  }

  // optional bool IsFirstEnhance = 6 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->isfirstenhance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipEnhanceReply)
  return target;
}

size_t BagRpcEquipEnhanceReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipEnhanceReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bool IsFirstEnhance = 6 [default = false];
    if (has_isfirstenhance()) {
      total_size += 1 + 1;
    }

    // optional sint32 Lv = 5 [default = -1];
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->lv());
    }

    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 ItemId = 2 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemid());
    }

    // optional sint32 Pos = 3 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 BagContainerType = 4 [default = -1];
    if (has_bagcontainertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipEnhanceReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipEnhanceReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipEnhanceReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipEnhanceReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipEnhanceReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipEnhanceReply)
    MergeFrom(*source);
  }
}

void BagRpcEquipEnhanceReply::MergeFrom(const BagRpcEquipEnhanceReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipEnhanceReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      isfirstenhance_ = from.isfirstenhance_;
    }
    if (cached_has_bits & 0x00000002u) {
      lv_ = from.lv_;
    }
    if (cached_has_bits & 0x00000004u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000008u) {
      itemid_ = from.itemid_;
    }
    if (cached_has_bits & 0x00000010u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000020u) {
      bagcontainertype_ = from.bagcontainertype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipEnhanceReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipEnhanceReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipEnhanceReply::CopyFrom(const BagRpcEquipEnhanceReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipEnhanceReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipEnhanceReply::IsInitialized() const {
  return true;
}

void BagRpcEquipEnhanceReply::Swap(BagRpcEquipEnhanceReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipEnhanceReply::InternalSwap(BagRpcEquipEnhanceReply* other) {
  using std::swap;
  swap(isfirstenhance_, other->isfirstenhance_);
  swap(lv_, other->lv_);
  swap(result_, other->result_);
  swap(itemid_, other->itemid_);
  swap(pos_, other->pos_);
  swap(bagcontainertype_, other->bagcontainertype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipEnhanceReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipEnhanceReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcEquipEnhanceReply::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipEnhanceReply::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipEnhanceReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipEnhanceReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcEquipEnhanceReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceReply.Result)
  return result_;
}
void BagRpcEquipEnhanceReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceReply.Result)
}

// optional sint32 ItemId = 2 [default = -1];
bool BagRpcEquipEnhanceReply::has_itemid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRpcEquipEnhanceReply::set_has_itemid() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRpcEquipEnhanceReply::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRpcEquipEnhanceReply::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
::google::protobuf::int32 BagRpcEquipEnhanceReply::itemid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceReply.ItemId)
  return itemid_;
}
void BagRpcEquipEnhanceReply::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceReply.ItemId)
}

// optional sint32 Pos = 3 [default = -1];
bool BagRpcEquipEnhanceReply::has_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BagRpcEquipEnhanceReply::set_has_pos() {
  _has_bits_[0] |= 0x00000010u;
}
void BagRpcEquipEnhanceReply::clear_has_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
void BagRpcEquipEnhanceReply::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcEquipEnhanceReply::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceReply.Pos)
  return pos_;
}
void BagRpcEquipEnhanceReply::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceReply.Pos)
}

// optional sint32 BagContainerType = 4 [default = -1];
bool BagRpcEquipEnhanceReply::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BagRpcEquipEnhanceReply::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000020u;
}
void BagRpcEquipEnhanceReply::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000020u;
}
void BagRpcEquipEnhanceReply::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
::google::protobuf::int32 BagRpcEquipEnhanceReply::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceReply.BagContainerType)
  return bagcontainertype_;
}
void BagRpcEquipEnhanceReply::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceReply.BagContainerType)
}

// optional sint32 Lv = 5 [default = -1];
bool BagRpcEquipEnhanceReply::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipEnhanceReply::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipEnhanceReply::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipEnhanceReply::clear_lv() {
  lv_ = -1;
  clear_has_lv();
}
::google::protobuf::int32 BagRpcEquipEnhanceReply::lv() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceReply.Lv)
  return lv_;
}
void BagRpcEquipEnhanceReply::set_lv(::google::protobuf::int32 value) {
  set_has_lv();
  lv_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceReply.Lv)
}

// optional bool IsFirstEnhance = 6 [default = false];
bool BagRpcEquipEnhanceReply::has_isfirstenhance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipEnhanceReply::set_has_isfirstenhance() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipEnhanceReply::clear_has_isfirstenhance() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipEnhanceReply::clear_isfirstenhance() {
  isfirstenhance_ = false;
  clear_has_isfirstenhance();
}
bool BagRpcEquipEnhanceReply::isfirstenhance() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceReply.IsFirstEnhance)
  return isfirstenhance_;
}
void BagRpcEquipEnhanceReply::set_isfirstenhance(bool value) {
  set_has_isfirstenhance();
  isfirstenhance_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceReply.IsFirstEnhance)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipPolishedAsk::kItemIdFieldNumber;
const int BagRpcEquipPolishedAsk::kPosFieldNumber;
const int BagRpcEquipPolishedAsk::kBagContainerTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipPolishedAsk::BagRpcEquipPolishedAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipPolishedAsk)
}
BagRpcEquipPolishedAsk::BagRpcEquipPolishedAsk(const BagRpcEquipPolishedAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bagcontainertype_, &from.bagcontainertype_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&bagcontainertype_)) + sizeof(pos_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipPolishedAsk)
}

void BagRpcEquipPolishedAsk::SharedCtor() {
  _cached_size_ = 0;
  bagcontainertype_ = -1;
  itemid_ = -1;
  pos_ = -1;
}

BagRpcEquipPolishedAsk::~BagRpcEquipPolishedAsk() {
  // @@protoc_insertion_point(destructor:BagRpcEquipPolishedAsk)
  SharedDtor();
}

void BagRpcEquipPolishedAsk::SharedDtor() {
}

void BagRpcEquipPolishedAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipPolishedAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipPolishedAsk& BagRpcEquipPolishedAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipPolishedAsk* BagRpcEquipPolishedAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipPolishedAsk* n = new BagRpcEquipPolishedAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipPolishedAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipPolishedAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    bagcontainertype_ = -1;
    itemid_ = -1;
    pos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipPolishedAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipPolishedAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 ItemId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bagcontainertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipPolishedAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipPolishedAsk)
  return false;
#undef DO_
}

void BagRpcEquipPolishedAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipPolishedAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ItemId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->itemid(), output);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->pos(), output);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->bagcontainertype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipPolishedAsk)
}

::google::protobuf::uint8* BagRpcEquipPolishedAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipPolishedAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ItemId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->itemid(), target);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->pos(), target);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->bagcontainertype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipPolishedAsk)
  return target;
}

size_t BagRpcEquipPolishedAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipPolishedAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 BagContainerType = 4 [default = -1];
    if (has_bagcontainertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype());
    }

    // optional sint32 ItemId = 2 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemid());
    }

    // optional sint32 Pos = 3 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipPolishedAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipPolishedAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipPolishedAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipPolishedAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipPolishedAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipPolishedAsk)
    MergeFrom(*source);
  }
}

void BagRpcEquipPolishedAsk::MergeFrom(const BagRpcEquipPolishedAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipPolishedAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      bagcontainertype_ = from.bagcontainertype_;
    }
    if (cached_has_bits & 0x00000002u) {
      itemid_ = from.itemid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipPolishedAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipPolishedAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipPolishedAsk::CopyFrom(const BagRpcEquipPolishedAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipPolishedAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipPolishedAsk::IsInitialized() const {
  return true;
}

void BagRpcEquipPolishedAsk::Swap(BagRpcEquipPolishedAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipPolishedAsk::InternalSwap(BagRpcEquipPolishedAsk* other) {
  using std::swap;
  swap(bagcontainertype_, other->bagcontainertype_);
  swap(itemid_, other->itemid_);
  swap(pos_, other->pos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipPolishedAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipPolishedAsk

// optional sint32 ItemId = 2 [default = -1];
bool BagRpcEquipPolishedAsk::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipPolishedAsk::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipPolishedAsk::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipPolishedAsk::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
::google::protobuf::int32 BagRpcEquipPolishedAsk::itemid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipPolishedAsk.ItemId)
  return itemid_;
}
void BagRpcEquipPolishedAsk::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipPolishedAsk.ItemId)
}

// optional sint32 Pos = 3 [default = -1];
bool BagRpcEquipPolishedAsk::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipPolishedAsk::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipPolishedAsk::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipPolishedAsk::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcEquipPolishedAsk::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipPolishedAsk.Pos)
  return pos_;
}
void BagRpcEquipPolishedAsk::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipPolishedAsk.Pos)
}

// optional sint32 BagContainerType = 4 [default = -1];
bool BagRpcEquipPolishedAsk::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipPolishedAsk::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipPolishedAsk::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipPolishedAsk::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
::google::protobuf::int32 BagRpcEquipPolishedAsk::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipPolishedAsk.BagContainerType)
  return bagcontainertype_;
}
void BagRpcEquipPolishedAsk::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipPolishedAsk.BagContainerType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipPolishedReply::kResultFieldNumber;
const int BagRpcEquipPolishedReply::kItemIdFieldNumber;
const int BagRpcEquipPolishedReply::kPosFieldNumber;
const int BagRpcEquipPolishedReply::kBagContainerTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipPolishedReply::BagRpcEquipPolishedReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipPolishedReply)
}
BagRpcEquipPolishedReply::BagRpcEquipPolishedReply(const BagRpcEquipPolishedReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&bagcontainertype_) -
    reinterpret_cast<char*>(&result_)) + sizeof(bagcontainertype_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipPolishedReply)
}

void BagRpcEquipPolishedReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  itemid_ = -1;
  pos_ = -1;
  bagcontainertype_ = -1;
}

BagRpcEquipPolishedReply::~BagRpcEquipPolishedReply() {
  // @@protoc_insertion_point(destructor:BagRpcEquipPolishedReply)
  SharedDtor();
}

void BagRpcEquipPolishedReply::SharedDtor() {
}

void BagRpcEquipPolishedReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipPolishedReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipPolishedReply& BagRpcEquipPolishedReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipPolishedReply* BagRpcEquipPolishedReply::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipPolishedReply* n = new BagRpcEquipPolishedReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipPolishedReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipPolishedReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    result_ = -9999;
    itemid_ = -1;
    pos_ = -1;
    bagcontainertype_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipPolishedReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipPolishedReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ItemId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bagcontainertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipPolishedReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipPolishedReply)
  return false;
#undef DO_
}

void BagRpcEquipPolishedReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipPolishedReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 ItemId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->itemid(), output);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->pos(), output);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->bagcontainertype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipPolishedReply)
}

::google::protobuf::uint8* BagRpcEquipPolishedReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipPolishedReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 ItemId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->itemid(), target);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->pos(), target);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->bagcontainertype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipPolishedReply)
  return target;
}

size_t BagRpcEquipPolishedReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipPolishedReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 ItemId = 2 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemid());
    }

    // optional sint32 Pos = 3 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 BagContainerType = 4 [default = -1];
    if (has_bagcontainertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipPolishedReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipPolishedReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipPolishedReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipPolishedReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipPolishedReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipPolishedReply)
    MergeFrom(*source);
  }
}

void BagRpcEquipPolishedReply::MergeFrom(const BagRpcEquipPolishedReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipPolishedReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      itemid_ = from.itemid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000008u) {
      bagcontainertype_ = from.bagcontainertype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipPolishedReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipPolishedReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipPolishedReply::CopyFrom(const BagRpcEquipPolishedReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipPolishedReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipPolishedReply::IsInitialized() const {
  return true;
}

void BagRpcEquipPolishedReply::Swap(BagRpcEquipPolishedReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipPolishedReply::InternalSwap(BagRpcEquipPolishedReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(itemid_, other->itemid_);
  swap(pos_, other->pos_);
  swap(bagcontainertype_, other->bagcontainertype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipPolishedReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipPolishedReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcEquipPolishedReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipPolishedReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipPolishedReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipPolishedReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcEquipPolishedReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipPolishedReply.Result)
  return result_;
}
void BagRpcEquipPolishedReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipPolishedReply.Result)
}

// optional sint32 ItemId = 2 [default = -1];
bool BagRpcEquipPolishedReply::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipPolishedReply::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipPolishedReply::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipPolishedReply::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
::google::protobuf::int32 BagRpcEquipPolishedReply::itemid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipPolishedReply.ItemId)
  return itemid_;
}
void BagRpcEquipPolishedReply::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipPolishedReply.ItemId)
}

// optional sint32 Pos = 3 [default = -1];
bool BagRpcEquipPolishedReply::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipPolishedReply::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipPolishedReply::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipPolishedReply::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcEquipPolishedReply::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipPolishedReply.Pos)
  return pos_;
}
void BagRpcEquipPolishedReply::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipPolishedReply.Pos)
}

// optional sint32 BagContainerType = 4 [default = -1];
bool BagRpcEquipPolishedReply::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRpcEquipPolishedReply::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRpcEquipPolishedReply::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRpcEquipPolishedReply::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
::google::protobuf::int32 BagRpcEquipPolishedReply::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipPolishedReply.BagContainerType)
  return bagcontainertype_;
}
void BagRpcEquipPolishedReply::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipPolishedReply.BagContainerType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipPolishedReplaceAsk::kItemIdFieldNumber;
const int BagRpcEquipPolishedReplaceAsk::kPosFieldNumber;
const int BagRpcEquipPolishedReplaceAsk::kBagContainerTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipPolishedReplaceAsk::BagRpcEquipPolishedReplaceAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipPolishedReplaceAsk)
}
BagRpcEquipPolishedReplaceAsk::BagRpcEquipPolishedReplaceAsk(const BagRpcEquipPolishedReplaceAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bagcontainertype_, &from.bagcontainertype_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&bagcontainertype_)) + sizeof(pos_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipPolishedReplaceAsk)
}

void BagRpcEquipPolishedReplaceAsk::SharedCtor() {
  _cached_size_ = 0;
  bagcontainertype_ = -1;
  itemid_ = -1;
  pos_ = -1;
}

BagRpcEquipPolishedReplaceAsk::~BagRpcEquipPolishedReplaceAsk() {
  // @@protoc_insertion_point(destructor:BagRpcEquipPolishedReplaceAsk)
  SharedDtor();
}

void BagRpcEquipPolishedReplaceAsk::SharedDtor() {
}

void BagRpcEquipPolishedReplaceAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipPolishedReplaceAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipPolishedReplaceAsk& BagRpcEquipPolishedReplaceAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipPolishedReplaceAsk* BagRpcEquipPolishedReplaceAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipPolishedReplaceAsk* n = new BagRpcEquipPolishedReplaceAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipPolishedReplaceAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipPolishedReplaceAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    bagcontainertype_ = -1;
    itemid_ = -1;
    pos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipPolishedReplaceAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipPolishedReplaceAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 ItemId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bagcontainertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipPolishedReplaceAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipPolishedReplaceAsk)
  return false;
#undef DO_
}

void BagRpcEquipPolishedReplaceAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipPolishedReplaceAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ItemId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->itemid(), output);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->pos(), output);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->bagcontainertype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipPolishedReplaceAsk)
}

::google::protobuf::uint8* BagRpcEquipPolishedReplaceAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipPolishedReplaceAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 ItemId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->itemid(), target);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->pos(), target);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->bagcontainertype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipPolishedReplaceAsk)
  return target;
}

size_t BagRpcEquipPolishedReplaceAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipPolishedReplaceAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 BagContainerType = 4 [default = -1];
    if (has_bagcontainertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype());
    }

    // optional sint32 ItemId = 2 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemid());
    }

    // optional sint32 Pos = 3 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipPolishedReplaceAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipPolishedReplaceAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipPolishedReplaceAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipPolishedReplaceAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipPolishedReplaceAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipPolishedReplaceAsk)
    MergeFrom(*source);
  }
}

void BagRpcEquipPolishedReplaceAsk::MergeFrom(const BagRpcEquipPolishedReplaceAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipPolishedReplaceAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      bagcontainertype_ = from.bagcontainertype_;
    }
    if (cached_has_bits & 0x00000002u) {
      itemid_ = from.itemid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipPolishedReplaceAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipPolishedReplaceAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipPolishedReplaceAsk::CopyFrom(const BagRpcEquipPolishedReplaceAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipPolishedReplaceAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipPolishedReplaceAsk::IsInitialized() const {
  return true;
}

void BagRpcEquipPolishedReplaceAsk::Swap(BagRpcEquipPolishedReplaceAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipPolishedReplaceAsk::InternalSwap(BagRpcEquipPolishedReplaceAsk* other) {
  using std::swap;
  swap(bagcontainertype_, other->bagcontainertype_);
  swap(itemid_, other->itemid_);
  swap(pos_, other->pos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipPolishedReplaceAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipPolishedReplaceAsk

// optional sint32 ItemId = 2 [default = -1];
bool BagRpcEquipPolishedReplaceAsk::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipPolishedReplaceAsk::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipPolishedReplaceAsk::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipPolishedReplaceAsk::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
::google::protobuf::int32 BagRpcEquipPolishedReplaceAsk::itemid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipPolishedReplaceAsk.ItemId)
  return itemid_;
}
void BagRpcEquipPolishedReplaceAsk::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipPolishedReplaceAsk.ItemId)
}

// optional sint32 Pos = 3 [default = -1];
bool BagRpcEquipPolishedReplaceAsk::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipPolishedReplaceAsk::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipPolishedReplaceAsk::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipPolishedReplaceAsk::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcEquipPolishedReplaceAsk::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipPolishedReplaceAsk.Pos)
  return pos_;
}
void BagRpcEquipPolishedReplaceAsk::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipPolishedReplaceAsk.Pos)
}

// optional sint32 BagContainerType = 4 [default = -1];
bool BagRpcEquipPolishedReplaceAsk::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipPolishedReplaceAsk::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipPolishedReplaceAsk::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipPolishedReplaceAsk::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
::google::protobuf::int32 BagRpcEquipPolishedReplaceAsk::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipPolishedReplaceAsk.BagContainerType)
  return bagcontainertype_;
}
void BagRpcEquipPolishedReplaceAsk::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipPolishedReplaceAsk.BagContainerType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipPolishedReplaceReply::kResultFieldNumber;
const int BagRpcEquipPolishedReplaceReply::kItemIdFieldNumber;
const int BagRpcEquipPolishedReplaceReply::kPosFieldNumber;
const int BagRpcEquipPolishedReplaceReply::kBagContainerTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipPolishedReplaceReply::BagRpcEquipPolishedReplaceReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipPolishedReplaceReply)
}
BagRpcEquipPolishedReplaceReply::BagRpcEquipPolishedReplaceReply(const BagRpcEquipPolishedReplaceReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&bagcontainertype_) -
    reinterpret_cast<char*>(&result_)) + sizeof(bagcontainertype_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipPolishedReplaceReply)
}

void BagRpcEquipPolishedReplaceReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  itemid_ = -1;
  pos_ = -1;
  bagcontainertype_ = -1;
}

BagRpcEquipPolishedReplaceReply::~BagRpcEquipPolishedReplaceReply() {
  // @@protoc_insertion_point(destructor:BagRpcEquipPolishedReplaceReply)
  SharedDtor();
}

void BagRpcEquipPolishedReplaceReply::SharedDtor() {
}

void BagRpcEquipPolishedReplaceReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipPolishedReplaceReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipPolishedReplaceReply& BagRpcEquipPolishedReplaceReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipPolishedReplaceReply* BagRpcEquipPolishedReplaceReply::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipPolishedReplaceReply* n = new BagRpcEquipPolishedReplaceReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipPolishedReplaceReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipPolishedReplaceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    result_ = -9999;
    itemid_ = -1;
    pos_ = -1;
    bagcontainertype_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipPolishedReplaceReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipPolishedReplaceReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ItemId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bagcontainertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipPolishedReplaceReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipPolishedReplaceReply)
  return false;
#undef DO_
}

void BagRpcEquipPolishedReplaceReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipPolishedReplaceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 ItemId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->itemid(), output);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->pos(), output);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->bagcontainertype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipPolishedReplaceReply)
}

::google::protobuf::uint8* BagRpcEquipPolishedReplaceReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipPolishedReplaceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 ItemId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->itemid(), target);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->pos(), target);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->bagcontainertype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipPolishedReplaceReply)
  return target;
}

size_t BagRpcEquipPolishedReplaceReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipPolishedReplaceReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 ItemId = 2 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemid());
    }

    // optional sint32 Pos = 3 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 BagContainerType = 4 [default = -1];
    if (has_bagcontainertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipPolishedReplaceReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipPolishedReplaceReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipPolishedReplaceReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipPolishedReplaceReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipPolishedReplaceReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipPolishedReplaceReply)
    MergeFrom(*source);
  }
}

void BagRpcEquipPolishedReplaceReply::MergeFrom(const BagRpcEquipPolishedReplaceReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipPolishedReplaceReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      itemid_ = from.itemid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000008u) {
      bagcontainertype_ = from.bagcontainertype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipPolishedReplaceReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipPolishedReplaceReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipPolishedReplaceReply::CopyFrom(const BagRpcEquipPolishedReplaceReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipPolishedReplaceReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipPolishedReplaceReply::IsInitialized() const {
  return true;
}

void BagRpcEquipPolishedReplaceReply::Swap(BagRpcEquipPolishedReplaceReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipPolishedReplaceReply::InternalSwap(BagRpcEquipPolishedReplaceReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(itemid_, other->itemid_);
  swap(pos_, other->pos_);
  swap(bagcontainertype_, other->bagcontainertype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipPolishedReplaceReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipPolishedReplaceReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcEquipPolishedReplaceReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipPolishedReplaceReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipPolishedReplaceReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipPolishedReplaceReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcEquipPolishedReplaceReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipPolishedReplaceReply.Result)
  return result_;
}
void BagRpcEquipPolishedReplaceReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipPolishedReplaceReply.Result)
}

// optional sint32 ItemId = 2 [default = -1];
bool BagRpcEquipPolishedReplaceReply::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipPolishedReplaceReply::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipPolishedReplaceReply::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipPolishedReplaceReply::clear_itemid() {
  itemid_ = -1;
  clear_has_itemid();
}
::google::protobuf::int32 BagRpcEquipPolishedReplaceReply::itemid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipPolishedReplaceReply.ItemId)
  return itemid_;
}
void BagRpcEquipPolishedReplaceReply::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipPolishedReplaceReply.ItemId)
}

// optional sint32 Pos = 3 [default = -1];
bool BagRpcEquipPolishedReplaceReply::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipPolishedReplaceReply::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipPolishedReplaceReply::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipPolishedReplaceReply::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcEquipPolishedReplaceReply::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipPolishedReplaceReply.Pos)
  return pos_;
}
void BagRpcEquipPolishedReplaceReply::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipPolishedReplaceReply.Pos)
}

// optional sint32 BagContainerType = 4 [default = -1];
bool BagRpcEquipPolishedReplaceReply::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRpcEquipPolishedReplaceReply::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRpcEquipPolishedReplaceReply::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRpcEquipPolishedReplaceReply::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
::google::protobuf::int32 BagRpcEquipPolishedReplaceReply::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipPolishedReplaceReply.BagContainerType)
  return bagcontainertype_;
}
void BagRpcEquipPolishedReplaceReply::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipPolishedReplaceReply.BagContainerType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcBagTidyAsk::BagRpcBagTidyAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcBagTidyAsk)
}
BagRpcBagTidyAsk::BagRpcBagTidyAsk(const BagRpcBagTidyAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:BagRpcBagTidyAsk)
}

void BagRpcBagTidyAsk::SharedCtor() {
  _cached_size_ = 0;
}

BagRpcBagTidyAsk::~BagRpcBagTidyAsk() {
  // @@protoc_insertion_point(destructor:BagRpcBagTidyAsk)
  SharedDtor();
}

void BagRpcBagTidyAsk::SharedDtor() {
}

void BagRpcBagTidyAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcBagTidyAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcBagTidyAsk& BagRpcBagTidyAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcBagTidyAsk* BagRpcBagTidyAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcBagTidyAsk* n = new BagRpcBagTidyAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcBagTidyAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcBagTidyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcBagTidyAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcBagTidyAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcBagTidyAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcBagTidyAsk)
  return false;
#undef DO_
}

void BagRpcBagTidyAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcBagTidyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcBagTidyAsk)
}

::google::protobuf::uint8* BagRpcBagTidyAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcBagTidyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcBagTidyAsk)
  return target;
}

size_t BagRpcBagTidyAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcBagTidyAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcBagTidyAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcBagTidyAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcBagTidyAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcBagTidyAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcBagTidyAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcBagTidyAsk)
    MergeFrom(*source);
  }
}

void BagRpcBagTidyAsk::MergeFrom(const BagRpcBagTidyAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcBagTidyAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BagRpcBagTidyAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcBagTidyAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcBagTidyAsk::CopyFrom(const BagRpcBagTidyAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcBagTidyAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcBagTidyAsk::IsInitialized() const {
  return true;
}

void BagRpcBagTidyAsk::Swap(BagRpcBagTidyAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcBagTidyAsk::InternalSwap(BagRpcBagTidyAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcBagTidyAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcBagTidyAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcBagTidyReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcBagTidyReply::BagRpcBagTidyReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcBagTidyReply)
}
BagRpcBagTidyReply::BagRpcBagTidyReply(const BagRpcBagTidyReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:BagRpcBagTidyReply)
}

void BagRpcBagTidyReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

BagRpcBagTidyReply::~BagRpcBagTidyReply() {
  // @@protoc_insertion_point(destructor:BagRpcBagTidyReply)
  SharedDtor();
}

void BagRpcBagTidyReply::SharedDtor() {
}

void BagRpcBagTidyReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcBagTidyReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcBagTidyReply& BagRpcBagTidyReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcBagTidyReply* BagRpcBagTidyReply::New(::google::protobuf::Arena* arena) const {
  BagRpcBagTidyReply* n = new BagRpcBagTidyReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcBagTidyReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcBagTidyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcBagTidyReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcBagTidyReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcBagTidyReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcBagTidyReply)
  return false;
#undef DO_
}

void BagRpcBagTidyReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcBagTidyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcBagTidyReply)
}

::google::protobuf::uint8* BagRpcBagTidyReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcBagTidyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcBagTidyReply)
  return target;
}

size_t BagRpcBagTidyReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcBagTidyReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcBagTidyReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcBagTidyReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcBagTidyReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcBagTidyReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcBagTidyReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcBagTidyReply)
    MergeFrom(*source);
  }
}

void BagRpcBagTidyReply::MergeFrom(const BagRpcBagTidyReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcBagTidyReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void BagRpcBagTidyReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcBagTidyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcBagTidyReply::CopyFrom(const BagRpcBagTidyReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcBagTidyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcBagTidyReply::IsInitialized() const {
  return true;
}

void BagRpcBagTidyReply::Swap(BagRpcBagTidyReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcBagTidyReply::InternalSwap(BagRpcBagTidyReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcBagTidyReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcBagTidyReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcBagTidyReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcBagTidyReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcBagTidyReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcBagTidyReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcBagTidyReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcBagTidyReply.Result)
  return result_;
}
void BagRpcBagTidyReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagTidyReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcBagRecycleBuyAsk::kGridPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcBagRecycleBuyAsk::BagRpcBagRecycleBuyAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcBagRecycleBuyAsk)
}
BagRpcBagRecycleBuyAsk::BagRpcBagRecycleBuyAsk(const BagRpcBagRecycleBuyAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gridpos_ = from.gridpos_;
  // @@protoc_insertion_point(copy_constructor:BagRpcBagRecycleBuyAsk)
}

void BagRpcBagRecycleBuyAsk::SharedCtor() {
  _cached_size_ = 0;
  gridpos_ = -1;
}

BagRpcBagRecycleBuyAsk::~BagRpcBagRecycleBuyAsk() {
  // @@protoc_insertion_point(destructor:BagRpcBagRecycleBuyAsk)
  SharedDtor();
}

void BagRpcBagRecycleBuyAsk::SharedDtor() {
}

void BagRpcBagRecycleBuyAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcBagRecycleBuyAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcBagRecycleBuyAsk& BagRpcBagRecycleBuyAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcBagRecycleBuyAsk* BagRpcBagRecycleBuyAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcBagRecycleBuyAsk* n = new BagRpcBagRecycleBuyAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcBagRecycleBuyAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcBagRecycleBuyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gridpos_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcBagRecycleBuyAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcBagRecycleBuyAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 GridPos = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_gridpos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &gridpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcBagRecycleBuyAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcBagRecycleBuyAsk)
  return false;
#undef DO_
}

void BagRpcBagRecycleBuyAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcBagRecycleBuyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 GridPos = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->gridpos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcBagRecycleBuyAsk)
}

::google::protobuf::uint8* BagRpcBagRecycleBuyAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcBagRecycleBuyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 GridPos = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->gridpos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcBagRecycleBuyAsk)
  return target;
}

size_t BagRpcBagRecycleBuyAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcBagRecycleBuyAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 GridPos = 1 [default = -1];
  if (has_gridpos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->gridpos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcBagRecycleBuyAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcBagRecycleBuyAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcBagRecycleBuyAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcBagRecycleBuyAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcBagRecycleBuyAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcBagRecycleBuyAsk)
    MergeFrom(*source);
  }
}

void BagRpcBagRecycleBuyAsk::MergeFrom(const BagRpcBagRecycleBuyAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcBagRecycleBuyAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gridpos()) {
    set_gridpos(from.gridpos());
  }
}

void BagRpcBagRecycleBuyAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcBagRecycleBuyAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcBagRecycleBuyAsk::CopyFrom(const BagRpcBagRecycleBuyAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcBagRecycleBuyAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcBagRecycleBuyAsk::IsInitialized() const {
  return true;
}

void BagRpcBagRecycleBuyAsk::Swap(BagRpcBagRecycleBuyAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcBagRecycleBuyAsk::InternalSwap(BagRpcBagRecycleBuyAsk* other) {
  using std::swap;
  swap(gridpos_, other->gridpos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcBagRecycleBuyAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcBagRecycleBuyAsk

// optional sint32 GridPos = 1 [default = -1];
bool BagRpcBagRecycleBuyAsk::has_gridpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcBagRecycleBuyAsk::set_has_gridpos() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcBagRecycleBuyAsk::clear_has_gridpos() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcBagRecycleBuyAsk::clear_gridpos() {
  gridpos_ = -1;
  clear_has_gridpos();
}
::google::protobuf::int32 BagRpcBagRecycleBuyAsk::gridpos() const {
  // @@protoc_insertion_point(field_get:BagRpcBagRecycleBuyAsk.GridPos)
  return gridpos_;
}
void BagRpcBagRecycleBuyAsk::set_gridpos(::google::protobuf::int32 value) {
  set_has_gridpos();
  gridpos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagRecycleBuyAsk.GridPos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcBagRecycleBuyReply::kResultFieldNumber;
const int BagRpcBagRecycleBuyReply::kGridPosFieldNumber;
const int BagRpcBagRecycleBuyReply::kGridListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcBagRecycleBuyReply::BagRpcBagRecycleBuyReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcBagRecycleBuyReply)
}
BagRpcBagRecycleBuyReply::BagRpcBagRecycleBuyReply(const BagRpcBagRecycleBuyReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      gridlist_(from.gridlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&gridpos_) -
    reinterpret_cast<char*>(&result_)) + sizeof(gridpos_));
  // @@protoc_insertion_point(copy_constructor:BagRpcBagRecycleBuyReply)
}

void BagRpcBagRecycleBuyReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  gridpos_ = -1;
}

BagRpcBagRecycleBuyReply::~BagRpcBagRecycleBuyReply() {
  // @@protoc_insertion_point(destructor:BagRpcBagRecycleBuyReply)
  SharedDtor();
}

void BagRpcBagRecycleBuyReply::SharedDtor() {
}

void BagRpcBagRecycleBuyReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcBagRecycleBuyReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcBagRecycleBuyReply& BagRpcBagRecycleBuyReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcBagRecycleBuyReply* BagRpcBagRecycleBuyReply::New(::google::protobuf::Arena* arena) const {
  BagRpcBagRecycleBuyReply* n = new BagRpcBagRecycleBuyReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcBagRecycleBuyReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcBagRecycleBuyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gridlist_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    result_ = -9999;
    gridpos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcBagRecycleBuyReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcBagRecycleBuyReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 GridPos = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_gridpos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &gridpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BagRecycleGridObj GridList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gridlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcBagRecycleBuyReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcBagRecycleBuyReply)
  return false;
#undef DO_
}

void BagRpcBagRecycleBuyReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcBagRecycleBuyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 GridPos = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->gridpos(), output);
  }

  // repeated .BagRecycleGridObj GridList = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gridlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->gridlist(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcBagRecycleBuyReply)
}

::google::protobuf::uint8* BagRpcBagRecycleBuyReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcBagRecycleBuyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 GridPos = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->gridpos(), target);
  }

  // repeated .BagRecycleGridObj GridList = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gridlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->gridlist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcBagRecycleBuyReply)
  return target;
}

size_t BagRpcBagRecycleBuyReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcBagRecycleBuyReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .BagRecycleGridObj GridList = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->gridlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gridlist(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 GridPos = 2 [default = -1];
    if (has_gridpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->gridpos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcBagRecycleBuyReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcBagRecycleBuyReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcBagRecycleBuyReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcBagRecycleBuyReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcBagRecycleBuyReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcBagRecycleBuyReply)
    MergeFrom(*source);
  }
}

void BagRpcBagRecycleBuyReply::MergeFrom(const BagRpcBagRecycleBuyReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcBagRecycleBuyReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gridlist_.MergeFrom(from.gridlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      gridpos_ = from.gridpos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcBagRecycleBuyReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcBagRecycleBuyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcBagRecycleBuyReply::CopyFrom(const BagRpcBagRecycleBuyReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcBagRecycleBuyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcBagRecycleBuyReply::IsInitialized() const {
  return true;
}

void BagRpcBagRecycleBuyReply::Swap(BagRpcBagRecycleBuyReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcBagRecycleBuyReply::InternalSwap(BagRpcBagRecycleBuyReply* other) {
  using std::swap;
  gridlist_.InternalSwap(&other->gridlist_);
  swap(result_, other->result_);
  swap(gridpos_, other->gridpos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcBagRecycleBuyReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcBagRecycleBuyReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcBagRecycleBuyReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcBagRecycleBuyReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcBagRecycleBuyReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcBagRecycleBuyReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcBagRecycleBuyReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcBagRecycleBuyReply.Result)
  return result_;
}
void BagRpcBagRecycleBuyReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagRecycleBuyReply.Result)
}

// optional sint32 GridPos = 2 [default = -1];
bool BagRpcBagRecycleBuyReply::has_gridpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcBagRecycleBuyReply::set_has_gridpos() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcBagRecycleBuyReply::clear_has_gridpos() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcBagRecycleBuyReply::clear_gridpos() {
  gridpos_ = -1;
  clear_has_gridpos();
}
::google::protobuf::int32 BagRpcBagRecycleBuyReply::gridpos() const {
  // @@protoc_insertion_point(field_get:BagRpcBagRecycleBuyReply.GridPos)
  return gridpos_;
}
void BagRpcBagRecycleBuyReply::set_gridpos(::google::protobuf::int32 value) {
  set_has_gridpos();
  gridpos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagRecycleBuyReply.GridPos)
}

// repeated .BagRecycleGridObj GridList = 3;
int BagRpcBagRecycleBuyReply::gridlist_size() const {
  return gridlist_.size();
}
void BagRpcBagRecycleBuyReply::clear_gridlist() {
  gridlist_.Clear();
}
const ::BagRecycleGridObj& BagRpcBagRecycleBuyReply::gridlist(int index) const {
  // @@protoc_insertion_point(field_get:BagRpcBagRecycleBuyReply.GridList)
  return gridlist_.Get(index);
}
::BagRecycleGridObj* BagRpcBagRecycleBuyReply::mutable_gridlist(int index) {
  // @@protoc_insertion_point(field_mutable:BagRpcBagRecycleBuyReply.GridList)
  return gridlist_.Mutable(index);
}
::BagRecycleGridObj* BagRpcBagRecycleBuyReply::add_gridlist() {
  // @@protoc_insertion_point(field_add:BagRpcBagRecycleBuyReply.GridList)
  return gridlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::BagRecycleGridObj >*
BagRpcBagRecycleBuyReply::mutable_gridlist() {
  // @@protoc_insertion_point(field_mutable_list:BagRpcBagRecycleBuyReply.GridList)
  return &gridlist_;
}
const ::google::protobuf::RepeatedPtrField< ::BagRecycleGridObj >&
BagRpcBagRecycleBuyReply::gridlist() const {
  // @@protoc_insertion_point(field_list:BagRpcBagRecycleBuyReply.GridList)
  return gridlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcUnlockGridAsk::kGridCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcUnlockGridAsk::BagRpcUnlockGridAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcUnlockGridAsk)
}
BagRpcUnlockGridAsk::BagRpcUnlockGridAsk(const BagRpcUnlockGridAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gridcount_ = from.gridcount_;
  // @@protoc_insertion_point(copy_constructor:BagRpcUnlockGridAsk)
}

void BagRpcUnlockGridAsk::SharedCtor() {
  _cached_size_ = 0;
  gridcount_ = -1;
}

BagRpcUnlockGridAsk::~BagRpcUnlockGridAsk() {
  // @@protoc_insertion_point(destructor:BagRpcUnlockGridAsk)
  SharedDtor();
}

void BagRpcUnlockGridAsk::SharedDtor() {
}

void BagRpcUnlockGridAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcUnlockGridAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcUnlockGridAsk& BagRpcUnlockGridAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcUnlockGridAsk* BagRpcUnlockGridAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcUnlockGridAsk* n = new BagRpcUnlockGridAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcUnlockGridAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcUnlockGridAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gridcount_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcUnlockGridAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcUnlockGridAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 GridCount = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_gridcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &gridcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcUnlockGridAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcUnlockGridAsk)
  return false;
#undef DO_
}

void BagRpcUnlockGridAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcUnlockGridAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 GridCount = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->gridcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcUnlockGridAsk)
}

::google::protobuf::uint8* BagRpcUnlockGridAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcUnlockGridAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 GridCount = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->gridcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcUnlockGridAsk)
  return target;
}

size_t BagRpcUnlockGridAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcUnlockGridAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 GridCount = 1 [default = -1];
  if (has_gridcount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->gridcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcUnlockGridAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcUnlockGridAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcUnlockGridAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcUnlockGridAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcUnlockGridAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcUnlockGridAsk)
    MergeFrom(*source);
  }
}

void BagRpcUnlockGridAsk::MergeFrom(const BagRpcUnlockGridAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcUnlockGridAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gridcount()) {
    set_gridcount(from.gridcount());
  }
}

void BagRpcUnlockGridAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcUnlockGridAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcUnlockGridAsk::CopyFrom(const BagRpcUnlockGridAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcUnlockGridAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcUnlockGridAsk::IsInitialized() const {
  return true;
}

void BagRpcUnlockGridAsk::Swap(BagRpcUnlockGridAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcUnlockGridAsk::InternalSwap(BagRpcUnlockGridAsk* other) {
  using std::swap;
  swap(gridcount_, other->gridcount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcUnlockGridAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcUnlockGridAsk

// optional sint32 GridCount = 1 [default = -1];
bool BagRpcUnlockGridAsk::has_gridcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcUnlockGridAsk::set_has_gridcount() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcUnlockGridAsk::clear_has_gridcount() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcUnlockGridAsk::clear_gridcount() {
  gridcount_ = -1;
  clear_has_gridcount();
}
::google::protobuf::int32 BagRpcUnlockGridAsk::gridcount() const {
  // @@protoc_insertion_point(field_get:BagRpcUnlockGridAsk.GridCount)
  return gridcount_;
}
void BagRpcUnlockGridAsk::set_gridcount(::google::protobuf::int32 value) {
  set_has_gridcount();
  gridcount_ = value;
  // @@protoc_insertion_point(field_set:BagRpcUnlockGridAsk.GridCount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcUnlockGridReply::kResultFieldNumber;
const int BagRpcUnlockGridReply::kGridCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcUnlockGridReply::BagRpcUnlockGridReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcUnlockGridReply)
}
BagRpcUnlockGridReply::BagRpcUnlockGridReply(const BagRpcUnlockGridReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&gridcount_) -
    reinterpret_cast<char*>(&result_)) + sizeof(gridcount_));
  // @@protoc_insertion_point(copy_constructor:BagRpcUnlockGridReply)
}

void BagRpcUnlockGridReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  gridcount_ = -1;
}

BagRpcUnlockGridReply::~BagRpcUnlockGridReply() {
  // @@protoc_insertion_point(destructor:BagRpcUnlockGridReply)
  SharedDtor();
}

void BagRpcUnlockGridReply::SharedDtor() {
}

void BagRpcUnlockGridReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcUnlockGridReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcUnlockGridReply& BagRpcUnlockGridReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcUnlockGridReply* BagRpcUnlockGridReply::New(::google::protobuf::Arena* arena) const {
  BagRpcUnlockGridReply* n = new BagRpcUnlockGridReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcUnlockGridReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcUnlockGridReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    result_ = -9999;
    gridcount_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcUnlockGridReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcUnlockGridReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 GridCount = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_gridcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &gridcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcUnlockGridReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcUnlockGridReply)
  return false;
#undef DO_
}

void BagRpcUnlockGridReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcUnlockGridReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 GridCount = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->gridcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcUnlockGridReply)
}

::google::protobuf::uint8* BagRpcUnlockGridReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcUnlockGridReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 GridCount = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->gridcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcUnlockGridReply)
  return target;
}

size_t BagRpcUnlockGridReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcUnlockGridReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 GridCount = 2 [default = -1];
    if (has_gridcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->gridcount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcUnlockGridReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcUnlockGridReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcUnlockGridReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcUnlockGridReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcUnlockGridReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcUnlockGridReply)
    MergeFrom(*source);
  }
}

void BagRpcUnlockGridReply::MergeFrom(const BagRpcUnlockGridReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcUnlockGridReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      gridcount_ = from.gridcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcUnlockGridReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcUnlockGridReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcUnlockGridReply::CopyFrom(const BagRpcUnlockGridReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcUnlockGridReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcUnlockGridReply::IsInitialized() const {
  return true;
}

void BagRpcUnlockGridReply::Swap(BagRpcUnlockGridReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcUnlockGridReply::InternalSwap(BagRpcUnlockGridReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(gridcount_, other->gridcount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcUnlockGridReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcUnlockGridReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcUnlockGridReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcUnlockGridReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcUnlockGridReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcUnlockGridReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcUnlockGridReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcUnlockGridReply.Result)
  return result_;
}
void BagRpcUnlockGridReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcUnlockGridReply.Result)
}

// optional sint32 GridCount = 2 [default = -1];
bool BagRpcUnlockGridReply::has_gridcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcUnlockGridReply::set_has_gridcount() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcUnlockGridReply::clear_has_gridcount() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcUnlockGridReply::clear_gridcount() {
  gridcount_ = -1;
  clear_has_gridcount();
}
::google::protobuf::int32 BagRpcUnlockGridReply::gridcount() const {
  // @@protoc_insertion_point(field_get:BagRpcUnlockGridReply.GridCount)
  return gridcount_;
}
void BagRpcUnlockGridReply::set_gridcount(::google::protobuf::int32 value) {
  set_has_gridcount();
  gridcount_ = value;
  // @@protoc_insertion_point(field_set:BagRpcUnlockGridReply.GridCount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcSellGridObj::kTemplateIdFieldNumber;
const int BagRpcSellGridObj::kNumFieldNumber;
const int BagRpcSellGridObj::kPosFieldNumber;
const int BagRpcSellGridObj::kItemIdFieldNumber;
const int BagRpcSellGridObj::kItemTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcSellGridObj::BagRpcSellGridObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcSellGridObj)
}
BagRpcSellGridObj::BagRpcSellGridObj(const BagRpcSellGridObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&templateid_, &from.templateid_,
    static_cast<size_t>(reinterpret_cast<char*>(&itemtype_) -
    reinterpret_cast<char*>(&templateid_)) + sizeof(itemtype_));
  // @@protoc_insertion_point(copy_constructor:BagRpcSellGridObj)
}

void BagRpcSellGridObj::SharedCtor() {
  _cached_size_ = 0;
  templateid_ = -1;
  num_ = -1;
  itemid_ = GOOGLE_LONGLONG(-1);
  pos_ = -1;
  itemtype_ = -1;
}

BagRpcSellGridObj::~BagRpcSellGridObj() {
  // @@protoc_insertion_point(destructor:BagRpcSellGridObj)
  SharedDtor();
}

void BagRpcSellGridObj::SharedDtor() {
}

void BagRpcSellGridObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcSellGridObj::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcSellGridObj& BagRpcSellGridObj::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcSellGridObj* BagRpcSellGridObj::New(::google::protobuf::Arena* arena) const {
  BagRpcSellGridObj* n = new BagRpcSellGridObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcSellGridObj::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcSellGridObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    templateid_ = -1;
    num_ = -1;
    itemid_ = GOOGLE_LONGLONG(-1);
    pos_ = -1;
    itemtype_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcSellGridObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcSellGridObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 TemplateId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Num = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint64 ItemId = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_itemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ItemType = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_itemtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &itemtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcSellGridObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcSellGridObj)
  return false;
#undef DO_
}

void BagRpcSellGridObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcSellGridObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->templateid(), output);
  }

  // optional sint32 Num = 3 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->num(), output);
  }

  // optional sint32 Pos = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->pos(), output);
  }

  // optional sint64 ItemId = 5 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(5, this->itemid(), output);
  }

  // optional sint32 ItemType = 6 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->itemtype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcSellGridObj)
}

::google::protobuf::uint8* BagRpcSellGridObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcSellGridObj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->templateid(), target);
  }

  // optional sint32 Num = 3 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->num(), target);
  }

  // optional sint32 Pos = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->pos(), target);
  }

  // optional sint64 ItemId = 5 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(5, this->itemid(), target);
  }

  // optional sint32 ItemType = 6 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->itemtype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcSellGridObj)
  return target;
}

size_t BagRpcSellGridObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcSellGridObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional sint32 TemplateId = 2 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 Num = 3 [default = -1];
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->num());
    }

    // optional sint64 ItemId = 5 [default = -1];
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->itemid());
    }

    // optional sint32 Pos = 4 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 ItemType = 6 [default = -1];
    if (has_itemtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->itemtype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcSellGridObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcSellGridObj)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcSellGridObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcSellGridObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcSellGridObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcSellGridObj)
    MergeFrom(*source);
  }
}

void BagRpcSellGridObj::MergeFrom(const BagRpcSellGridObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcSellGridObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000002u) {
      num_ = from.num_;
    }
    if (cached_has_bits & 0x00000004u) {
      itemid_ = from.itemid_;
    }
    if (cached_has_bits & 0x00000008u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000010u) {
      itemtype_ = from.itemtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcSellGridObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcSellGridObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcSellGridObj::CopyFrom(const BagRpcSellGridObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcSellGridObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcSellGridObj::IsInitialized() const {
  return true;
}

void BagRpcSellGridObj::Swap(BagRpcSellGridObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcSellGridObj::InternalSwap(BagRpcSellGridObj* other) {
  using std::swap;
  swap(templateid_, other->templateid_);
  swap(num_, other->num_);
  swap(itemid_, other->itemid_);
  swap(pos_, other->pos_);
  swap(itemtype_, other->itemtype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcSellGridObj::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcSellGridObj

// optional sint32 TemplateId = 2 [default = -1];
bool BagRpcSellGridObj::has_templateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcSellGridObj::set_has_templateid() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcSellGridObj::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcSellGridObj::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagRpcSellGridObj::templateid() const {
  // @@protoc_insertion_point(field_get:BagRpcSellGridObj.TemplateId)
  return templateid_;
}
void BagRpcSellGridObj::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcSellGridObj.TemplateId)
}

// optional sint32 Num = 3 [default = -1];
bool BagRpcSellGridObj::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcSellGridObj::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcSellGridObj::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcSellGridObj::clear_num() {
  num_ = -1;
  clear_has_num();
}
::google::protobuf::int32 BagRpcSellGridObj::num() const {
  // @@protoc_insertion_point(field_get:BagRpcSellGridObj.Num)
  return num_;
}
void BagRpcSellGridObj::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:BagRpcSellGridObj.Num)
}

// optional sint32 Pos = 4 [default = -1];
bool BagRpcSellGridObj::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRpcSellGridObj::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRpcSellGridObj::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRpcSellGridObj::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcSellGridObj::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcSellGridObj.Pos)
  return pos_;
}
void BagRpcSellGridObj::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcSellGridObj.Pos)
}

// optional sint64 ItemId = 5 [default = -1];
bool BagRpcSellGridObj::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcSellGridObj::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcSellGridObj::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcSellGridObj::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(-1);
  clear_has_itemid();
}
::google::protobuf::int64 BagRpcSellGridObj::itemid() const {
  // @@protoc_insertion_point(field_get:BagRpcSellGridObj.ItemId)
  return itemid_;
}
void BagRpcSellGridObj::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcSellGridObj.ItemId)
}

// optional sint32 ItemType = 6 [default = -1];
bool BagRpcSellGridObj::has_itemtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BagRpcSellGridObj::set_has_itemtype() {
  _has_bits_[0] |= 0x00000010u;
}
void BagRpcSellGridObj::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000010u;
}
void BagRpcSellGridObj::clear_itemtype() {
  itemtype_ = -1;
  clear_has_itemtype();
}
::google::protobuf::int32 BagRpcSellGridObj::itemtype() const {
  // @@protoc_insertion_point(field_get:BagRpcSellGridObj.ItemType)
  return itemtype_;
}
void BagRpcSellGridObj::set_itemtype(::google::protobuf::int32 value) {
  set_has_itemtype();
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:BagRpcSellGridObj.ItemType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcBagRecycleSellAsk::kGridListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcBagRecycleSellAsk::BagRpcBagRecycleSellAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcBagRecycleSellAsk)
}
BagRpcBagRecycleSellAsk::BagRpcBagRecycleSellAsk(const BagRpcBagRecycleSellAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      gridlist_(from.gridlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:BagRpcBagRecycleSellAsk)
}

void BagRpcBagRecycleSellAsk::SharedCtor() {
  _cached_size_ = 0;
}

BagRpcBagRecycleSellAsk::~BagRpcBagRecycleSellAsk() {
  // @@protoc_insertion_point(destructor:BagRpcBagRecycleSellAsk)
  SharedDtor();
}

void BagRpcBagRecycleSellAsk::SharedDtor() {
}

void BagRpcBagRecycleSellAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcBagRecycleSellAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcBagRecycleSellAsk& BagRpcBagRecycleSellAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcBagRecycleSellAsk* BagRpcBagRecycleSellAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcBagRecycleSellAsk* n = new BagRpcBagRecycleSellAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcBagRecycleSellAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcBagRecycleSellAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gridlist_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcBagRecycleSellAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcBagRecycleSellAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .BagRpcSellGridObj GridList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gridlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcBagRecycleSellAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcBagRecycleSellAsk)
  return false;
#undef DO_
}

void BagRpcBagRecycleSellAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcBagRecycleSellAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .BagRpcSellGridObj GridList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gridlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gridlist(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcBagRecycleSellAsk)
}

::google::protobuf::uint8* BagRpcBagRecycleSellAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcBagRecycleSellAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .BagRpcSellGridObj GridList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gridlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->gridlist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcBagRecycleSellAsk)
  return target;
}

size_t BagRpcBagRecycleSellAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcBagRecycleSellAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .BagRpcSellGridObj GridList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->gridlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gridlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcBagRecycleSellAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcBagRecycleSellAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcBagRecycleSellAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcBagRecycleSellAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcBagRecycleSellAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcBagRecycleSellAsk)
    MergeFrom(*source);
  }
}

void BagRpcBagRecycleSellAsk::MergeFrom(const BagRpcBagRecycleSellAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcBagRecycleSellAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gridlist_.MergeFrom(from.gridlist_);
}

void BagRpcBagRecycleSellAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcBagRecycleSellAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcBagRecycleSellAsk::CopyFrom(const BagRpcBagRecycleSellAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcBagRecycleSellAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcBagRecycleSellAsk::IsInitialized() const {
  return true;
}

void BagRpcBagRecycleSellAsk::Swap(BagRpcBagRecycleSellAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcBagRecycleSellAsk::InternalSwap(BagRpcBagRecycleSellAsk* other) {
  using std::swap;
  gridlist_.InternalSwap(&other->gridlist_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcBagRecycleSellAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcBagRecycleSellAsk

// repeated .BagRpcSellGridObj GridList = 1;
int BagRpcBagRecycleSellAsk::gridlist_size() const {
  return gridlist_.size();
}
void BagRpcBagRecycleSellAsk::clear_gridlist() {
  gridlist_.Clear();
}
const ::BagRpcSellGridObj& BagRpcBagRecycleSellAsk::gridlist(int index) const {
  // @@protoc_insertion_point(field_get:BagRpcBagRecycleSellAsk.GridList)
  return gridlist_.Get(index);
}
::BagRpcSellGridObj* BagRpcBagRecycleSellAsk::mutable_gridlist(int index) {
  // @@protoc_insertion_point(field_mutable:BagRpcBagRecycleSellAsk.GridList)
  return gridlist_.Mutable(index);
}
::BagRpcSellGridObj* BagRpcBagRecycleSellAsk::add_gridlist() {
  // @@protoc_insertion_point(field_add:BagRpcBagRecycleSellAsk.GridList)
  return gridlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::BagRpcSellGridObj >*
BagRpcBagRecycleSellAsk::mutable_gridlist() {
  // @@protoc_insertion_point(field_mutable_list:BagRpcBagRecycleSellAsk.GridList)
  return &gridlist_;
}
const ::google::protobuf::RepeatedPtrField< ::BagRpcSellGridObj >&
BagRpcBagRecycleSellAsk::gridlist() const {
  // @@protoc_insertion_point(field_list:BagRpcBagRecycleSellAsk.GridList)
  return gridlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcBagRecycleSellReply::kResultFieldNumber;
const int BagRpcBagRecycleSellReply::kGridListFieldNumber;
const int BagRpcBagRecycleSellReply::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcBagRecycleSellReply::BagRpcBagRecycleSellReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcBagRecycleSellReply)
}
BagRpcBagRecycleSellReply::BagRpcBagRecycleSellReply(const BagRpcBagRecycleSellReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      gridlist_(from.gridlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&result_)) + sizeof(money_));
  // @@protoc_insertion_point(copy_constructor:BagRpcBagRecycleSellReply)
}

void BagRpcBagRecycleSellReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  money_ = -1;
}

BagRpcBagRecycleSellReply::~BagRpcBagRecycleSellReply() {
  // @@protoc_insertion_point(destructor:BagRpcBagRecycleSellReply)
  SharedDtor();
}

void BagRpcBagRecycleSellReply::SharedDtor() {
}

void BagRpcBagRecycleSellReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcBagRecycleSellReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcBagRecycleSellReply& BagRpcBagRecycleSellReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcBagRecycleSellReply* BagRpcBagRecycleSellReply::New(::google::protobuf::Arena* arena) const {
  BagRpcBagRecycleSellReply* n = new BagRpcBagRecycleSellReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcBagRecycleSellReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcBagRecycleSellReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gridlist_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    result_ = -9999;
    money_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcBagRecycleSellReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcBagRecycleSellReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BagRecycleGridObj GridList = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gridlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Money = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcBagRecycleSellReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcBagRecycleSellReply)
  return false;
#undef DO_
}

void BagRpcBagRecycleSellReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcBagRecycleSellReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // repeated .BagRecycleGridObj GridList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gridlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->gridlist(static_cast<int>(i)), output);
  }

  // optional sint32 Money = 4 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcBagRecycleSellReply)
}

::google::protobuf::uint8* BagRpcBagRecycleSellReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcBagRecycleSellReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // repeated .BagRecycleGridObj GridList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gridlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->gridlist(static_cast<int>(i)), deterministic, target);
  }

  // optional sint32 Money = 4 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcBagRecycleSellReply)
  return target;
}

size_t BagRpcBagRecycleSellReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcBagRecycleSellReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .BagRecycleGridObj GridList = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->gridlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gridlist(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 Money = 4 [default = -1];
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->money());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcBagRecycleSellReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcBagRecycleSellReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcBagRecycleSellReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcBagRecycleSellReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcBagRecycleSellReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcBagRecycleSellReply)
    MergeFrom(*source);
  }
}

void BagRpcBagRecycleSellReply::MergeFrom(const BagRpcBagRecycleSellReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcBagRecycleSellReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gridlist_.MergeFrom(from.gridlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      money_ = from.money_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcBagRecycleSellReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcBagRecycleSellReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcBagRecycleSellReply::CopyFrom(const BagRpcBagRecycleSellReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcBagRecycleSellReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcBagRecycleSellReply::IsInitialized() const {
  return true;
}

void BagRpcBagRecycleSellReply::Swap(BagRpcBagRecycleSellReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcBagRecycleSellReply::InternalSwap(BagRpcBagRecycleSellReply* other) {
  using std::swap;
  gridlist_.InternalSwap(&other->gridlist_);
  swap(result_, other->result_);
  swap(money_, other->money_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcBagRecycleSellReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcBagRecycleSellReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcBagRecycleSellReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcBagRecycleSellReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcBagRecycleSellReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcBagRecycleSellReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcBagRecycleSellReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcBagRecycleSellReply.Result)
  return result_;
}
void BagRpcBagRecycleSellReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagRecycleSellReply.Result)
}

// repeated .BagRecycleGridObj GridList = 2;
int BagRpcBagRecycleSellReply::gridlist_size() const {
  return gridlist_.size();
}
void BagRpcBagRecycleSellReply::clear_gridlist() {
  gridlist_.Clear();
}
const ::BagRecycleGridObj& BagRpcBagRecycleSellReply::gridlist(int index) const {
  // @@protoc_insertion_point(field_get:BagRpcBagRecycleSellReply.GridList)
  return gridlist_.Get(index);
}
::BagRecycleGridObj* BagRpcBagRecycleSellReply::mutable_gridlist(int index) {
  // @@protoc_insertion_point(field_mutable:BagRpcBagRecycleSellReply.GridList)
  return gridlist_.Mutable(index);
}
::BagRecycleGridObj* BagRpcBagRecycleSellReply::add_gridlist() {
  // @@protoc_insertion_point(field_add:BagRpcBagRecycleSellReply.GridList)
  return gridlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::BagRecycleGridObj >*
BagRpcBagRecycleSellReply::mutable_gridlist() {
  // @@protoc_insertion_point(field_mutable_list:BagRpcBagRecycleSellReply.GridList)
  return &gridlist_;
}
const ::google::protobuf::RepeatedPtrField< ::BagRecycleGridObj >&
BagRpcBagRecycleSellReply::gridlist() const {
  // @@protoc_insertion_point(field_list:BagRpcBagRecycleSellReply.GridList)
  return gridlist_;
}

// optional sint32 Money = 4 [default = -1];
bool BagRpcBagRecycleSellReply::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcBagRecycleSellReply::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcBagRecycleSellReply::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcBagRecycleSellReply::clear_money() {
  money_ = -1;
  clear_has_money();
}
::google::protobuf::int32 BagRpcBagRecycleSellReply::money() const {
  // @@protoc_insertion_point(field_get:BagRpcBagRecycleSellReply.Money)
  return money_;
}
void BagRpcBagRecycleSellReply::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagRecycleSellReply.Money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcSplitAsk::kTemplateIdFieldNumber;
const int BagRpcSplitAsk::kPosFieldNumber;
const int BagRpcSplitAsk::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcSplitAsk::BagRpcSplitAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcSplitAsk)
}
BagRpcSplitAsk::BagRpcSplitAsk(const BagRpcSplitAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&num_, &from.num_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&num_)) + sizeof(pos_));
  // @@protoc_insertion_point(copy_constructor:BagRpcSplitAsk)
}

void BagRpcSplitAsk::SharedCtor() {
  _cached_size_ = 0;
  num_ = -1;
  templateid_ = -1;
  pos_ = -1;
}

BagRpcSplitAsk::~BagRpcSplitAsk() {
  // @@protoc_insertion_point(destructor:BagRpcSplitAsk)
  SharedDtor();
}

void BagRpcSplitAsk::SharedDtor() {
}

void BagRpcSplitAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcSplitAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcSplitAsk& BagRpcSplitAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcSplitAsk* BagRpcSplitAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcSplitAsk* n = new BagRpcSplitAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcSplitAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcSplitAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    num_ = -1;
    templateid_ = -1;
    pos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcSplitAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcSplitAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 TemplateId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Num = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcSplitAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcSplitAsk)
  return false;
#undef DO_
}

void BagRpcSplitAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcSplitAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->templateid(), output);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->pos(), output);
  }

  // optional sint32 Num = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcSplitAsk)
}

::google::protobuf::uint8* BagRpcSplitAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcSplitAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->templateid(), target);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->pos(), target);
  }

  // optional sint32 Num = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcSplitAsk)
  return target;
}

size_t BagRpcSplitAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcSplitAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 Num = 3 [default = -1];
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->num());
    }

    // optional sint32 TemplateId = 1 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 Pos = 2 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcSplitAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcSplitAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcSplitAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcSplitAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcSplitAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcSplitAsk)
    MergeFrom(*source);
  }
}

void BagRpcSplitAsk::MergeFrom(const BagRpcSplitAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcSplitAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      num_ = from.num_;
    }
    if (cached_has_bits & 0x00000002u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcSplitAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcSplitAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcSplitAsk::CopyFrom(const BagRpcSplitAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcSplitAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcSplitAsk::IsInitialized() const {
  return true;
}

void BagRpcSplitAsk::Swap(BagRpcSplitAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcSplitAsk::InternalSwap(BagRpcSplitAsk* other) {
  using std::swap;
  swap(num_, other->num_);
  swap(templateid_, other->templateid_);
  swap(pos_, other->pos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcSplitAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcSplitAsk

// optional sint32 TemplateId = 1 [default = -1];
bool BagRpcSplitAsk::has_templateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcSplitAsk::set_has_templateid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcSplitAsk::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcSplitAsk::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagRpcSplitAsk::templateid() const {
  // @@protoc_insertion_point(field_get:BagRpcSplitAsk.TemplateId)
  return templateid_;
}
void BagRpcSplitAsk::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcSplitAsk.TemplateId)
}

// optional sint32 Pos = 2 [default = -1];
bool BagRpcSplitAsk::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcSplitAsk::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcSplitAsk::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcSplitAsk::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcSplitAsk::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcSplitAsk.Pos)
  return pos_;
}
void BagRpcSplitAsk::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcSplitAsk.Pos)
}

// optional sint32 Num = 3 [default = -1];
bool BagRpcSplitAsk::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcSplitAsk::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcSplitAsk::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcSplitAsk::clear_num() {
  num_ = -1;
  clear_has_num();
}
::google::protobuf::int32 BagRpcSplitAsk::num() const {
  // @@protoc_insertion_point(field_get:BagRpcSplitAsk.Num)
  return num_;
}
void BagRpcSplitAsk::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:BagRpcSplitAsk.Num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcSplitReply::kResultFieldNumber;
const int BagRpcSplitReply::kTemplateIdFieldNumber;
const int BagRpcSplitReply::kPosFieldNumber;
const int BagRpcSplitReply::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcSplitReply::BagRpcSplitReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcSplitReply)
}
BagRpcSplitReply::BagRpcSplitReply(const BagRpcSplitReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&result_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:BagRpcSplitReply)
}

void BagRpcSplitReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  templateid_ = -1;
  pos_ = -1;
  num_ = -1;
}

BagRpcSplitReply::~BagRpcSplitReply() {
  // @@protoc_insertion_point(destructor:BagRpcSplitReply)
  SharedDtor();
}

void BagRpcSplitReply::SharedDtor() {
}

void BagRpcSplitReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcSplitReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcSplitReply& BagRpcSplitReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcSplitReply* BagRpcSplitReply::New(::google::protobuf::Arena* arena) const {
  BagRpcSplitReply* n = new BagRpcSplitReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcSplitReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcSplitReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    result_ = -9999;
    templateid_ = -1;
    pos_ = -1;
    num_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcSplitReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcSplitReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TemplateId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Num = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcSplitReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcSplitReply)
  return false;
#undef DO_
}

void BagRpcSplitReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcSplitReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->templateid(), output);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->pos(), output);
  }

  // optional sint32 Num = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcSplitReply)
}

::google::protobuf::uint8* BagRpcSplitReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcSplitReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->templateid(), target);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->pos(), target);
  }

  // optional sint32 Num = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcSplitReply)
  return target;
}

size_t BagRpcSplitReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcSplitReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 TemplateId = 2 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 Pos = 3 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 Num = 4 [default = -1];
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcSplitReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcSplitReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcSplitReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcSplitReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcSplitReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcSplitReply)
    MergeFrom(*source);
  }
}

void BagRpcSplitReply::MergeFrom(const BagRpcSplitReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcSplitReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000008u) {
      num_ = from.num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcSplitReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcSplitReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcSplitReply::CopyFrom(const BagRpcSplitReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcSplitReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcSplitReply::IsInitialized() const {
  return true;
}

void BagRpcSplitReply::Swap(BagRpcSplitReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcSplitReply::InternalSwap(BagRpcSplitReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(templateid_, other->templateid_);
  swap(pos_, other->pos_);
  swap(num_, other->num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcSplitReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcSplitReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcSplitReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcSplitReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcSplitReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcSplitReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcSplitReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcSplitReply.Result)
  return result_;
}
void BagRpcSplitReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcSplitReply.Result)
}

// optional sint32 TemplateId = 2 [default = -1];
bool BagRpcSplitReply::has_templateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcSplitReply::set_has_templateid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcSplitReply::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcSplitReply::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagRpcSplitReply::templateid() const {
  // @@protoc_insertion_point(field_get:BagRpcSplitReply.TemplateId)
  return templateid_;
}
void BagRpcSplitReply::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcSplitReply.TemplateId)
}

// optional sint32 Pos = 3 [default = -1];
bool BagRpcSplitReply::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcSplitReply::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcSplitReply::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcSplitReply::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcSplitReply::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcSplitReply.Pos)
  return pos_;
}
void BagRpcSplitReply::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcSplitReply.Pos)
}

// optional sint32 Num = 4 [default = -1];
bool BagRpcSplitReply::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRpcSplitReply::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRpcSplitReply::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRpcSplitReply::clear_num() {
  num_ = -1;
  clear_has_num();
}
::google::protobuf::int32 BagRpcSplitReply::num() const {
  // @@protoc_insertion_point(field_get:BagRpcSplitReply.Num)
  return num_;
}
void BagRpcSplitReply::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:BagRpcSplitReply.Num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipBaseAttrPlishedAsk::kTemplateIdFieldNumber;
const int BagRpcEquipBaseAttrPlishedAsk::kPosFieldNumber;
const int BagRpcEquipBaseAttrPlishedAsk::kBagContainerTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipBaseAttrPlishedAsk::BagRpcEquipBaseAttrPlishedAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipBaseAttrPlishedAsk)
}
BagRpcEquipBaseAttrPlishedAsk::BagRpcEquipBaseAttrPlishedAsk(const BagRpcEquipBaseAttrPlishedAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bagcontainertype_, &from.bagcontainertype_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&bagcontainertype_)) + sizeof(pos_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipBaseAttrPlishedAsk)
}

void BagRpcEquipBaseAttrPlishedAsk::SharedCtor() {
  _cached_size_ = 0;
  bagcontainertype_ = -1;
  templateid_ = -1;
  pos_ = -1;
}

BagRpcEquipBaseAttrPlishedAsk::~BagRpcEquipBaseAttrPlishedAsk() {
  // @@protoc_insertion_point(destructor:BagRpcEquipBaseAttrPlishedAsk)
  SharedDtor();
}

void BagRpcEquipBaseAttrPlishedAsk::SharedDtor() {
}

void BagRpcEquipBaseAttrPlishedAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipBaseAttrPlishedAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipBaseAttrPlishedAsk& BagRpcEquipBaseAttrPlishedAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipBaseAttrPlishedAsk* BagRpcEquipBaseAttrPlishedAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipBaseAttrPlishedAsk* n = new BagRpcEquipBaseAttrPlishedAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipBaseAttrPlishedAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipBaseAttrPlishedAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    bagcontainertype_ = -1;
    templateid_ = -1;
    pos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipBaseAttrPlishedAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipBaseAttrPlishedAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 TemplateId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_bagcontainertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipBaseAttrPlishedAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipBaseAttrPlishedAsk)
  return false;
#undef DO_
}

void BagRpcEquipBaseAttrPlishedAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipBaseAttrPlishedAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->templateid(), output);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->pos(), output);
  }

  // optional sint32 BagContainerType = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->bagcontainertype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipBaseAttrPlishedAsk)
}

::google::protobuf::uint8* BagRpcEquipBaseAttrPlishedAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipBaseAttrPlishedAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->templateid(), target);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->pos(), target);
  }

  // optional sint32 BagContainerType = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->bagcontainertype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipBaseAttrPlishedAsk)
  return target;
}

size_t BagRpcEquipBaseAttrPlishedAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipBaseAttrPlishedAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 BagContainerType = 3 [default = -1];
    if (has_bagcontainertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype());
    }

    // optional sint32 TemplateId = 1 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 Pos = 2 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipBaseAttrPlishedAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipBaseAttrPlishedAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipBaseAttrPlishedAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipBaseAttrPlishedAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipBaseAttrPlishedAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipBaseAttrPlishedAsk)
    MergeFrom(*source);
  }
}

void BagRpcEquipBaseAttrPlishedAsk::MergeFrom(const BagRpcEquipBaseAttrPlishedAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipBaseAttrPlishedAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      bagcontainertype_ = from.bagcontainertype_;
    }
    if (cached_has_bits & 0x00000002u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipBaseAttrPlishedAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipBaseAttrPlishedAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipBaseAttrPlishedAsk::CopyFrom(const BagRpcEquipBaseAttrPlishedAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipBaseAttrPlishedAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipBaseAttrPlishedAsk::IsInitialized() const {
  return true;
}

void BagRpcEquipBaseAttrPlishedAsk::Swap(BagRpcEquipBaseAttrPlishedAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipBaseAttrPlishedAsk::InternalSwap(BagRpcEquipBaseAttrPlishedAsk* other) {
  using std::swap;
  swap(bagcontainertype_, other->bagcontainertype_);
  swap(templateid_, other->templateid_);
  swap(pos_, other->pos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipBaseAttrPlishedAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipBaseAttrPlishedAsk

// optional sint32 TemplateId = 1 [default = -1];
bool BagRpcEquipBaseAttrPlishedAsk::has_templateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipBaseAttrPlishedAsk::set_has_templateid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipBaseAttrPlishedAsk::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipBaseAttrPlishedAsk::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagRpcEquipBaseAttrPlishedAsk::templateid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipBaseAttrPlishedAsk.TemplateId)
  return templateid_;
}
void BagRpcEquipBaseAttrPlishedAsk::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipBaseAttrPlishedAsk.TemplateId)
}

// optional sint32 Pos = 2 [default = -1];
bool BagRpcEquipBaseAttrPlishedAsk::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipBaseAttrPlishedAsk::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipBaseAttrPlishedAsk::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipBaseAttrPlishedAsk::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcEquipBaseAttrPlishedAsk::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipBaseAttrPlishedAsk.Pos)
  return pos_;
}
void BagRpcEquipBaseAttrPlishedAsk::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipBaseAttrPlishedAsk.Pos)
}

// optional sint32 BagContainerType = 3 [default = -1];
bool BagRpcEquipBaseAttrPlishedAsk::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipBaseAttrPlishedAsk::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipBaseAttrPlishedAsk::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipBaseAttrPlishedAsk::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
::google::protobuf::int32 BagRpcEquipBaseAttrPlishedAsk::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipBaseAttrPlishedAsk.BagContainerType)
  return bagcontainertype_;
}
void BagRpcEquipBaseAttrPlishedAsk::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipBaseAttrPlishedAsk.BagContainerType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipBaseAttrPlishedReply::kResultFieldNumber;
const int BagRpcEquipBaseAttrPlishedReply::kTemplateIdFieldNumber;
const int BagRpcEquipBaseAttrPlishedReply::kPosFieldNumber;
const int BagRpcEquipBaseAttrPlishedReply::kBagContainerTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipBaseAttrPlishedReply::BagRpcEquipBaseAttrPlishedReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipBaseAttrPlishedReply)
}
BagRpcEquipBaseAttrPlishedReply::BagRpcEquipBaseAttrPlishedReply(const BagRpcEquipBaseAttrPlishedReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&bagcontainertype_) -
    reinterpret_cast<char*>(&result_)) + sizeof(bagcontainertype_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipBaseAttrPlishedReply)
}

void BagRpcEquipBaseAttrPlishedReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  templateid_ = -1;
  pos_ = -1;
  bagcontainertype_ = -1;
}

BagRpcEquipBaseAttrPlishedReply::~BagRpcEquipBaseAttrPlishedReply() {
  // @@protoc_insertion_point(destructor:BagRpcEquipBaseAttrPlishedReply)
  SharedDtor();
}

void BagRpcEquipBaseAttrPlishedReply::SharedDtor() {
}

void BagRpcEquipBaseAttrPlishedReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipBaseAttrPlishedReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipBaseAttrPlishedReply& BagRpcEquipBaseAttrPlishedReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipBaseAttrPlishedReply* BagRpcEquipBaseAttrPlishedReply::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipBaseAttrPlishedReply* n = new BagRpcEquipBaseAttrPlishedReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipBaseAttrPlishedReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipBaseAttrPlishedReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    result_ = -9999;
    templateid_ = -1;
    pos_ = -1;
    bagcontainertype_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipBaseAttrPlishedReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipBaseAttrPlishedReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TemplateId = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_bagcontainertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipBaseAttrPlishedReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipBaseAttrPlishedReply)
  return false;
#undef DO_
}

void BagRpcEquipBaseAttrPlishedReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipBaseAttrPlishedReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 TemplateId = 3 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->templateid(), output);
  }

  // optional sint32 Pos = 4 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->pos(), output);
  }

  // optional sint32 BagContainerType = 5 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->bagcontainertype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipBaseAttrPlishedReply)
}

::google::protobuf::uint8* BagRpcEquipBaseAttrPlishedReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipBaseAttrPlishedReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 TemplateId = 3 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->templateid(), target);
  }

  // optional sint32 Pos = 4 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->pos(), target);
  }

  // optional sint32 BagContainerType = 5 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->bagcontainertype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipBaseAttrPlishedReply)
  return target;
}

size_t BagRpcEquipBaseAttrPlishedReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipBaseAttrPlishedReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 TemplateId = 3 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 Pos = 4 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 BagContainerType = 5 [default = -1];
    if (has_bagcontainertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipBaseAttrPlishedReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipBaseAttrPlishedReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipBaseAttrPlishedReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipBaseAttrPlishedReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipBaseAttrPlishedReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipBaseAttrPlishedReply)
    MergeFrom(*source);
  }
}

void BagRpcEquipBaseAttrPlishedReply::MergeFrom(const BagRpcEquipBaseAttrPlishedReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipBaseAttrPlishedReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000008u) {
      bagcontainertype_ = from.bagcontainertype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipBaseAttrPlishedReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipBaseAttrPlishedReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipBaseAttrPlishedReply::CopyFrom(const BagRpcEquipBaseAttrPlishedReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipBaseAttrPlishedReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipBaseAttrPlishedReply::IsInitialized() const {
  return true;
}

void BagRpcEquipBaseAttrPlishedReply::Swap(BagRpcEquipBaseAttrPlishedReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipBaseAttrPlishedReply::InternalSwap(BagRpcEquipBaseAttrPlishedReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(templateid_, other->templateid_);
  swap(pos_, other->pos_);
  swap(bagcontainertype_, other->bagcontainertype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipBaseAttrPlishedReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipBaseAttrPlishedReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcEquipBaseAttrPlishedReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipBaseAttrPlishedReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipBaseAttrPlishedReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipBaseAttrPlishedReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcEquipBaseAttrPlishedReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipBaseAttrPlishedReply.Result)
  return result_;
}
void BagRpcEquipBaseAttrPlishedReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipBaseAttrPlishedReply.Result)
}

// optional sint32 TemplateId = 3 [default = -1];
bool BagRpcEquipBaseAttrPlishedReply::has_templateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipBaseAttrPlishedReply::set_has_templateid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipBaseAttrPlishedReply::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipBaseAttrPlishedReply::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagRpcEquipBaseAttrPlishedReply::templateid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipBaseAttrPlishedReply.TemplateId)
  return templateid_;
}
void BagRpcEquipBaseAttrPlishedReply::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipBaseAttrPlishedReply.TemplateId)
}

// optional sint32 Pos = 4 [default = -1];
bool BagRpcEquipBaseAttrPlishedReply::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipBaseAttrPlishedReply::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipBaseAttrPlishedReply::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipBaseAttrPlishedReply::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcEquipBaseAttrPlishedReply::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipBaseAttrPlishedReply.Pos)
  return pos_;
}
void BagRpcEquipBaseAttrPlishedReply::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipBaseAttrPlishedReply.Pos)
}

// optional sint32 BagContainerType = 5 [default = -1];
bool BagRpcEquipBaseAttrPlishedReply::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRpcEquipBaseAttrPlishedReply::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRpcEquipBaseAttrPlishedReply::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRpcEquipBaseAttrPlishedReply::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
::google::protobuf::int32 BagRpcEquipBaseAttrPlishedReply::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipBaseAttrPlishedReply.BagContainerType)
  return bagcontainertype_;
}
void BagRpcEquipBaseAttrPlishedReply::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipBaseAttrPlishedReply.BagContainerType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipBaseAttrPolishedReplaceAsk::kTemplateIdFieldNumber;
const int BagRpcEquipBaseAttrPolishedReplaceAsk::kPosFieldNumber;
const int BagRpcEquipBaseAttrPolishedReplaceAsk::kBagContainerTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipBaseAttrPolishedReplaceAsk::BagRpcEquipBaseAttrPolishedReplaceAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipBaseAttrPolishedReplaceAsk)
}
BagRpcEquipBaseAttrPolishedReplaceAsk::BagRpcEquipBaseAttrPolishedReplaceAsk(const BagRpcEquipBaseAttrPolishedReplaceAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bagcontainertype_, &from.bagcontainertype_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&bagcontainertype_)) + sizeof(pos_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipBaseAttrPolishedReplaceAsk)
}

void BagRpcEquipBaseAttrPolishedReplaceAsk::SharedCtor() {
  _cached_size_ = 0;
  bagcontainertype_ = -1;
  templateid_ = -1;
  pos_ = -1;
}

BagRpcEquipBaseAttrPolishedReplaceAsk::~BagRpcEquipBaseAttrPolishedReplaceAsk() {
  // @@protoc_insertion_point(destructor:BagRpcEquipBaseAttrPolishedReplaceAsk)
  SharedDtor();
}

void BagRpcEquipBaseAttrPolishedReplaceAsk::SharedDtor() {
}

void BagRpcEquipBaseAttrPolishedReplaceAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipBaseAttrPolishedReplaceAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipBaseAttrPolishedReplaceAsk& BagRpcEquipBaseAttrPolishedReplaceAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipBaseAttrPolishedReplaceAsk* BagRpcEquipBaseAttrPolishedReplaceAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipBaseAttrPolishedReplaceAsk* n = new BagRpcEquipBaseAttrPolishedReplaceAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipBaseAttrPolishedReplaceAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipBaseAttrPolishedReplaceAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    bagcontainertype_ = -1;
    templateid_ = -1;
    pos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipBaseAttrPolishedReplaceAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipBaseAttrPolishedReplaceAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 TemplateId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_bagcontainertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipBaseAttrPolishedReplaceAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipBaseAttrPolishedReplaceAsk)
  return false;
#undef DO_
}

void BagRpcEquipBaseAttrPolishedReplaceAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipBaseAttrPolishedReplaceAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->templateid(), output);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->pos(), output);
  }

  // optional sint32 BagContainerType = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->bagcontainertype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipBaseAttrPolishedReplaceAsk)
}

::google::protobuf::uint8* BagRpcEquipBaseAttrPolishedReplaceAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipBaseAttrPolishedReplaceAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->templateid(), target);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->pos(), target);
  }

  // optional sint32 BagContainerType = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->bagcontainertype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipBaseAttrPolishedReplaceAsk)
  return target;
}

size_t BagRpcEquipBaseAttrPolishedReplaceAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipBaseAttrPolishedReplaceAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 BagContainerType = 3 [default = -1];
    if (has_bagcontainertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype());
    }

    // optional sint32 TemplateId = 1 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 Pos = 2 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipBaseAttrPolishedReplaceAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipBaseAttrPolishedReplaceAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipBaseAttrPolishedReplaceAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipBaseAttrPolishedReplaceAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipBaseAttrPolishedReplaceAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipBaseAttrPolishedReplaceAsk)
    MergeFrom(*source);
  }
}

void BagRpcEquipBaseAttrPolishedReplaceAsk::MergeFrom(const BagRpcEquipBaseAttrPolishedReplaceAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipBaseAttrPolishedReplaceAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      bagcontainertype_ = from.bagcontainertype_;
    }
    if (cached_has_bits & 0x00000002u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipBaseAttrPolishedReplaceAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipBaseAttrPolishedReplaceAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipBaseAttrPolishedReplaceAsk::CopyFrom(const BagRpcEquipBaseAttrPolishedReplaceAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipBaseAttrPolishedReplaceAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipBaseAttrPolishedReplaceAsk::IsInitialized() const {
  return true;
}

void BagRpcEquipBaseAttrPolishedReplaceAsk::Swap(BagRpcEquipBaseAttrPolishedReplaceAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipBaseAttrPolishedReplaceAsk::InternalSwap(BagRpcEquipBaseAttrPolishedReplaceAsk* other) {
  using std::swap;
  swap(bagcontainertype_, other->bagcontainertype_);
  swap(templateid_, other->templateid_);
  swap(pos_, other->pos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipBaseAttrPolishedReplaceAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipBaseAttrPolishedReplaceAsk

// optional sint32 TemplateId = 1 [default = -1];
bool BagRpcEquipBaseAttrPolishedReplaceAsk::has_templateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipBaseAttrPolishedReplaceAsk::set_has_templateid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipBaseAttrPolishedReplaceAsk::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipBaseAttrPolishedReplaceAsk::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagRpcEquipBaseAttrPolishedReplaceAsk::templateid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipBaseAttrPolishedReplaceAsk.TemplateId)
  return templateid_;
}
void BagRpcEquipBaseAttrPolishedReplaceAsk::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipBaseAttrPolishedReplaceAsk.TemplateId)
}

// optional sint32 Pos = 2 [default = -1];
bool BagRpcEquipBaseAttrPolishedReplaceAsk::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipBaseAttrPolishedReplaceAsk::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipBaseAttrPolishedReplaceAsk::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipBaseAttrPolishedReplaceAsk::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcEquipBaseAttrPolishedReplaceAsk::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipBaseAttrPolishedReplaceAsk.Pos)
  return pos_;
}
void BagRpcEquipBaseAttrPolishedReplaceAsk::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipBaseAttrPolishedReplaceAsk.Pos)
}

// optional sint32 BagContainerType = 3 [default = -1];
bool BagRpcEquipBaseAttrPolishedReplaceAsk::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipBaseAttrPolishedReplaceAsk::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipBaseAttrPolishedReplaceAsk::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipBaseAttrPolishedReplaceAsk::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
::google::protobuf::int32 BagRpcEquipBaseAttrPolishedReplaceAsk::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipBaseAttrPolishedReplaceAsk.BagContainerType)
  return bagcontainertype_;
}
void BagRpcEquipBaseAttrPolishedReplaceAsk::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipBaseAttrPolishedReplaceAsk.BagContainerType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipBaseAttrPolishedReplaceReply::kResultFieldNumber;
const int BagRpcEquipBaseAttrPolishedReplaceReply::kTemplateIdFieldNumber;
const int BagRpcEquipBaseAttrPolishedReplaceReply::kPosFieldNumber;
const int BagRpcEquipBaseAttrPolishedReplaceReply::kBagContainerTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipBaseAttrPolishedReplaceReply::BagRpcEquipBaseAttrPolishedReplaceReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipBaseAttrPolishedReplaceReply)
}
BagRpcEquipBaseAttrPolishedReplaceReply::BagRpcEquipBaseAttrPolishedReplaceReply(const BagRpcEquipBaseAttrPolishedReplaceReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&bagcontainertype_) -
    reinterpret_cast<char*>(&result_)) + sizeof(bagcontainertype_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipBaseAttrPolishedReplaceReply)
}

void BagRpcEquipBaseAttrPolishedReplaceReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  templateid_ = -1;
  pos_ = -1;
  bagcontainertype_ = -1;
}

BagRpcEquipBaseAttrPolishedReplaceReply::~BagRpcEquipBaseAttrPolishedReplaceReply() {
  // @@protoc_insertion_point(destructor:BagRpcEquipBaseAttrPolishedReplaceReply)
  SharedDtor();
}

void BagRpcEquipBaseAttrPolishedReplaceReply::SharedDtor() {
}

void BagRpcEquipBaseAttrPolishedReplaceReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipBaseAttrPolishedReplaceReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipBaseAttrPolishedReplaceReply& BagRpcEquipBaseAttrPolishedReplaceReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipBaseAttrPolishedReplaceReply* BagRpcEquipBaseAttrPolishedReplaceReply::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipBaseAttrPolishedReplaceReply* n = new BagRpcEquipBaseAttrPolishedReplaceReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipBaseAttrPolishedReplaceReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipBaseAttrPolishedReplaceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    result_ = -9999;
    templateid_ = -1;
    pos_ = -1;
    bagcontainertype_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipBaseAttrPolishedReplaceReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipBaseAttrPolishedReplaceReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TemplateId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bagcontainertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipBaseAttrPolishedReplaceReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipBaseAttrPolishedReplaceReply)
  return false;
#undef DO_
}

void BagRpcEquipBaseAttrPolishedReplaceReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipBaseAttrPolishedReplaceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->templateid(), output);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->pos(), output);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->bagcontainertype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipBaseAttrPolishedReplaceReply)
}

::google::protobuf::uint8* BagRpcEquipBaseAttrPolishedReplaceReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipBaseAttrPolishedReplaceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->templateid(), target);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->pos(), target);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->bagcontainertype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipBaseAttrPolishedReplaceReply)
  return target;
}

size_t BagRpcEquipBaseAttrPolishedReplaceReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipBaseAttrPolishedReplaceReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 TemplateId = 2 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 Pos = 3 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 BagContainerType = 4 [default = -1];
    if (has_bagcontainertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipBaseAttrPolishedReplaceReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipBaseAttrPolishedReplaceReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipBaseAttrPolishedReplaceReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipBaseAttrPolishedReplaceReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipBaseAttrPolishedReplaceReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipBaseAttrPolishedReplaceReply)
    MergeFrom(*source);
  }
}

void BagRpcEquipBaseAttrPolishedReplaceReply::MergeFrom(const BagRpcEquipBaseAttrPolishedReplaceReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipBaseAttrPolishedReplaceReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000008u) {
      bagcontainertype_ = from.bagcontainertype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipBaseAttrPolishedReplaceReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipBaseAttrPolishedReplaceReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipBaseAttrPolishedReplaceReply::CopyFrom(const BagRpcEquipBaseAttrPolishedReplaceReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipBaseAttrPolishedReplaceReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipBaseAttrPolishedReplaceReply::IsInitialized() const {
  return true;
}

void BagRpcEquipBaseAttrPolishedReplaceReply::Swap(BagRpcEquipBaseAttrPolishedReplaceReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipBaseAttrPolishedReplaceReply::InternalSwap(BagRpcEquipBaseAttrPolishedReplaceReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(templateid_, other->templateid_);
  swap(pos_, other->pos_);
  swap(bagcontainertype_, other->bagcontainertype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipBaseAttrPolishedReplaceReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipBaseAttrPolishedReplaceReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcEquipBaseAttrPolishedReplaceReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipBaseAttrPolishedReplaceReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipBaseAttrPolishedReplaceReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipBaseAttrPolishedReplaceReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcEquipBaseAttrPolishedReplaceReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipBaseAttrPolishedReplaceReply.Result)
  return result_;
}
void BagRpcEquipBaseAttrPolishedReplaceReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipBaseAttrPolishedReplaceReply.Result)
}

// optional sint32 TemplateId = 2 [default = -1];
bool BagRpcEquipBaseAttrPolishedReplaceReply::has_templateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipBaseAttrPolishedReplaceReply::set_has_templateid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipBaseAttrPolishedReplaceReply::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipBaseAttrPolishedReplaceReply::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagRpcEquipBaseAttrPolishedReplaceReply::templateid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipBaseAttrPolishedReplaceReply.TemplateId)
  return templateid_;
}
void BagRpcEquipBaseAttrPolishedReplaceReply::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipBaseAttrPolishedReplaceReply.TemplateId)
}

// optional sint32 Pos = 3 [default = -1];
bool BagRpcEquipBaseAttrPolishedReplaceReply::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipBaseAttrPolishedReplaceReply::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipBaseAttrPolishedReplaceReply::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipBaseAttrPolishedReplaceReply::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcEquipBaseAttrPolishedReplaceReply::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipBaseAttrPolishedReplaceReply.Pos)
  return pos_;
}
void BagRpcEquipBaseAttrPolishedReplaceReply::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipBaseAttrPolishedReplaceReply.Pos)
}

// optional sint32 BagContainerType = 4 [default = -1];
bool BagRpcEquipBaseAttrPolishedReplaceReply::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRpcEquipBaseAttrPolishedReplaceReply::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRpcEquipBaseAttrPolishedReplaceReply::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRpcEquipBaseAttrPolishedReplaceReply::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
::google::protobuf::int32 BagRpcEquipBaseAttrPolishedReplaceReply::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipBaseAttrPolishedReplaceReply.BagContainerType)
  return bagcontainertype_;
}
void BagRpcEquipBaseAttrPolishedReplaceReply::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipBaseAttrPolishedReplaceReply.BagContainerType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipExAttrModifyAsk::kTemplateIdFieldNumber;
const int BagRpcEquipExAttrModifyAsk::kPosFieldNumber;
const int BagRpcEquipExAttrModifyAsk::kBagContainerTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipExAttrModifyAsk::BagRpcEquipExAttrModifyAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipExAttrModifyAsk)
}
BagRpcEquipExAttrModifyAsk::BagRpcEquipExAttrModifyAsk(const BagRpcEquipExAttrModifyAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bagcontainertype_, &from.bagcontainertype_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&bagcontainertype_)) + sizeof(pos_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipExAttrModifyAsk)
}

void BagRpcEquipExAttrModifyAsk::SharedCtor() {
  _cached_size_ = 0;
  bagcontainertype_ = -1;
  templateid_ = -1;
  pos_ = -1;
}

BagRpcEquipExAttrModifyAsk::~BagRpcEquipExAttrModifyAsk() {
  // @@protoc_insertion_point(destructor:BagRpcEquipExAttrModifyAsk)
  SharedDtor();
}

void BagRpcEquipExAttrModifyAsk::SharedDtor() {
}

void BagRpcEquipExAttrModifyAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipExAttrModifyAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipExAttrModifyAsk& BagRpcEquipExAttrModifyAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipExAttrModifyAsk* BagRpcEquipExAttrModifyAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipExAttrModifyAsk* n = new BagRpcEquipExAttrModifyAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipExAttrModifyAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipExAttrModifyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    bagcontainertype_ = -1;
    templateid_ = -1;
    pos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipExAttrModifyAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipExAttrModifyAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 TemplateId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_bagcontainertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipExAttrModifyAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipExAttrModifyAsk)
  return false;
#undef DO_
}

void BagRpcEquipExAttrModifyAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipExAttrModifyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->templateid(), output);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->pos(), output);
  }

  // optional sint32 BagContainerType = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->bagcontainertype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipExAttrModifyAsk)
}

::google::protobuf::uint8* BagRpcEquipExAttrModifyAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipExAttrModifyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->templateid(), target);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->pos(), target);
  }

  // optional sint32 BagContainerType = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->bagcontainertype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipExAttrModifyAsk)
  return target;
}

size_t BagRpcEquipExAttrModifyAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipExAttrModifyAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 BagContainerType = 3 [default = -1];
    if (has_bagcontainertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype());
    }

    // optional sint32 TemplateId = 1 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 Pos = 2 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipExAttrModifyAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipExAttrModifyAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipExAttrModifyAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipExAttrModifyAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipExAttrModifyAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipExAttrModifyAsk)
    MergeFrom(*source);
  }
}

void BagRpcEquipExAttrModifyAsk::MergeFrom(const BagRpcEquipExAttrModifyAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipExAttrModifyAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      bagcontainertype_ = from.bagcontainertype_;
    }
    if (cached_has_bits & 0x00000002u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipExAttrModifyAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipExAttrModifyAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipExAttrModifyAsk::CopyFrom(const BagRpcEquipExAttrModifyAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipExAttrModifyAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipExAttrModifyAsk::IsInitialized() const {
  return true;
}

void BagRpcEquipExAttrModifyAsk::Swap(BagRpcEquipExAttrModifyAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipExAttrModifyAsk::InternalSwap(BagRpcEquipExAttrModifyAsk* other) {
  using std::swap;
  swap(bagcontainertype_, other->bagcontainertype_);
  swap(templateid_, other->templateid_);
  swap(pos_, other->pos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipExAttrModifyAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipExAttrModifyAsk

// optional sint32 TemplateId = 1 [default = -1];
bool BagRpcEquipExAttrModifyAsk::has_templateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipExAttrModifyAsk::set_has_templateid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipExAttrModifyAsk::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipExAttrModifyAsk::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagRpcEquipExAttrModifyAsk::templateid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipExAttrModifyAsk.TemplateId)
  return templateid_;
}
void BagRpcEquipExAttrModifyAsk::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipExAttrModifyAsk.TemplateId)
}

// optional sint32 Pos = 2 [default = -1];
bool BagRpcEquipExAttrModifyAsk::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipExAttrModifyAsk::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipExAttrModifyAsk::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipExAttrModifyAsk::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcEquipExAttrModifyAsk::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipExAttrModifyAsk.Pos)
  return pos_;
}
void BagRpcEquipExAttrModifyAsk::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipExAttrModifyAsk.Pos)
}

// optional sint32 BagContainerType = 3 [default = -1];
bool BagRpcEquipExAttrModifyAsk::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipExAttrModifyAsk::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipExAttrModifyAsk::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipExAttrModifyAsk::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
::google::protobuf::int32 BagRpcEquipExAttrModifyAsk::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipExAttrModifyAsk.BagContainerType)
  return bagcontainertype_;
}
void BagRpcEquipExAttrModifyAsk::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipExAttrModifyAsk.BagContainerType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipExAttrModifyReply::kResultFieldNumber;
const int BagRpcEquipExAttrModifyReply::kTemplateIdFieldNumber;
const int BagRpcEquipExAttrModifyReply::kPosFieldNumber;
const int BagRpcEquipExAttrModifyReply::kBagContainerTypeFieldNumber;
const int BagRpcEquipExAttrModifyReply::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipExAttrModifyReply::BagRpcEquipExAttrModifyReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipExAttrModifyReply)
}
BagRpcEquipExAttrModifyReply::BagRpcEquipExAttrModifyReply(const BagRpcEquipExAttrModifyReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&bagcontainertype_) -
    reinterpret_cast<char*>(&index_)) + sizeof(bagcontainertype_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipExAttrModifyReply)
}

void BagRpcEquipExAttrModifyReply::SharedCtor() {
  _cached_size_ = 0;
  index_ = -1;
  result_ = -9999;
  templateid_ = -1;
  pos_ = -1;
  bagcontainertype_ = -1;
}

BagRpcEquipExAttrModifyReply::~BagRpcEquipExAttrModifyReply() {
  // @@protoc_insertion_point(destructor:BagRpcEquipExAttrModifyReply)
  SharedDtor();
}

void BagRpcEquipExAttrModifyReply::SharedDtor() {
}

void BagRpcEquipExAttrModifyReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipExAttrModifyReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipExAttrModifyReply& BagRpcEquipExAttrModifyReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipExAttrModifyReply* BagRpcEquipExAttrModifyReply::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipExAttrModifyReply* n = new BagRpcEquipExAttrModifyReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipExAttrModifyReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipExAttrModifyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    index_ = -1;
    result_ = -9999;
    templateid_ = -1;
    pos_ = -1;
    bagcontainertype_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipExAttrModifyReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipExAttrModifyReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TemplateId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bagcontainertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Index = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipExAttrModifyReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipExAttrModifyReply)
  return false;
#undef DO_
}

void BagRpcEquipExAttrModifyReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipExAttrModifyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->templateid(), output);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->pos(), output);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->bagcontainertype(), output);
  }

  // optional sint32 Index = 6 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipExAttrModifyReply)
}

::google::protobuf::uint8* BagRpcEquipExAttrModifyReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipExAttrModifyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->templateid(), target);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->pos(), target);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->bagcontainertype(), target);
  }

  // optional sint32 Index = 6 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipExAttrModifyReply)
  return target;
}

size_t BagRpcEquipExAttrModifyReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipExAttrModifyReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional sint32 Index = 6 [default = -1];
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->index());
    }

    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 TemplateId = 2 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 Pos = 3 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 BagContainerType = 4 [default = -1];
    if (has_bagcontainertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipExAttrModifyReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipExAttrModifyReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipExAttrModifyReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipExAttrModifyReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipExAttrModifyReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipExAttrModifyReply)
    MergeFrom(*source);
  }
}

void BagRpcEquipExAttrModifyReply::MergeFrom(const BagRpcEquipExAttrModifyReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipExAttrModifyReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      index_ = from.index_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000008u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000010u) {
      bagcontainertype_ = from.bagcontainertype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipExAttrModifyReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipExAttrModifyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipExAttrModifyReply::CopyFrom(const BagRpcEquipExAttrModifyReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipExAttrModifyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipExAttrModifyReply::IsInitialized() const {
  return true;
}

void BagRpcEquipExAttrModifyReply::Swap(BagRpcEquipExAttrModifyReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipExAttrModifyReply::InternalSwap(BagRpcEquipExAttrModifyReply* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(result_, other->result_);
  swap(templateid_, other->templateid_);
  swap(pos_, other->pos_);
  swap(bagcontainertype_, other->bagcontainertype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipExAttrModifyReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipExAttrModifyReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcEquipExAttrModifyReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipExAttrModifyReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipExAttrModifyReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipExAttrModifyReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcEquipExAttrModifyReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipExAttrModifyReply.Result)
  return result_;
}
void BagRpcEquipExAttrModifyReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipExAttrModifyReply.Result)
}

// optional sint32 TemplateId = 2 [default = -1];
bool BagRpcEquipExAttrModifyReply::has_templateid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipExAttrModifyReply::set_has_templateid() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipExAttrModifyReply::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipExAttrModifyReply::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagRpcEquipExAttrModifyReply::templateid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipExAttrModifyReply.TemplateId)
  return templateid_;
}
void BagRpcEquipExAttrModifyReply::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipExAttrModifyReply.TemplateId)
}

// optional sint32 Pos = 3 [default = -1];
bool BagRpcEquipExAttrModifyReply::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRpcEquipExAttrModifyReply::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRpcEquipExAttrModifyReply::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRpcEquipExAttrModifyReply::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcEquipExAttrModifyReply::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipExAttrModifyReply.Pos)
  return pos_;
}
void BagRpcEquipExAttrModifyReply::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipExAttrModifyReply.Pos)
}

// optional sint32 BagContainerType = 4 [default = -1];
bool BagRpcEquipExAttrModifyReply::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BagRpcEquipExAttrModifyReply::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000010u;
}
void BagRpcEquipExAttrModifyReply::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000010u;
}
void BagRpcEquipExAttrModifyReply::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
::google::protobuf::int32 BagRpcEquipExAttrModifyReply::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipExAttrModifyReply.BagContainerType)
  return bagcontainertype_;
}
void BagRpcEquipExAttrModifyReply::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipExAttrModifyReply.BagContainerType)
}

// optional sint32 Index = 6 [default = -1];
bool BagRpcEquipExAttrModifyReply::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipExAttrModifyReply::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipExAttrModifyReply::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipExAttrModifyReply::clear_index() {
  index_ = -1;
  clear_has_index();
}
::google::protobuf::int32 BagRpcEquipExAttrModifyReply::index() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipExAttrModifyReply.Index)
  return index_;
}
void BagRpcEquipExAttrModifyReply::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipExAttrModifyReply.Index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipInlayGemAsk::kTemplateIdFieldNumber;
const int BagRpcEquipInlayGemAsk::kPosFieldNumber;
const int BagRpcEquipInlayGemAsk::kBagContainerTypeFieldNumber;
const int BagRpcEquipInlayGemAsk::kSlotPosFieldNumber;
const int BagRpcEquipInlayGemAsk::kGemIdFieldNumber;
const int BagRpcEquipInlayGemAsk::kGemPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipInlayGemAsk::BagRpcEquipInlayGemAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipInlayGemAsk)
}
BagRpcEquipInlayGemAsk::BagRpcEquipInlayGemAsk(const BagRpcEquipInlayGemAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&templateid_, &from.templateid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gempos_) -
    reinterpret_cast<char*>(&templateid_)) + sizeof(gempos_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipInlayGemAsk)
}

void BagRpcEquipInlayGemAsk::SharedCtor() {
  _cached_size_ = 0;
  templateid_ = -1;
  pos_ = -1;
  bagcontainertype_ = -1;
  slotpos_ = -1;
  gemid_ = -1;
  gempos_ = -1;
}

BagRpcEquipInlayGemAsk::~BagRpcEquipInlayGemAsk() {
  // @@protoc_insertion_point(destructor:BagRpcEquipInlayGemAsk)
  SharedDtor();
}

void BagRpcEquipInlayGemAsk::SharedDtor() {
}

void BagRpcEquipInlayGemAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipInlayGemAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipInlayGemAsk& BagRpcEquipInlayGemAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipInlayGemAsk* BagRpcEquipInlayGemAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipInlayGemAsk* n = new BagRpcEquipInlayGemAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipInlayGemAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipInlayGemAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    templateid_ = -1;
    pos_ = -1;
    bagcontainertype_ = -1;
    slotpos_ = -1;
    gemid_ = -1;
    gempos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipInlayGemAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipInlayGemAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 TemplateId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_bagcontainertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 SlotPos = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_slotpos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &slotpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 GemId = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_gemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &gemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 GemPos = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_gempos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &gempos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipInlayGemAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipInlayGemAsk)
  return false;
#undef DO_
}

void BagRpcEquipInlayGemAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipInlayGemAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->templateid(), output);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->pos(), output);
  }

  // optional sint32 BagContainerType = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->bagcontainertype(), output);
  }

  // optional sint32 SlotPos = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->slotpos(), output);
  }

  // optional sint32 GemId = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->gemid(), output);
  }

  // optional sint32 GemPos = 6 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->gempos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipInlayGemAsk)
}

::google::protobuf::uint8* BagRpcEquipInlayGemAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipInlayGemAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->templateid(), target);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->pos(), target);
  }

  // optional sint32 BagContainerType = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->bagcontainertype(), target);
  }

  // optional sint32 SlotPos = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->slotpos(), target);
  }

  // optional sint32 GemId = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->gemid(), target);
  }

  // optional sint32 GemPos = 6 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->gempos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipInlayGemAsk)
  return target;
}

size_t BagRpcEquipInlayGemAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipInlayGemAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional sint32 TemplateId = 1 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 Pos = 2 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 BagContainerType = 3 [default = -1];
    if (has_bagcontainertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype());
    }

    // optional sint32 SlotPos = 4 [default = -1];
    if (has_slotpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->slotpos());
    }

    // optional sint32 GemId = 5 [default = -1];
    if (has_gemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->gemid());
    }

    // optional sint32 GemPos = 6 [default = -1];
    if (has_gempos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->gempos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipInlayGemAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipInlayGemAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipInlayGemAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipInlayGemAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipInlayGemAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipInlayGemAsk)
    MergeFrom(*source);
  }
}

void BagRpcEquipInlayGemAsk::MergeFrom(const BagRpcEquipInlayGemAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipInlayGemAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000004u) {
      bagcontainertype_ = from.bagcontainertype_;
    }
    if (cached_has_bits & 0x00000008u) {
      slotpos_ = from.slotpos_;
    }
    if (cached_has_bits & 0x00000010u) {
      gemid_ = from.gemid_;
    }
    if (cached_has_bits & 0x00000020u) {
      gempos_ = from.gempos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipInlayGemAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipInlayGemAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipInlayGemAsk::CopyFrom(const BagRpcEquipInlayGemAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipInlayGemAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipInlayGemAsk::IsInitialized() const {
  return true;
}

void BagRpcEquipInlayGemAsk::Swap(BagRpcEquipInlayGemAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipInlayGemAsk::InternalSwap(BagRpcEquipInlayGemAsk* other) {
  using std::swap;
  swap(templateid_, other->templateid_);
  swap(pos_, other->pos_);
  swap(bagcontainertype_, other->bagcontainertype_);
  swap(slotpos_, other->slotpos_);
  swap(gemid_, other->gemid_);
  swap(gempos_, other->gempos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipInlayGemAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipInlayGemAsk

// optional sint32 TemplateId = 1 [default = -1];
bool BagRpcEquipInlayGemAsk::has_templateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipInlayGemAsk::set_has_templateid() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipInlayGemAsk::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipInlayGemAsk::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagRpcEquipInlayGemAsk::templateid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipInlayGemAsk.TemplateId)
  return templateid_;
}
void BagRpcEquipInlayGemAsk::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipInlayGemAsk.TemplateId)
}

// optional sint32 Pos = 2 [default = -1];
bool BagRpcEquipInlayGemAsk::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipInlayGemAsk::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipInlayGemAsk::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipInlayGemAsk::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcEquipInlayGemAsk::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipInlayGemAsk.Pos)
  return pos_;
}
void BagRpcEquipInlayGemAsk::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipInlayGemAsk.Pos)
}

// optional sint32 BagContainerType = 3 [default = -1];
bool BagRpcEquipInlayGemAsk::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipInlayGemAsk::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipInlayGemAsk::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipInlayGemAsk::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
::google::protobuf::int32 BagRpcEquipInlayGemAsk::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipInlayGemAsk.BagContainerType)
  return bagcontainertype_;
}
void BagRpcEquipInlayGemAsk::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipInlayGemAsk.BagContainerType)
}

// optional sint32 SlotPos = 4 [default = -1];
bool BagRpcEquipInlayGemAsk::has_slotpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRpcEquipInlayGemAsk::set_has_slotpos() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRpcEquipInlayGemAsk::clear_has_slotpos() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRpcEquipInlayGemAsk::clear_slotpos() {
  slotpos_ = -1;
  clear_has_slotpos();
}
::google::protobuf::int32 BagRpcEquipInlayGemAsk::slotpos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipInlayGemAsk.SlotPos)
  return slotpos_;
}
void BagRpcEquipInlayGemAsk::set_slotpos(::google::protobuf::int32 value) {
  set_has_slotpos();
  slotpos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipInlayGemAsk.SlotPos)
}

// optional sint32 GemId = 5 [default = -1];
bool BagRpcEquipInlayGemAsk::has_gemid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BagRpcEquipInlayGemAsk::set_has_gemid() {
  _has_bits_[0] |= 0x00000010u;
}
void BagRpcEquipInlayGemAsk::clear_has_gemid() {
  _has_bits_[0] &= ~0x00000010u;
}
void BagRpcEquipInlayGemAsk::clear_gemid() {
  gemid_ = -1;
  clear_has_gemid();
}
::google::protobuf::int32 BagRpcEquipInlayGemAsk::gemid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipInlayGemAsk.GemId)
  return gemid_;
}
void BagRpcEquipInlayGemAsk::set_gemid(::google::protobuf::int32 value) {
  set_has_gemid();
  gemid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipInlayGemAsk.GemId)
}

// optional sint32 GemPos = 6 [default = -1];
bool BagRpcEquipInlayGemAsk::has_gempos() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BagRpcEquipInlayGemAsk::set_has_gempos() {
  _has_bits_[0] |= 0x00000020u;
}
void BagRpcEquipInlayGemAsk::clear_has_gempos() {
  _has_bits_[0] &= ~0x00000020u;
}
void BagRpcEquipInlayGemAsk::clear_gempos() {
  gempos_ = -1;
  clear_has_gempos();
}
::google::protobuf::int32 BagRpcEquipInlayGemAsk::gempos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipInlayGemAsk.GemPos)
  return gempos_;
}
void BagRpcEquipInlayGemAsk::set_gempos(::google::protobuf::int32 value) {
  set_has_gempos();
  gempos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipInlayGemAsk.GemPos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipInlayGemReply::kResultFieldNumber;
const int BagRpcEquipInlayGemReply::kTemplateIdFieldNumber;
const int BagRpcEquipInlayGemReply::kPosFieldNumber;
const int BagRpcEquipInlayGemReply::kBagContainerTypeFieldNumber;
const int BagRpcEquipInlayGemReply::kSlotPosFieldNumber;
const int BagRpcEquipInlayGemReply::kGemIdFieldNumber;
const int BagRpcEquipInlayGemReply::kGemPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipInlayGemReply::BagRpcEquipInlayGemReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipInlayGemReply)
}
BagRpcEquipInlayGemReply::BagRpcEquipInlayGemReply(const BagRpcEquipInlayGemReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gempos_, &from.gempos_,
    static_cast<size_t>(reinterpret_cast<char*>(&gemid_) -
    reinterpret_cast<char*>(&gempos_)) + sizeof(gemid_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipInlayGemReply)
}

void BagRpcEquipInlayGemReply::SharedCtor() {
  _cached_size_ = 0;
  gempos_ = -1;
  result_ = -9999;
  templateid_ = -1;
  pos_ = -1;
  bagcontainertype_ = -1;
  slotpos_ = -1;
  gemid_ = -1;
}

BagRpcEquipInlayGemReply::~BagRpcEquipInlayGemReply() {
  // @@protoc_insertion_point(destructor:BagRpcEquipInlayGemReply)
  SharedDtor();
}

void BagRpcEquipInlayGemReply::SharedDtor() {
}

void BagRpcEquipInlayGemReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipInlayGemReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipInlayGemReply& BagRpcEquipInlayGemReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipInlayGemReply* BagRpcEquipInlayGemReply::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipInlayGemReply* n = new BagRpcEquipInlayGemReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipInlayGemReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipInlayGemReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    gempos_ = -1;
    result_ = -9999;
    templateid_ = -1;
    pos_ = -1;
    bagcontainertype_ = -1;
    slotpos_ = -1;
    gemid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipInlayGemReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipInlayGemReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TemplateId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bagcontainertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 SlotPos = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_slotpos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &slotpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 GemId = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_gemid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &gemid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 GemPos = 7 [default = -1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_gempos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &gempos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipInlayGemReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipInlayGemReply)
  return false;
#undef DO_
}

void BagRpcEquipInlayGemReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipInlayGemReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->templateid(), output);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->pos(), output);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->bagcontainertype(), output);
  }

  // optional sint32 SlotPos = 5 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->slotpos(), output);
  }

  // optional sint32 GemId = 6 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->gemid(), output);
  }

  // optional sint32 GemPos = 7 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->gempos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipInlayGemReply)
}

::google::protobuf::uint8* BagRpcEquipInlayGemReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipInlayGemReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->templateid(), target);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->pos(), target);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->bagcontainertype(), target);
  }

  // optional sint32 SlotPos = 5 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->slotpos(), target);
  }

  // optional sint32 GemId = 6 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->gemid(), target);
  }

  // optional sint32 GemPos = 7 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->gempos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipInlayGemReply)
  return target;
}

size_t BagRpcEquipInlayGemReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipInlayGemReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional sint32 GemPos = 7 [default = -1];
    if (has_gempos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->gempos());
    }

    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 TemplateId = 2 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 Pos = 3 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 BagContainerType = 4 [default = -1];
    if (has_bagcontainertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype());
    }

    // optional sint32 SlotPos = 5 [default = -1];
    if (has_slotpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->slotpos());
    }

    // optional sint32 GemId = 6 [default = -1];
    if (has_gemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->gemid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipInlayGemReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipInlayGemReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipInlayGemReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipInlayGemReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipInlayGemReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipInlayGemReply)
    MergeFrom(*source);
  }
}

void BagRpcEquipInlayGemReply::MergeFrom(const BagRpcEquipInlayGemReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipInlayGemReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      gempos_ = from.gempos_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000008u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000010u) {
      bagcontainertype_ = from.bagcontainertype_;
    }
    if (cached_has_bits & 0x00000020u) {
      slotpos_ = from.slotpos_;
    }
    if (cached_has_bits & 0x00000040u) {
      gemid_ = from.gemid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipInlayGemReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipInlayGemReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipInlayGemReply::CopyFrom(const BagRpcEquipInlayGemReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipInlayGemReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipInlayGemReply::IsInitialized() const {
  return true;
}

void BagRpcEquipInlayGemReply::Swap(BagRpcEquipInlayGemReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipInlayGemReply::InternalSwap(BagRpcEquipInlayGemReply* other) {
  using std::swap;
  swap(gempos_, other->gempos_);
  swap(result_, other->result_);
  swap(templateid_, other->templateid_);
  swap(pos_, other->pos_);
  swap(bagcontainertype_, other->bagcontainertype_);
  swap(slotpos_, other->slotpos_);
  swap(gemid_, other->gemid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipInlayGemReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipInlayGemReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcEquipInlayGemReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipInlayGemReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipInlayGemReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipInlayGemReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcEquipInlayGemReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipInlayGemReply.Result)
  return result_;
}
void BagRpcEquipInlayGemReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipInlayGemReply.Result)
}

// optional sint32 TemplateId = 2 [default = -1];
bool BagRpcEquipInlayGemReply::has_templateid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipInlayGemReply::set_has_templateid() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipInlayGemReply::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipInlayGemReply::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagRpcEquipInlayGemReply::templateid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipInlayGemReply.TemplateId)
  return templateid_;
}
void BagRpcEquipInlayGemReply::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipInlayGemReply.TemplateId)
}

// optional sint32 Pos = 3 [default = -1];
bool BagRpcEquipInlayGemReply::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRpcEquipInlayGemReply::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRpcEquipInlayGemReply::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRpcEquipInlayGemReply::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcEquipInlayGemReply::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipInlayGemReply.Pos)
  return pos_;
}
void BagRpcEquipInlayGemReply::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipInlayGemReply.Pos)
}

// optional sint32 BagContainerType = 4 [default = -1];
bool BagRpcEquipInlayGemReply::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BagRpcEquipInlayGemReply::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000010u;
}
void BagRpcEquipInlayGemReply::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000010u;
}
void BagRpcEquipInlayGemReply::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
::google::protobuf::int32 BagRpcEquipInlayGemReply::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipInlayGemReply.BagContainerType)
  return bagcontainertype_;
}
void BagRpcEquipInlayGemReply::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipInlayGemReply.BagContainerType)
}

// optional sint32 SlotPos = 5 [default = -1];
bool BagRpcEquipInlayGemReply::has_slotpos() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BagRpcEquipInlayGemReply::set_has_slotpos() {
  _has_bits_[0] |= 0x00000020u;
}
void BagRpcEquipInlayGemReply::clear_has_slotpos() {
  _has_bits_[0] &= ~0x00000020u;
}
void BagRpcEquipInlayGemReply::clear_slotpos() {
  slotpos_ = -1;
  clear_has_slotpos();
}
::google::protobuf::int32 BagRpcEquipInlayGemReply::slotpos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipInlayGemReply.SlotPos)
  return slotpos_;
}
void BagRpcEquipInlayGemReply::set_slotpos(::google::protobuf::int32 value) {
  set_has_slotpos();
  slotpos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipInlayGemReply.SlotPos)
}

// optional sint32 GemId = 6 [default = -1];
bool BagRpcEquipInlayGemReply::has_gemid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BagRpcEquipInlayGemReply::set_has_gemid() {
  _has_bits_[0] |= 0x00000040u;
}
void BagRpcEquipInlayGemReply::clear_has_gemid() {
  _has_bits_[0] &= ~0x00000040u;
}
void BagRpcEquipInlayGemReply::clear_gemid() {
  gemid_ = -1;
  clear_has_gemid();
}
::google::protobuf::int32 BagRpcEquipInlayGemReply::gemid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipInlayGemReply.GemId)
  return gemid_;
}
void BagRpcEquipInlayGemReply::set_gemid(::google::protobuf::int32 value) {
  set_has_gemid();
  gemid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipInlayGemReply.GemId)
}

// optional sint32 GemPos = 7 [default = -1];
bool BagRpcEquipInlayGemReply::has_gempos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipInlayGemReply::set_has_gempos() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipInlayGemReply::clear_has_gempos() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipInlayGemReply::clear_gempos() {
  gempos_ = -1;
  clear_has_gempos();
}
::google::protobuf::int32 BagRpcEquipInlayGemReply::gempos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipInlayGemReply.GemPos)
  return gempos_;
}
void BagRpcEquipInlayGemReply::set_gempos(::google::protobuf::int32 value) {
  set_has_gempos();
  gempos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipInlayGemReply.GemPos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipGemSlotUnlockAsk::kTemplateIdFieldNumber;
const int BagRpcEquipGemSlotUnlockAsk::kPosFieldNumber;
const int BagRpcEquipGemSlotUnlockAsk::kBagContainerTypeFieldNumber;
const int BagRpcEquipGemSlotUnlockAsk::kSlotPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipGemSlotUnlockAsk::BagRpcEquipGemSlotUnlockAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipGemSlotUnlockAsk)
}
BagRpcEquipGemSlotUnlockAsk::BagRpcEquipGemSlotUnlockAsk(const BagRpcEquipGemSlotUnlockAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&templateid_, &from.templateid_,
    static_cast<size_t>(reinterpret_cast<char*>(&slotpos_) -
    reinterpret_cast<char*>(&templateid_)) + sizeof(slotpos_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipGemSlotUnlockAsk)
}

void BagRpcEquipGemSlotUnlockAsk::SharedCtor() {
  _cached_size_ = 0;
  templateid_ = -1;
  pos_ = -1;
  bagcontainertype_ = -1;
  slotpos_ = -1;
}

BagRpcEquipGemSlotUnlockAsk::~BagRpcEquipGemSlotUnlockAsk() {
  // @@protoc_insertion_point(destructor:BagRpcEquipGemSlotUnlockAsk)
  SharedDtor();
}

void BagRpcEquipGemSlotUnlockAsk::SharedDtor() {
}

void BagRpcEquipGemSlotUnlockAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipGemSlotUnlockAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipGemSlotUnlockAsk& BagRpcEquipGemSlotUnlockAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipGemSlotUnlockAsk* BagRpcEquipGemSlotUnlockAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipGemSlotUnlockAsk* n = new BagRpcEquipGemSlotUnlockAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipGemSlotUnlockAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipGemSlotUnlockAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    templateid_ = -1;
    pos_ = -1;
    bagcontainertype_ = -1;
    slotpos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipGemSlotUnlockAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipGemSlotUnlockAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 TemplateId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_bagcontainertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 SlotPos = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_slotpos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &slotpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipGemSlotUnlockAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipGemSlotUnlockAsk)
  return false;
#undef DO_
}

void BagRpcEquipGemSlotUnlockAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipGemSlotUnlockAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->templateid(), output);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->pos(), output);
  }

  // optional sint32 BagContainerType = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->bagcontainertype(), output);
  }

  // optional sint32 SlotPos = 5 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->slotpos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipGemSlotUnlockAsk)
}

::google::protobuf::uint8* BagRpcEquipGemSlotUnlockAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipGemSlotUnlockAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->templateid(), target);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->pos(), target);
  }

  // optional sint32 BagContainerType = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->bagcontainertype(), target);
  }

  // optional sint32 SlotPos = 5 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->slotpos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipGemSlotUnlockAsk)
  return target;
}

size_t BagRpcEquipGemSlotUnlockAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipGemSlotUnlockAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional sint32 TemplateId = 1 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 Pos = 2 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 BagContainerType = 3 [default = -1];
    if (has_bagcontainertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype());
    }

    // optional sint32 SlotPos = 5 [default = -1];
    if (has_slotpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->slotpos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipGemSlotUnlockAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipGemSlotUnlockAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipGemSlotUnlockAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipGemSlotUnlockAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipGemSlotUnlockAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipGemSlotUnlockAsk)
    MergeFrom(*source);
  }
}

void BagRpcEquipGemSlotUnlockAsk::MergeFrom(const BagRpcEquipGemSlotUnlockAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipGemSlotUnlockAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000004u) {
      bagcontainertype_ = from.bagcontainertype_;
    }
    if (cached_has_bits & 0x00000008u) {
      slotpos_ = from.slotpos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipGemSlotUnlockAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipGemSlotUnlockAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipGemSlotUnlockAsk::CopyFrom(const BagRpcEquipGemSlotUnlockAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipGemSlotUnlockAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipGemSlotUnlockAsk::IsInitialized() const {
  return true;
}

void BagRpcEquipGemSlotUnlockAsk::Swap(BagRpcEquipGemSlotUnlockAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipGemSlotUnlockAsk::InternalSwap(BagRpcEquipGemSlotUnlockAsk* other) {
  using std::swap;
  swap(templateid_, other->templateid_);
  swap(pos_, other->pos_);
  swap(bagcontainertype_, other->bagcontainertype_);
  swap(slotpos_, other->slotpos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipGemSlotUnlockAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipGemSlotUnlockAsk

// optional sint32 TemplateId = 1 [default = -1];
bool BagRpcEquipGemSlotUnlockAsk::has_templateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipGemSlotUnlockAsk::set_has_templateid() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipGemSlotUnlockAsk::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipGemSlotUnlockAsk::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagRpcEquipGemSlotUnlockAsk::templateid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipGemSlotUnlockAsk.TemplateId)
  return templateid_;
}
void BagRpcEquipGemSlotUnlockAsk::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipGemSlotUnlockAsk.TemplateId)
}

// optional sint32 Pos = 2 [default = -1];
bool BagRpcEquipGemSlotUnlockAsk::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipGemSlotUnlockAsk::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipGemSlotUnlockAsk::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipGemSlotUnlockAsk::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcEquipGemSlotUnlockAsk::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipGemSlotUnlockAsk.Pos)
  return pos_;
}
void BagRpcEquipGemSlotUnlockAsk::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipGemSlotUnlockAsk.Pos)
}

// optional sint32 BagContainerType = 3 [default = -1];
bool BagRpcEquipGemSlotUnlockAsk::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipGemSlotUnlockAsk::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipGemSlotUnlockAsk::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipGemSlotUnlockAsk::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
::google::protobuf::int32 BagRpcEquipGemSlotUnlockAsk::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipGemSlotUnlockAsk.BagContainerType)
  return bagcontainertype_;
}
void BagRpcEquipGemSlotUnlockAsk::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipGemSlotUnlockAsk.BagContainerType)
}

// optional sint32 SlotPos = 5 [default = -1];
bool BagRpcEquipGemSlotUnlockAsk::has_slotpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRpcEquipGemSlotUnlockAsk::set_has_slotpos() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRpcEquipGemSlotUnlockAsk::clear_has_slotpos() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRpcEquipGemSlotUnlockAsk::clear_slotpos() {
  slotpos_ = -1;
  clear_has_slotpos();
}
::google::protobuf::int32 BagRpcEquipGemSlotUnlockAsk::slotpos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipGemSlotUnlockAsk.SlotPos)
  return slotpos_;
}
void BagRpcEquipGemSlotUnlockAsk::set_slotpos(::google::protobuf::int32 value) {
  set_has_slotpos();
  slotpos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipGemSlotUnlockAsk.SlotPos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipGemSlotUnlockReply::kResultFieldNumber;
const int BagRpcEquipGemSlotUnlockReply::kTemplateIdFieldNumber;
const int BagRpcEquipGemSlotUnlockReply::kPosFieldNumber;
const int BagRpcEquipGemSlotUnlockReply::kBagContainerTypeFieldNumber;
const int BagRpcEquipGemSlotUnlockReply::kSlotPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipGemSlotUnlockReply::BagRpcEquipGemSlotUnlockReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipGemSlotUnlockReply)
}
BagRpcEquipGemSlotUnlockReply::BagRpcEquipGemSlotUnlockReply(const BagRpcEquipGemSlotUnlockReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&slotpos_, &from.slotpos_,
    static_cast<size_t>(reinterpret_cast<char*>(&bagcontainertype_) -
    reinterpret_cast<char*>(&slotpos_)) + sizeof(bagcontainertype_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipGemSlotUnlockReply)
}

void BagRpcEquipGemSlotUnlockReply::SharedCtor() {
  _cached_size_ = 0;
  slotpos_ = -1;
  result_ = -9999;
  templateid_ = -1;
  pos_ = -1;
  bagcontainertype_ = -1;
}

BagRpcEquipGemSlotUnlockReply::~BagRpcEquipGemSlotUnlockReply() {
  // @@protoc_insertion_point(destructor:BagRpcEquipGemSlotUnlockReply)
  SharedDtor();
}

void BagRpcEquipGemSlotUnlockReply::SharedDtor() {
}

void BagRpcEquipGemSlotUnlockReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipGemSlotUnlockReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipGemSlotUnlockReply& BagRpcEquipGemSlotUnlockReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipGemSlotUnlockReply* BagRpcEquipGemSlotUnlockReply::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipGemSlotUnlockReply* n = new BagRpcEquipGemSlotUnlockReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipGemSlotUnlockReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipGemSlotUnlockReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    slotpos_ = -1;
    result_ = -9999;
    templateid_ = -1;
    pos_ = -1;
    bagcontainertype_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipGemSlotUnlockReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipGemSlotUnlockReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TemplateId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bagcontainertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 SlotPos = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_slotpos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &slotpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipGemSlotUnlockReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipGemSlotUnlockReply)
  return false;
#undef DO_
}

void BagRpcEquipGemSlotUnlockReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipGemSlotUnlockReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->templateid(), output);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->pos(), output);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->bagcontainertype(), output);
  }

  // optional sint32 SlotPos = 6 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->slotpos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipGemSlotUnlockReply)
}

::google::protobuf::uint8* BagRpcEquipGemSlotUnlockReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipGemSlotUnlockReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->templateid(), target);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->pos(), target);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->bagcontainertype(), target);
  }

  // optional sint32 SlotPos = 6 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->slotpos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipGemSlotUnlockReply)
  return target;
}

size_t BagRpcEquipGemSlotUnlockReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipGemSlotUnlockReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional sint32 SlotPos = 6 [default = -1];
    if (has_slotpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->slotpos());
    }

    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 TemplateId = 2 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 Pos = 3 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 BagContainerType = 4 [default = -1];
    if (has_bagcontainertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipGemSlotUnlockReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipGemSlotUnlockReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipGemSlotUnlockReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipGemSlotUnlockReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipGemSlotUnlockReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipGemSlotUnlockReply)
    MergeFrom(*source);
  }
}

void BagRpcEquipGemSlotUnlockReply::MergeFrom(const BagRpcEquipGemSlotUnlockReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipGemSlotUnlockReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      slotpos_ = from.slotpos_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000008u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000010u) {
      bagcontainertype_ = from.bagcontainertype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipGemSlotUnlockReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipGemSlotUnlockReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipGemSlotUnlockReply::CopyFrom(const BagRpcEquipGemSlotUnlockReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipGemSlotUnlockReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipGemSlotUnlockReply::IsInitialized() const {
  return true;
}

void BagRpcEquipGemSlotUnlockReply::Swap(BagRpcEquipGemSlotUnlockReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipGemSlotUnlockReply::InternalSwap(BagRpcEquipGemSlotUnlockReply* other) {
  using std::swap;
  swap(slotpos_, other->slotpos_);
  swap(result_, other->result_);
  swap(templateid_, other->templateid_);
  swap(pos_, other->pos_);
  swap(bagcontainertype_, other->bagcontainertype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipGemSlotUnlockReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipGemSlotUnlockReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcEquipGemSlotUnlockReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipGemSlotUnlockReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipGemSlotUnlockReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipGemSlotUnlockReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcEquipGemSlotUnlockReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipGemSlotUnlockReply.Result)
  return result_;
}
void BagRpcEquipGemSlotUnlockReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipGemSlotUnlockReply.Result)
}

// optional sint32 TemplateId = 2 [default = -1];
bool BagRpcEquipGemSlotUnlockReply::has_templateid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipGemSlotUnlockReply::set_has_templateid() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipGemSlotUnlockReply::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipGemSlotUnlockReply::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagRpcEquipGemSlotUnlockReply::templateid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipGemSlotUnlockReply.TemplateId)
  return templateid_;
}
void BagRpcEquipGemSlotUnlockReply::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipGemSlotUnlockReply.TemplateId)
}

// optional sint32 Pos = 3 [default = -1];
bool BagRpcEquipGemSlotUnlockReply::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRpcEquipGemSlotUnlockReply::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRpcEquipGemSlotUnlockReply::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRpcEquipGemSlotUnlockReply::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcEquipGemSlotUnlockReply::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipGemSlotUnlockReply.Pos)
  return pos_;
}
void BagRpcEquipGemSlotUnlockReply::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipGemSlotUnlockReply.Pos)
}

// optional sint32 BagContainerType = 4 [default = -1];
bool BagRpcEquipGemSlotUnlockReply::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BagRpcEquipGemSlotUnlockReply::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000010u;
}
void BagRpcEquipGemSlotUnlockReply::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000010u;
}
void BagRpcEquipGemSlotUnlockReply::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
::google::protobuf::int32 BagRpcEquipGemSlotUnlockReply::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipGemSlotUnlockReply.BagContainerType)
  return bagcontainertype_;
}
void BagRpcEquipGemSlotUnlockReply::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipGemSlotUnlockReply.BagContainerType)
}

// optional sint32 SlotPos = 6 [default = -1];
bool BagRpcEquipGemSlotUnlockReply::has_slotpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipGemSlotUnlockReply::set_has_slotpos() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipGemSlotUnlockReply::clear_has_slotpos() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipGemSlotUnlockReply::clear_slotpos() {
  slotpos_ = -1;
  clear_has_slotpos();
}
::google::protobuf::int32 BagRpcEquipGemSlotUnlockReply::slotpos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipGemSlotUnlockReply.SlotPos)
  return slotpos_;
}
void BagRpcEquipGemSlotUnlockReply::set_slotpos(::google::protobuf::int32 value) {
  set_has_slotpos();
  slotpos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipGemSlotUnlockReply.SlotPos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipEnhanceSwapAsk::kTemplateId1FieldNumber;
const int BagRpcEquipEnhanceSwapAsk::kPos1FieldNumber;
const int BagRpcEquipEnhanceSwapAsk::kTemplateId2FieldNumber;
const int BagRpcEquipEnhanceSwapAsk::kPos2FieldNumber;
const int BagRpcEquipEnhanceSwapAsk::kBagContainerType1FieldNumber;
const int BagRpcEquipEnhanceSwapAsk::kBagContainerType2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipEnhanceSwapAsk::BagRpcEquipEnhanceSwapAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipEnhanceSwapAsk)
}
BagRpcEquipEnhanceSwapAsk::BagRpcEquipEnhanceSwapAsk(const BagRpcEquipEnhanceSwapAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&templateid1_, &from.templateid1_,
    static_cast<size_t>(reinterpret_cast<char*>(&bagcontainertype2_) -
    reinterpret_cast<char*>(&templateid1_)) + sizeof(bagcontainertype2_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipEnhanceSwapAsk)
}

void BagRpcEquipEnhanceSwapAsk::SharedCtor() {
  _cached_size_ = 0;
  templateid1_ = -1;
  pos1_ = -1;
  templateid2_ = -1;
  pos2_ = -1;
  bagcontainertype1_ = -1;
  bagcontainertype2_ = -1;
}

BagRpcEquipEnhanceSwapAsk::~BagRpcEquipEnhanceSwapAsk() {
  // @@protoc_insertion_point(destructor:BagRpcEquipEnhanceSwapAsk)
  SharedDtor();
}

void BagRpcEquipEnhanceSwapAsk::SharedDtor() {
}

void BagRpcEquipEnhanceSwapAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipEnhanceSwapAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipEnhanceSwapAsk& BagRpcEquipEnhanceSwapAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipEnhanceSwapAsk* BagRpcEquipEnhanceSwapAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipEnhanceSwapAsk* n = new BagRpcEquipEnhanceSwapAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipEnhanceSwapAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipEnhanceSwapAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    templateid1_ = -1;
    pos1_ = -1;
    templateid2_ = -1;
    pos2_ = -1;
    bagcontainertype1_ = -1;
    bagcontainertype2_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipEnhanceSwapAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipEnhanceSwapAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 TemplateId1 = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_templateid1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos1 = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pos1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TemplateId2 = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_templateid2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos2 = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_pos2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType1 = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_bagcontainertype1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType2 = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_bagcontainertype2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipEnhanceSwapAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipEnhanceSwapAsk)
  return false;
#undef DO_
}

void BagRpcEquipEnhanceSwapAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipEnhanceSwapAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId1 = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->templateid1(), output);
  }

  // optional sint32 Pos1 = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->pos1(), output);
  }

  // optional sint32 TemplateId2 = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->templateid2(), output);
  }

  // optional sint32 Pos2 = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->pos2(), output);
  }

  // optional sint32 BagContainerType1 = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->bagcontainertype1(), output);
  }

  // optional sint32 BagContainerType2 = 6 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->bagcontainertype2(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipEnhanceSwapAsk)
}

::google::protobuf::uint8* BagRpcEquipEnhanceSwapAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipEnhanceSwapAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId1 = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->templateid1(), target);
  }

  // optional sint32 Pos1 = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->pos1(), target);
  }

  // optional sint32 TemplateId2 = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->templateid2(), target);
  }

  // optional sint32 Pos2 = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->pos2(), target);
  }

  // optional sint32 BagContainerType1 = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->bagcontainertype1(), target);
  }

  // optional sint32 BagContainerType2 = 6 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->bagcontainertype2(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipEnhanceSwapAsk)
  return target;
}

size_t BagRpcEquipEnhanceSwapAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipEnhanceSwapAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional sint32 TemplateId1 = 1 [default = -1];
    if (has_templateid1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid1());
    }

    // optional sint32 Pos1 = 2 [default = -1];
    if (has_pos1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos1());
    }

    // optional sint32 TemplateId2 = 3 [default = -1];
    if (has_templateid2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid2());
    }

    // optional sint32 Pos2 = 4 [default = -1];
    if (has_pos2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos2());
    }

    // optional sint32 BagContainerType1 = 5 [default = -1];
    if (has_bagcontainertype1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype1());
    }

    // optional sint32 BagContainerType2 = 6 [default = -1];
    if (has_bagcontainertype2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype2());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipEnhanceSwapAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipEnhanceSwapAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipEnhanceSwapAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipEnhanceSwapAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipEnhanceSwapAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipEnhanceSwapAsk)
    MergeFrom(*source);
  }
}

void BagRpcEquipEnhanceSwapAsk::MergeFrom(const BagRpcEquipEnhanceSwapAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipEnhanceSwapAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      templateid1_ = from.templateid1_;
    }
    if (cached_has_bits & 0x00000002u) {
      pos1_ = from.pos1_;
    }
    if (cached_has_bits & 0x00000004u) {
      templateid2_ = from.templateid2_;
    }
    if (cached_has_bits & 0x00000008u) {
      pos2_ = from.pos2_;
    }
    if (cached_has_bits & 0x00000010u) {
      bagcontainertype1_ = from.bagcontainertype1_;
    }
    if (cached_has_bits & 0x00000020u) {
      bagcontainertype2_ = from.bagcontainertype2_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipEnhanceSwapAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipEnhanceSwapAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipEnhanceSwapAsk::CopyFrom(const BagRpcEquipEnhanceSwapAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipEnhanceSwapAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipEnhanceSwapAsk::IsInitialized() const {
  return true;
}

void BagRpcEquipEnhanceSwapAsk::Swap(BagRpcEquipEnhanceSwapAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipEnhanceSwapAsk::InternalSwap(BagRpcEquipEnhanceSwapAsk* other) {
  using std::swap;
  swap(templateid1_, other->templateid1_);
  swap(pos1_, other->pos1_);
  swap(templateid2_, other->templateid2_);
  swap(pos2_, other->pos2_);
  swap(bagcontainertype1_, other->bagcontainertype1_);
  swap(bagcontainertype2_, other->bagcontainertype2_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipEnhanceSwapAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipEnhanceSwapAsk

// optional sint32 TemplateId1 = 1 [default = -1];
bool BagRpcEquipEnhanceSwapAsk::has_templateid1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipEnhanceSwapAsk::set_has_templateid1() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipEnhanceSwapAsk::clear_has_templateid1() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipEnhanceSwapAsk::clear_templateid1() {
  templateid1_ = -1;
  clear_has_templateid1();
}
::google::protobuf::int32 BagRpcEquipEnhanceSwapAsk::templateid1() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceSwapAsk.TemplateId1)
  return templateid1_;
}
void BagRpcEquipEnhanceSwapAsk::set_templateid1(::google::protobuf::int32 value) {
  set_has_templateid1();
  templateid1_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceSwapAsk.TemplateId1)
}

// optional sint32 Pos1 = 2 [default = -1];
bool BagRpcEquipEnhanceSwapAsk::has_pos1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipEnhanceSwapAsk::set_has_pos1() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipEnhanceSwapAsk::clear_has_pos1() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipEnhanceSwapAsk::clear_pos1() {
  pos1_ = -1;
  clear_has_pos1();
}
::google::protobuf::int32 BagRpcEquipEnhanceSwapAsk::pos1() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceSwapAsk.Pos1)
  return pos1_;
}
void BagRpcEquipEnhanceSwapAsk::set_pos1(::google::protobuf::int32 value) {
  set_has_pos1();
  pos1_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceSwapAsk.Pos1)
}

// optional sint32 TemplateId2 = 3 [default = -1];
bool BagRpcEquipEnhanceSwapAsk::has_templateid2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipEnhanceSwapAsk::set_has_templateid2() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipEnhanceSwapAsk::clear_has_templateid2() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipEnhanceSwapAsk::clear_templateid2() {
  templateid2_ = -1;
  clear_has_templateid2();
}
::google::protobuf::int32 BagRpcEquipEnhanceSwapAsk::templateid2() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceSwapAsk.TemplateId2)
  return templateid2_;
}
void BagRpcEquipEnhanceSwapAsk::set_templateid2(::google::protobuf::int32 value) {
  set_has_templateid2();
  templateid2_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceSwapAsk.TemplateId2)
}

// optional sint32 Pos2 = 4 [default = -1];
bool BagRpcEquipEnhanceSwapAsk::has_pos2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRpcEquipEnhanceSwapAsk::set_has_pos2() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRpcEquipEnhanceSwapAsk::clear_has_pos2() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRpcEquipEnhanceSwapAsk::clear_pos2() {
  pos2_ = -1;
  clear_has_pos2();
}
::google::protobuf::int32 BagRpcEquipEnhanceSwapAsk::pos2() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceSwapAsk.Pos2)
  return pos2_;
}
void BagRpcEquipEnhanceSwapAsk::set_pos2(::google::protobuf::int32 value) {
  set_has_pos2();
  pos2_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceSwapAsk.Pos2)
}

// optional sint32 BagContainerType1 = 5 [default = -1];
bool BagRpcEquipEnhanceSwapAsk::has_bagcontainertype1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BagRpcEquipEnhanceSwapAsk::set_has_bagcontainertype1() {
  _has_bits_[0] |= 0x00000010u;
}
void BagRpcEquipEnhanceSwapAsk::clear_has_bagcontainertype1() {
  _has_bits_[0] &= ~0x00000010u;
}
void BagRpcEquipEnhanceSwapAsk::clear_bagcontainertype1() {
  bagcontainertype1_ = -1;
  clear_has_bagcontainertype1();
}
::google::protobuf::int32 BagRpcEquipEnhanceSwapAsk::bagcontainertype1() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceSwapAsk.BagContainerType1)
  return bagcontainertype1_;
}
void BagRpcEquipEnhanceSwapAsk::set_bagcontainertype1(::google::protobuf::int32 value) {
  set_has_bagcontainertype1();
  bagcontainertype1_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceSwapAsk.BagContainerType1)
}

// optional sint32 BagContainerType2 = 6 [default = -1];
bool BagRpcEquipEnhanceSwapAsk::has_bagcontainertype2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BagRpcEquipEnhanceSwapAsk::set_has_bagcontainertype2() {
  _has_bits_[0] |= 0x00000020u;
}
void BagRpcEquipEnhanceSwapAsk::clear_has_bagcontainertype2() {
  _has_bits_[0] &= ~0x00000020u;
}
void BagRpcEquipEnhanceSwapAsk::clear_bagcontainertype2() {
  bagcontainertype2_ = -1;
  clear_has_bagcontainertype2();
}
::google::protobuf::int32 BagRpcEquipEnhanceSwapAsk::bagcontainertype2() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceSwapAsk.BagContainerType2)
  return bagcontainertype2_;
}
void BagRpcEquipEnhanceSwapAsk::set_bagcontainertype2(::google::protobuf::int32 value) {
  set_has_bagcontainertype2();
  bagcontainertype2_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceSwapAsk.BagContainerType2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipEnhanceSwapReply::kResultFieldNumber;
const int BagRpcEquipEnhanceSwapReply::kTemplateId1FieldNumber;
const int BagRpcEquipEnhanceSwapReply::kPos1FieldNumber;
const int BagRpcEquipEnhanceSwapReply::kTemplateId2FieldNumber;
const int BagRpcEquipEnhanceSwapReply::kPos2FieldNumber;
const int BagRpcEquipEnhanceSwapReply::kBagContainerType1FieldNumber;
const int BagRpcEquipEnhanceSwapReply::kBagContainerType2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipEnhanceSwapReply::BagRpcEquipEnhanceSwapReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipEnhanceSwapReply)
}
BagRpcEquipEnhanceSwapReply::BagRpcEquipEnhanceSwapReply(const BagRpcEquipEnhanceSwapReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bagcontainertype2_, &from.bagcontainertype2_,
    static_cast<size_t>(reinterpret_cast<char*>(&bagcontainertype1_) -
    reinterpret_cast<char*>(&bagcontainertype2_)) + sizeof(bagcontainertype1_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipEnhanceSwapReply)
}

void BagRpcEquipEnhanceSwapReply::SharedCtor() {
  _cached_size_ = 0;
  bagcontainertype2_ = -1;
  result_ = -9999;
  templateid1_ = -1;
  pos1_ = -1;
  templateid2_ = -1;
  pos2_ = -1;
  bagcontainertype1_ = -1;
}

BagRpcEquipEnhanceSwapReply::~BagRpcEquipEnhanceSwapReply() {
  // @@protoc_insertion_point(destructor:BagRpcEquipEnhanceSwapReply)
  SharedDtor();
}

void BagRpcEquipEnhanceSwapReply::SharedDtor() {
}

void BagRpcEquipEnhanceSwapReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipEnhanceSwapReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipEnhanceSwapReply& BagRpcEquipEnhanceSwapReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipEnhanceSwapReply* BagRpcEquipEnhanceSwapReply::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipEnhanceSwapReply* n = new BagRpcEquipEnhanceSwapReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipEnhanceSwapReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipEnhanceSwapReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    bagcontainertype2_ = -1;
    result_ = -9999;
    templateid1_ = -1;
    pos1_ = -1;
    templateid2_ = -1;
    pos2_ = -1;
    bagcontainertype1_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipEnhanceSwapReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipEnhanceSwapReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TemplateId1 = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_templateid1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos1 = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_pos1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TemplateId2 = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_templateid2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos2 = 7 [default = -1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_pos2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType1 = 8 [default = -1];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_bagcontainertype1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType2 = 9 [default = -1];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_bagcontainertype2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipEnhanceSwapReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipEnhanceSwapReply)
  return false;
#undef DO_
}

void BagRpcEquipEnhanceSwapReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipEnhanceSwapReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 TemplateId1 = 4 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->templateid1(), output);
  }

  // optional sint32 Pos1 = 5 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->pos1(), output);
  }

  // optional sint32 TemplateId2 = 6 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->templateid2(), output);
  }

  // optional sint32 Pos2 = 7 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->pos2(), output);
  }

  // optional sint32 BagContainerType1 = 8 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->bagcontainertype1(), output);
  }

  // optional sint32 BagContainerType2 = 9 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(9, this->bagcontainertype2(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipEnhanceSwapReply)
}

::google::protobuf::uint8* BagRpcEquipEnhanceSwapReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipEnhanceSwapReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 TemplateId1 = 4 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->templateid1(), target);
  }

  // optional sint32 Pos1 = 5 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->pos1(), target);
  }

  // optional sint32 TemplateId2 = 6 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->templateid2(), target);
  }

  // optional sint32 Pos2 = 7 [default = -1];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->pos2(), target);
  }

  // optional sint32 BagContainerType1 = 8 [default = -1];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->bagcontainertype1(), target);
  }

  // optional sint32 BagContainerType2 = 9 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(9, this->bagcontainertype2(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipEnhanceSwapReply)
  return target;
}

size_t BagRpcEquipEnhanceSwapReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipEnhanceSwapReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional sint32 BagContainerType2 = 9 [default = -1];
    if (has_bagcontainertype2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype2());
    }

    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 TemplateId1 = 4 [default = -1];
    if (has_templateid1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid1());
    }

    // optional sint32 Pos1 = 5 [default = -1];
    if (has_pos1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos1());
    }

    // optional sint32 TemplateId2 = 6 [default = -1];
    if (has_templateid2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid2());
    }

    // optional sint32 Pos2 = 7 [default = -1];
    if (has_pos2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos2());
    }

    // optional sint32 BagContainerType1 = 8 [default = -1];
    if (has_bagcontainertype1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype1());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipEnhanceSwapReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipEnhanceSwapReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipEnhanceSwapReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipEnhanceSwapReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipEnhanceSwapReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipEnhanceSwapReply)
    MergeFrom(*source);
  }
}

void BagRpcEquipEnhanceSwapReply::MergeFrom(const BagRpcEquipEnhanceSwapReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipEnhanceSwapReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      bagcontainertype2_ = from.bagcontainertype2_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      templateid1_ = from.templateid1_;
    }
    if (cached_has_bits & 0x00000008u) {
      pos1_ = from.pos1_;
    }
    if (cached_has_bits & 0x00000010u) {
      templateid2_ = from.templateid2_;
    }
    if (cached_has_bits & 0x00000020u) {
      pos2_ = from.pos2_;
    }
    if (cached_has_bits & 0x00000040u) {
      bagcontainertype1_ = from.bagcontainertype1_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipEnhanceSwapReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipEnhanceSwapReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipEnhanceSwapReply::CopyFrom(const BagRpcEquipEnhanceSwapReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipEnhanceSwapReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipEnhanceSwapReply::IsInitialized() const {
  return true;
}

void BagRpcEquipEnhanceSwapReply::Swap(BagRpcEquipEnhanceSwapReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipEnhanceSwapReply::InternalSwap(BagRpcEquipEnhanceSwapReply* other) {
  using std::swap;
  swap(bagcontainertype2_, other->bagcontainertype2_);
  swap(result_, other->result_);
  swap(templateid1_, other->templateid1_);
  swap(pos1_, other->pos1_);
  swap(templateid2_, other->templateid2_);
  swap(pos2_, other->pos2_);
  swap(bagcontainertype1_, other->bagcontainertype1_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipEnhanceSwapReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipEnhanceSwapReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcEquipEnhanceSwapReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipEnhanceSwapReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipEnhanceSwapReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipEnhanceSwapReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcEquipEnhanceSwapReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceSwapReply.Result)
  return result_;
}
void BagRpcEquipEnhanceSwapReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceSwapReply.Result)
}

// optional sint32 TemplateId1 = 4 [default = -1];
bool BagRpcEquipEnhanceSwapReply::has_templateid1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipEnhanceSwapReply::set_has_templateid1() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipEnhanceSwapReply::clear_has_templateid1() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipEnhanceSwapReply::clear_templateid1() {
  templateid1_ = -1;
  clear_has_templateid1();
}
::google::protobuf::int32 BagRpcEquipEnhanceSwapReply::templateid1() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceSwapReply.TemplateId1)
  return templateid1_;
}
void BagRpcEquipEnhanceSwapReply::set_templateid1(::google::protobuf::int32 value) {
  set_has_templateid1();
  templateid1_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceSwapReply.TemplateId1)
}

// optional sint32 Pos1 = 5 [default = -1];
bool BagRpcEquipEnhanceSwapReply::has_pos1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRpcEquipEnhanceSwapReply::set_has_pos1() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRpcEquipEnhanceSwapReply::clear_has_pos1() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRpcEquipEnhanceSwapReply::clear_pos1() {
  pos1_ = -1;
  clear_has_pos1();
}
::google::protobuf::int32 BagRpcEquipEnhanceSwapReply::pos1() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceSwapReply.Pos1)
  return pos1_;
}
void BagRpcEquipEnhanceSwapReply::set_pos1(::google::protobuf::int32 value) {
  set_has_pos1();
  pos1_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceSwapReply.Pos1)
}

// optional sint32 TemplateId2 = 6 [default = -1];
bool BagRpcEquipEnhanceSwapReply::has_templateid2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BagRpcEquipEnhanceSwapReply::set_has_templateid2() {
  _has_bits_[0] |= 0x00000010u;
}
void BagRpcEquipEnhanceSwapReply::clear_has_templateid2() {
  _has_bits_[0] &= ~0x00000010u;
}
void BagRpcEquipEnhanceSwapReply::clear_templateid2() {
  templateid2_ = -1;
  clear_has_templateid2();
}
::google::protobuf::int32 BagRpcEquipEnhanceSwapReply::templateid2() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceSwapReply.TemplateId2)
  return templateid2_;
}
void BagRpcEquipEnhanceSwapReply::set_templateid2(::google::protobuf::int32 value) {
  set_has_templateid2();
  templateid2_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceSwapReply.TemplateId2)
}

// optional sint32 Pos2 = 7 [default = -1];
bool BagRpcEquipEnhanceSwapReply::has_pos2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BagRpcEquipEnhanceSwapReply::set_has_pos2() {
  _has_bits_[0] |= 0x00000020u;
}
void BagRpcEquipEnhanceSwapReply::clear_has_pos2() {
  _has_bits_[0] &= ~0x00000020u;
}
void BagRpcEquipEnhanceSwapReply::clear_pos2() {
  pos2_ = -1;
  clear_has_pos2();
}
::google::protobuf::int32 BagRpcEquipEnhanceSwapReply::pos2() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceSwapReply.Pos2)
  return pos2_;
}
void BagRpcEquipEnhanceSwapReply::set_pos2(::google::protobuf::int32 value) {
  set_has_pos2();
  pos2_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceSwapReply.Pos2)
}

// optional sint32 BagContainerType1 = 8 [default = -1];
bool BagRpcEquipEnhanceSwapReply::has_bagcontainertype1() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BagRpcEquipEnhanceSwapReply::set_has_bagcontainertype1() {
  _has_bits_[0] |= 0x00000040u;
}
void BagRpcEquipEnhanceSwapReply::clear_has_bagcontainertype1() {
  _has_bits_[0] &= ~0x00000040u;
}
void BagRpcEquipEnhanceSwapReply::clear_bagcontainertype1() {
  bagcontainertype1_ = -1;
  clear_has_bagcontainertype1();
}
::google::protobuf::int32 BagRpcEquipEnhanceSwapReply::bagcontainertype1() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceSwapReply.BagContainerType1)
  return bagcontainertype1_;
}
void BagRpcEquipEnhanceSwapReply::set_bagcontainertype1(::google::protobuf::int32 value) {
  set_has_bagcontainertype1();
  bagcontainertype1_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceSwapReply.BagContainerType1)
}

// optional sint32 BagContainerType2 = 9 [default = -1];
bool BagRpcEquipEnhanceSwapReply::has_bagcontainertype2() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipEnhanceSwapReply::set_has_bagcontainertype2() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipEnhanceSwapReply::clear_has_bagcontainertype2() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipEnhanceSwapReply::clear_bagcontainertype2() {
  bagcontainertype2_ = -1;
  clear_has_bagcontainertype2();
}
::google::protobuf::int32 BagRpcEquipEnhanceSwapReply::bagcontainertype2() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipEnhanceSwapReply.BagContainerType2)
  return bagcontainertype2_;
}
void BagRpcEquipEnhanceSwapReply::set_bagcontainertype2(::google::protobuf::int32 value) {
  set_has_bagcontainertype2();
  bagcontainertype2_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipEnhanceSwapReply.BagContainerType2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipGemRemoveAsk::kTemplateIdFieldNumber;
const int BagRpcEquipGemRemoveAsk::kPosFieldNumber;
const int BagRpcEquipGemRemoveAsk::kBagContainerTypeFieldNumber;
const int BagRpcEquipGemRemoveAsk::kSlotPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipGemRemoveAsk::BagRpcEquipGemRemoveAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipGemRemoveAsk)
}
BagRpcEquipGemRemoveAsk::BagRpcEquipGemRemoveAsk(const BagRpcEquipGemRemoveAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&templateid_, &from.templateid_,
    static_cast<size_t>(reinterpret_cast<char*>(&slotpos_) -
    reinterpret_cast<char*>(&templateid_)) + sizeof(slotpos_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipGemRemoveAsk)
}

void BagRpcEquipGemRemoveAsk::SharedCtor() {
  _cached_size_ = 0;
  templateid_ = -1;
  pos_ = -1;
  bagcontainertype_ = -1;
  slotpos_ = -1;
}

BagRpcEquipGemRemoveAsk::~BagRpcEquipGemRemoveAsk() {
  // @@protoc_insertion_point(destructor:BagRpcEquipGemRemoveAsk)
  SharedDtor();
}

void BagRpcEquipGemRemoveAsk::SharedDtor() {
}

void BagRpcEquipGemRemoveAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipGemRemoveAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipGemRemoveAsk& BagRpcEquipGemRemoveAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipGemRemoveAsk* BagRpcEquipGemRemoveAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipGemRemoveAsk* n = new BagRpcEquipGemRemoveAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipGemRemoveAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipGemRemoveAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    templateid_ = -1;
    pos_ = -1;
    bagcontainertype_ = -1;
    slotpos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipGemRemoveAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipGemRemoveAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 TemplateId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bagcontainertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 SlotPos = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_slotpos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &slotpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipGemRemoveAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipGemRemoveAsk)
  return false;
#undef DO_
}

void BagRpcEquipGemRemoveAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipGemRemoveAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->templateid(), output);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->pos(), output);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->bagcontainertype(), output);
  }

  // optional sint32 SlotPos = 5 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->slotpos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipGemRemoveAsk)
}

::google::protobuf::uint8* BagRpcEquipGemRemoveAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipGemRemoveAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->templateid(), target);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->pos(), target);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->bagcontainertype(), target);
  }

  // optional sint32 SlotPos = 5 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->slotpos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipGemRemoveAsk)
  return target;
}

size_t BagRpcEquipGemRemoveAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipGemRemoveAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional sint32 TemplateId = 2 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 Pos = 3 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 BagContainerType = 4 [default = -1];
    if (has_bagcontainertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype());
    }

    // optional sint32 SlotPos = 5 [default = -1];
    if (has_slotpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->slotpos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipGemRemoveAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipGemRemoveAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipGemRemoveAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipGemRemoveAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipGemRemoveAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipGemRemoveAsk)
    MergeFrom(*source);
  }
}

void BagRpcEquipGemRemoveAsk::MergeFrom(const BagRpcEquipGemRemoveAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipGemRemoveAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000004u) {
      bagcontainertype_ = from.bagcontainertype_;
    }
    if (cached_has_bits & 0x00000008u) {
      slotpos_ = from.slotpos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipGemRemoveAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipGemRemoveAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipGemRemoveAsk::CopyFrom(const BagRpcEquipGemRemoveAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipGemRemoveAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipGemRemoveAsk::IsInitialized() const {
  return true;
}

void BagRpcEquipGemRemoveAsk::Swap(BagRpcEquipGemRemoveAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipGemRemoveAsk::InternalSwap(BagRpcEquipGemRemoveAsk* other) {
  using std::swap;
  swap(templateid_, other->templateid_);
  swap(pos_, other->pos_);
  swap(bagcontainertype_, other->bagcontainertype_);
  swap(slotpos_, other->slotpos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipGemRemoveAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipGemRemoveAsk

// optional sint32 TemplateId = 2 [default = -1];
bool BagRpcEquipGemRemoveAsk::has_templateid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipGemRemoveAsk::set_has_templateid() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipGemRemoveAsk::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipGemRemoveAsk::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagRpcEquipGemRemoveAsk::templateid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipGemRemoveAsk.TemplateId)
  return templateid_;
}
void BagRpcEquipGemRemoveAsk::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipGemRemoveAsk.TemplateId)
}

// optional sint32 Pos = 3 [default = -1];
bool BagRpcEquipGemRemoveAsk::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipGemRemoveAsk::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipGemRemoveAsk::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipGemRemoveAsk::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcEquipGemRemoveAsk::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipGemRemoveAsk.Pos)
  return pos_;
}
void BagRpcEquipGemRemoveAsk::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipGemRemoveAsk.Pos)
}

// optional sint32 BagContainerType = 4 [default = -1];
bool BagRpcEquipGemRemoveAsk::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipGemRemoveAsk::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipGemRemoveAsk::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipGemRemoveAsk::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
::google::protobuf::int32 BagRpcEquipGemRemoveAsk::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipGemRemoveAsk.BagContainerType)
  return bagcontainertype_;
}
void BagRpcEquipGemRemoveAsk::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipGemRemoveAsk.BagContainerType)
}

// optional sint32 SlotPos = 5 [default = -1];
bool BagRpcEquipGemRemoveAsk::has_slotpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRpcEquipGemRemoveAsk::set_has_slotpos() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRpcEquipGemRemoveAsk::clear_has_slotpos() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRpcEquipGemRemoveAsk::clear_slotpos() {
  slotpos_ = -1;
  clear_has_slotpos();
}
::google::protobuf::int32 BagRpcEquipGemRemoveAsk::slotpos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipGemRemoveAsk.SlotPos)
  return slotpos_;
}
void BagRpcEquipGemRemoveAsk::set_slotpos(::google::protobuf::int32 value) {
  set_has_slotpos();
  slotpos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipGemRemoveAsk.SlotPos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcEquipGemRemoveReply::kResultFieldNumber;
const int BagRpcEquipGemRemoveReply::kTemplateIdFieldNumber;
const int BagRpcEquipGemRemoveReply::kPosFieldNumber;
const int BagRpcEquipGemRemoveReply::kBagContainerTypeFieldNumber;
const int BagRpcEquipGemRemoveReply::kSlotPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcEquipGemRemoveReply::BagRpcEquipGemRemoveReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcEquipGemRemoveReply)
}
BagRpcEquipGemRemoveReply::BagRpcEquipGemRemoveReply(const BagRpcEquipGemRemoveReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&slotpos_, &from.slotpos_,
    static_cast<size_t>(reinterpret_cast<char*>(&bagcontainertype_) -
    reinterpret_cast<char*>(&slotpos_)) + sizeof(bagcontainertype_));
  // @@protoc_insertion_point(copy_constructor:BagRpcEquipGemRemoveReply)
}

void BagRpcEquipGemRemoveReply::SharedCtor() {
  _cached_size_ = 0;
  slotpos_ = -1;
  result_ = -9999;
  templateid_ = -1;
  pos_ = -1;
  bagcontainertype_ = -1;
}

BagRpcEquipGemRemoveReply::~BagRpcEquipGemRemoveReply() {
  // @@protoc_insertion_point(destructor:BagRpcEquipGemRemoveReply)
  SharedDtor();
}

void BagRpcEquipGemRemoveReply::SharedDtor() {
}

void BagRpcEquipGemRemoveReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcEquipGemRemoveReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcEquipGemRemoveReply& BagRpcEquipGemRemoveReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcEquipGemRemoveReply* BagRpcEquipGemRemoveReply::New(::google::protobuf::Arena* arena) const {
  BagRpcEquipGemRemoveReply* n = new BagRpcEquipGemRemoveReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcEquipGemRemoveReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcEquipGemRemoveReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    slotpos_ = -1;
    result_ = -9999;
    templateid_ = -1;
    pos_ = -1;
    bagcontainertype_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcEquipGemRemoveReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcEquipGemRemoveReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TemplateId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 BagContainerType = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_bagcontainertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bagcontainertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 SlotPos = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_slotpos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &slotpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcEquipGemRemoveReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcEquipGemRemoveReply)
  return false;
#undef DO_
}

void BagRpcEquipGemRemoveReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcEquipGemRemoveReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->templateid(), output);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->pos(), output);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->bagcontainertype(), output);
  }

  // optional sint32 SlotPos = 5 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->slotpos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcEquipGemRemoveReply)
}

::google::protobuf::uint8* BagRpcEquipGemRemoveReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcEquipGemRemoveReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->templateid(), target);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->pos(), target);
  }

  // optional sint32 BagContainerType = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->bagcontainertype(), target);
  }

  // optional sint32 SlotPos = 5 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->slotpos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcEquipGemRemoveReply)
  return target;
}

size_t BagRpcEquipGemRemoveReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcEquipGemRemoveReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional sint32 SlotPos = 5 [default = -1];
    if (has_slotpos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->slotpos());
    }

    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 TemplateId = 2 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 Pos = 3 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 BagContainerType = 4 [default = -1];
    if (has_bagcontainertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->bagcontainertype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcEquipGemRemoveReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcEquipGemRemoveReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcEquipGemRemoveReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcEquipGemRemoveReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcEquipGemRemoveReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcEquipGemRemoveReply)
    MergeFrom(*source);
  }
}

void BagRpcEquipGemRemoveReply::MergeFrom(const BagRpcEquipGemRemoveReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcEquipGemRemoveReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      slotpos_ = from.slotpos_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000008u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000010u) {
      bagcontainertype_ = from.bagcontainertype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcEquipGemRemoveReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcEquipGemRemoveReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcEquipGemRemoveReply::CopyFrom(const BagRpcEquipGemRemoveReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcEquipGemRemoveReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcEquipGemRemoveReply::IsInitialized() const {
  return true;
}

void BagRpcEquipGemRemoveReply::Swap(BagRpcEquipGemRemoveReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcEquipGemRemoveReply::InternalSwap(BagRpcEquipGemRemoveReply* other) {
  using std::swap;
  swap(slotpos_, other->slotpos_);
  swap(result_, other->result_);
  swap(templateid_, other->templateid_);
  swap(pos_, other->pos_);
  swap(bagcontainertype_, other->bagcontainertype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcEquipGemRemoveReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcEquipGemRemoveReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcEquipGemRemoveReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcEquipGemRemoveReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcEquipGemRemoveReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcEquipGemRemoveReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcEquipGemRemoveReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipGemRemoveReply.Result)
  return result_;
}
void BagRpcEquipGemRemoveReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipGemRemoveReply.Result)
}

// optional sint32 TemplateId = 2 [default = -1];
bool BagRpcEquipGemRemoveReply::has_templateid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcEquipGemRemoveReply::set_has_templateid() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcEquipGemRemoveReply::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcEquipGemRemoveReply::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagRpcEquipGemRemoveReply::templateid() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipGemRemoveReply.TemplateId)
  return templateid_;
}
void BagRpcEquipGemRemoveReply::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipGemRemoveReply.TemplateId)
}

// optional sint32 Pos = 3 [default = -1];
bool BagRpcEquipGemRemoveReply::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRpcEquipGemRemoveReply::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRpcEquipGemRemoveReply::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRpcEquipGemRemoveReply::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcEquipGemRemoveReply::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipGemRemoveReply.Pos)
  return pos_;
}
void BagRpcEquipGemRemoveReply::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipGemRemoveReply.Pos)
}

// optional sint32 BagContainerType = 4 [default = -1];
bool BagRpcEquipGemRemoveReply::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BagRpcEquipGemRemoveReply::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000010u;
}
void BagRpcEquipGemRemoveReply::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000010u;
}
void BagRpcEquipGemRemoveReply::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
::google::protobuf::int32 BagRpcEquipGemRemoveReply::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipGemRemoveReply.BagContainerType)
  return bagcontainertype_;
}
void BagRpcEquipGemRemoveReply::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipGemRemoveReply.BagContainerType)
}

// optional sint32 SlotPos = 5 [default = -1];
bool BagRpcEquipGemRemoveReply::has_slotpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcEquipGemRemoveReply::set_has_slotpos() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcEquipGemRemoveReply::clear_has_slotpos() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcEquipGemRemoveReply::clear_slotpos() {
  slotpos_ = -1;
  clear_has_slotpos();
}
::google::protobuf::int32 BagRpcEquipGemRemoveReply::slotpos() const {
  // @@protoc_insertion_point(field_get:BagRpcEquipGemRemoveReply.SlotPos)
  return slotpos_;
}
void BagRpcEquipGemRemoveReply::set_slotpos(::google::protobuf::int32 value) {
  set_has_slotpos();
  slotpos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcEquipGemRemoveReply.SlotPos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcBagPutInStorageAsk::kTemplateIdFieldNumber;
const int BagRpcBagPutInStorageAsk::kPosFieldNumber;
const int BagRpcBagPutInStorageAsk::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcBagPutInStorageAsk::BagRpcBagPutInStorageAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcBagPutInStorageAsk)
}
BagRpcBagPutInStorageAsk::BagRpcBagPutInStorageAsk(const BagRpcBagPutInStorageAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&num_, &from.num_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&num_)) + sizeof(pos_));
  // @@protoc_insertion_point(copy_constructor:BagRpcBagPutInStorageAsk)
}

void BagRpcBagPutInStorageAsk::SharedCtor() {
  _cached_size_ = 0;
  num_ = -1;
  templateid_ = -1;
  pos_ = -1;
}

BagRpcBagPutInStorageAsk::~BagRpcBagPutInStorageAsk() {
  // @@protoc_insertion_point(destructor:BagRpcBagPutInStorageAsk)
  SharedDtor();
}

void BagRpcBagPutInStorageAsk::SharedDtor() {
}

void BagRpcBagPutInStorageAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcBagPutInStorageAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcBagPutInStorageAsk& BagRpcBagPutInStorageAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcBagPutInStorageAsk* BagRpcBagPutInStorageAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcBagPutInStorageAsk* n = new BagRpcBagPutInStorageAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcBagPutInStorageAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcBagPutInStorageAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    num_ = -1;
    templateid_ = -1;
    pos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcBagPutInStorageAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcBagPutInStorageAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 TemplateId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Num = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcBagPutInStorageAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcBagPutInStorageAsk)
  return false;
#undef DO_
}

void BagRpcBagPutInStorageAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcBagPutInStorageAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->templateid(), output);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->pos(), output);
  }

  // optional sint32 Num = 4 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcBagPutInStorageAsk)
}

::google::protobuf::uint8* BagRpcBagPutInStorageAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcBagPutInStorageAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->templateid(), target);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->pos(), target);
  }

  // optional sint32 Num = 4 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcBagPutInStorageAsk)
  return target;
}

size_t BagRpcBagPutInStorageAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcBagPutInStorageAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 Num = 4 [default = -1];
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->num());
    }

    // optional sint32 TemplateId = 2 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 Pos = 3 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcBagPutInStorageAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcBagPutInStorageAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcBagPutInStorageAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcBagPutInStorageAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcBagPutInStorageAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcBagPutInStorageAsk)
    MergeFrom(*source);
  }
}

void BagRpcBagPutInStorageAsk::MergeFrom(const BagRpcBagPutInStorageAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcBagPutInStorageAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      num_ = from.num_;
    }
    if (cached_has_bits & 0x00000002u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcBagPutInStorageAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcBagPutInStorageAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcBagPutInStorageAsk::CopyFrom(const BagRpcBagPutInStorageAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcBagPutInStorageAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcBagPutInStorageAsk::IsInitialized() const {
  return true;
}

void BagRpcBagPutInStorageAsk::Swap(BagRpcBagPutInStorageAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcBagPutInStorageAsk::InternalSwap(BagRpcBagPutInStorageAsk* other) {
  using std::swap;
  swap(num_, other->num_);
  swap(templateid_, other->templateid_);
  swap(pos_, other->pos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcBagPutInStorageAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcBagPutInStorageAsk

// optional sint32 TemplateId = 2 [default = -1];
bool BagRpcBagPutInStorageAsk::has_templateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcBagPutInStorageAsk::set_has_templateid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcBagPutInStorageAsk::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcBagPutInStorageAsk::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagRpcBagPutInStorageAsk::templateid() const {
  // @@protoc_insertion_point(field_get:BagRpcBagPutInStorageAsk.TemplateId)
  return templateid_;
}
void BagRpcBagPutInStorageAsk::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagPutInStorageAsk.TemplateId)
}

// optional sint32 Pos = 3 [default = -1];
bool BagRpcBagPutInStorageAsk::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcBagPutInStorageAsk::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcBagPutInStorageAsk::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcBagPutInStorageAsk::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcBagPutInStorageAsk::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcBagPutInStorageAsk.Pos)
  return pos_;
}
void BagRpcBagPutInStorageAsk::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagPutInStorageAsk.Pos)
}

// optional sint32 Num = 4 [default = -1];
bool BagRpcBagPutInStorageAsk::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcBagPutInStorageAsk::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcBagPutInStorageAsk::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcBagPutInStorageAsk::clear_num() {
  num_ = -1;
  clear_has_num();
}
::google::protobuf::int32 BagRpcBagPutInStorageAsk::num() const {
  // @@protoc_insertion_point(field_get:BagRpcBagPutInStorageAsk.Num)
  return num_;
}
void BagRpcBagPutInStorageAsk::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagPutInStorageAsk.Num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcBagPutInStorageReply::kResultFieldNumber;
const int BagRpcBagPutInStorageReply::kTemplateIdFieldNumber;
const int BagRpcBagPutInStorageReply::kPosFieldNumber;
const int BagRpcBagPutInStorageReply::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcBagPutInStorageReply::BagRpcBagPutInStorageReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcBagPutInStorageReply)
}
BagRpcBagPutInStorageReply::BagRpcBagPutInStorageReply(const BagRpcBagPutInStorageReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&result_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:BagRpcBagPutInStorageReply)
}

void BagRpcBagPutInStorageReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  templateid_ = -1;
  pos_ = -1;
  num_ = -1;
}

BagRpcBagPutInStorageReply::~BagRpcBagPutInStorageReply() {
  // @@protoc_insertion_point(destructor:BagRpcBagPutInStorageReply)
  SharedDtor();
}

void BagRpcBagPutInStorageReply::SharedDtor() {
}

void BagRpcBagPutInStorageReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcBagPutInStorageReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcBagPutInStorageReply& BagRpcBagPutInStorageReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcBagPutInStorageReply* BagRpcBagPutInStorageReply::New(::google::protobuf::Arena* arena) const {
  BagRpcBagPutInStorageReply* n = new BagRpcBagPutInStorageReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcBagPutInStorageReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcBagPutInStorageReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    result_ = -9999;
    templateid_ = -1;
    pos_ = -1;
    num_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcBagPutInStorageReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcBagPutInStorageReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TemplateId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Num = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcBagPutInStorageReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcBagPutInStorageReply)
  return false;
#undef DO_
}

void BagRpcBagPutInStorageReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcBagPutInStorageReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->templateid(), output);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->pos(), output);
  }

  // optional sint32 Num = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcBagPutInStorageReply)
}

::google::protobuf::uint8* BagRpcBagPutInStorageReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcBagPutInStorageReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->templateid(), target);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->pos(), target);
  }

  // optional sint32 Num = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcBagPutInStorageReply)
  return target;
}

size_t BagRpcBagPutInStorageReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcBagPutInStorageReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 TemplateId = 2 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 Pos = 3 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 Num = 4 [default = -1];
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcBagPutInStorageReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcBagPutInStorageReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcBagPutInStorageReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcBagPutInStorageReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcBagPutInStorageReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcBagPutInStorageReply)
    MergeFrom(*source);
  }
}

void BagRpcBagPutInStorageReply::MergeFrom(const BagRpcBagPutInStorageReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcBagPutInStorageReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000008u) {
      num_ = from.num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcBagPutInStorageReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcBagPutInStorageReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcBagPutInStorageReply::CopyFrom(const BagRpcBagPutInStorageReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcBagPutInStorageReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcBagPutInStorageReply::IsInitialized() const {
  return true;
}

void BagRpcBagPutInStorageReply::Swap(BagRpcBagPutInStorageReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcBagPutInStorageReply::InternalSwap(BagRpcBagPutInStorageReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(templateid_, other->templateid_);
  swap(pos_, other->pos_);
  swap(num_, other->num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcBagPutInStorageReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcBagPutInStorageReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcBagPutInStorageReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcBagPutInStorageReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcBagPutInStorageReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcBagPutInStorageReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcBagPutInStorageReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcBagPutInStorageReply.Result)
  return result_;
}
void BagRpcBagPutInStorageReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagPutInStorageReply.Result)
}

// optional sint32 TemplateId = 2 [default = -1];
bool BagRpcBagPutInStorageReply::has_templateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcBagPutInStorageReply::set_has_templateid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcBagPutInStorageReply::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcBagPutInStorageReply::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagRpcBagPutInStorageReply::templateid() const {
  // @@protoc_insertion_point(field_get:BagRpcBagPutInStorageReply.TemplateId)
  return templateid_;
}
void BagRpcBagPutInStorageReply::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagPutInStorageReply.TemplateId)
}

// optional sint32 Pos = 3 [default = -1];
bool BagRpcBagPutInStorageReply::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcBagPutInStorageReply::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcBagPutInStorageReply::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcBagPutInStorageReply::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcBagPutInStorageReply::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcBagPutInStorageReply.Pos)
  return pos_;
}
void BagRpcBagPutInStorageReply::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagPutInStorageReply.Pos)
}

// optional sint32 Num = 4 [default = -1];
bool BagRpcBagPutInStorageReply::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRpcBagPutInStorageReply::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRpcBagPutInStorageReply::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRpcBagPutInStorageReply::clear_num() {
  num_ = -1;
  clear_has_num();
}
::google::protobuf::int32 BagRpcBagPutInStorageReply::num() const {
  // @@protoc_insertion_point(field_get:BagRpcBagPutInStorageReply.Num)
  return num_;
}
void BagRpcBagPutInStorageReply::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagPutInStorageReply.Num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcBagFetchFromStorageAsk::kTemplateIdFieldNumber;
const int BagRpcBagFetchFromStorageAsk::kPosFieldNumber;
const int BagRpcBagFetchFromStorageAsk::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcBagFetchFromStorageAsk::BagRpcBagFetchFromStorageAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcBagFetchFromStorageAsk)
}
BagRpcBagFetchFromStorageAsk::BagRpcBagFetchFromStorageAsk(const BagRpcBagFetchFromStorageAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&num_, &from.num_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&num_)) + sizeof(pos_));
  // @@protoc_insertion_point(copy_constructor:BagRpcBagFetchFromStorageAsk)
}

void BagRpcBagFetchFromStorageAsk::SharedCtor() {
  _cached_size_ = 0;
  num_ = -1;
  templateid_ = -1;
  pos_ = -1;
}

BagRpcBagFetchFromStorageAsk::~BagRpcBagFetchFromStorageAsk() {
  // @@protoc_insertion_point(destructor:BagRpcBagFetchFromStorageAsk)
  SharedDtor();
}

void BagRpcBagFetchFromStorageAsk::SharedDtor() {
}

void BagRpcBagFetchFromStorageAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcBagFetchFromStorageAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcBagFetchFromStorageAsk& BagRpcBagFetchFromStorageAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcBagFetchFromStorageAsk* BagRpcBagFetchFromStorageAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcBagFetchFromStorageAsk* n = new BagRpcBagFetchFromStorageAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcBagFetchFromStorageAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcBagFetchFromStorageAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    num_ = -1;
    templateid_ = -1;
    pos_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcBagFetchFromStorageAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcBagFetchFromStorageAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 TemplateId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Num = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcBagFetchFromStorageAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcBagFetchFromStorageAsk)
  return false;
#undef DO_
}

void BagRpcBagFetchFromStorageAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcBagFetchFromStorageAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->templateid(), output);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->pos(), output);
  }

  // optional sint32 Num = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcBagFetchFromStorageAsk)
}

::google::protobuf::uint8* BagRpcBagFetchFromStorageAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcBagFetchFromStorageAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 TemplateId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->templateid(), target);
  }

  // optional sint32 Pos = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->pos(), target);
  }

  // optional sint32 Num = 3 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcBagFetchFromStorageAsk)
  return target;
}

size_t BagRpcBagFetchFromStorageAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcBagFetchFromStorageAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 Num = 3 [default = -1];
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->num());
    }

    // optional sint32 TemplateId = 1 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 Pos = 2 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcBagFetchFromStorageAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcBagFetchFromStorageAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcBagFetchFromStorageAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcBagFetchFromStorageAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcBagFetchFromStorageAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcBagFetchFromStorageAsk)
    MergeFrom(*source);
  }
}

void BagRpcBagFetchFromStorageAsk::MergeFrom(const BagRpcBagFetchFromStorageAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcBagFetchFromStorageAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      num_ = from.num_;
    }
    if (cached_has_bits & 0x00000002u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcBagFetchFromStorageAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcBagFetchFromStorageAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcBagFetchFromStorageAsk::CopyFrom(const BagRpcBagFetchFromStorageAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcBagFetchFromStorageAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcBagFetchFromStorageAsk::IsInitialized() const {
  return true;
}

void BagRpcBagFetchFromStorageAsk::Swap(BagRpcBagFetchFromStorageAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcBagFetchFromStorageAsk::InternalSwap(BagRpcBagFetchFromStorageAsk* other) {
  using std::swap;
  swap(num_, other->num_);
  swap(templateid_, other->templateid_);
  swap(pos_, other->pos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcBagFetchFromStorageAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcBagFetchFromStorageAsk

// optional sint32 TemplateId = 1 [default = -1];
bool BagRpcBagFetchFromStorageAsk::has_templateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcBagFetchFromStorageAsk::set_has_templateid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcBagFetchFromStorageAsk::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcBagFetchFromStorageAsk::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagRpcBagFetchFromStorageAsk::templateid() const {
  // @@protoc_insertion_point(field_get:BagRpcBagFetchFromStorageAsk.TemplateId)
  return templateid_;
}
void BagRpcBagFetchFromStorageAsk::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagFetchFromStorageAsk.TemplateId)
}

// optional sint32 Pos = 2 [default = -1];
bool BagRpcBagFetchFromStorageAsk::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcBagFetchFromStorageAsk::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcBagFetchFromStorageAsk::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcBagFetchFromStorageAsk::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcBagFetchFromStorageAsk::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcBagFetchFromStorageAsk.Pos)
  return pos_;
}
void BagRpcBagFetchFromStorageAsk::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagFetchFromStorageAsk.Pos)
}

// optional sint32 Num = 3 [default = -1];
bool BagRpcBagFetchFromStorageAsk::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcBagFetchFromStorageAsk::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcBagFetchFromStorageAsk::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcBagFetchFromStorageAsk::clear_num() {
  num_ = -1;
  clear_has_num();
}
::google::protobuf::int32 BagRpcBagFetchFromStorageAsk::num() const {
  // @@protoc_insertion_point(field_get:BagRpcBagFetchFromStorageAsk.Num)
  return num_;
}
void BagRpcBagFetchFromStorageAsk::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagFetchFromStorageAsk.Num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcBagFetchFromStorageReply::kResultFieldNumber;
const int BagRpcBagFetchFromStorageReply::kTemplateIdFieldNumber;
const int BagRpcBagFetchFromStorageReply::kPosFieldNumber;
const int BagRpcBagFetchFromStorageReply::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcBagFetchFromStorageReply::BagRpcBagFetchFromStorageReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcBagFetchFromStorageReply)
}
BagRpcBagFetchFromStorageReply::BagRpcBagFetchFromStorageReply(const BagRpcBagFetchFromStorageReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&result_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:BagRpcBagFetchFromStorageReply)
}

void BagRpcBagFetchFromStorageReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  templateid_ = -1;
  pos_ = -1;
  num_ = -1;
}

BagRpcBagFetchFromStorageReply::~BagRpcBagFetchFromStorageReply() {
  // @@protoc_insertion_point(destructor:BagRpcBagFetchFromStorageReply)
  SharedDtor();
}

void BagRpcBagFetchFromStorageReply::SharedDtor() {
}

void BagRpcBagFetchFromStorageReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcBagFetchFromStorageReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcBagFetchFromStorageReply& BagRpcBagFetchFromStorageReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcBagFetchFromStorageReply* BagRpcBagFetchFromStorageReply::New(::google::protobuf::Arena* arena) const {
  BagRpcBagFetchFromStorageReply* n = new BagRpcBagFetchFromStorageReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcBagFetchFromStorageReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcBagFetchFromStorageReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    result_ = -9999;
    templateid_ = -1;
    pos_ = -1;
    num_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcBagFetchFromStorageReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcBagFetchFromStorageReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 TemplateId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_templateid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &templateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Pos = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Num = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcBagFetchFromStorageReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcBagFetchFromStorageReply)
  return false;
#undef DO_
}

void BagRpcBagFetchFromStorageReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcBagFetchFromStorageReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->templateid(), output);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->pos(), output);
  }

  // optional sint32 Num = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcBagFetchFromStorageReply)
}

::google::protobuf::uint8* BagRpcBagFetchFromStorageReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcBagFetchFromStorageReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 TemplateId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->templateid(), target);
  }

  // optional sint32 Pos = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->pos(), target);
  }

  // optional sint32 Num = 4 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcBagFetchFromStorageReply)
  return target;
}

size_t BagRpcBagFetchFromStorageReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcBagFetchFromStorageReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 TemplateId = 2 [default = -1];
    if (has_templateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->templateid());
    }

    // optional sint32 Pos = 3 [default = -1];
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pos());
    }

    // optional sint32 Num = 4 [default = -1];
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcBagFetchFromStorageReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcBagFetchFromStorageReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcBagFetchFromStorageReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcBagFetchFromStorageReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcBagFetchFromStorageReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcBagFetchFromStorageReply)
    MergeFrom(*source);
  }
}

void BagRpcBagFetchFromStorageReply::MergeFrom(const BagRpcBagFetchFromStorageReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcBagFetchFromStorageReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      templateid_ = from.templateid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    if (cached_has_bits & 0x00000008u) {
      num_ = from.num_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcBagFetchFromStorageReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcBagFetchFromStorageReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcBagFetchFromStorageReply::CopyFrom(const BagRpcBagFetchFromStorageReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcBagFetchFromStorageReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcBagFetchFromStorageReply::IsInitialized() const {
  return true;
}

void BagRpcBagFetchFromStorageReply::Swap(BagRpcBagFetchFromStorageReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcBagFetchFromStorageReply::InternalSwap(BagRpcBagFetchFromStorageReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(templateid_, other->templateid_);
  swap(pos_, other->pos_);
  swap(num_, other->num_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcBagFetchFromStorageReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcBagFetchFromStorageReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcBagFetchFromStorageReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcBagFetchFromStorageReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcBagFetchFromStorageReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcBagFetchFromStorageReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcBagFetchFromStorageReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcBagFetchFromStorageReply.Result)
  return result_;
}
void BagRpcBagFetchFromStorageReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagFetchFromStorageReply.Result)
}

// optional sint32 TemplateId = 2 [default = -1];
bool BagRpcBagFetchFromStorageReply::has_templateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcBagFetchFromStorageReply::set_has_templateid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcBagFetchFromStorageReply::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcBagFetchFromStorageReply::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
::google::protobuf::int32 BagRpcBagFetchFromStorageReply::templateid() const {
  // @@protoc_insertion_point(field_get:BagRpcBagFetchFromStorageReply.TemplateId)
  return templateid_;
}
void BagRpcBagFetchFromStorageReply::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagFetchFromStorageReply.TemplateId)
}

// optional sint32 Pos = 3 [default = -1];
bool BagRpcBagFetchFromStorageReply::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcBagFetchFromStorageReply::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcBagFetchFromStorageReply::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcBagFetchFromStorageReply::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
::google::protobuf::int32 BagRpcBagFetchFromStorageReply::pos() const {
  // @@protoc_insertion_point(field_get:BagRpcBagFetchFromStorageReply.Pos)
  return pos_;
}
void BagRpcBagFetchFromStorageReply::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagFetchFromStorageReply.Pos)
}

// optional sint32 Num = 4 [default = -1];
bool BagRpcBagFetchFromStorageReply::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BagRpcBagFetchFromStorageReply::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
void BagRpcBagFetchFromStorageReply::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
void BagRpcBagFetchFromStorageReply::clear_num() {
  num_ = -1;
  clear_has_num();
}
::google::protobuf::int32 BagRpcBagFetchFromStorageReply::num() const {
  // @@protoc_insertion_point(field_get:BagRpcBagFetchFromStorageReply.Num)
  return num_;
}
void BagRpcBagFetchFromStorageReply::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagFetchFromStorageReply.Num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcBagStorageSaveMoneyAsk::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcBagStorageSaveMoneyAsk::BagRpcBagStorageSaveMoneyAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcBagStorageSaveMoneyAsk)
}
BagRpcBagStorageSaveMoneyAsk::BagRpcBagStorageSaveMoneyAsk(const BagRpcBagStorageSaveMoneyAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  money_ = from.money_;
  // @@protoc_insertion_point(copy_constructor:BagRpcBagStorageSaveMoneyAsk)
}

void BagRpcBagStorageSaveMoneyAsk::SharedCtor() {
  _cached_size_ = 0;
  money_ = -1;
}

BagRpcBagStorageSaveMoneyAsk::~BagRpcBagStorageSaveMoneyAsk() {
  // @@protoc_insertion_point(destructor:BagRpcBagStorageSaveMoneyAsk)
  SharedDtor();
}

void BagRpcBagStorageSaveMoneyAsk::SharedDtor() {
}

void BagRpcBagStorageSaveMoneyAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcBagStorageSaveMoneyAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcBagStorageSaveMoneyAsk& BagRpcBagStorageSaveMoneyAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcBagStorageSaveMoneyAsk* BagRpcBagStorageSaveMoneyAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcBagStorageSaveMoneyAsk* n = new BagRpcBagStorageSaveMoneyAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcBagStorageSaveMoneyAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcBagStorageSaveMoneyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  money_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcBagStorageSaveMoneyAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcBagStorageSaveMoneyAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Money = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcBagStorageSaveMoneyAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcBagStorageSaveMoneyAsk)
  return false;
#undef DO_
}

void BagRpcBagStorageSaveMoneyAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcBagStorageSaveMoneyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Money = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcBagStorageSaveMoneyAsk)
}

::google::protobuf::uint8* BagRpcBagStorageSaveMoneyAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcBagStorageSaveMoneyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Money = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcBagStorageSaveMoneyAsk)
  return target;
}

size_t BagRpcBagStorageSaveMoneyAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcBagStorageSaveMoneyAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Money = 1 [default = -1];
  if (has_money()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->money());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcBagStorageSaveMoneyAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcBagStorageSaveMoneyAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcBagStorageSaveMoneyAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcBagStorageSaveMoneyAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcBagStorageSaveMoneyAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcBagStorageSaveMoneyAsk)
    MergeFrom(*source);
  }
}

void BagRpcBagStorageSaveMoneyAsk::MergeFrom(const BagRpcBagStorageSaveMoneyAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcBagStorageSaveMoneyAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_money()) {
    set_money(from.money());
  }
}

void BagRpcBagStorageSaveMoneyAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcBagStorageSaveMoneyAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcBagStorageSaveMoneyAsk::CopyFrom(const BagRpcBagStorageSaveMoneyAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcBagStorageSaveMoneyAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcBagStorageSaveMoneyAsk::IsInitialized() const {
  return true;
}

void BagRpcBagStorageSaveMoneyAsk::Swap(BagRpcBagStorageSaveMoneyAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcBagStorageSaveMoneyAsk::InternalSwap(BagRpcBagStorageSaveMoneyAsk* other) {
  using std::swap;
  swap(money_, other->money_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcBagStorageSaveMoneyAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcBagStorageSaveMoneyAsk

// optional sint32 Money = 1 [default = -1];
bool BagRpcBagStorageSaveMoneyAsk::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcBagStorageSaveMoneyAsk::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcBagStorageSaveMoneyAsk::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcBagStorageSaveMoneyAsk::clear_money() {
  money_ = -1;
  clear_has_money();
}
::google::protobuf::int32 BagRpcBagStorageSaveMoneyAsk::money() const {
  // @@protoc_insertion_point(field_get:BagRpcBagStorageSaveMoneyAsk.Money)
  return money_;
}
void BagRpcBagStorageSaveMoneyAsk::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagStorageSaveMoneyAsk.Money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcBagStorageSaveMoneyReply::kResultFieldNumber;
const int BagRpcBagStorageSaveMoneyReply::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcBagStorageSaveMoneyReply::BagRpcBagStorageSaveMoneyReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcBagStorageSaveMoneyReply)
}
BagRpcBagStorageSaveMoneyReply::BagRpcBagStorageSaveMoneyReply(const BagRpcBagStorageSaveMoneyReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&result_)) + sizeof(money_));
  // @@protoc_insertion_point(copy_constructor:BagRpcBagStorageSaveMoneyReply)
}

void BagRpcBagStorageSaveMoneyReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  money_ = -1;
}

BagRpcBagStorageSaveMoneyReply::~BagRpcBagStorageSaveMoneyReply() {
  // @@protoc_insertion_point(destructor:BagRpcBagStorageSaveMoneyReply)
  SharedDtor();
}

void BagRpcBagStorageSaveMoneyReply::SharedDtor() {
}

void BagRpcBagStorageSaveMoneyReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcBagStorageSaveMoneyReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcBagStorageSaveMoneyReply& BagRpcBagStorageSaveMoneyReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcBagStorageSaveMoneyReply* BagRpcBagStorageSaveMoneyReply::New(::google::protobuf::Arena* arena) const {
  BagRpcBagStorageSaveMoneyReply* n = new BagRpcBagStorageSaveMoneyReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcBagStorageSaveMoneyReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcBagStorageSaveMoneyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    result_ = -9999;
    money_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcBagStorageSaveMoneyReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcBagStorageSaveMoneyReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Money = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcBagStorageSaveMoneyReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcBagStorageSaveMoneyReply)
  return false;
#undef DO_
}

void BagRpcBagStorageSaveMoneyReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcBagStorageSaveMoneyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 Money = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcBagStorageSaveMoneyReply)
}

::google::protobuf::uint8* BagRpcBagStorageSaveMoneyReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcBagStorageSaveMoneyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 Money = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcBagStorageSaveMoneyReply)
  return target;
}

size_t BagRpcBagStorageSaveMoneyReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcBagStorageSaveMoneyReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 Money = 2 [default = -1];
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->money());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcBagStorageSaveMoneyReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcBagStorageSaveMoneyReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcBagStorageSaveMoneyReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcBagStorageSaveMoneyReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcBagStorageSaveMoneyReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcBagStorageSaveMoneyReply)
    MergeFrom(*source);
  }
}

void BagRpcBagStorageSaveMoneyReply::MergeFrom(const BagRpcBagStorageSaveMoneyReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcBagStorageSaveMoneyReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      money_ = from.money_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcBagStorageSaveMoneyReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcBagStorageSaveMoneyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcBagStorageSaveMoneyReply::CopyFrom(const BagRpcBagStorageSaveMoneyReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcBagStorageSaveMoneyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcBagStorageSaveMoneyReply::IsInitialized() const {
  return true;
}

void BagRpcBagStorageSaveMoneyReply::Swap(BagRpcBagStorageSaveMoneyReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcBagStorageSaveMoneyReply::InternalSwap(BagRpcBagStorageSaveMoneyReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(money_, other->money_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcBagStorageSaveMoneyReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcBagStorageSaveMoneyReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcBagStorageSaveMoneyReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcBagStorageSaveMoneyReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcBagStorageSaveMoneyReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcBagStorageSaveMoneyReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcBagStorageSaveMoneyReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcBagStorageSaveMoneyReply.Result)
  return result_;
}
void BagRpcBagStorageSaveMoneyReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagStorageSaveMoneyReply.Result)
}

// optional sint32 Money = 2 [default = -1];
bool BagRpcBagStorageSaveMoneyReply::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcBagStorageSaveMoneyReply::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcBagStorageSaveMoneyReply::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcBagStorageSaveMoneyReply::clear_money() {
  money_ = -1;
  clear_has_money();
}
::google::protobuf::int32 BagRpcBagStorageSaveMoneyReply::money() const {
  // @@protoc_insertion_point(field_get:BagRpcBagStorageSaveMoneyReply.Money)
  return money_;
}
void BagRpcBagStorageSaveMoneyReply::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagStorageSaveMoneyReply.Money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcBagStorageDrawMoneyAsk::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcBagStorageDrawMoneyAsk::BagRpcBagStorageDrawMoneyAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcBagStorageDrawMoneyAsk)
}
BagRpcBagStorageDrawMoneyAsk::BagRpcBagStorageDrawMoneyAsk(const BagRpcBagStorageDrawMoneyAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  money_ = from.money_;
  // @@protoc_insertion_point(copy_constructor:BagRpcBagStorageDrawMoneyAsk)
}

void BagRpcBagStorageDrawMoneyAsk::SharedCtor() {
  _cached_size_ = 0;
  money_ = -1;
}

BagRpcBagStorageDrawMoneyAsk::~BagRpcBagStorageDrawMoneyAsk() {
  // @@protoc_insertion_point(destructor:BagRpcBagStorageDrawMoneyAsk)
  SharedDtor();
}

void BagRpcBagStorageDrawMoneyAsk::SharedDtor() {
}

void BagRpcBagStorageDrawMoneyAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcBagStorageDrawMoneyAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcBagStorageDrawMoneyAsk& BagRpcBagStorageDrawMoneyAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcBagStorageDrawMoneyAsk* BagRpcBagStorageDrawMoneyAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcBagStorageDrawMoneyAsk* n = new BagRpcBagStorageDrawMoneyAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcBagStorageDrawMoneyAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcBagStorageDrawMoneyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  money_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcBagStorageDrawMoneyAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcBagStorageDrawMoneyAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Money = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcBagStorageDrawMoneyAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcBagStorageDrawMoneyAsk)
  return false;
#undef DO_
}

void BagRpcBagStorageDrawMoneyAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcBagStorageDrawMoneyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Money = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcBagStorageDrawMoneyAsk)
}

::google::protobuf::uint8* BagRpcBagStorageDrawMoneyAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcBagStorageDrawMoneyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Money = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcBagStorageDrawMoneyAsk)
  return target;
}

size_t BagRpcBagStorageDrawMoneyAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcBagStorageDrawMoneyAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Money = 1 [default = -1];
  if (has_money()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->money());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcBagStorageDrawMoneyAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcBagStorageDrawMoneyAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcBagStorageDrawMoneyAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcBagStorageDrawMoneyAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcBagStorageDrawMoneyAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcBagStorageDrawMoneyAsk)
    MergeFrom(*source);
  }
}

void BagRpcBagStorageDrawMoneyAsk::MergeFrom(const BagRpcBagStorageDrawMoneyAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcBagStorageDrawMoneyAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_money()) {
    set_money(from.money());
  }
}

void BagRpcBagStorageDrawMoneyAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcBagStorageDrawMoneyAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcBagStorageDrawMoneyAsk::CopyFrom(const BagRpcBagStorageDrawMoneyAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcBagStorageDrawMoneyAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcBagStorageDrawMoneyAsk::IsInitialized() const {
  return true;
}

void BagRpcBagStorageDrawMoneyAsk::Swap(BagRpcBagStorageDrawMoneyAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcBagStorageDrawMoneyAsk::InternalSwap(BagRpcBagStorageDrawMoneyAsk* other) {
  using std::swap;
  swap(money_, other->money_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcBagStorageDrawMoneyAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcBagStorageDrawMoneyAsk

// optional sint32 Money = 1 [default = -1];
bool BagRpcBagStorageDrawMoneyAsk::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcBagStorageDrawMoneyAsk::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcBagStorageDrawMoneyAsk::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcBagStorageDrawMoneyAsk::clear_money() {
  money_ = -1;
  clear_has_money();
}
::google::protobuf::int32 BagRpcBagStorageDrawMoneyAsk::money() const {
  // @@protoc_insertion_point(field_get:BagRpcBagStorageDrawMoneyAsk.Money)
  return money_;
}
void BagRpcBagStorageDrawMoneyAsk::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagStorageDrawMoneyAsk.Money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcBagStorageDrawMoneyReply::kResultFieldNumber;
const int BagRpcBagStorageDrawMoneyReply::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcBagStorageDrawMoneyReply::BagRpcBagStorageDrawMoneyReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcBagStorageDrawMoneyReply)
}
BagRpcBagStorageDrawMoneyReply::BagRpcBagStorageDrawMoneyReply(const BagRpcBagStorageDrawMoneyReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&money_) -
    reinterpret_cast<char*>(&result_)) + sizeof(money_));
  // @@protoc_insertion_point(copy_constructor:BagRpcBagStorageDrawMoneyReply)
}

void BagRpcBagStorageDrawMoneyReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
  money_ = -1;
}

BagRpcBagStorageDrawMoneyReply::~BagRpcBagStorageDrawMoneyReply() {
  // @@protoc_insertion_point(destructor:BagRpcBagStorageDrawMoneyReply)
  SharedDtor();
}

void BagRpcBagStorageDrawMoneyReply::SharedDtor() {
}

void BagRpcBagStorageDrawMoneyReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcBagStorageDrawMoneyReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcBagStorageDrawMoneyReply& BagRpcBagStorageDrawMoneyReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcBagStorageDrawMoneyReply* BagRpcBagStorageDrawMoneyReply::New(::google::protobuf::Arena* arena) const {
  BagRpcBagStorageDrawMoneyReply* n = new BagRpcBagStorageDrawMoneyReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcBagStorageDrawMoneyReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcBagStorageDrawMoneyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    result_ = -9999;
    money_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcBagStorageDrawMoneyReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcBagStorageDrawMoneyReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 Money = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcBagStorageDrawMoneyReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcBagStorageDrawMoneyReply)
  return false;
#undef DO_
}

void BagRpcBagStorageDrawMoneyReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcBagStorageDrawMoneyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  // optional sint32 Money = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->money(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcBagStorageDrawMoneyReply)
}

::google::protobuf::uint8* BagRpcBagStorageDrawMoneyReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcBagStorageDrawMoneyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  // optional sint32 Money = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->money(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcBagStorageDrawMoneyReply)
  return target;
}

size_t BagRpcBagStorageDrawMoneyReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcBagStorageDrawMoneyReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 Result = 1 [default = -9999];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->result());
    }

    // optional sint32 Money = 2 [default = -1];
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->money());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcBagStorageDrawMoneyReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcBagStorageDrawMoneyReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcBagStorageDrawMoneyReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcBagStorageDrawMoneyReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcBagStorageDrawMoneyReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcBagStorageDrawMoneyReply)
    MergeFrom(*source);
  }
}

void BagRpcBagStorageDrawMoneyReply::MergeFrom(const BagRpcBagStorageDrawMoneyReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcBagStorageDrawMoneyReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      money_ = from.money_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcBagStorageDrawMoneyReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcBagStorageDrawMoneyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcBagStorageDrawMoneyReply::CopyFrom(const BagRpcBagStorageDrawMoneyReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcBagStorageDrawMoneyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcBagStorageDrawMoneyReply::IsInitialized() const {
  return true;
}

void BagRpcBagStorageDrawMoneyReply::Swap(BagRpcBagStorageDrawMoneyReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcBagStorageDrawMoneyReply::InternalSwap(BagRpcBagStorageDrawMoneyReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(money_, other->money_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcBagStorageDrawMoneyReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcBagStorageDrawMoneyReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcBagStorageDrawMoneyReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcBagStorageDrawMoneyReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcBagStorageDrawMoneyReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcBagStorageDrawMoneyReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcBagStorageDrawMoneyReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcBagStorageDrawMoneyReply.Result)
  return result_;
}
void BagRpcBagStorageDrawMoneyReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagStorageDrawMoneyReply.Result)
}

// optional sint32 Money = 2 [default = -1];
bool BagRpcBagStorageDrawMoneyReply::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcBagStorageDrawMoneyReply::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcBagStorageDrawMoneyReply::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcBagStorageDrawMoneyReply::clear_money() {
  money_ = -1;
  clear_has_money();
}
::google::protobuf::int32 BagRpcBagStorageDrawMoneyReply::money() const {
  // @@protoc_insertion_point(field_get:BagRpcBagStorageDrawMoneyReply.Money)
  return money_;
}
void BagRpcBagStorageDrawMoneyReply::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagStorageDrawMoneyReply.Money)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcStorageTidyAsk::BagRpcStorageTidyAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcStorageTidyAsk)
}
BagRpcStorageTidyAsk::BagRpcStorageTidyAsk(const BagRpcStorageTidyAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:BagRpcStorageTidyAsk)
}

void BagRpcStorageTidyAsk::SharedCtor() {
  _cached_size_ = 0;
}

BagRpcStorageTidyAsk::~BagRpcStorageTidyAsk() {
  // @@protoc_insertion_point(destructor:BagRpcStorageTidyAsk)
  SharedDtor();
}

void BagRpcStorageTidyAsk::SharedDtor() {
}

void BagRpcStorageTidyAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcStorageTidyAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcStorageTidyAsk& BagRpcStorageTidyAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcStorageTidyAsk* BagRpcStorageTidyAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcStorageTidyAsk* n = new BagRpcStorageTidyAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcStorageTidyAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcStorageTidyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcStorageTidyAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcStorageTidyAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcStorageTidyAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcStorageTidyAsk)
  return false;
#undef DO_
}

void BagRpcStorageTidyAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcStorageTidyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcStorageTidyAsk)
}

::google::protobuf::uint8* BagRpcStorageTidyAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcStorageTidyAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcStorageTidyAsk)
  return target;
}

size_t BagRpcStorageTidyAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcStorageTidyAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcStorageTidyAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcStorageTidyAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcStorageTidyAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcStorageTidyAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcStorageTidyAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcStorageTidyAsk)
    MergeFrom(*source);
  }
}

void BagRpcStorageTidyAsk::MergeFrom(const BagRpcStorageTidyAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcStorageTidyAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BagRpcStorageTidyAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcStorageTidyAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcStorageTidyAsk::CopyFrom(const BagRpcStorageTidyAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcStorageTidyAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcStorageTidyAsk::IsInitialized() const {
  return true;
}

void BagRpcStorageTidyAsk::Swap(BagRpcStorageTidyAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcStorageTidyAsk::InternalSwap(BagRpcStorageTidyAsk* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcStorageTidyAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcStorageTidyAsk

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcStorageTidyReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcStorageTidyReply::BagRpcStorageTidyReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcStorageTidyReply)
}
BagRpcStorageTidyReply::BagRpcStorageTidyReply(const BagRpcStorageTidyReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:BagRpcStorageTidyReply)
}

void BagRpcStorageTidyReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

BagRpcStorageTidyReply::~BagRpcStorageTidyReply() {
  // @@protoc_insertion_point(destructor:BagRpcStorageTidyReply)
  SharedDtor();
}

void BagRpcStorageTidyReply::SharedDtor() {
}

void BagRpcStorageTidyReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcStorageTidyReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcStorageTidyReply& BagRpcStorageTidyReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcStorageTidyReply* BagRpcStorageTidyReply::New(::google::protobuf::Arena* arena) const {
  BagRpcStorageTidyReply* n = new BagRpcStorageTidyReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcStorageTidyReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcStorageTidyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcStorageTidyReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcStorageTidyReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcStorageTidyReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcStorageTidyReply)
  return false;
#undef DO_
}

void BagRpcStorageTidyReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcStorageTidyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcStorageTidyReply)
}

::google::protobuf::uint8* BagRpcStorageTidyReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcStorageTidyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcStorageTidyReply)
  return target;
}

size_t BagRpcStorageTidyReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcStorageTidyReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcStorageTidyReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcStorageTidyReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcStorageTidyReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcStorageTidyReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcStorageTidyReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcStorageTidyReply)
    MergeFrom(*source);
  }
}

void BagRpcStorageTidyReply::MergeFrom(const BagRpcStorageTidyReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcStorageTidyReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void BagRpcStorageTidyReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcStorageTidyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcStorageTidyReply::CopyFrom(const BagRpcStorageTidyReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcStorageTidyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcStorageTidyReply::IsInitialized() const {
  return true;
}

void BagRpcStorageTidyReply::Swap(BagRpcStorageTidyReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcStorageTidyReply::InternalSwap(BagRpcStorageTidyReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcStorageTidyReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcStorageTidyReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcStorageTidyReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcStorageTidyReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcStorageTidyReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcStorageTidyReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcStorageTidyReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcStorageTidyReply.Result)
  return result_;
}
void BagRpcStorageTidyReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcStorageTidyReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcTalismanLvupAsk::kCostTalismanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcTalismanLvupAsk::BagRpcTalismanLvupAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcTalismanLvupAsk)
}
BagRpcTalismanLvupAsk::BagRpcTalismanLvupAsk(const BagRpcTalismanLvupAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      costtalisman_(from.costtalisman_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:BagRpcTalismanLvupAsk)
}

void BagRpcTalismanLvupAsk::SharedCtor() {
  _cached_size_ = 0;
}

BagRpcTalismanLvupAsk::~BagRpcTalismanLvupAsk() {
  // @@protoc_insertion_point(destructor:BagRpcTalismanLvupAsk)
  SharedDtor();
}

void BagRpcTalismanLvupAsk::SharedDtor() {
}

void BagRpcTalismanLvupAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcTalismanLvupAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcTalismanLvupAsk& BagRpcTalismanLvupAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcTalismanLvupAsk* BagRpcTalismanLvupAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcTalismanLvupAsk* n = new BagRpcTalismanLvupAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcTalismanLvupAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcTalismanLvupAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  costtalisman_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcTalismanLvupAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcTalismanLvupAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 CostTalisman = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 8u, input, this->mutable_costtalisman())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_costtalisman())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcTalismanLvupAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcTalismanLvupAsk)
  return false;
#undef DO_
}

void BagRpcTalismanLvupAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcTalismanLvupAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 CostTalisman = 1;
  for (int i = 0, n = this->costtalisman_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      1, this->costtalisman(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcTalismanLvupAsk)
}

::google::protobuf::uint8* BagRpcTalismanLvupAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcTalismanLvupAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 CostTalisman = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSInt32ToArray(1, this->costtalisman_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcTalismanLvupAsk)
  return target;
}

size_t BagRpcTalismanLvupAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcTalismanLvupAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated sint32 CostTalisman = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->costtalisman_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->costtalisman_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcTalismanLvupAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcTalismanLvupAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcTalismanLvupAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcTalismanLvupAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcTalismanLvupAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcTalismanLvupAsk)
    MergeFrom(*source);
  }
}

void BagRpcTalismanLvupAsk::MergeFrom(const BagRpcTalismanLvupAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcTalismanLvupAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  costtalisman_.MergeFrom(from.costtalisman_);
}

void BagRpcTalismanLvupAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcTalismanLvupAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcTalismanLvupAsk::CopyFrom(const BagRpcTalismanLvupAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcTalismanLvupAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcTalismanLvupAsk::IsInitialized() const {
  return true;
}

void BagRpcTalismanLvupAsk::Swap(BagRpcTalismanLvupAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcTalismanLvupAsk::InternalSwap(BagRpcTalismanLvupAsk* other) {
  using std::swap;
  costtalisman_.InternalSwap(&other->costtalisman_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcTalismanLvupAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcTalismanLvupAsk

// repeated sint32 CostTalisman = 1;
int BagRpcTalismanLvupAsk::costtalisman_size() const {
  return costtalisman_.size();
}
void BagRpcTalismanLvupAsk::clear_costtalisman() {
  costtalisman_.Clear();
}
::google::protobuf::int32 BagRpcTalismanLvupAsk::costtalisman(int index) const {
  // @@protoc_insertion_point(field_get:BagRpcTalismanLvupAsk.CostTalisman)
  return costtalisman_.Get(index);
}
void BagRpcTalismanLvupAsk::set_costtalisman(int index, ::google::protobuf::int32 value) {
  costtalisman_.Set(index, value);
  // @@protoc_insertion_point(field_set:BagRpcTalismanLvupAsk.CostTalisman)
}
void BagRpcTalismanLvupAsk::add_costtalisman(::google::protobuf::int32 value) {
  costtalisman_.Add(value);
  // @@protoc_insertion_point(field_add:BagRpcTalismanLvupAsk.CostTalisman)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BagRpcTalismanLvupAsk::costtalisman() const {
  // @@protoc_insertion_point(field_list:BagRpcTalismanLvupAsk.CostTalisman)
  return costtalisman_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BagRpcTalismanLvupAsk::mutable_costtalisman() {
  // @@protoc_insertion_point(field_mutable_list:BagRpcTalismanLvupAsk.CostTalisman)
  return &costtalisman_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcTalismanLvupReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcTalismanLvupReply::BagRpcTalismanLvupReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcTalismanLvupReply)
}
BagRpcTalismanLvupReply::BagRpcTalismanLvupReply(const BagRpcTalismanLvupReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:BagRpcTalismanLvupReply)
}

void BagRpcTalismanLvupReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

BagRpcTalismanLvupReply::~BagRpcTalismanLvupReply() {
  // @@protoc_insertion_point(destructor:BagRpcTalismanLvupReply)
  SharedDtor();
}

void BagRpcTalismanLvupReply::SharedDtor() {
}

void BagRpcTalismanLvupReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcTalismanLvupReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcTalismanLvupReply& BagRpcTalismanLvupReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcTalismanLvupReply* BagRpcTalismanLvupReply::New(::google::protobuf::Arena* arena) const {
  BagRpcTalismanLvupReply* n = new BagRpcTalismanLvupReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcTalismanLvupReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcTalismanLvupReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcTalismanLvupReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcTalismanLvupReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcTalismanLvupReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcTalismanLvupReply)
  return false;
#undef DO_
}

void BagRpcTalismanLvupReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcTalismanLvupReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcTalismanLvupReply)
}

::google::protobuf::uint8* BagRpcTalismanLvupReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcTalismanLvupReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcTalismanLvupReply)
  return target;
}

size_t BagRpcTalismanLvupReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcTalismanLvupReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcTalismanLvupReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcTalismanLvupReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcTalismanLvupReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcTalismanLvupReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcTalismanLvupReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcTalismanLvupReply)
    MergeFrom(*source);
  }
}

void BagRpcTalismanLvupReply::MergeFrom(const BagRpcTalismanLvupReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcTalismanLvupReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void BagRpcTalismanLvupReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcTalismanLvupReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcTalismanLvupReply::CopyFrom(const BagRpcTalismanLvupReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcTalismanLvupReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcTalismanLvupReply::IsInitialized() const {
  return true;
}

void BagRpcTalismanLvupReply::Swap(BagRpcTalismanLvupReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcTalismanLvupReply::InternalSwap(BagRpcTalismanLvupReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcTalismanLvupReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcTalismanLvupReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcTalismanLvupReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcTalismanLvupReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcTalismanLvupReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcTalismanLvupReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcTalismanLvupReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcTalismanLvupReply.Result)
  return result_;
}
void BagRpcTalismanLvupReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcTalismanLvupReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcTalismanInheritAsk::kRightSideTalismanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcTalismanInheritAsk::BagRpcTalismanInheritAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcTalismanInheritAsk)
}
BagRpcTalismanInheritAsk::BagRpcTalismanInheritAsk(const BagRpcTalismanInheritAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rightsidetalisman_ = from.rightsidetalisman_;
  // @@protoc_insertion_point(copy_constructor:BagRpcTalismanInheritAsk)
}

void BagRpcTalismanInheritAsk::SharedCtor() {
  _cached_size_ = 0;
  rightsidetalisman_ = -1;
}

BagRpcTalismanInheritAsk::~BagRpcTalismanInheritAsk() {
  // @@protoc_insertion_point(destructor:BagRpcTalismanInheritAsk)
  SharedDtor();
}

void BagRpcTalismanInheritAsk::SharedDtor() {
}

void BagRpcTalismanInheritAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcTalismanInheritAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcTalismanInheritAsk& BagRpcTalismanInheritAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcTalismanInheritAsk* BagRpcTalismanInheritAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcTalismanInheritAsk* n = new BagRpcTalismanInheritAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcTalismanInheritAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcTalismanInheritAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rightsidetalisman_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcTalismanInheritAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcTalismanInheritAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 RightSideTalisman = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_rightsidetalisman();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &rightsidetalisman_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcTalismanInheritAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcTalismanInheritAsk)
  return false;
#undef DO_
}

void BagRpcTalismanInheritAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcTalismanInheritAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 RightSideTalisman = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->rightsidetalisman(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcTalismanInheritAsk)
}

::google::protobuf::uint8* BagRpcTalismanInheritAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcTalismanInheritAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 RightSideTalisman = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->rightsidetalisman(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcTalismanInheritAsk)
  return target;
}

size_t BagRpcTalismanInheritAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcTalismanInheritAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 RightSideTalisman = 1 [default = -1];
  if (has_rightsidetalisman()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->rightsidetalisman());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcTalismanInheritAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcTalismanInheritAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcTalismanInheritAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcTalismanInheritAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcTalismanInheritAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcTalismanInheritAsk)
    MergeFrom(*source);
  }
}

void BagRpcTalismanInheritAsk::MergeFrom(const BagRpcTalismanInheritAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcTalismanInheritAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rightsidetalisman()) {
    set_rightsidetalisman(from.rightsidetalisman());
  }
}

void BagRpcTalismanInheritAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcTalismanInheritAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcTalismanInheritAsk::CopyFrom(const BagRpcTalismanInheritAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcTalismanInheritAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcTalismanInheritAsk::IsInitialized() const {
  return true;
}

void BagRpcTalismanInheritAsk::Swap(BagRpcTalismanInheritAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcTalismanInheritAsk::InternalSwap(BagRpcTalismanInheritAsk* other) {
  using std::swap;
  swap(rightsidetalisman_, other->rightsidetalisman_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcTalismanInheritAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcTalismanInheritAsk

// optional sint32 RightSideTalisman = 1 [default = -1];
bool BagRpcTalismanInheritAsk::has_rightsidetalisman() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcTalismanInheritAsk::set_has_rightsidetalisman() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcTalismanInheritAsk::clear_has_rightsidetalisman() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcTalismanInheritAsk::clear_rightsidetalisman() {
  rightsidetalisman_ = -1;
  clear_has_rightsidetalisman();
}
::google::protobuf::int32 BagRpcTalismanInheritAsk::rightsidetalisman() const {
  // @@protoc_insertion_point(field_get:BagRpcTalismanInheritAsk.RightSideTalisman)
  return rightsidetalisman_;
}
void BagRpcTalismanInheritAsk::set_rightsidetalisman(::google::protobuf::int32 value) {
  set_has_rightsidetalisman();
  rightsidetalisman_ = value;
  // @@protoc_insertion_point(field_set:BagRpcTalismanInheritAsk.RightSideTalisman)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcTalismanInheritReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcTalismanInheritReply::BagRpcTalismanInheritReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcTalismanInheritReply)
}
BagRpcTalismanInheritReply::BagRpcTalismanInheritReply(const BagRpcTalismanInheritReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:BagRpcTalismanInheritReply)
}

void BagRpcTalismanInheritReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

BagRpcTalismanInheritReply::~BagRpcTalismanInheritReply() {
  // @@protoc_insertion_point(destructor:BagRpcTalismanInheritReply)
  SharedDtor();
}

void BagRpcTalismanInheritReply::SharedDtor() {
}

void BagRpcTalismanInheritReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcTalismanInheritReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcTalismanInheritReply& BagRpcTalismanInheritReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcTalismanInheritReply* BagRpcTalismanInheritReply::New(::google::protobuf::Arena* arena) const {
  BagRpcTalismanInheritReply* n = new BagRpcTalismanInheritReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcTalismanInheritReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcTalismanInheritReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcTalismanInheritReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcTalismanInheritReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcTalismanInheritReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcTalismanInheritReply)
  return false;
#undef DO_
}

void BagRpcTalismanInheritReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcTalismanInheritReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcTalismanInheritReply)
}

::google::protobuf::uint8* BagRpcTalismanInheritReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcTalismanInheritReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcTalismanInheritReply)
  return target;
}

size_t BagRpcTalismanInheritReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcTalismanInheritReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcTalismanInheritReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcTalismanInheritReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcTalismanInheritReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcTalismanInheritReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcTalismanInheritReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcTalismanInheritReply)
    MergeFrom(*source);
  }
}

void BagRpcTalismanInheritReply::MergeFrom(const BagRpcTalismanInheritReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcTalismanInheritReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void BagRpcTalismanInheritReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcTalismanInheritReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcTalismanInheritReply::CopyFrom(const BagRpcTalismanInheritReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcTalismanInheritReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcTalismanInheritReply::IsInitialized() const {
  return true;
}

void BagRpcTalismanInheritReply::Swap(BagRpcTalismanInheritReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcTalismanInheritReply::InternalSwap(BagRpcTalismanInheritReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcTalismanInheritReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcTalismanInheritReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcTalismanInheritReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcTalismanInheritReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcTalismanInheritReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcTalismanInheritReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcTalismanInheritReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcTalismanInheritReply.Result)
  return result_;
}
void BagRpcTalismanInheritReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcTalismanInheritReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcBagAddNewItemNotify::kNewItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcBagAddNewItemNotify::BagRpcBagAddNewItemNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcBagAddNewItemNotify)
}
BagRpcBagAddNewItemNotify::BagRpcBagAddNewItemNotify(const BagRpcBagAddNewItemNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      newitem_(from.newitem_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:BagRpcBagAddNewItemNotify)
}

void BagRpcBagAddNewItemNotify::SharedCtor() {
  _cached_size_ = 0;
}

BagRpcBagAddNewItemNotify::~BagRpcBagAddNewItemNotify() {
  // @@protoc_insertion_point(destructor:BagRpcBagAddNewItemNotify)
  SharedDtor();
}

void BagRpcBagAddNewItemNotify::SharedDtor() {
}

void BagRpcBagAddNewItemNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcBagAddNewItemNotify::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcBagAddNewItemNotify& BagRpcBagAddNewItemNotify::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcBagAddNewItemNotify* BagRpcBagAddNewItemNotify::New(::google::protobuf::Arena* arena) const {
  BagRpcBagAddNewItemNotify* n = new BagRpcBagAddNewItemNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcBagAddNewItemNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcBagAddNewItemNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  newitem_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcBagAddNewItemNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcBagAddNewItemNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .BagGridObj NewItem = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_newitem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcBagAddNewItemNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcBagAddNewItemNotify)
  return false;
#undef DO_
}

void BagRpcBagAddNewItemNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcBagAddNewItemNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .BagGridObj NewItem = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->newitem_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->newitem(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcBagAddNewItemNotify)
}

::google::protobuf::uint8* BagRpcBagAddNewItemNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcBagAddNewItemNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .BagGridObj NewItem = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->newitem_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->newitem(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcBagAddNewItemNotify)
  return target;
}

size_t BagRpcBagAddNewItemNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcBagAddNewItemNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .BagGridObj NewItem = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->newitem_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->newitem(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcBagAddNewItemNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcBagAddNewItemNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcBagAddNewItemNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcBagAddNewItemNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcBagAddNewItemNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcBagAddNewItemNotify)
    MergeFrom(*source);
  }
}

void BagRpcBagAddNewItemNotify::MergeFrom(const BagRpcBagAddNewItemNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcBagAddNewItemNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  newitem_.MergeFrom(from.newitem_);
}

void BagRpcBagAddNewItemNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcBagAddNewItemNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcBagAddNewItemNotify::CopyFrom(const BagRpcBagAddNewItemNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcBagAddNewItemNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcBagAddNewItemNotify::IsInitialized() const {
  return true;
}

void BagRpcBagAddNewItemNotify::Swap(BagRpcBagAddNewItemNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcBagAddNewItemNotify::InternalSwap(BagRpcBagAddNewItemNotify* other) {
  using std::swap;
  newitem_.InternalSwap(&other->newitem_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcBagAddNewItemNotify::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcBagAddNewItemNotify

// repeated .BagGridObj NewItem = 1;
int BagRpcBagAddNewItemNotify::newitem_size() const {
  return newitem_.size();
}
void BagRpcBagAddNewItemNotify::clear_newitem() {
  newitem_.Clear();
}
const ::BagGridObj& BagRpcBagAddNewItemNotify::newitem(int index) const {
  // @@protoc_insertion_point(field_get:BagRpcBagAddNewItemNotify.NewItem)
  return newitem_.Get(index);
}
::BagGridObj* BagRpcBagAddNewItemNotify::mutable_newitem(int index) {
  // @@protoc_insertion_point(field_mutable:BagRpcBagAddNewItemNotify.NewItem)
  return newitem_.Mutable(index);
}
::BagGridObj* BagRpcBagAddNewItemNotify::add_newitem() {
  // @@protoc_insertion_point(field_add:BagRpcBagAddNewItemNotify.NewItem)
  return newitem_.Add();
}
::google::protobuf::RepeatedPtrField< ::BagGridObj >*
BagRpcBagAddNewItemNotify::mutable_newitem() {
  // @@protoc_insertion_point(field_mutable_list:BagRpcBagAddNewItemNotify.NewItem)
  return &newitem_;
}
const ::google::protobuf::RepeatedPtrField< ::BagGridObj >&
BagRpcBagAddNewItemNotify::newitem() const {
  // @@protoc_insertion_point(field_list:BagRpcBagAddNewItemNotify.NewItem)
  return newitem_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcBagSetAutoPickupAsk::kAutoPickFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcBagSetAutoPickupAsk::BagRpcBagSetAutoPickupAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcBagSetAutoPickupAsk)
}
BagRpcBagSetAutoPickupAsk::BagRpcBagSetAutoPickupAsk(const BagRpcBagSetAutoPickupAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      autopick_(from.autopick_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:BagRpcBagSetAutoPickupAsk)
}

void BagRpcBagSetAutoPickupAsk::SharedCtor() {
  _cached_size_ = 0;
}

BagRpcBagSetAutoPickupAsk::~BagRpcBagSetAutoPickupAsk() {
  // @@protoc_insertion_point(destructor:BagRpcBagSetAutoPickupAsk)
  SharedDtor();
}

void BagRpcBagSetAutoPickupAsk::SharedDtor() {
}

void BagRpcBagSetAutoPickupAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcBagSetAutoPickupAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcBagSetAutoPickupAsk& BagRpcBagSetAutoPickupAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcBagSetAutoPickupAsk* BagRpcBagSetAutoPickupAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcBagSetAutoPickupAsk* n = new BagRpcBagSetAutoPickupAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcBagSetAutoPickupAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcBagSetAutoPickupAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  autopick_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcBagSetAutoPickupAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcBagSetAutoPickupAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KeyValue2IntBool AutoPick = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_autopick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcBagSetAutoPickupAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcBagSetAutoPickupAsk)
  return false;
#undef DO_
}

void BagRpcBagSetAutoPickupAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcBagSetAutoPickupAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KeyValue2IntBool AutoPick = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->autopick_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->autopick(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcBagSetAutoPickupAsk)
}

::google::protobuf::uint8* BagRpcBagSetAutoPickupAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcBagSetAutoPickupAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KeyValue2IntBool AutoPick = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->autopick_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->autopick(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcBagSetAutoPickupAsk)
  return target;
}

size_t BagRpcBagSetAutoPickupAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcBagSetAutoPickupAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .KeyValue2IntBool AutoPick = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->autopick_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->autopick(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcBagSetAutoPickupAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcBagSetAutoPickupAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcBagSetAutoPickupAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcBagSetAutoPickupAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcBagSetAutoPickupAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcBagSetAutoPickupAsk)
    MergeFrom(*source);
  }
}

void BagRpcBagSetAutoPickupAsk::MergeFrom(const BagRpcBagSetAutoPickupAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcBagSetAutoPickupAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  autopick_.MergeFrom(from.autopick_);
}

void BagRpcBagSetAutoPickupAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcBagSetAutoPickupAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcBagSetAutoPickupAsk::CopyFrom(const BagRpcBagSetAutoPickupAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcBagSetAutoPickupAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcBagSetAutoPickupAsk::IsInitialized() const {
  return true;
}

void BagRpcBagSetAutoPickupAsk::Swap(BagRpcBagSetAutoPickupAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcBagSetAutoPickupAsk::InternalSwap(BagRpcBagSetAutoPickupAsk* other) {
  using std::swap;
  autopick_.InternalSwap(&other->autopick_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcBagSetAutoPickupAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcBagSetAutoPickupAsk

// repeated .KeyValue2IntBool AutoPick = 1;
int BagRpcBagSetAutoPickupAsk::autopick_size() const {
  return autopick_.size();
}
void BagRpcBagSetAutoPickupAsk::clear_autopick() {
  autopick_.Clear();
}
const ::KeyValue2IntBool& BagRpcBagSetAutoPickupAsk::autopick(int index) const {
  // @@protoc_insertion_point(field_get:BagRpcBagSetAutoPickupAsk.AutoPick)
  return autopick_.Get(index);
}
::KeyValue2IntBool* BagRpcBagSetAutoPickupAsk::mutable_autopick(int index) {
  // @@protoc_insertion_point(field_mutable:BagRpcBagSetAutoPickupAsk.AutoPick)
  return autopick_.Mutable(index);
}
::KeyValue2IntBool* BagRpcBagSetAutoPickupAsk::add_autopick() {
  // @@protoc_insertion_point(field_add:BagRpcBagSetAutoPickupAsk.AutoPick)
  return autopick_.Add();
}
::google::protobuf::RepeatedPtrField< ::KeyValue2IntBool >*
BagRpcBagSetAutoPickupAsk::mutable_autopick() {
  // @@protoc_insertion_point(field_mutable_list:BagRpcBagSetAutoPickupAsk.AutoPick)
  return &autopick_;
}
const ::google::protobuf::RepeatedPtrField< ::KeyValue2IntBool >&
BagRpcBagSetAutoPickupAsk::autopick() const {
  // @@protoc_insertion_point(field_list:BagRpcBagSetAutoPickupAsk.AutoPick)
  return autopick_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcBagSetAutoPickupReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcBagSetAutoPickupReply::BagRpcBagSetAutoPickupReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcBagSetAutoPickupReply)
}
BagRpcBagSetAutoPickupReply::BagRpcBagSetAutoPickupReply(const BagRpcBagSetAutoPickupReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:BagRpcBagSetAutoPickupReply)
}

void BagRpcBagSetAutoPickupReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

BagRpcBagSetAutoPickupReply::~BagRpcBagSetAutoPickupReply() {
  // @@protoc_insertion_point(destructor:BagRpcBagSetAutoPickupReply)
  SharedDtor();
}

void BagRpcBagSetAutoPickupReply::SharedDtor() {
}

void BagRpcBagSetAutoPickupReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcBagSetAutoPickupReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcBagSetAutoPickupReply& BagRpcBagSetAutoPickupReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcBagSetAutoPickupReply* BagRpcBagSetAutoPickupReply::New(::google::protobuf::Arena* arena) const {
  BagRpcBagSetAutoPickupReply* n = new BagRpcBagSetAutoPickupReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcBagSetAutoPickupReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcBagSetAutoPickupReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcBagSetAutoPickupReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcBagSetAutoPickupReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcBagSetAutoPickupReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcBagSetAutoPickupReply)
  return false;
#undef DO_
}

void BagRpcBagSetAutoPickupReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcBagSetAutoPickupReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcBagSetAutoPickupReply)
}

::google::protobuf::uint8* BagRpcBagSetAutoPickupReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcBagSetAutoPickupReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcBagSetAutoPickupReply)
  return target;
}

size_t BagRpcBagSetAutoPickupReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcBagSetAutoPickupReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcBagSetAutoPickupReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcBagSetAutoPickupReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcBagSetAutoPickupReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcBagSetAutoPickupReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcBagSetAutoPickupReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcBagSetAutoPickupReply)
    MergeFrom(*source);
  }
}

void BagRpcBagSetAutoPickupReply::MergeFrom(const BagRpcBagSetAutoPickupReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcBagSetAutoPickupReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void BagRpcBagSetAutoPickupReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcBagSetAutoPickupReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcBagSetAutoPickupReply::CopyFrom(const BagRpcBagSetAutoPickupReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcBagSetAutoPickupReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcBagSetAutoPickupReply::IsInitialized() const {
  return true;
}

void BagRpcBagSetAutoPickupReply::Swap(BagRpcBagSetAutoPickupReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcBagSetAutoPickupReply::InternalSwap(BagRpcBagSetAutoPickupReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcBagSetAutoPickupReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcBagSetAutoPickupReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcBagSetAutoPickupReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcBagSetAutoPickupReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcBagSetAutoPickupReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcBagSetAutoPickupReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcBagSetAutoPickupReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcBagSetAutoPickupReply.Result)
  return result_;
}
void BagRpcBagSetAutoPickupReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagSetAutoPickupReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcGetNewItemNotify::kItemFieldNumber;
const int BagRpcGetNewItemNotify::kModuleIdFieldNumber;
const int BagRpcGetNewItemNotify::kPathWayIdFieldNumber;
const int BagRpcGetNewItemNotify::kModuleParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcGetNewItemNotify::BagRpcGetNewItemNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcGetNewItemNotify)
}
BagRpcGetNewItemNotify::BagRpcGetNewItemNotify(const BagRpcGetNewItemNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      item_(from.item_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&moduleparam_, &from.moduleparam_,
    static_cast<size_t>(reinterpret_cast<char*>(&pathwayid_) -
    reinterpret_cast<char*>(&moduleparam_)) + sizeof(pathwayid_));
  // @@protoc_insertion_point(copy_constructor:BagRpcGetNewItemNotify)
}

void BagRpcGetNewItemNotify::SharedCtor() {
  _cached_size_ = 0;
  moduleparam_ = -1;
  moduleid_ = -1;
  pathwayid_ = -1;
}

BagRpcGetNewItemNotify::~BagRpcGetNewItemNotify() {
  // @@protoc_insertion_point(destructor:BagRpcGetNewItemNotify)
  SharedDtor();
}

void BagRpcGetNewItemNotify::SharedDtor() {
}

void BagRpcGetNewItemNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcGetNewItemNotify::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcGetNewItemNotify& BagRpcGetNewItemNotify::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcGetNewItemNotify* BagRpcGetNewItemNotify::New(::google::protobuf::Arena* arena) const {
  BagRpcGetNewItemNotify* n = new BagRpcGetNewItemNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcGetNewItemNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcGetNewItemNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    moduleparam_ = -1;
    moduleid_ = -1;
    pathwayid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcGetNewItemNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcGetNewItemNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KeyValue2IntInt Item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ModuleId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_moduleid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &moduleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 PathWayId = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pathwayid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pathwayid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 ModuleParam = 4 [default = -1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_moduleparam();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &moduleparam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcGetNewItemNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcGetNewItemNotify)
  return false;
#undef DO_
}

void BagRpcGetNewItemNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcGetNewItemNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KeyValue2IntInt Item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional sint32 ModuleId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->moduleid(), output);
  }

  // optional sint32 PathWayId = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->pathwayid(), output);
  }

  // optional sint32 ModuleParam = 4 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->moduleparam(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcGetNewItemNotify)
}

::google::protobuf::uint8* BagRpcGetNewItemNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcGetNewItemNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KeyValue2IntInt Item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->item(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional sint32 ModuleId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->moduleid(), target);
  }

  // optional sint32 PathWayId = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->pathwayid(), target);
  }

  // optional sint32 ModuleParam = 4 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->moduleparam(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcGetNewItemNotify)
  return target;
}

size_t BagRpcGetNewItemNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcGetNewItemNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .KeyValue2IntInt Item = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->item_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional sint32 ModuleParam = 4 [default = -1];
    if (has_moduleparam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->moduleparam());
    }

    // optional sint32 ModuleId = 2 [default = -1];
    if (has_moduleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->moduleid());
    }

    // optional sint32 PathWayId = 3 [default = -1];
    if (has_pathwayid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->pathwayid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcGetNewItemNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcGetNewItemNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcGetNewItemNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcGetNewItemNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcGetNewItemNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcGetNewItemNotify)
    MergeFrom(*source);
  }
}

void BagRpcGetNewItemNotify::MergeFrom(const BagRpcGetNewItemNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcGetNewItemNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      moduleparam_ = from.moduleparam_;
    }
    if (cached_has_bits & 0x00000002u) {
      moduleid_ = from.moduleid_;
    }
    if (cached_has_bits & 0x00000004u) {
      pathwayid_ = from.pathwayid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcGetNewItemNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcGetNewItemNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcGetNewItemNotify::CopyFrom(const BagRpcGetNewItemNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcGetNewItemNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcGetNewItemNotify::IsInitialized() const {
  return true;
}

void BagRpcGetNewItemNotify::Swap(BagRpcGetNewItemNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcGetNewItemNotify::InternalSwap(BagRpcGetNewItemNotify* other) {
  using std::swap;
  item_.InternalSwap(&other->item_);
  swap(moduleparam_, other->moduleparam_);
  swap(moduleid_, other->moduleid_);
  swap(pathwayid_, other->pathwayid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcGetNewItemNotify::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcGetNewItemNotify

// repeated .KeyValue2IntInt Item = 1;
int BagRpcGetNewItemNotify::item_size() const {
  return item_.size();
}
void BagRpcGetNewItemNotify::clear_item() {
  item_.Clear();
}
const ::KeyValue2IntInt& BagRpcGetNewItemNotify::item(int index) const {
  // @@protoc_insertion_point(field_get:BagRpcGetNewItemNotify.Item)
  return item_.Get(index);
}
::KeyValue2IntInt* BagRpcGetNewItemNotify::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:BagRpcGetNewItemNotify.Item)
  return item_.Mutable(index);
}
::KeyValue2IntInt* BagRpcGetNewItemNotify::add_item() {
  // @@protoc_insertion_point(field_add:BagRpcGetNewItemNotify.Item)
  return item_.Add();
}
::google::protobuf::RepeatedPtrField< ::KeyValue2IntInt >*
BagRpcGetNewItemNotify::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:BagRpcGetNewItemNotify.Item)
  return &item_;
}
const ::google::protobuf::RepeatedPtrField< ::KeyValue2IntInt >&
BagRpcGetNewItemNotify::item() const {
  // @@protoc_insertion_point(field_list:BagRpcGetNewItemNotify.Item)
  return item_;
}

// optional sint32 ModuleId = 2 [default = -1];
bool BagRpcGetNewItemNotify::has_moduleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcGetNewItemNotify::set_has_moduleid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcGetNewItemNotify::clear_has_moduleid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcGetNewItemNotify::clear_moduleid() {
  moduleid_ = -1;
  clear_has_moduleid();
}
::google::protobuf::int32 BagRpcGetNewItemNotify::moduleid() const {
  // @@protoc_insertion_point(field_get:BagRpcGetNewItemNotify.ModuleId)
  return moduleid_;
}
void BagRpcGetNewItemNotify::set_moduleid(::google::protobuf::int32 value) {
  set_has_moduleid();
  moduleid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcGetNewItemNotify.ModuleId)
}

// optional sint32 PathWayId = 3 [default = -1];
bool BagRpcGetNewItemNotify::has_pathwayid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcGetNewItemNotify::set_has_pathwayid() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcGetNewItemNotify::clear_has_pathwayid() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcGetNewItemNotify::clear_pathwayid() {
  pathwayid_ = -1;
  clear_has_pathwayid();
}
::google::protobuf::int32 BagRpcGetNewItemNotify::pathwayid() const {
  // @@protoc_insertion_point(field_get:BagRpcGetNewItemNotify.PathWayId)
  return pathwayid_;
}
void BagRpcGetNewItemNotify::set_pathwayid(::google::protobuf::int32 value) {
  set_has_pathwayid();
  pathwayid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcGetNewItemNotify.PathWayId)
}

// optional sint32 ModuleParam = 4 [default = -1];
bool BagRpcGetNewItemNotify::has_moduleparam() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcGetNewItemNotify::set_has_moduleparam() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcGetNewItemNotify::clear_has_moduleparam() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcGetNewItemNotify::clear_moduleparam() {
  moduleparam_ = -1;
  clear_has_moduleparam();
}
::google::protobuf::int32 BagRpcGetNewItemNotify::moduleparam() const {
  // @@protoc_insertion_point(field_get:BagRpcGetNewItemNotify.ModuleParam)
  return moduleparam_;
}
void BagRpcGetNewItemNotify::set_moduleparam(::google::protobuf::int32 value) {
  set_has_moduleparam();
  moduleparam_ = value;
  // @@protoc_insertion_point(field_set:BagRpcGetNewItemNotify.ModuleParam)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcBagErrorNotify::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcBagErrorNotify::BagRpcBagErrorNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcBagErrorNotify)
}
BagRpcBagErrorNotify::BagRpcBagErrorNotify(const BagRpcBagErrorNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:BagRpcBagErrorNotify)
}

void BagRpcBagErrorNotify::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

BagRpcBagErrorNotify::~BagRpcBagErrorNotify() {
  // @@protoc_insertion_point(destructor:BagRpcBagErrorNotify)
  SharedDtor();
}

void BagRpcBagErrorNotify::SharedDtor() {
}

void BagRpcBagErrorNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcBagErrorNotify::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcBagErrorNotify& BagRpcBagErrorNotify::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcBagErrorNotify* BagRpcBagErrorNotify::New(::google::protobuf::Arena* arena) const {
  BagRpcBagErrorNotify* n = new BagRpcBagErrorNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcBagErrorNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcBagErrorNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcBagErrorNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcBagErrorNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 2 [default = -9999];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcBagErrorNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcBagErrorNotify)
  return false;
#undef DO_
}

void BagRpcBagErrorNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcBagErrorNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 2 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcBagErrorNotify)
}

::google::protobuf::uint8* BagRpcBagErrorNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcBagErrorNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 2 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcBagErrorNotify)
  return target;
}

size_t BagRpcBagErrorNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcBagErrorNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 2 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcBagErrorNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcBagErrorNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcBagErrorNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcBagErrorNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcBagErrorNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcBagErrorNotify)
    MergeFrom(*source);
  }
}

void BagRpcBagErrorNotify::MergeFrom(const BagRpcBagErrorNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcBagErrorNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void BagRpcBagErrorNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcBagErrorNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcBagErrorNotify::CopyFrom(const BagRpcBagErrorNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcBagErrorNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcBagErrorNotify::IsInitialized() const {
  return true;
}

void BagRpcBagErrorNotify::Swap(BagRpcBagErrorNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcBagErrorNotify::InternalSwap(BagRpcBagErrorNotify* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcBagErrorNotify::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcBagErrorNotify

// optional sint32 Result = 2 [default = -9999];
bool BagRpcBagErrorNotify::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcBagErrorNotify::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcBagErrorNotify::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcBagErrorNotify::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcBagErrorNotify::result() const {
  // @@protoc_insertion_point(field_get:BagRpcBagErrorNotify.Result)
  return result_;
}
void BagRpcBagErrorNotify::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcBagErrorNotify.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcTalismanRefindStarAsk::kFabaoIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcTalismanRefindStarAsk::BagRpcTalismanRefindStarAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcTalismanRefindStarAsk)
}
BagRpcTalismanRefindStarAsk::BagRpcTalismanRefindStarAsk(const BagRpcTalismanRefindStarAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fabaoid_ = from.fabaoid_;
  // @@protoc_insertion_point(copy_constructor:BagRpcTalismanRefindStarAsk)
}

void BagRpcTalismanRefindStarAsk::SharedCtor() {
  _cached_size_ = 0;
  fabaoid_ = GOOGLE_LONGLONG(-1);
}

BagRpcTalismanRefindStarAsk::~BagRpcTalismanRefindStarAsk() {
  // @@protoc_insertion_point(destructor:BagRpcTalismanRefindStarAsk)
  SharedDtor();
}

void BagRpcTalismanRefindStarAsk::SharedDtor() {
}

void BagRpcTalismanRefindStarAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcTalismanRefindStarAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcTalismanRefindStarAsk& BagRpcTalismanRefindStarAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcTalismanRefindStarAsk* BagRpcTalismanRefindStarAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcTalismanRefindStarAsk* n = new BagRpcTalismanRefindStarAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcTalismanRefindStarAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcTalismanRefindStarAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fabaoid_ = GOOGLE_LONGLONG(-1);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcTalismanRefindStarAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcTalismanRefindStarAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 FabaoId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_fabaoid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &fabaoid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcTalismanRefindStarAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcTalismanRefindStarAsk)
  return false;
#undef DO_
}

void BagRpcTalismanRefindStarAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcTalismanRefindStarAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 FabaoId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->fabaoid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcTalismanRefindStarAsk)
}

::google::protobuf::uint8* BagRpcTalismanRefindStarAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcTalismanRefindStarAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 FabaoId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->fabaoid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcTalismanRefindStarAsk)
  return target;
}

size_t BagRpcTalismanRefindStarAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcTalismanRefindStarAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint64 FabaoId = 1 [default = -1];
  if (has_fabaoid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->fabaoid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcTalismanRefindStarAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcTalismanRefindStarAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcTalismanRefindStarAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcTalismanRefindStarAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcTalismanRefindStarAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcTalismanRefindStarAsk)
    MergeFrom(*source);
  }
}

void BagRpcTalismanRefindStarAsk::MergeFrom(const BagRpcTalismanRefindStarAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcTalismanRefindStarAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_fabaoid()) {
    set_fabaoid(from.fabaoid());
  }
}

void BagRpcTalismanRefindStarAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcTalismanRefindStarAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcTalismanRefindStarAsk::CopyFrom(const BagRpcTalismanRefindStarAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcTalismanRefindStarAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcTalismanRefindStarAsk::IsInitialized() const {
  return true;
}

void BagRpcTalismanRefindStarAsk::Swap(BagRpcTalismanRefindStarAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcTalismanRefindStarAsk::InternalSwap(BagRpcTalismanRefindStarAsk* other) {
  using std::swap;
  swap(fabaoid_, other->fabaoid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcTalismanRefindStarAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcTalismanRefindStarAsk

// optional sint64 FabaoId = 1 [default = -1];
bool BagRpcTalismanRefindStarAsk::has_fabaoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcTalismanRefindStarAsk::set_has_fabaoid() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcTalismanRefindStarAsk::clear_has_fabaoid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcTalismanRefindStarAsk::clear_fabaoid() {
  fabaoid_ = GOOGLE_LONGLONG(-1);
  clear_has_fabaoid();
}
::google::protobuf::int64 BagRpcTalismanRefindStarAsk::fabaoid() const {
  // @@protoc_insertion_point(field_get:BagRpcTalismanRefindStarAsk.FabaoId)
  return fabaoid_;
}
void BagRpcTalismanRefindStarAsk::set_fabaoid(::google::protobuf::int64 value) {
  set_has_fabaoid();
  fabaoid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcTalismanRefindStarAsk.FabaoId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcTalismanRefindStarReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcTalismanRefindStarReply::BagRpcTalismanRefindStarReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcTalismanRefindStarReply)
}
BagRpcTalismanRefindStarReply::BagRpcTalismanRefindStarReply(const BagRpcTalismanRefindStarReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:BagRpcTalismanRefindStarReply)
}

void BagRpcTalismanRefindStarReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

BagRpcTalismanRefindStarReply::~BagRpcTalismanRefindStarReply() {
  // @@protoc_insertion_point(destructor:BagRpcTalismanRefindStarReply)
  SharedDtor();
}

void BagRpcTalismanRefindStarReply::SharedDtor() {
}

void BagRpcTalismanRefindStarReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcTalismanRefindStarReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcTalismanRefindStarReply& BagRpcTalismanRefindStarReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcTalismanRefindStarReply* BagRpcTalismanRefindStarReply::New(::google::protobuf::Arena* arena) const {
  BagRpcTalismanRefindStarReply* n = new BagRpcTalismanRefindStarReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcTalismanRefindStarReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcTalismanRefindStarReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcTalismanRefindStarReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcTalismanRefindStarReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcTalismanRefindStarReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcTalismanRefindStarReply)
  return false;
#undef DO_
}

void BagRpcTalismanRefindStarReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcTalismanRefindStarReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcTalismanRefindStarReply)
}

::google::protobuf::uint8* BagRpcTalismanRefindStarReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcTalismanRefindStarReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcTalismanRefindStarReply)
  return target;
}

size_t BagRpcTalismanRefindStarReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcTalismanRefindStarReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcTalismanRefindStarReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcTalismanRefindStarReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcTalismanRefindStarReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcTalismanRefindStarReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcTalismanRefindStarReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcTalismanRefindStarReply)
    MergeFrom(*source);
  }
}

void BagRpcTalismanRefindStarReply::MergeFrom(const BagRpcTalismanRefindStarReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcTalismanRefindStarReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void BagRpcTalismanRefindStarReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcTalismanRefindStarReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcTalismanRefindStarReply::CopyFrom(const BagRpcTalismanRefindStarReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcTalismanRefindStarReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcTalismanRefindStarReply::IsInitialized() const {
  return true;
}

void BagRpcTalismanRefindStarReply::Swap(BagRpcTalismanRefindStarReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcTalismanRefindStarReply::InternalSwap(BagRpcTalismanRefindStarReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcTalismanRefindStarReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcTalismanRefindStarReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcTalismanRefindStarReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcTalismanRefindStarReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcTalismanRefindStarReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcTalismanRefindStarReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcTalismanRefindStarReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcTalismanRefindStarReply.Result)
  return result_;
}
void BagRpcTalismanRefindStarReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcTalismanRefindStarReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcTalismanUpSlotSkillLevelAsk::kFabaoIdFieldNumber;
const int BagRpcTalismanUpSlotSkillLevelAsk::kSlotIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcTalismanUpSlotSkillLevelAsk::BagRpcTalismanUpSlotSkillLevelAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcTalismanUpSlotSkillLevelAsk)
}
BagRpcTalismanUpSlotSkillLevelAsk::BagRpcTalismanUpSlotSkillLevelAsk(const BagRpcTalismanUpSlotSkillLevelAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&slotid_, &from.slotid_,
    static_cast<size_t>(reinterpret_cast<char*>(&fabaoid_) -
    reinterpret_cast<char*>(&slotid_)) + sizeof(fabaoid_));
  // @@protoc_insertion_point(copy_constructor:BagRpcTalismanUpSlotSkillLevelAsk)
}

void BagRpcTalismanUpSlotSkillLevelAsk::SharedCtor() {
  _cached_size_ = 0;
  slotid_ = -1;
  fabaoid_ = GOOGLE_LONGLONG(-1);
}

BagRpcTalismanUpSlotSkillLevelAsk::~BagRpcTalismanUpSlotSkillLevelAsk() {
  // @@protoc_insertion_point(destructor:BagRpcTalismanUpSlotSkillLevelAsk)
  SharedDtor();
}

void BagRpcTalismanUpSlotSkillLevelAsk::SharedDtor() {
}

void BagRpcTalismanUpSlotSkillLevelAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcTalismanUpSlotSkillLevelAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcTalismanUpSlotSkillLevelAsk& BagRpcTalismanUpSlotSkillLevelAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcTalismanUpSlotSkillLevelAsk* BagRpcTalismanUpSlotSkillLevelAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcTalismanUpSlotSkillLevelAsk* n = new BagRpcTalismanUpSlotSkillLevelAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcTalismanUpSlotSkillLevelAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcTalismanUpSlotSkillLevelAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    slotid_ = -1;
    fabaoid_ = GOOGLE_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcTalismanUpSlotSkillLevelAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcTalismanUpSlotSkillLevelAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 FabaoId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_fabaoid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &fabaoid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 SlotId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_slotid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &slotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcTalismanUpSlotSkillLevelAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcTalismanUpSlotSkillLevelAsk)
  return false;
#undef DO_
}

void BagRpcTalismanUpSlotSkillLevelAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcTalismanUpSlotSkillLevelAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 FabaoId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->fabaoid(), output);
  }

  // optional sint32 SlotId = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->slotid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcTalismanUpSlotSkillLevelAsk)
}

::google::protobuf::uint8* BagRpcTalismanUpSlotSkillLevelAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcTalismanUpSlotSkillLevelAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 FabaoId = 1 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->fabaoid(), target);
  }

  // optional sint32 SlotId = 2 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->slotid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcTalismanUpSlotSkillLevelAsk)
  return target;
}

size_t BagRpcTalismanUpSlotSkillLevelAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcTalismanUpSlotSkillLevelAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional sint32 SlotId = 2 [default = -1];
    if (has_slotid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->slotid());
    }

    // optional sint64 FabaoId = 1 [default = -1];
    if (has_fabaoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->fabaoid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcTalismanUpSlotSkillLevelAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcTalismanUpSlotSkillLevelAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcTalismanUpSlotSkillLevelAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcTalismanUpSlotSkillLevelAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcTalismanUpSlotSkillLevelAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcTalismanUpSlotSkillLevelAsk)
    MergeFrom(*source);
  }
}

void BagRpcTalismanUpSlotSkillLevelAsk::MergeFrom(const BagRpcTalismanUpSlotSkillLevelAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcTalismanUpSlotSkillLevelAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      slotid_ = from.slotid_;
    }
    if (cached_has_bits & 0x00000002u) {
      fabaoid_ = from.fabaoid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcTalismanUpSlotSkillLevelAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcTalismanUpSlotSkillLevelAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcTalismanUpSlotSkillLevelAsk::CopyFrom(const BagRpcTalismanUpSlotSkillLevelAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcTalismanUpSlotSkillLevelAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcTalismanUpSlotSkillLevelAsk::IsInitialized() const {
  return true;
}

void BagRpcTalismanUpSlotSkillLevelAsk::Swap(BagRpcTalismanUpSlotSkillLevelAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcTalismanUpSlotSkillLevelAsk::InternalSwap(BagRpcTalismanUpSlotSkillLevelAsk* other) {
  using std::swap;
  swap(slotid_, other->slotid_);
  swap(fabaoid_, other->fabaoid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcTalismanUpSlotSkillLevelAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcTalismanUpSlotSkillLevelAsk

// optional sint64 FabaoId = 1 [default = -1];
bool BagRpcTalismanUpSlotSkillLevelAsk::has_fabaoid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcTalismanUpSlotSkillLevelAsk::set_has_fabaoid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcTalismanUpSlotSkillLevelAsk::clear_has_fabaoid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcTalismanUpSlotSkillLevelAsk::clear_fabaoid() {
  fabaoid_ = GOOGLE_LONGLONG(-1);
  clear_has_fabaoid();
}
::google::protobuf::int64 BagRpcTalismanUpSlotSkillLevelAsk::fabaoid() const {
  // @@protoc_insertion_point(field_get:BagRpcTalismanUpSlotSkillLevelAsk.FabaoId)
  return fabaoid_;
}
void BagRpcTalismanUpSlotSkillLevelAsk::set_fabaoid(::google::protobuf::int64 value) {
  set_has_fabaoid();
  fabaoid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcTalismanUpSlotSkillLevelAsk.FabaoId)
}

// optional sint32 SlotId = 2 [default = -1];
bool BagRpcTalismanUpSlotSkillLevelAsk::has_slotid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcTalismanUpSlotSkillLevelAsk::set_has_slotid() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcTalismanUpSlotSkillLevelAsk::clear_has_slotid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcTalismanUpSlotSkillLevelAsk::clear_slotid() {
  slotid_ = -1;
  clear_has_slotid();
}
::google::protobuf::int32 BagRpcTalismanUpSlotSkillLevelAsk::slotid() const {
  // @@protoc_insertion_point(field_get:BagRpcTalismanUpSlotSkillLevelAsk.SlotId)
  return slotid_;
}
void BagRpcTalismanUpSlotSkillLevelAsk::set_slotid(::google::protobuf::int32 value) {
  set_has_slotid();
  slotid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcTalismanUpSlotSkillLevelAsk.SlotId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcTalismanUpSlotSkillLevelReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcTalismanUpSlotSkillLevelReply::BagRpcTalismanUpSlotSkillLevelReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcTalismanUpSlotSkillLevelReply)
}
BagRpcTalismanUpSlotSkillLevelReply::BagRpcTalismanUpSlotSkillLevelReply(const BagRpcTalismanUpSlotSkillLevelReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:BagRpcTalismanUpSlotSkillLevelReply)
}

void BagRpcTalismanUpSlotSkillLevelReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

BagRpcTalismanUpSlotSkillLevelReply::~BagRpcTalismanUpSlotSkillLevelReply() {
  // @@protoc_insertion_point(destructor:BagRpcTalismanUpSlotSkillLevelReply)
  SharedDtor();
}

void BagRpcTalismanUpSlotSkillLevelReply::SharedDtor() {
}

void BagRpcTalismanUpSlotSkillLevelReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcTalismanUpSlotSkillLevelReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcTalismanUpSlotSkillLevelReply& BagRpcTalismanUpSlotSkillLevelReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcTalismanUpSlotSkillLevelReply* BagRpcTalismanUpSlotSkillLevelReply::New(::google::protobuf::Arena* arena) const {
  BagRpcTalismanUpSlotSkillLevelReply* n = new BagRpcTalismanUpSlotSkillLevelReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcTalismanUpSlotSkillLevelReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcTalismanUpSlotSkillLevelReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcTalismanUpSlotSkillLevelReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcTalismanUpSlotSkillLevelReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcTalismanUpSlotSkillLevelReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcTalismanUpSlotSkillLevelReply)
  return false;
#undef DO_
}

void BagRpcTalismanUpSlotSkillLevelReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcTalismanUpSlotSkillLevelReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcTalismanUpSlotSkillLevelReply)
}

::google::protobuf::uint8* BagRpcTalismanUpSlotSkillLevelReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcTalismanUpSlotSkillLevelReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcTalismanUpSlotSkillLevelReply)
  return target;
}

size_t BagRpcTalismanUpSlotSkillLevelReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcTalismanUpSlotSkillLevelReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcTalismanUpSlotSkillLevelReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcTalismanUpSlotSkillLevelReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcTalismanUpSlotSkillLevelReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcTalismanUpSlotSkillLevelReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcTalismanUpSlotSkillLevelReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcTalismanUpSlotSkillLevelReply)
    MergeFrom(*source);
  }
}

void BagRpcTalismanUpSlotSkillLevelReply::MergeFrom(const BagRpcTalismanUpSlotSkillLevelReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcTalismanUpSlotSkillLevelReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void BagRpcTalismanUpSlotSkillLevelReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcTalismanUpSlotSkillLevelReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcTalismanUpSlotSkillLevelReply::CopyFrom(const BagRpcTalismanUpSlotSkillLevelReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcTalismanUpSlotSkillLevelReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcTalismanUpSlotSkillLevelReply::IsInitialized() const {
  return true;
}

void BagRpcTalismanUpSlotSkillLevelReply::Swap(BagRpcTalismanUpSlotSkillLevelReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcTalismanUpSlotSkillLevelReply::InternalSwap(BagRpcTalismanUpSlotSkillLevelReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcTalismanUpSlotSkillLevelReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcTalismanUpSlotSkillLevelReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcTalismanUpSlotSkillLevelReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcTalismanUpSlotSkillLevelReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcTalismanUpSlotSkillLevelReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcTalismanUpSlotSkillLevelReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcTalismanUpSlotSkillLevelReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcTalismanUpSlotSkillLevelReply.Result)
  return result_;
}
void BagRpcTalismanUpSlotSkillLevelReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcTalismanUpSlotSkillLevelReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcTalismanAttrChangeNotify::kAttrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcTalismanAttrChangeNotify::BagRpcTalismanAttrChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcTalismanAttrChangeNotify)
}
BagRpcTalismanAttrChangeNotify::BagRpcTalismanAttrChangeNotify(const BagRpcTalismanAttrChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      attr_(from.attr_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:BagRpcTalismanAttrChangeNotify)
}

void BagRpcTalismanAttrChangeNotify::SharedCtor() {
  _cached_size_ = 0;
}

BagRpcTalismanAttrChangeNotify::~BagRpcTalismanAttrChangeNotify() {
  // @@protoc_insertion_point(destructor:BagRpcTalismanAttrChangeNotify)
  SharedDtor();
}

void BagRpcTalismanAttrChangeNotify::SharedDtor() {
}

void BagRpcTalismanAttrChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcTalismanAttrChangeNotify::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcTalismanAttrChangeNotify& BagRpcTalismanAttrChangeNotify::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcTalismanAttrChangeNotify* BagRpcTalismanAttrChangeNotify::New(::google::protobuf::Arena* arena) const {
  BagRpcTalismanAttrChangeNotify* n = new BagRpcTalismanAttrChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcTalismanAttrChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcTalismanAttrChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attr_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcTalismanAttrChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcTalismanAttrChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KeyValue2IntInt Attr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcTalismanAttrChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcTalismanAttrChangeNotify)
  return false;
#undef DO_
}

void BagRpcTalismanAttrChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcTalismanAttrChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KeyValue2IntInt Attr = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attr_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->attr(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcTalismanAttrChangeNotify)
}

::google::protobuf::uint8* BagRpcTalismanAttrChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcTalismanAttrChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KeyValue2IntInt Attr = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attr_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->attr(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcTalismanAttrChangeNotify)
  return target;
}

size_t BagRpcTalismanAttrChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcTalismanAttrChangeNotify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .KeyValue2IntInt Attr = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->attr_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attr(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcTalismanAttrChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcTalismanAttrChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcTalismanAttrChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcTalismanAttrChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcTalismanAttrChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcTalismanAttrChangeNotify)
    MergeFrom(*source);
  }
}

void BagRpcTalismanAttrChangeNotify::MergeFrom(const BagRpcTalismanAttrChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcTalismanAttrChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attr_.MergeFrom(from.attr_);
}

void BagRpcTalismanAttrChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcTalismanAttrChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcTalismanAttrChangeNotify::CopyFrom(const BagRpcTalismanAttrChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcTalismanAttrChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcTalismanAttrChangeNotify::IsInitialized() const {
  return true;
}

void BagRpcTalismanAttrChangeNotify::Swap(BagRpcTalismanAttrChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcTalismanAttrChangeNotify::InternalSwap(BagRpcTalismanAttrChangeNotify* other) {
  using std::swap;
  attr_.InternalSwap(&other->attr_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcTalismanAttrChangeNotify::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcTalismanAttrChangeNotify

// repeated .KeyValue2IntInt Attr = 1;
int BagRpcTalismanAttrChangeNotify::attr_size() const {
  return attr_.size();
}
void BagRpcTalismanAttrChangeNotify::clear_attr() {
  attr_.Clear();
}
const ::KeyValue2IntInt& BagRpcTalismanAttrChangeNotify::attr(int index) const {
  // @@protoc_insertion_point(field_get:BagRpcTalismanAttrChangeNotify.Attr)
  return attr_.Get(index);
}
::KeyValue2IntInt* BagRpcTalismanAttrChangeNotify::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:BagRpcTalismanAttrChangeNotify.Attr)
  return attr_.Mutable(index);
}
::KeyValue2IntInt* BagRpcTalismanAttrChangeNotify::add_attr() {
  // @@protoc_insertion_point(field_add:BagRpcTalismanAttrChangeNotify.Attr)
  return attr_.Add();
}
::google::protobuf::RepeatedPtrField< ::KeyValue2IntInt >*
BagRpcTalismanAttrChangeNotify::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:BagRpcTalismanAttrChangeNotify.Attr)
  return &attr_;
}
const ::google::protobuf::RepeatedPtrField< ::KeyValue2IntInt >&
BagRpcTalismanAttrChangeNotify::attr() const {
  // @@protoc_insertion_point(field_list:BagRpcTalismanAttrChangeNotify.Attr)
  return attr_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcTalismanGatherSpriteAsk::kFabaoIdFieldNumber;
const int BagRpcTalismanGatherSpriteAsk::kGatherSpriteIdFieldNumber;
const int BagRpcTalismanGatherSpriteAsk::kSlotIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcTalismanGatherSpriteAsk::BagRpcTalismanGatherSpriteAsk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcTalismanGatherSpriteAsk)
}
BagRpcTalismanGatherSpriteAsk::BagRpcTalismanGatherSpriteAsk(const BagRpcTalismanGatherSpriteAsk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&fabaoid_, &from.fabaoid_,
    static_cast<size_t>(reinterpret_cast<char*>(&slotid_) -
    reinterpret_cast<char*>(&fabaoid_)) + sizeof(slotid_));
  // @@protoc_insertion_point(copy_constructor:BagRpcTalismanGatherSpriteAsk)
}

void BagRpcTalismanGatherSpriteAsk::SharedCtor() {
  _cached_size_ = 0;
  fabaoid_ = GOOGLE_LONGLONG(-1);
  gatherspriteid_ = -1;
  slotid_ = -1;
}

BagRpcTalismanGatherSpriteAsk::~BagRpcTalismanGatherSpriteAsk() {
  // @@protoc_insertion_point(destructor:BagRpcTalismanGatherSpriteAsk)
  SharedDtor();
}

void BagRpcTalismanGatherSpriteAsk::SharedDtor() {
}

void BagRpcTalismanGatherSpriteAsk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcTalismanGatherSpriteAsk::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcTalismanGatherSpriteAsk& BagRpcTalismanGatherSpriteAsk::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcTalismanGatherSpriteAsk* BagRpcTalismanGatherSpriteAsk::New(::google::protobuf::Arena* arena) const {
  BagRpcTalismanGatherSpriteAsk* n = new BagRpcTalismanGatherSpriteAsk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcTalismanGatherSpriteAsk::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcTalismanGatherSpriteAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    fabaoid_ = GOOGLE_LONGLONG(-1);
    gatherspriteid_ = -1;
    slotid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcTalismanGatherSpriteAsk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcTalismanGatherSpriteAsk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 FabaoId = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_fabaoid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &fabaoid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 GatherSpriteId = 2 [default = -1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_gatherspriteid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &gatherspriteid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 SlotId = 3 [default = -1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_slotid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &slotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcTalismanGatherSpriteAsk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcTalismanGatherSpriteAsk)
  return false;
#undef DO_
}

void BagRpcTalismanGatherSpriteAsk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcTalismanGatherSpriteAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 FabaoId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->fabaoid(), output);
  }

  // optional sint32 GatherSpriteId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->gatherspriteid(), output);
  }

  // optional sint32 SlotId = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->slotid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcTalismanGatherSpriteAsk)
}

::google::protobuf::uint8* BagRpcTalismanGatherSpriteAsk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcTalismanGatherSpriteAsk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint64 FabaoId = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->fabaoid(), target);
  }

  // optional sint32 GatherSpriteId = 2 [default = -1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->gatherspriteid(), target);
  }

  // optional sint32 SlotId = 3 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->slotid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcTalismanGatherSpriteAsk)
  return target;
}

size_t BagRpcTalismanGatherSpriteAsk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcTalismanGatherSpriteAsk)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional sint64 FabaoId = 1 [default = -1];
    if (has_fabaoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->fabaoid());
    }

    // optional sint32 GatherSpriteId = 2 [default = -1];
    if (has_gatherspriteid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->gatherspriteid());
    }

    // optional sint32 SlotId = 3 [default = -1];
    if (has_slotid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->slotid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcTalismanGatherSpriteAsk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcTalismanGatherSpriteAsk)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcTalismanGatherSpriteAsk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcTalismanGatherSpriteAsk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcTalismanGatherSpriteAsk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcTalismanGatherSpriteAsk)
    MergeFrom(*source);
  }
}

void BagRpcTalismanGatherSpriteAsk::MergeFrom(const BagRpcTalismanGatherSpriteAsk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcTalismanGatherSpriteAsk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      fabaoid_ = from.fabaoid_;
    }
    if (cached_has_bits & 0x00000002u) {
      gatherspriteid_ = from.gatherspriteid_;
    }
    if (cached_has_bits & 0x00000004u) {
      slotid_ = from.slotid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BagRpcTalismanGatherSpriteAsk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcTalismanGatherSpriteAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcTalismanGatherSpriteAsk::CopyFrom(const BagRpcTalismanGatherSpriteAsk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcTalismanGatherSpriteAsk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcTalismanGatherSpriteAsk::IsInitialized() const {
  return true;
}

void BagRpcTalismanGatherSpriteAsk::Swap(BagRpcTalismanGatherSpriteAsk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcTalismanGatherSpriteAsk::InternalSwap(BagRpcTalismanGatherSpriteAsk* other) {
  using std::swap;
  swap(fabaoid_, other->fabaoid_);
  swap(gatherspriteid_, other->gatherspriteid_);
  swap(slotid_, other->slotid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcTalismanGatherSpriteAsk::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcTalismanGatherSpriteAsk

// optional sint64 FabaoId = 1 [default = -1];
bool BagRpcTalismanGatherSpriteAsk::has_fabaoid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcTalismanGatherSpriteAsk::set_has_fabaoid() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcTalismanGatherSpriteAsk::clear_has_fabaoid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcTalismanGatherSpriteAsk::clear_fabaoid() {
  fabaoid_ = GOOGLE_LONGLONG(-1);
  clear_has_fabaoid();
}
::google::protobuf::int64 BagRpcTalismanGatherSpriteAsk::fabaoid() const {
  // @@protoc_insertion_point(field_get:BagRpcTalismanGatherSpriteAsk.FabaoId)
  return fabaoid_;
}
void BagRpcTalismanGatherSpriteAsk::set_fabaoid(::google::protobuf::int64 value) {
  set_has_fabaoid();
  fabaoid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcTalismanGatherSpriteAsk.FabaoId)
}

// optional sint32 GatherSpriteId = 2 [default = -1];
bool BagRpcTalismanGatherSpriteAsk::has_gatherspriteid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BagRpcTalismanGatherSpriteAsk::set_has_gatherspriteid() {
  _has_bits_[0] |= 0x00000002u;
}
void BagRpcTalismanGatherSpriteAsk::clear_has_gatherspriteid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BagRpcTalismanGatherSpriteAsk::clear_gatherspriteid() {
  gatherspriteid_ = -1;
  clear_has_gatherspriteid();
}
::google::protobuf::int32 BagRpcTalismanGatherSpriteAsk::gatherspriteid() const {
  // @@protoc_insertion_point(field_get:BagRpcTalismanGatherSpriteAsk.GatherSpriteId)
  return gatherspriteid_;
}
void BagRpcTalismanGatherSpriteAsk::set_gatherspriteid(::google::protobuf::int32 value) {
  set_has_gatherspriteid();
  gatherspriteid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcTalismanGatherSpriteAsk.GatherSpriteId)
}

// optional sint32 SlotId = 3 [default = -1];
bool BagRpcTalismanGatherSpriteAsk::has_slotid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BagRpcTalismanGatherSpriteAsk::set_has_slotid() {
  _has_bits_[0] |= 0x00000004u;
}
void BagRpcTalismanGatherSpriteAsk::clear_has_slotid() {
  _has_bits_[0] &= ~0x00000004u;
}
void BagRpcTalismanGatherSpriteAsk::clear_slotid() {
  slotid_ = -1;
  clear_has_slotid();
}
::google::protobuf::int32 BagRpcTalismanGatherSpriteAsk::slotid() const {
  // @@protoc_insertion_point(field_get:BagRpcTalismanGatherSpriteAsk.SlotId)
  return slotid_;
}
void BagRpcTalismanGatherSpriteAsk::set_slotid(::google::protobuf::int32 value) {
  set_has_slotid();
  slotid_ = value;
  // @@protoc_insertion_point(field_set:BagRpcTalismanGatherSpriteAsk.SlotId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagRpcTalismanGatherSpriteReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagRpcTalismanGatherSpriteReply::BagRpcTalismanGatherSpriteReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BagRpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BagRpcTalismanGatherSpriteReply)
}
BagRpcTalismanGatherSpriteReply::BagRpcTalismanGatherSpriteReply(const BagRpcTalismanGatherSpriteReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:BagRpcTalismanGatherSpriteReply)
}

void BagRpcTalismanGatherSpriteReply::SharedCtor() {
  _cached_size_ = 0;
  result_ = -9999;
}

BagRpcTalismanGatherSpriteReply::~BagRpcTalismanGatherSpriteReply() {
  // @@protoc_insertion_point(destructor:BagRpcTalismanGatherSpriteReply)
  SharedDtor();
}

void BagRpcTalismanGatherSpriteReply::SharedDtor() {
}

void BagRpcTalismanGatherSpriteReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BagRpcTalismanGatherSpriteReply::descriptor() {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagRpcTalismanGatherSpriteReply& BagRpcTalismanGatherSpriteReply::default_instance() {
  protobuf_BagRpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

BagRpcTalismanGatherSpriteReply* BagRpcTalismanGatherSpriteReply::New(::google::protobuf::Arena* arena) const {
  BagRpcTalismanGatherSpriteReply* n = new BagRpcTalismanGatherSpriteReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BagRpcTalismanGatherSpriteReply::Clear() {
// @@protoc_insertion_point(message_clear_start:BagRpcTalismanGatherSpriteReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = -9999;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BagRpcTalismanGatherSpriteReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BagRpcTalismanGatherSpriteReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 Result = 1 [default = -9999];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BagRpcTalismanGatherSpriteReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BagRpcTalismanGatherSpriteReply)
  return false;
#undef DO_
}

void BagRpcTalismanGatherSpriteReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BagRpcTalismanGatherSpriteReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BagRpcTalismanGatherSpriteReply)
}

::google::protobuf::uint8* BagRpcTalismanGatherSpriteReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BagRpcTalismanGatherSpriteReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 Result = 1 [default = -9999];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BagRpcTalismanGatherSpriteReply)
  return target;
}

size_t BagRpcTalismanGatherSpriteReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BagRpcTalismanGatherSpriteReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 Result = 1 [default = -9999];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BagRpcTalismanGatherSpriteReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BagRpcTalismanGatherSpriteReply)
  GOOGLE_DCHECK_NE(&from, this);
  const BagRpcTalismanGatherSpriteReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagRpcTalismanGatherSpriteReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BagRpcTalismanGatherSpriteReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BagRpcTalismanGatherSpriteReply)
    MergeFrom(*source);
  }
}

void BagRpcTalismanGatherSpriteReply::MergeFrom(const BagRpcTalismanGatherSpriteReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BagRpcTalismanGatherSpriteReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void BagRpcTalismanGatherSpriteReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BagRpcTalismanGatherSpriteReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagRpcTalismanGatherSpriteReply::CopyFrom(const BagRpcTalismanGatherSpriteReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BagRpcTalismanGatherSpriteReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagRpcTalismanGatherSpriteReply::IsInitialized() const {
  return true;
}

void BagRpcTalismanGatherSpriteReply::Swap(BagRpcTalismanGatherSpriteReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagRpcTalismanGatherSpriteReply::InternalSwap(BagRpcTalismanGatherSpriteReply* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BagRpcTalismanGatherSpriteReply::GetMetadata() const {
  protobuf_BagRpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BagRpc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BagRpcTalismanGatherSpriteReply

// optional sint32 Result = 1 [default = -9999];
bool BagRpcTalismanGatherSpriteReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BagRpcTalismanGatherSpriteReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void BagRpcTalismanGatherSpriteReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void BagRpcTalismanGatherSpriteReply::clear_result() {
  result_ = -9999;
  clear_has_result();
}
::google::protobuf::int32 BagRpcTalismanGatherSpriteReply::result() const {
  // @@protoc_insertion_point(field_get:BagRpcTalismanGatherSpriteReply.Result)
  return result_;
}
void BagRpcTalismanGatherSpriteReply::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:BagRpcTalismanGatherSpriteReply.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
