// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TeamV1Data.proto

#ifndef PROTOBUF_TeamV1Data_2eproto__INCLUDED
#define PROTOBUF_TeamV1Data_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)
class TeamTeamDataV1;
class TeamTeamDataV1DefaultTypeInternal;
extern TeamTeamDataV1DefaultTypeInternal _TeamTeamDataV1_default_instance_;

namespace protobuf_TeamV1Data_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_TeamV1Data_2eproto

// ===================================================================

class TeamTeamDataV1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TeamTeamDataV1) */ {
 public:
  TeamTeamDataV1();
  virtual ~TeamTeamDataV1();

  TeamTeamDataV1(const TeamTeamDataV1& from);

  inline TeamTeamDataV1& operator=(const TeamTeamDataV1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TeamTeamDataV1(TeamTeamDataV1&& from) noexcept
    : TeamTeamDataV1() {
    *this = ::std::move(from);
  }

  inline TeamTeamDataV1& operator=(TeamTeamDataV1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamTeamDataV1& default_instance();

  static inline const TeamTeamDataV1* internal_default_instance() {
    return reinterpret_cast<const TeamTeamDataV1*>(
               &_TeamTeamDataV1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TeamTeamDataV1* other);
  friend void swap(TeamTeamDataV1& a, TeamTeamDataV1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TeamTeamDataV1* New() const PROTOBUF_FINAL { return New(NULL); }

  TeamTeamDataV1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TeamTeamDataV1& from);
  void MergeFrom(const TeamTeamDataV1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TeamTeamDataV1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TeamApplyUserObj ApplyList = 13;
  int applylist_size() const;
  void clear_applylist();
  static const int kApplyListFieldNumber = 13;
  const ::TeamApplyUserObj& applylist(int index) const;
  ::TeamApplyUserObj* mutable_applylist(int index);
  ::TeamApplyUserObj* add_applylist();
  ::google::protobuf::RepeatedPtrField< ::TeamApplyUserObj >*
      mutable_applylist();
  const ::google::protobuf::RepeatedPtrField< ::TeamApplyUserObj >&
      applylist() const;

  // optional .TeamObj TeamData = 7;
  bool has_teamdata() const;
  void clear_teamdata();
  static const int kTeamDataFieldNumber = 7;
  const ::TeamObj& teamdata() const;
  ::TeamObj* mutable_teamdata();
  ::TeamObj* release_teamdata();
  void set_allocated_teamdata(::TeamObj* teamdata);

  // @@protoc_insertion_point(class_scope:TeamTeamDataV1)
 private:
  void set_has_teamdata();
  void clear_has_teamdata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TeamApplyUserObj > applylist_;
  ::TeamObj* teamdata_;
  friend struct protobuf_TeamV1Data_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TeamTeamDataV1

// optional .TeamObj TeamData = 7;
inline bool TeamTeamDataV1::has_teamdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamTeamDataV1::set_has_teamdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamTeamDataV1::clear_has_teamdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamTeamDataV1::clear_teamdata() {
  if (teamdata_ != NULL) teamdata_->::TeamObj::Clear();
  clear_has_teamdata();
}
inline const ::TeamObj& TeamTeamDataV1::teamdata() const {
  const ::TeamObj* p = teamdata_;
  // @@protoc_insertion_point(field_get:TeamTeamDataV1.TeamData)
  return p != NULL ? *p : *reinterpret_cast<const ::TeamObj*>(
      &::_TeamObj_default_instance_);
}
inline ::TeamObj* TeamTeamDataV1::mutable_teamdata() {
  set_has_teamdata();
  if (teamdata_ == NULL) {
    teamdata_ = new ::TeamObj;
  }
  // @@protoc_insertion_point(field_mutable:TeamTeamDataV1.TeamData)
  return teamdata_;
}
inline ::TeamObj* TeamTeamDataV1::release_teamdata() {
  // @@protoc_insertion_point(field_release:TeamTeamDataV1.TeamData)
  clear_has_teamdata();
  ::TeamObj* temp = teamdata_;
  teamdata_ = NULL;
  return temp;
}
inline void TeamTeamDataV1::set_allocated_teamdata(::TeamObj* teamdata) {
  delete teamdata_;
  teamdata_ = teamdata;
  if (teamdata) {
    set_has_teamdata();
  } else {
    clear_has_teamdata();
  }
  // @@protoc_insertion_point(field_set_allocated:TeamTeamDataV1.TeamData)
}

// repeated .TeamApplyUserObj ApplyList = 13;
inline int TeamTeamDataV1::applylist_size() const {
  return applylist_.size();
}
inline void TeamTeamDataV1::clear_applylist() {
  applylist_.Clear();
}
inline const ::TeamApplyUserObj& TeamTeamDataV1::applylist(int index) const {
  // @@protoc_insertion_point(field_get:TeamTeamDataV1.ApplyList)
  return applylist_.Get(index);
}
inline ::TeamApplyUserObj* TeamTeamDataV1::mutable_applylist(int index) {
  // @@protoc_insertion_point(field_mutable:TeamTeamDataV1.ApplyList)
  return applylist_.Mutable(index);
}
inline ::TeamApplyUserObj* TeamTeamDataV1::add_applylist() {
  // @@protoc_insertion_point(field_add:TeamTeamDataV1.ApplyList)
  return applylist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::TeamApplyUserObj >*
TeamTeamDataV1::mutable_applylist() {
  // @@protoc_insertion_point(field_mutable_list:TeamTeamDataV1.ApplyList)
  return &applylist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::TeamApplyUserObj >&
TeamTeamDataV1::applylist() const {
  // @@protoc_insertion_point(field_list:TeamTeamDataV1.ApplyList)
  return applylist_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TeamV1Data_2eproto__INCLUDED
