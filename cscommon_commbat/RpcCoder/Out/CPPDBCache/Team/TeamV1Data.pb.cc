// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TeamV1Data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "TeamV1Data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class TeamTeamDataV1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TeamTeamDataV1>
     _instance;
} _TeamTeamDataV1_default_instance_;

namespace protobuf_TeamV1Data_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamTeamDataV1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamTeamDataV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamTeamDataV1, teamdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamTeamDataV1, applylist_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(TeamTeamDataV1)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TeamTeamDataV1_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "TeamV1Data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_PublicStruct_2eproto::InitDefaults();
  _TeamTeamDataV1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TeamTeamDataV1_default_instance_);_TeamTeamDataV1_default_instance_._instance.get_mutable()->teamdata_ = const_cast< ::TeamObj*>(
      ::TeamObj::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020TeamV1Data.proto\032\022PublicStruct.proto\"R"
      "\n\016TeamTeamDataV1\022\032\n\010TeamData\030\007 \001(\0132\010.Tea"
      "mObj\022$\n\tApplyList\030\r \003(\0132\021.TeamApplyUserO"
      "bj"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 122);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TeamV1Data.proto", &protobuf_RegisterTypes);
  ::protobuf_PublicStruct_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_TeamV1Data_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamTeamDataV1::kTeamDataFieldNumber;
const int TeamTeamDataV1::kApplyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamTeamDataV1::TeamTeamDataV1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TeamV1Data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TeamTeamDataV1)
}
TeamTeamDataV1::TeamTeamDataV1(const TeamTeamDataV1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      applylist_(from.applylist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_teamdata()) {
    teamdata_ = new ::TeamObj(*from.teamdata_);
  } else {
    teamdata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:TeamTeamDataV1)
}

void TeamTeamDataV1::SharedCtor() {
  _cached_size_ = 0;
  teamdata_ = NULL;
}

TeamTeamDataV1::~TeamTeamDataV1() {
  // @@protoc_insertion_point(destructor:TeamTeamDataV1)
  SharedDtor();
}

void TeamTeamDataV1::SharedDtor() {
  if (this != internal_default_instance()) delete teamdata_;
}

void TeamTeamDataV1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamTeamDataV1::descriptor() {
  protobuf_TeamV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TeamV1Data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TeamTeamDataV1& TeamTeamDataV1::default_instance() {
  protobuf_TeamV1Data_2eproto::InitDefaults();
  return *internal_default_instance();
}

TeamTeamDataV1* TeamTeamDataV1::New(::google::protobuf::Arena* arena) const {
  TeamTeamDataV1* n = new TeamTeamDataV1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamTeamDataV1::Clear() {
// @@protoc_insertion_point(message_clear_start:TeamTeamDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applylist_.Clear();
  if (has_teamdata()) {
    GOOGLE_DCHECK(teamdata_ != NULL);
    teamdata_->::TeamObj::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TeamTeamDataV1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TeamTeamDataV1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .TeamObj TeamData = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_teamdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TeamApplyUserObj ApplyList = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_applylist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TeamTeamDataV1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TeamTeamDataV1)
  return false;
#undef DO_
}

void TeamTeamDataV1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TeamTeamDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TeamObj TeamData = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->teamdata_, output);
  }

  // repeated .TeamApplyUserObj ApplyList = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->applylist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->applylist(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TeamTeamDataV1)
}

::google::protobuf::uint8* TeamTeamDataV1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TeamTeamDataV1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .TeamObj TeamData = 7;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->teamdata_, deterministic, target);
  }

  // repeated .TeamApplyUserObj ApplyList = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->applylist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->applylist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeamTeamDataV1)
  return target;
}

size_t TeamTeamDataV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeamTeamDataV1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .TeamApplyUserObj ApplyList = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->applylist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->applylist(static_cast<int>(i)));
    }
  }

  // optional .TeamObj TeamData = 7;
  if (has_teamdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->teamdata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamTeamDataV1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeamTeamDataV1)
  GOOGLE_DCHECK_NE(&from, this);
  const TeamTeamDataV1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamTeamDataV1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeamTeamDataV1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeamTeamDataV1)
    MergeFrom(*source);
  }
}

void TeamTeamDataV1::MergeFrom(const TeamTeamDataV1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeamTeamDataV1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  applylist_.MergeFrom(from.applylist_);
  if (from.has_teamdata()) {
    mutable_teamdata()->::TeamObj::MergeFrom(from.teamdata());
  }
}

void TeamTeamDataV1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeamTeamDataV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamTeamDataV1::CopyFrom(const TeamTeamDataV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeamTeamDataV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TeamTeamDataV1::IsInitialized() const {
  return true;
}

void TeamTeamDataV1::Swap(TeamTeamDataV1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamTeamDataV1::InternalSwap(TeamTeamDataV1* other) {
  using std::swap;
  applylist_.InternalSwap(&other->applylist_);
  swap(teamdata_, other->teamdata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamTeamDataV1::GetMetadata() const {
  protobuf_TeamV1Data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TeamV1Data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamTeamDataV1

// optional .TeamObj TeamData = 7;
bool TeamTeamDataV1::has_teamdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TeamTeamDataV1::set_has_teamdata() {
  _has_bits_[0] |= 0x00000001u;
}
void TeamTeamDataV1::clear_has_teamdata() {
  _has_bits_[0] &= ~0x00000001u;
}
void TeamTeamDataV1::clear_teamdata() {
  if (teamdata_ != NULL) teamdata_->::TeamObj::Clear();
  clear_has_teamdata();
}
const ::TeamObj& TeamTeamDataV1::teamdata() const {
  const ::TeamObj* p = teamdata_;
  // @@protoc_insertion_point(field_get:TeamTeamDataV1.TeamData)
  return p != NULL ? *p : *reinterpret_cast<const ::TeamObj*>(
      &::_TeamObj_default_instance_);
}
::TeamObj* TeamTeamDataV1::mutable_teamdata() {
  set_has_teamdata();
  if (teamdata_ == NULL) {
    teamdata_ = new ::TeamObj;
  }
  // @@protoc_insertion_point(field_mutable:TeamTeamDataV1.TeamData)
  return teamdata_;
}
::TeamObj* TeamTeamDataV1::release_teamdata() {
  // @@protoc_insertion_point(field_release:TeamTeamDataV1.TeamData)
  clear_has_teamdata();
  ::TeamObj* temp = teamdata_;
  teamdata_ = NULL;
  return temp;
}
void TeamTeamDataV1::set_allocated_teamdata(::TeamObj* teamdata) {
  delete teamdata_;
  teamdata_ = teamdata;
  if (teamdata) {
    set_has_teamdata();
  } else {
    clear_has_teamdata();
  }
  // @@protoc_insertion_point(field_set_allocated:TeamTeamDataV1.TeamData)
}

// repeated .TeamApplyUserObj ApplyList = 13;
int TeamTeamDataV1::applylist_size() const {
  return applylist_.size();
}
void TeamTeamDataV1::clear_applylist() {
  applylist_.Clear();
}
const ::TeamApplyUserObj& TeamTeamDataV1::applylist(int index) const {
  // @@protoc_insertion_point(field_get:TeamTeamDataV1.ApplyList)
  return applylist_.Get(index);
}
::TeamApplyUserObj* TeamTeamDataV1::mutable_applylist(int index) {
  // @@protoc_insertion_point(field_mutable:TeamTeamDataV1.ApplyList)
  return applylist_.Mutable(index);
}
::TeamApplyUserObj* TeamTeamDataV1::add_applylist() {
  // @@protoc_insertion_point(field_add:TeamTeamDataV1.ApplyList)
  return applylist_.Add();
}
::google::protobuf::RepeatedPtrField< ::TeamApplyUserObj >*
TeamTeamDataV1::mutable_applylist() {
  // @@protoc_insertion_point(field_mutable_list:TeamTeamDataV1.ApplyList)
  return &applylist_;
}
const ::google::protobuf::RepeatedPtrField< ::TeamApplyUserObj >&
TeamTeamDataV1::applylist() const {
  // @@protoc_insertion_point(field_list:TeamTeamDataV1.ApplyList)
  return applylist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
