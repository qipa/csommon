// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FriendV1Data.proto

#ifndef PROTOBUF_FriendV1Data_2eproto__INCLUDED
#define PROTOBUF_FriendV1Data_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "PublicStruct.pb.h"
// @@protoc_insertion_point(includes)
class FriendFriendDataV1;
class FriendFriendDataV1DefaultTypeInternal;
extern FriendFriendDataV1DefaultTypeInternal _FriendFriendDataV1_default_instance_;
class FriendFriendObjV1;
class FriendFriendObjV1DefaultTypeInternal;
extern FriendFriendObjV1DefaultTypeInternal _FriendFriendObjV1_default_instance_;

namespace protobuf_FriendV1Data_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_FriendV1Data_2eproto

// ===================================================================

class FriendFriendObjV1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FriendFriendObjV1) */ {
 public:
  FriendFriendObjV1();
  virtual ~FriendFriendObjV1();

  FriendFriendObjV1(const FriendFriendObjV1& from);

  inline FriendFriendObjV1& operator=(const FriendFriendObjV1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FriendFriendObjV1(FriendFriendObjV1&& from) noexcept
    : FriendFriendObjV1() {
    *this = ::std::move(from);
  }

  inline FriendFriendObjV1& operator=(FriendFriendObjV1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendFriendObjV1& default_instance();

  static inline const FriendFriendObjV1* internal_default_instance() {
    return reinterpret_cast<const FriendFriendObjV1*>(
               &_FriendFriendObjV1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(FriendFriendObjV1* other);
  friend void swap(FriendFriendObjV1& a, FriendFriendObjV1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FriendFriendObjV1* New() const PROTOBUF_FINAL { return New(NULL); }

  FriendFriendObjV1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FriendFriendObjV1& from);
  void MergeFrom(const FriendFriendObjV1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FriendFriendObjV1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string Signature = 5;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 5;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // optional string GuildName = 12;
  bool has_guildname() const;
  void clear_guildname();
  static const int kGuildNameFieldNumber = 12;
  const ::std::string& guildname() const;
  void set_guildname(const ::std::string& value);
  #if LANG_CXX11
  void set_guildname(::std::string&& value);
  #endif
  void set_guildname(const char* value);
  void set_guildname(const char* value, size_t size);
  ::std::string* mutable_guildname();
  ::std::string* release_guildname();
  void set_allocated_guildname(::std::string* guildname);

  // optional sint32 TeamMemberNum = 8 [default = 0];
  bool has_teammembernum() const;
  void clear_teammembernum();
  static const int kTeamMemberNumFieldNumber = 8;
  ::google::protobuf::int32 teammembernum() const;
  void set_teammembernum(::google::protobuf::int32 value);

  // optional bool Online = 9 [default = false];
  bool has_online() const;
  void clear_online();
  static const int kOnlineFieldNumber = 9;
  bool online() const;
  void set_online(bool value);

  // optional sint32 GoodFeeling = 10 [default = 0];
  bool has_goodfeeling() const;
  void clear_goodfeeling();
  static const int kGoodFeelingFieldNumber = 10;
  ::google::protobuf::int32 goodfeeling() const;
  void set_goodfeeling(::google::protobuf::int32 value);

  // optional sint64 UserId = 1 [default = -1];
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // optional sint32 Level = 3 [default = -1];
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional sint32 Prof = 4 [default = -1];
  bool has_prof() const;
  void clear_prof();
  static const int kProfFieldNumber = 4;
  ::google::protobuf::int32 prof() const;
  void set_prof(::google::protobuf::int32 value);

  // optional sint32 TeamId = 6 [default = -1];
  bool has_teamid() const;
  void clear_teamid();
  static const int kTeamIdFieldNumber = 6;
  ::google::protobuf::int32 teamid() const;
  void set_teamid(::google::protobuf::int32 value);

  // optional sint32 GuildId = 11 [default = -1];
  bool has_guildid() const;
  void clear_guildid();
  static const int kGuildIdFieldNumber = 11;
  ::google::protobuf::int32 guildid() const;
  void set_guildid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:FriendFriendObjV1)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_username();
  void clear_has_username();
  void set_has_level();
  void clear_has_level();
  void set_has_prof();
  void clear_has_prof();
  void set_has_signature();
  void clear_has_signature();
  void set_has_teamid();
  void clear_has_teamid();
  void set_has_teammembernum();
  void clear_has_teammembernum();
  void set_has_online();
  void clear_has_online();
  void set_has_goodfeeling();
  void clear_has_goodfeeling();
  void set_has_guildid();
  void clear_has_guildid();
  void set_has_guildname();
  void clear_has_guildname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::internal::ArenaStringPtr guildname_;
  ::google::protobuf::int32 teammembernum_;
  bool online_;
  ::google::protobuf::int32 goodfeeling_;
  ::google::protobuf::int64 userid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 prof_;
  ::google::protobuf::int32 teamid_;
  ::google::protobuf::int32 guildid_;
  friend struct protobuf_FriendV1Data_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FriendFriendDataV1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FriendFriendDataV1) */ {
 public:
  FriendFriendDataV1();
  virtual ~FriendFriendDataV1();

  FriendFriendDataV1(const FriendFriendDataV1& from);

  inline FriendFriendDataV1& operator=(const FriendFriendDataV1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FriendFriendDataV1(FriendFriendDataV1&& from) noexcept
    : FriendFriendDataV1() {
    *this = ::std::move(from);
  }

  inline FriendFriendDataV1& operator=(FriendFriendDataV1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendFriendDataV1& default_instance();

  static inline const FriendFriendDataV1* internal_default_instance() {
    return reinterpret_cast<const FriendFriendDataV1*>(
               &_FriendFriendDataV1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(FriendFriendDataV1* other);
  friend void swap(FriendFriendDataV1& a, FriendFriendDataV1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FriendFriendDataV1* New() const PROTOBUF_FINAL { return New(NULL); }

  FriendFriendDataV1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FriendFriendDataV1& from);
  void MergeFrom(const FriendFriendDataV1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FriendFriendDataV1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .FriendFriendObjV1 FriendList = 1;
  int friendlist_size() const;
  void clear_friendlist();
  static const int kFriendListFieldNumber = 1;
  const ::FriendFriendObjV1& friendlist(int index) const;
  ::FriendFriendObjV1* mutable_friendlist(int index);
  ::FriendFriendObjV1* add_friendlist();
  ::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 >*
      mutable_friendlist();
  const ::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 >&
      friendlist() const;

  // repeated .FriendFriendObjV1 BlackList = 2;
  int blacklist_size() const;
  void clear_blacklist();
  static const int kBlackListFieldNumber = 2;
  const ::FriendFriendObjV1& blacklist(int index) const;
  ::FriendFriendObjV1* mutable_blacklist(int index);
  ::FriendFriendObjV1* add_blacklist();
  ::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 >*
      mutable_blacklist();
  const ::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 >&
      blacklist() const;

  // repeated .FriendFriendObjV1 ContactsList = 3;
  int contactslist_size() const;
  void clear_contactslist();
  static const int kContactsListFieldNumber = 3;
  const ::FriendFriendObjV1& contactslist(int index) const;
  ::FriendFriendObjV1* mutable_contactslist(int index);
  ::FriendFriendObjV1* add_contactslist();
  ::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 >*
      mutable_contactslist();
  const ::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 >&
      contactslist() const;

  // repeated sint64 StrangerFriendList = 4;
  int strangerfriendlist_size() const;
  void clear_strangerfriendlist();
  static const int kStrangerFriendListFieldNumber = 4;
  ::google::protobuf::int64 strangerfriendlist(int index) const;
  void set_strangerfriendlist(int index, ::google::protobuf::int64 value);
  void add_strangerfriendlist(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      strangerfriendlist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_strangerfriendlist();

  // @@protoc_insertion_point(class_scope:FriendFriendDataV1)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 > friendlist_;
  ::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 > blacklist_;
  ::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 > contactslist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > strangerfriendlist_;
  friend struct protobuf_FriendV1Data_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FriendFriendObjV1

// optional sint64 UserId = 1 [default = -1];
inline bool FriendFriendObjV1::has_userid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FriendFriendObjV1::set_has_userid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FriendFriendObjV1::clear_has_userid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FriendFriendObjV1::clear_userid() {
  userid_ = GOOGLE_LONGLONG(-1);
  clear_has_userid();
}
inline ::google::protobuf::int64 FriendFriendObjV1::userid() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.UserId)
  return userid_;
}
inline void FriendFriendObjV1::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.UserId)
}

// optional string UserName = 2;
inline bool FriendFriendObjV1::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendFriendObjV1::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendFriendObjV1::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendFriendObjV1::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& FriendFriendObjV1::username() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.UserName)
  return username_.GetNoArena();
}
inline void FriendFriendObjV1::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.UserName)
}
#if LANG_CXX11
inline void FriendFriendObjV1::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FriendFriendObjV1.UserName)
}
#endif
inline void FriendFriendObjV1::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FriendFriendObjV1.UserName)
}
inline void FriendFriendObjV1::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FriendFriendObjV1.UserName)
}
inline ::std::string* FriendFriendObjV1::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:FriendFriendObjV1.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendFriendObjV1::release_username() {
  // @@protoc_insertion_point(field_release:FriendFriendObjV1.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendFriendObjV1::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:FriendFriendObjV1.UserName)
}

// optional sint32 Level = 3 [default = -1];
inline bool FriendFriendObjV1::has_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FriendFriendObjV1::set_has_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FriendFriendObjV1::clear_has_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FriendFriendObjV1::clear_level() {
  level_ = -1;
  clear_has_level();
}
inline ::google::protobuf::int32 FriendFriendObjV1::level() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.Level)
  return level_;
}
inline void FriendFriendObjV1::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.Level)
}

// optional sint32 Prof = 4 [default = -1];
inline bool FriendFriendObjV1::has_prof() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FriendFriendObjV1::set_has_prof() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FriendFriendObjV1::clear_has_prof() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FriendFriendObjV1::clear_prof() {
  prof_ = -1;
  clear_has_prof();
}
inline ::google::protobuf::int32 FriendFriendObjV1::prof() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.Prof)
  return prof_;
}
inline void FriendFriendObjV1::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.Prof)
}

// optional string Signature = 5;
inline bool FriendFriendObjV1::has_signature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendFriendObjV1::set_has_signature() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendFriendObjV1::clear_has_signature() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendFriendObjV1::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature();
}
inline const ::std::string& FriendFriendObjV1::signature() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.Signature)
  return signature_.GetNoArena();
}
inline void FriendFriendObjV1::set_signature(const ::std::string& value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.Signature)
}
#if LANG_CXX11
inline void FriendFriendObjV1::set_signature(::std::string&& value) {
  set_has_signature();
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FriendFriendObjV1.Signature)
}
#endif
inline void FriendFriendObjV1::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FriendFriendObjV1.Signature)
}
inline void FriendFriendObjV1::set_signature(const char* value, size_t size) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FriendFriendObjV1.Signature)
}
inline ::std::string* FriendFriendObjV1::mutable_signature() {
  set_has_signature();
  // @@protoc_insertion_point(field_mutable:FriendFriendObjV1.Signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendFriendObjV1::release_signature() {
  // @@protoc_insertion_point(field_release:FriendFriendObjV1.Signature)
  clear_has_signature();
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendFriendObjV1::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:FriendFriendObjV1.Signature)
}

// optional sint32 TeamId = 6 [default = -1];
inline bool FriendFriendObjV1::has_teamid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FriendFriendObjV1::set_has_teamid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FriendFriendObjV1::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FriendFriendObjV1::clear_teamid() {
  teamid_ = -1;
  clear_has_teamid();
}
inline ::google::protobuf::int32 FriendFriendObjV1::teamid() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.TeamId)
  return teamid_;
}
inline void FriendFriendObjV1::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.TeamId)
}

// optional sint32 TeamMemberNum = 8 [default = 0];
inline bool FriendFriendObjV1::has_teammembernum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendFriendObjV1::set_has_teammembernum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendFriendObjV1::clear_has_teammembernum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendFriendObjV1::clear_teammembernum() {
  teammembernum_ = 0;
  clear_has_teammembernum();
}
inline ::google::protobuf::int32 FriendFriendObjV1::teammembernum() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.TeamMemberNum)
  return teammembernum_;
}
inline void FriendFriendObjV1::set_teammembernum(::google::protobuf::int32 value) {
  set_has_teammembernum();
  teammembernum_ = value;
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.TeamMemberNum)
}

// optional bool Online = 9 [default = false];
inline bool FriendFriendObjV1::has_online() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FriendFriendObjV1::set_has_online() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FriendFriendObjV1::clear_has_online() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FriendFriendObjV1::clear_online() {
  online_ = false;
  clear_has_online();
}
inline bool FriendFriendObjV1::online() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.Online)
  return online_;
}
inline void FriendFriendObjV1::set_online(bool value) {
  set_has_online();
  online_ = value;
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.Online)
}

// optional sint32 GoodFeeling = 10 [default = 0];
inline bool FriendFriendObjV1::has_goodfeeling() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FriendFriendObjV1::set_has_goodfeeling() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FriendFriendObjV1::clear_has_goodfeeling() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FriendFriendObjV1::clear_goodfeeling() {
  goodfeeling_ = 0;
  clear_has_goodfeeling();
}
inline ::google::protobuf::int32 FriendFriendObjV1::goodfeeling() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.GoodFeeling)
  return goodfeeling_;
}
inline void FriendFriendObjV1::set_goodfeeling(::google::protobuf::int32 value) {
  set_has_goodfeeling();
  goodfeeling_ = value;
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.GoodFeeling)
}

// optional sint32 GuildId = 11 [default = -1];
inline bool FriendFriendObjV1::has_guildid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void FriendFriendObjV1::set_has_guildid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void FriendFriendObjV1::clear_has_guildid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void FriendFriendObjV1::clear_guildid() {
  guildid_ = -1;
  clear_has_guildid();
}
inline ::google::protobuf::int32 FriendFriendObjV1::guildid() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.GuildId)
  return guildid_;
}
inline void FriendFriendObjV1::set_guildid(::google::protobuf::int32 value) {
  set_has_guildid();
  guildid_ = value;
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.GuildId)
}

// optional string GuildName = 12;
inline bool FriendFriendObjV1::has_guildname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendFriendObjV1::set_has_guildname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendFriendObjV1::clear_has_guildname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendFriendObjV1::clear_guildname() {
  guildname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guildname();
}
inline const ::std::string& FriendFriendObjV1::guildname() const {
  // @@protoc_insertion_point(field_get:FriendFriendObjV1.GuildName)
  return guildname_.GetNoArena();
}
inline void FriendFriendObjV1::set_guildname(const ::std::string& value) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FriendFriendObjV1.GuildName)
}
#if LANG_CXX11
inline void FriendFriendObjV1::set_guildname(::std::string&& value) {
  set_has_guildname();
  guildname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FriendFriendObjV1.GuildName)
}
#endif
inline void FriendFriendObjV1::set_guildname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FriendFriendObjV1.GuildName)
}
inline void FriendFriendObjV1::set_guildname(const char* value, size_t size) {
  set_has_guildname();
  guildname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FriendFriendObjV1.GuildName)
}
inline ::std::string* FriendFriendObjV1::mutable_guildname() {
  set_has_guildname();
  // @@protoc_insertion_point(field_mutable:FriendFriendObjV1.GuildName)
  return guildname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendFriendObjV1::release_guildname() {
  // @@protoc_insertion_point(field_release:FriendFriendObjV1.GuildName)
  clear_has_guildname();
  return guildname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendFriendObjV1::set_allocated_guildname(::std::string* guildname) {
  if (guildname != NULL) {
    set_has_guildname();
  } else {
    clear_has_guildname();
  }
  guildname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guildname);
  // @@protoc_insertion_point(field_set_allocated:FriendFriendObjV1.GuildName)
}

// -------------------------------------------------------------------

// FriendFriendDataV1

// repeated .FriendFriendObjV1 FriendList = 1;
inline int FriendFriendDataV1::friendlist_size() const {
  return friendlist_.size();
}
inline void FriendFriendDataV1::clear_friendlist() {
  friendlist_.Clear();
}
inline const ::FriendFriendObjV1& FriendFriendDataV1::friendlist(int index) const {
  // @@protoc_insertion_point(field_get:FriendFriendDataV1.FriendList)
  return friendlist_.Get(index);
}
inline ::FriendFriendObjV1* FriendFriendDataV1::mutable_friendlist(int index) {
  // @@protoc_insertion_point(field_mutable:FriendFriendDataV1.FriendList)
  return friendlist_.Mutable(index);
}
inline ::FriendFriendObjV1* FriendFriendDataV1::add_friendlist() {
  // @@protoc_insertion_point(field_add:FriendFriendDataV1.FriendList)
  return friendlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 >*
FriendFriendDataV1::mutable_friendlist() {
  // @@protoc_insertion_point(field_mutable_list:FriendFriendDataV1.FriendList)
  return &friendlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 >&
FriendFriendDataV1::friendlist() const {
  // @@protoc_insertion_point(field_list:FriendFriendDataV1.FriendList)
  return friendlist_;
}

// repeated .FriendFriendObjV1 BlackList = 2;
inline int FriendFriendDataV1::blacklist_size() const {
  return blacklist_.size();
}
inline void FriendFriendDataV1::clear_blacklist() {
  blacklist_.Clear();
}
inline const ::FriendFriendObjV1& FriendFriendDataV1::blacklist(int index) const {
  // @@protoc_insertion_point(field_get:FriendFriendDataV1.BlackList)
  return blacklist_.Get(index);
}
inline ::FriendFriendObjV1* FriendFriendDataV1::mutable_blacklist(int index) {
  // @@protoc_insertion_point(field_mutable:FriendFriendDataV1.BlackList)
  return blacklist_.Mutable(index);
}
inline ::FriendFriendObjV1* FriendFriendDataV1::add_blacklist() {
  // @@protoc_insertion_point(field_add:FriendFriendDataV1.BlackList)
  return blacklist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 >*
FriendFriendDataV1::mutable_blacklist() {
  // @@protoc_insertion_point(field_mutable_list:FriendFriendDataV1.BlackList)
  return &blacklist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 >&
FriendFriendDataV1::blacklist() const {
  // @@protoc_insertion_point(field_list:FriendFriendDataV1.BlackList)
  return blacklist_;
}

// repeated .FriendFriendObjV1 ContactsList = 3;
inline int FriendFriendDataV1::contactslist_size() const {
  return contactslist_.size();
}
inline void FriendFriendDataV1::clear_contactslist() {
  contactslist_.Clear();
}
inline const ::FriendFriendObjV1& FriendFriendDataV1::contactslist(int index) const {
  // @@protoc_insertion_point(field_get:FriendFriendDataV1.ContactsList)
  return contactslist_.Get(index);
}
inline ::FriendFriendObjV1* FriendFriendDataV1::mutable_contactslist(int index) {
  // @@protoc_insertion_point(field_mutable:FriendFriendDataV1.ContactsList)
  return contactslist_.Mutable(index);
}
inline ::FriendFriendObjV1* FriendFriendDataV1::add_contactslist() {
  // @@protoc_insertion_point(field_add:FriendFriendDataV1.ContactsList)
  return contactslist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 >*
FriendFriendDataV1::mutable_contactslist() {
  // @@protoc_insertion_point(field_mutable_list:FriendFriendDataV1.ContactsList)
  return &contactslist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::FriendFriendObjV1 >&
FriendFriendDataV1::contactslist() const {
  // @@protoc_insertion_point(field_list:FriendFriendDataV1.ContactsList)
  return contactslist_;
}

// repeated sint64 StrangerFriendList = 4;
inline int FriendFriendDataV1::strangerfriendlist_size() const {
  return strangerfriendlist_.size();
}
inline void FriendFriendDataV1::clear_strangerfriendlist() {
  strangerfriendlist_.Clear();
}
inline ::google::protobuf::int64 FriendFriendDataV1::strangerfriendlist(int index) const {
  // @@protoc_insertion_point(field_get:FriendFriendDataV1.StrangerFriendList)
  return strangerfriendlist_.Get(index);
}
inline void FriendFriendDataV1::set_strangerfriendlist(int index, ::google::protobuf::int64 value) {
  strangerfriendlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:FriendFriendDataV1.StrangerFriendList)
}
inline void FriendFriendDataV1::add_strangerfriendlist(::google::protobuf::int64 value) {
  strangerfriendlist_.Add(value);
  // @@protoc_insertion_point(field_add:FriendFriendDataV1.StrangerFriendList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
FriendFriendDataV1::strangerfriendlist() const {
  // @@protoc_insertion_point(field_list:FriendFriendDataV1.StrangerFriendList)
  return strangerfriendlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
FriendFriendDataV1::mutable_strangerfriendlist() {
  // @@protoc_insertion_point(field_mutable_list:FriendFriendDataV1.StrangerFriendList)
  return &strangerfriendlist_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_FriendV1Data_2eproto__INCLUDED
