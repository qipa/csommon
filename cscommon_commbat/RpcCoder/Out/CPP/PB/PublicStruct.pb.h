// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PublicStruct.proto

#ifndef PROTOBUF_PublicStruct_2eproto__INCLUDED
#define PROTOBUF_PublicStruct_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class BagAttrFloatObj;
class BagAttrFloatObjDefaultTypeInternal;
extern BagAttrFloatObjDefaultTypeInternal _BagAttrFloatObj_default_instance_;
class BagAttrIntObj;
class BagAttrIntObjDefaultTypeInternal;
extern BagAttrIntObjDefaultTypeInternal _BagAttrIntObj_default_instance_;
class BagEquipObj;
class BagEquipObjDefaultTypeInternal;
extern BagEquipObjDefaultTypeInternal _BagEquipObj_default_instance_;
class BagExtraAttrIdObj;
class BagExtraAttrIdObjDefaultTypeInternal;
extern BagExtraAttrIdObjDefaultTypeInternal _BagExtraAttrIdObj_default_instance_;
class BagExtraAttrObj;
class BagExtraAttrObjDefaultTypeInternal;
extern BagExtraAttrObjDefaultTypeInternal _BagExtraAttrObj_default_instance_;
class BagGemObj;
class BagGemObjDefaultTypeInternal;
extern BagGemObjDefaultTypeInternal _BagGemObj_default_instance_;
class BagGridObj;
class BagGridObjDefaultTypeInternal;
extern BagGridObjDefaultTypeInternal _BagGridObj_default_instance_;
class BagRecycleGridObj;
class BagRecycleGridObjDefaultTypeInternal;
extern BagRecycleGridObjDefaultTypeInternal _BagRecycleGridObj_default_instance_;
class KeyValue2;
class KeyValue2DefaultTypeInternal;
extern KeyValue2DefaultTypeInternal _KeyValue2_default_instance_;
class KeyValue2IntBool;
class KeyValue2IntBoolDefaultTypeInternal;
extern KeyValue2IntBoolDefaultTypeInternal _KeyValue2IntBool_default_instance_;
class KeyValue2IntInt;
class KeyValue2IntIntDefaultTypeInternal;
extern KeyValue2IntIntDefaultTypeInternal _KeyValue2IntInt_default_instance_;

namespace protobuf_PublicStruct_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_PublicStruct_2eproto

// ===================================================================

class BagRecycleGridObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BagRecycleGridObj) */ {
 public:
  BagRecycleGridObj();
  virtual ~BagRecycleGridObj();

  BagRecycleGridObj(const BagRecycleGridObj& from);

  inline BagRecycleGridObj& operator=(const BagRecycleGridObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BagRecycleGridObj(BagRecycleGridObj&& from) noexcept
    : BagRecycleGridObj() {
    *this = ::std::move(from);
  }

  inline BagRecycleGridObj& operator=(BagRecycleGridObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagRecycleGridObj& default_instance();

  static inline const BagRecycleGridObj* internal_default_instance() {
    return reinterpret_cast<const BagRecycleGridObj*>(
               &_BagRecycleGridObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(BagRecycleGridObj* other);
  friend void swap(BagRecycleGridObj& a, BagRecycleGridObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BagRecycleGridObj* New() const PROTOBUF_FINAL { return New(NULL); }

  BagRecycleGridObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BagRecycleGridObj& from);
  void MergeFrom(const BagRecycleGridObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BagRecycleGridObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 ItemId = 1 [default = -1];
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::int64 itemid() const;
  void set_itemid(::google::protobuf::int64 value);

  // optional sint32 TemplateId = 2 [default = -1];
  bool has_templateid() const;
  void clear_templateid();
  static const int kTemplateIdFieldNumber = 2;
  ::google::protobuf::int32 templateid() const;
  void set_templateid(::google::protobuf::int32 value);

  // optional sint32 Num = 3 [default = -1];
  bool has_num() const;
  void clear_num();
  static const int kNumFieldNumber = 3;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // optional sint32 ItemType = 4 [default = -1];
  bool has_itemtype() const;
  void clear_itemtype();
  static const int kItemTypeFieldNumber = 4;
  ::google::protobuf::int32 itemtype() const;
  void set_itemtype(::google::protobuf::int32 value);

  // optional sint32 Pos = 5 [default = -1];
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 5;
  ::google::protobuf::int32 pos() const;
  void set_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BagRecycleGridObj)
 private:
  void set_has_itemid();
  void clear_has_itemid();
  void set_has_templateid();
  void clear_has_templateid();
  void set_has_num();
  void clear_has_num();
  void set_has_itemtype();
  void clear_has_itemtype();
  void set_has_pos();
  void clear_has_pos();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 itemid_;
  ::google::protobuf::int32 templateid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 itemtype_;
  ::google::protobuf::int32 pos_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KeyValue2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KeyValue2) */ {
 public:
  KeyValue2();
  virtual ~KeyValue2();

  KeyValue2(const KeyValue2& from);

  inline KeyValue2& operator=(const KeyValue2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KeyValue2(KeyValue2&& from) noexcept
    : KeyValue2() {
    *this = ::std::move(from);
  }

  inline KeyValue2& operator=(KeyValue2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyValue2& default_instance();

  static inline const KeyValue2* internal_default_instance() {
    return reinterpret_cast<const KeyValue2*>(
               &_KeyValue2_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(KeyValue2* other);
  friend void swap(KeyValue2& a, KeyValue2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KeyValue2* New() const PROTOBUF_FINAL { return New(NULL); }

  KeyValue2* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KeyValue2& from);
  void MergeFrom(const KeyValue2& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KeyValue2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Key = 1 [default = -1];
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int32 key() const;
  void set_key(::google::protobuf::int32 value);

  // optional float Value = 2 [default = -1];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:KeyValue2)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 key_;
  float value_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BagGridObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BagGridObj) */ {
 public:
  BagGridObj();
  virtual ~BagGridObj();

  BagGridObj(const BagGridObj& from);

  inline BagGridObj& operator=(const BagGridObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BagGridObj(BagGridObj&& from) noexcept
    : BagGridObj() {
    *this = ::std::move(from);
  }

  inline BagGridObj& operator=(BagGridObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagGridObj& default_instance();

  static inline const BagGridObj* internal_default_instance() {
    return reinterpret_cast<const BagGridObj*>(
               &_BagGridObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(BagGridObj* other);
  friend void swap(BagGridObj& a, BagGridObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BagGridObj* New() const PROTOBUF_FINAL { return New(NULL); }

  BagGridObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BagGridObj& from);
  void MergeFrom(const BagGridObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BagGridObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Num = 2 [default = 0];
  bool has_num() const;
  void clear_num();
  static const int kNumFieldNumber = 2;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // optional bool Bind = 7 [default = false];
  bool has_bind() const;
  void clear_bind();
  static const int kBindFieldNumber = 7;
  bool bind() const;
  void set_bind(bool value);

  // optional sint32 TemplateID = 1 [default = -1];
  bool has_templateid() const;
  void clear_templateid();
  static const int kTemplateIDFieldNumber = 1;
  ::google::protobuf::int32 templateid() const;
  void set_templateid(::google::protobuf::int32 value);

  // optional sint32 ItemType = 3 [default = -1];
  bool has_itemtype() const;
  void clear_itemtype();
  static const int kItemTypeFieldNumber = 3;
  ::google::protobuf::int32 itemtype() const;
  void set_itemtype(::google::protobuf::int32 value);

  // optional sint32 Pos = 4 [default = -1];
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 4;
  ::google::protobuf::int32 pos() const;
  void set_pos(::google::protobuf::int32 value);

  // optional sint32 Value = 5 [default = -1];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 5;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // optional sint64 Index = 6 [default = -1];
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 6;
  ::google::protobuf::int64 index() const;
  void set_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:BagGridObj)
 private:
  void set_has_templateid();
  void clear_has_templateid();
  void set_has_num();
  void clear_has_num();
  void set_has_itemtype();
  void clear_has_itemtype();
  void set_has_pos();
  void clear_has_pos();
  void set_has_value();
  void clear_has_value();
  void set_has_index();
  void clear_has_index();
  void set_has_bind();
  void clear_has_bind();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 num_;
  bool bind_;
  ::google::protobuf::int32 templateid_;
  ::google::protobuf::int32 itemtype_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::int64 index_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BagEquipObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BagEquipObj) */ {
 public:
  BagEquipObj();
  virtual ~BagEquipObj();

  BagEquipObj(const BagEquipObj& from);

  inline BagEquipObj& operator=(const BagEquipObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BagEquipObj(BagEquipObj&& from) noexcept
    : BagEquipObj() {
    *this = ::std::move(from);
  }

  inline BagEquipObj& operator=(BagEquipObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagEquipObj& default_instance();

  static inline const BagEquipObj* internal_default_instance() {
    return reinterpret_cast<const BagEquipObj*>(
               &_BagEquipObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(BagEquipObj* other);
  friend void swap(BagEquipObj& a, BagEquipObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BagEquipObj* New() const PROTOBUF_FINAL { return New(NULL); }

  BagEquipObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BagEquipObj& from);
  void MergeFrom(const BagEquipObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BagEquipObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BagAttrIntObj BaseAttr = 2;
  int baseattr_size() const;
  void clear_baseattr();
  static const int kBaseAttrFieldNumber = 2;
  const ::BagAttrIntObj& baseattr(int index) const;
  ::BagAttrIntObj* mutable_baseattr(int index);
  ::BagAttrIntObj* add_baseattr();
  ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >*
      mutable_baseattr();
  const ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >&
      baseattr() const;

  // repeated .BagExtraAttrObj ExtraAttr = 3;
  int extraattr_size() const;
  void clear_extraattr();
  static const int kExtraAttrFieldNumber = 3;
  const ::BagExtraAttrObj& extraattr(int index) const;
  ::BagExtraAttrObj* mutable_extraattr(int index);
  ::BagExtraAttrObj* add_extraattr();
  ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj >*
      mutable_extraattr();
  const ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj >&
      extraattr() const;

  // repeated sint32 EnhanceLv = 4;
  int enhancelv_size() const;
  void clear_enhancelv();
  static const int kEnhanceLvFieldNumber = 4;
  ::google::protobuf::int32 enhancelv(int index) const;
  void set_enhancelv(int index, ::google::protobuf::int32 value);
  void add_enhancelv(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      enhancelv() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_enhancelv();

  // repeated .BagExtraAttrObj EquipPolishedResult = 5;
  int equippolishedresult_size() const;
  void clear_equippolishedresult();
  static const int kEquipPolishedResultFieldNumber = 5;
  const ::BagExtraAttrObj& equippolishedresult(int index) const;
  ::BagExtraAttrObj* mutable_equippolishedresult(int index);
  ::BagExtraAttrObj* add_equippolishedresult();
  ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj >*
      mutable_equippolishedresult();
  const ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj >&
      equippolishedresult() const;

  // repeated .BagAttrIntObj InitBaseAttr = 8;
  int initbaseattr_size() const;
  void clear_initbaseattr();
  static const int kInitBaseAttrFieldNumber = 8;
  const ::BagAttrIntObj& initbaseattr(int index) const;
  ::BagAttrIntObj* mutable_initbaseattr(int index);
  ::BagAttrIntObj* add_initbaseattr();
  ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >*
      mutable_initbaseattr();
  const ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >&
      initbaseattr() const;

  // repeated .BagExtraAttrIdObj PlishedAttrId = 11;
  int plishedattrid_size() const;
  void clear_plishedattrid();
  static const int kPlishedAttrIdFieldNumber = 11;
  const ::BagExtraAttrIdObj& plishedattrid(int index) const;
  ::BagExtraAttrIdObj* mutable_plishedattrid(int index);
  ::BagExtraAttrIdObj* add_plishedattrid();
  ::google::protobuf::RepeatedPtrField< ::BagExtraAttrIdObj >*
      mutable_plishedattrid();
  const ::google::protobuf::RepeatedPtrField< ::BagExtraAttrIdObj >&
      plishedattrid() const;

  // repeated .BagGemObj GemArray = 12;
  int gemarray_size() const;
  void clear_gemarray();
  static const int kGemArrayFieldNumber = 12;
  const ::BagGemObj& gemarray(int index) const;
  ::BagGemObj* mutable_gemarray(int index);
  ::BagGemObj* add_gemarray();
  ::google::protobuf::RepeatedPtrField< ::BagGemObj >*
      mutable_gemarray();
  const ::google::protobuf::RepeatedPtrField< ::BagGemObj >&
      gemarray() const;

  // repeated .BagAttrIntObj PolishedBaseAttrResult = 13;
  int polishedbaseattrresult_size() const;
  void clear_polishedbaseattrresult();
  static const int kPolishedBaseAttrResultFieldNumber = 13;
  const ::BagAttrIntObj& polishedbaseattrresult(int index) const;
  ::BagAttrIntObj* mutable_polishedbaseattrresult(int index);
  ::BagAttrIntObj* add_polishedbaseattrresult();
  ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >*
      mutable_polishedbaseattrresult();
  const ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >&
      polishedbaseattrresult() const;

  // repeated .BagAttrIntObj BaseAttrPolishedInitAttr = 18;
  int baseattrpolishedinitattr_size() const;
  void clear_baseattrpolishedinitattr();
  static const int kBaseAttrPolishedInitAttrFieldNumber = 18;
  const ::BagAttrIntObj& baseattrpolishedinitattr(int index) const;
  ::BagAttrIntObj* mutable_baseattrpolishedinitattr(int index);
  ::BagAttrIntObj* add_baseattrpolishedinitattr();
  ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >*
      mutable_baseattrpolishedinitattr();
  const ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >&
      baseattrpolishedinitattr() const;

  // optional sint32 PolishedScore = 6 [default = 0];
  bool has_polishedscore() const;
  void clear_polishedscore();
  static const int kPolishedScoreFieldNumber = 6;
  ::google::protobuf::int32 polishedscore() const;
  void set_polishedscore(::google::protobuf::int32 value);

  // optional sint32 EquipScore = 16 [default = 0];
  bool has_equipscore() const;
  void clear_equipscore();
  static const int kEquipScoreFieldNumber = 16;
  ::google::protobuf::int32 equipscore() const;
  void set_equipscore(::google::protobuf::int32 value);

  // optional sint32 PolishedEquipScore = 17 [default = 0];
  bool has_polishedequipscore() const;
  void clear_polishedequipscore();
  static const int kPolishedEquipScoreFieldNumber = 17;
  ::google::protobuf::int32 polishedequipscore() const;
  void set_polishedequipscore(::google::protobuf::int32 value);

  // optional sint64 ItemID = 1 [default = -1];
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  ::google::protobuf::int64 itemid() const;
  void set_itemid(::google::protobuf::int64 value);

  // optional sint64 Index = 7 [default = -1];
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 7;
  ::google::protobuf::int64 index() const;
  void set_index(::google::protobuf::int64 value);

  // optional sint32 BagContainerType = 9 [default = -1];
  bool has_bagcontainertype() const;
  void clear_bagcontainertype();
  static const int kBagContainerTypeFieldNumber = 9;
  ::google::protobuf::int32 bagcontainertype() const;
  void set_bagcontainertype(::google::protobuf::int32 value);

  // optional sint32 GridIndex = 10 [default = -1];
  bool has_gridindex() const;
  void clear_gridindex();
  static const int kGridIndexFieldNumber = 10;
  ::google::protobuf::int32 gridindex() const;
  void set_gridindex(::google::protobuf::int32 value);

  // optional sint32 TemplateId = 14 [default = -1];
  bool has_templateid() const;
  void clear_templateid();
  static const int kTemplateIdFieldNumber = 14;
  ::google::protobuf::int32 templateid() const;
  void set_templateid(::google::protobuf::int32 value);

  // optional sint32 GemSuitId = 15 [default = -1];
  bool has_gemsuitid() const;
  void clear_gemsuitid();
  static const int kGemSuitIdFieldNumber = 15;
  ::google::protobuf::int32 gemsuitid() const;
  void set_gemsuitid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BagEquipObj)
 private:
  void set_has_itemid();
  void clear_has_itemid();
  void set_has_polishedscore();
  void clear_has_polishedscore();
  void set_has_index();
  void clear_has_index();
  void set_has_bagcontainertype();
  void clear_has_bagcontainertype();
  void set_has_gridindex();
  void clear_has_gridindex();
  void set_has_templateid();
  void clear_has_templateid();
  void set_has_gemsuitid();
  void clear_has_gemsuitid();
  void set_has_equipscore();
  void clear_has_equipscore();
  void set_has_polishedequipscore();
  void clear_has_polishedequipscore();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj > baseattr_;
  ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj > extraattr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > enhancelv_;
  ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj > equippolishedresult_;
  ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj > initbaseattr_;
  ::google::protobuf::RepeatedPtrField< ::BagExtraAttrIdObj > plishedattrid_;
  ::google::protobuf::RepeatedPtrField< ::BagGemObj > gemarray_;
  ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj > polishedbaseattrresult_;
  ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj > baseattrpolishedinitattr_;
  ::google::protobuf::int32 polishedscore_;
  ::google::protobuf::int32 equipscore_;
  ::google::protobuf::int32 polishedequipscore_;
  ::google::protobuf::int64 itemid_;
  ::google::protobuf::int64 index_;
  ::google::protobuf::int32 bagcontainertype_;
  ::google::protobuf::int32 gridindex_;
  ::google::protobuf::int32 templateid_;
  ::google::protobuf::int32 gemsuitid_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BagAttrIntObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BagAttrIntObj) */ {
 public:
  BagAttrIntObj();
  virtual ~BagAttrIntObj();

  BagAttrIntObj(const BagAttrIntObj& from);

  inline BagAttrIntObj& operator=(const BagAttrIntObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BagAttrIntObj(BagAttrIntObj&& from) noexcept
    : BagAttrIntObj() {
    *this = ::std::move(from);
  }

  inline BagAttrIntObj& operator=(BagAttrIntObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagAttrIntObj& default_instance();

  static inline const BagAttrIntObj* internal_default_instance() {
    return reinterpret_cast<const BagAttrIntObj*>(
               &_BagAttrIntObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(BagAttrIntObj* other);
  friend void swap(BagAttrIntObj& a, BagAttrIntObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BagAttrIntObj* New() const PROTOBUF_FINAL { return New(NULL); }

  BagAttrIntObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BagAttrIntObj& from);
  void MergeFrom(const BagAttrIntObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BagAttrIntObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 MaxAttrValue = 3 [default = -1];
  bool has_maxattrvalue() const;
  void clear_maxattrvalue();
  static const int kMaxAttrValueFieldNumber = 3;
  ::google::protobuf::int32 maxattrvalue() const;
  void set_maxattrvalue(::google::protobuf::int32 value);

  // optional sint32 AttrId = 1 [default = -1];
  bool has_attrid() const;
  void clear_attrid();
  static const int kAttrIdFieldNumber = 1;
  ::google::protobuf::int32 attrid() const;
  void set_attrid(::google::protobuf::int32 value);

  // optional sint32 AttrValue = 2 [default = -1];
  bool has_attrvalue() const;
  void clear_attrvalue();
  static const int kAttrValueFieldNumber = 2;
  ::google::protobuf::int32 attrvalue() const;
  void set_attrvalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BagAttrIntObj)
 private:
  void set_has_attrid();
  void clear_has_attrid();
  void set_has_attrvalue();
  void clear_has_attrvalue();
  void set_has_maxattrvalue();
  void clear_has_maxattrvalue();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 maxattrvalue_;
  ::google::protobuf::int32 attrid_;
  ::google::protobuf::int32 attrvalue_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BagAttrFloatObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BagAttrFloatObj) */ {
 public:
  BagAttrFloatObj();
  virtual ~BagAttrFloatObj();

  BagAttrFloatObj(const BagAttrFloatObj& from);

  inline BagAttrFloatObj& operator=(const BagAttrFloatObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BagAttrFloatObj(BagAttrFloatObj&& from) noexcept
    : BagAttrFloatObj() {
    *this = ::std::move(from);
  }

  inline BagAttrFloatObj& operator=(BagAttrFloatObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagAttrFloatObj& default_instance();

  static inline const BagAttrFloatObj* internal_default_instance() {
    return reinterpret_cast<const BagAttrFloatObj*>(
               &_BagAttrFloatObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(BagAttrFloatObj* other);
  friend void swap(BagAttrFloatObj& a, BagAttrFloatObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BagAttrFloatObj* New() const PROTOBUF_FINAL { return New(NULL); }

  BagAttrFloatObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BagAttrFloatObj& from);
  void MergeFrom(const BagAttrFloatObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BagAttrFloatObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Index = 3 [default = -1];
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // optional sint32 AttrId = 1 [default = -1];
  bool has_attrid() const;
  void clear_attrid();
  static const int kAttrIdFieldNumber = 1;
  ::google::protobuf::int32 attrid() const;
  void set_attrid(::google::protobuf::int32 value);

  // optional float AttrValue = 2 [default = -1];
  bool has_attrvalue() const;
  void clear_attrvalue();
  static const int kAttrValueFieldNumber = 2;
  float attrvalue() const;
  void set_attrvalue(float value);

  // @@protoc_insertion_point(class_scope:BagAttrFloatObj)
 private:
  void set_has_attrid();
  void clear_has_attrid();
  void set_has_attrvalue();
  void clear_has_attrvalue();
  void set_has_index();
  void clear_has_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 attrid_;
  float attrvalue_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BagGemObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BagGemObj) */ {
 public:
  BagGemObj();
  virtual ~BagGemObj();

  BagGemObj(const BagGemObj& from);

  inline BagGemObj& operator=(const BagGemObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BagGemObj(BagGemObj&& from) noexcept
    : BagGemObj() {
    *this = ::std::move(from);
  }

  inline BagGemObj& operator=(BagGemObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagGemObj& default_instance();

  static inline const BagGemObj* internal_default_instance() {
    return reinterpret_cast<const BagGemObj*>(
               &_BagGemObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(BagGemObj* other);
  friend void swap(BagGemObj& a, BagGemObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BagGemObj* New() const PROTOBUF_FINAL { return New(NULL); }

  BagGemObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BagGemObj& from);
  void MergeFrom(const BagGemObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BagGemObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool IsLock = 3 [default = false];
  bool has_islock() const;
  void clear_islock();
  static const int kIsLockFieldNumber = 3;
  bool islock() const;
  void set_islock(bool value);

  // optional sint32 GemId = 1 [default = -1];
  bool has_gemid() const;
  void clear_gemid();
  static const int kGemIdFieldNumber = 1;
  ::google::protobuf::int32 gemid() const;
  void set_gemid(::google::protobuf::int32 value);

  // optional sint32 Pos = 2 [default = -1];
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  ::google::protobuf::int32 pos() const;
  void set_pos(::google::protobuf::int32 value);

  // optional sint32 Level = 4 [default = -1];
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 4;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional sint32 Type = 5 [default = -1];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BagGemObj)
 private:
  void set_has_gemid();
  void clear_has_gemid();
  void set_has_pos();
  void clear_has_pos();
  void set_has_islock();
  void clear_has_islock();
  void set_has_level();
  void clear_has_level();
  void set_has_type();
  void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool islock_;
  ::google::protobuf::int32 gemid_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 type_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KeyValue2IntInt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KeyValue2IntInt) */ {
 public:
  KeyValue2IntInt();
  virtual ~KeyValue2IntInt();

  KeyValue2IntInt(const KeyValue2IntInt& from);

  inline KeyValue2IntInt& operator=(const KeyValue2IntInt& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KeyValue2IntInt(KeyValue2IntInt&& from) noexcept
    : KeyValue2IntInt() {
    *this = ::std::move(from);
  }

  inline KeyValue2IntInt& operator=(KeyValue2IntInt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyValue2IntInt& default_instance();

  static inline const KeyValue2IntInt* internal_default_instance() {
    return reinterpret_cast<const KeyValue2IntInt*>(
               &_KeyValue2IntInt_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(KeyValue2IntInt* other);
  friend void swap(KeyValue2IntInt& a, KeyValue2IntInt& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KeyValue2IntInt* New() const PROTOBUF_FINAL { return New(NULL); }

  KeyValue2IntInt* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KeyValue2IntInt& from);
  void MergeFrom(const KeyValue2IntInt& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KeyValue2IntInt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Key = 1 [default = -1];
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int32 key() const;
  void set_key(::google::protobuf::int32 value);

  // optional sint32 Value = 2 [default = -1];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KeyValue2IntInt)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 key_;
  ::google::protobuf::int32 value_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KeyValue2IntBool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KeyValue2IntBool) */ {
 public:
  KeyValue2IntBool();
  virtual ~KeyValue2IntBool();

  KeyValue2IntBool(const KeyValue2IntBool& from);

  inline KeyValue2IntBool& operator=(const KeyValue2IntBool& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KeyValue2IntBool(KeyValue2IntBool&& from) noexcept
    : KeyValue2IntBool() {
    *this = ::std::move(from);
  }

  inline KeyValue2IntBool& operator=(KeyValue2IntBool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyValue2IntBool& default_instance();

  static inline const KeyValue2IntBool* internal_default_instance() {
    return reinterpret_cast<const KeyValue2IntBool*>(
               &_KeyValue2IntBool_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(KeyValue2IntBool* other);
  friend void swap(KeyValue2IntBool& a, KeyValue2IntBool& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KeyValue2IntBool* New() const PROTOBUF_FINAL { return New(NULL); }

  KeyValue2IntBool* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KeyValue2IntBool& from);
  void MergeFrom(const KeyValue2IntBool& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KeyValue2IntBool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool Value = 2 [default = false];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  bool value() const;
  void set_value(bool value);

  // optional sint32 Key = 1 [default = -1];
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int32 key() const;
  void set_key(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KeyValue2IntBool)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool value_;
  ::google::protobuf::int32 key_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BagExtraAttrObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BagExtraAttrObj) */ {
 public:
  BagExtraAttrObj();
  virtual ~BagExtraAttrObj();

  BagExtraAttrObj(const BagExtraAttrObj& from);

  inline BagExtraAttrObj& operator=(const BagExtraAttrObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BagExtraAttrObj(BagExtraAttrObj&& from) noexcept
    : BagExtraAttrObj() {
    *this = ::std::move(from);
  }

  inline BagExtraAttrObj& operator=(BagExtraAttrObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagExtraAttrObj& default_instance();

  static inline const BagExtraAttrObj* internal_default_instance() {
    return reinterpret_cast<const BagExtraAttrObj*>(
               &_BagExtraAttrObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(BagExtraAttrObj* other);
  friend void swap(BagExtraAttrObj& a, BagExtraAttrObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BagExtraAttrObj* New() const PROTOBUF_FINAL { return New(NULL); }

  BagExtraAttrObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BagExtraAttrObj& from);
  void MergeFrom(const BagExtraAttrObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BagExtraAttrObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BagAttrFloatObj ExtraAttr = 1;
  int extraattr_size() const;
  void clear_extraattr();
  static const int kExtraAttrFieldNumber = 1;
  const ::BagAttrFloatObj& extraattr(int index) const;
  ::BagAttrFloatObj* mutable_extraattr(int index);
  ::BagAttrFloatObj* add_extraattr();
  ::google::protobuf::RepeatedPtrField< ::BagAttrFloatObj >*
      mutable_extraattr();
  const ::google::protobuf::RepeatedPtrField< ::BagAttrFloatObj >&
      extraattr() const;

  // optional sint32 Id = 2 [default = -1];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BagExtraAttrObj)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BagAttrFloatObj > extraattr_;
  ::google::protobuf::int32 id_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BagExtraAttrIdObj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BagExtraAttrIdObj) */ {
 public:
  BagExtraAttrIdObj();
  virtual ~BagExtraAttrIdObj();

  BagExtraAttrIdObj(const BagExtraAttrIdObj& from);

  inline BagExtraAttrIdObj& operator=(const BagExtraAttrIdObj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BagExtraAttrIdObj(BagExtraAttrIdObj&& from) noexcept
    : BagExtraAttrIdObj() {
    *this = ::std::move(from);
  }

  inline BagExtraAttrIdObj& operator=(BagExtraAttrIdObj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagExtraAttrIdObj& default_instance();

  static inline const BagExtraAttrIdObj* internal_default_instance() {
    return reinterpret_cast<const BagExtraAttrIdObj*>(
               &_BagExtraAttrIdObj_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(BagExtraAttrIdObj* other);
  friend void swap(BagExtraAttrIdObj& a, BagExtraAttrIdObj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BagExtraAttrIdObj* New() const PROTOBUF_FINAL { return New(NULL); }

  BagExtraAttrIdObj* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BagExtraAttrIdObj& from);
  void MergeFrom(const BagExtraAttrIdObj& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BagExtraAttrIdObj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 AttrId = 1;
  int attrid_size() const;
  void clear_attrid();
  static const int kAttrIdFieldNumber = 1;
  ::google::protobuf::int32 attrid(int index) const;
  void set_attrid(int index, ::google::protobuf::int32 value);
  void add_attrid(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      attrid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_attrid();

  // optional sint32 Id = 2 [default = -1];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BagExtraAttrIdObj)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > attrid_;
  ::google::protobuf::int32 id_;
  friend struct protobuf_PublicStruct_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BagRecycleGridObj

// optional sint64 ItemId = 1 [default = -1];
inline bool BagRecycleGridObj::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagRecycleGridObj::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagRecycleGridObj::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagRecycleGridObj::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(-1);
  clear_has_itemid();
}
inline ::google::protobuf::int64 BagRecycleGridObj::itemid() const {
  // @@protoc_insertion_point(field_get:BagRecycleGridObj.ItemId)
  return itemid_;
}
inline void BagRecycleGridObj::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagRecycleGridObj.ItemId)
}

// optional sint32 TemplateId = 2 [default = -1];
inline bool BagRecycleGridObj::has_templateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BagRecycleGridObj::set_has_templateid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BagRecycleGridObj::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BagRecycleGridObj::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
inline ::google::protobuf::int32 BagRecycleGridObj::templateid() const {
  // @@protoc_insertion_point(field_get:BagRecycleGridObj.TemplateId)
  return templateid_;
}
inline void BagRecycleGridObj::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagRecycleGridObj.TemplateId)
}

// optional sint32 Num = 3 [default = -1];
inline bool BagRecycleGridObj::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BagRecycleGridObj::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BagRecycleGridObj::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BagRecycleGridObj::clear_num() {
  num_ = -1;
  clear_has_num();
}
inline ::google::protobuf::int32 BagRecycleGridObj::num() const {
  // @@protoc_insertion_point(field_get:BagRecycleGridObj.Num)
  return num_;
}
inline void BagRecycleGridObj::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:BagRecycleGridObj.Num)
}

// optional sint32 ItemType = 4 [default = -1];
inline bool BagRecycleGridObj::has_itemtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BagRecycleGridObj::set_has_itemtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BagRecycleGridObj::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BagRecycleGridObj::clear_itemtype() {
  itemtype_ = -1;
  clear_has_itemtype();
}
inline ::google::protobuf::int32 BagRecycleGridObj::itemtype() const {
  // @@protoc_insertion_point(field_get:BagRecycleGridObj.ItemType)
  return itemtype_;
}
inline void BagRecycleGridObj::set_itemtype(::google::protobuf::int32 value) {
  set_has_itemtype();
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:BagRecycleGridObj.ItemType)
}

// optional sint32 Pos = 5 [default = -1];
inline bool BagRecycleGridObj::has_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BagRecycleGridObj::set_has_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BagRecycleGridObj::clear_has_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BagRecycleGridObj::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
inline ::google::protobuf::int32 BagRecycleGridObj::pos() const {
  // @@protoc_insertion_point(field_get:BagRecycleGridObj.Pos)
  return pos_;
}
inline void BagRecycleGridObj::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagRecycleGridObj.Pos)
}

// -------------------------------------------------------------------

// KeyValue2

// optional sint32 Key = 1 [default = -1];
inline bool KeyValue2::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeyValue2::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KeyValue2::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KeyValue2::clear_key() {
  key_ = -1;
  clear_has_key();
}
inline ::google::protobuf::int32 KeyValue2::key() const {
  // @@protoc_insertion_point(field_get:KeyValue2.Key)
  return key_;
}
inline void KeyValue2::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:KeyValue2.Key)
}

// optional float Value = 2 [default = -1];
inline bool KeyValue2::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KeyValue2::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KeyValue2::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KeyValue2::clear_value() {
  value_ = -1;
  clear_has_value();
}
inline float KeyValue2::value() const {
  // @@protoc_insertion_point(field_get:KeyValue2.Value)
  return value_;
}
inline void KeyValue2::set_value(float value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:KeyValue2.Value)
}

// -------------------------------------------------------------------

// BagGridObj

// optional sint32 TemplateID = 1 [default = -1];
inline bool BagGridObj::has_templateid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BagGridObj::set_has_templateid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BagGridObj::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BagGridObj::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
inline ::google::protobuf::int32 BagGridObj::templateid() const {
  // @@protoc_insertion_point(field_get:BagGridObj.TemplateID)
  return templateid_;
}
inline void BagGridObj::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.TemplateID)
}

// optional sint32 Num = 2 [default = 0];
inline bool BagGridObj::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagGridObj::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagGridObj::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagGridObj::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 BagGridObj::num() const {
  // @@protoc_insertion_point(field_get:BagGridObj.Num)
  return num_;
}
inline void BagGridObj::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.Num)
}

// optional sint32 ItemType = 3 [default = -1];
inline bool BagGridObj::has_itemtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BagGridObj::set_has_itemtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BagGridObj::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BagGridObj::clear_itemtype() {
  itemtype_ = -1;
  clear_has_itemtype();
}
inline ::google::protobuf::int32 BagGridObj::itemtype() const {
  // @@protoc_insertion_point(field_get:BagGridObj.ItemType)
  return itemtype_;
}
inline void BagGridObj::set_itemtype(::google::protobuf::int32 value) {
  set_has_itemtype();
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.ItemType)
}

// optional sint32 Pos = 4 [default = -1];
inline bool BagGridObj::has_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BagGridObj::set_has_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BagGridObj::clear_has_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BagGridObj::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
inline ::google::protobuf::int32 BagGridObj::pos() const {
  // @@protoc_insertion_point(field_get:BagGridObj.Pos)
  return pos_;
}
inline void BagGridObj::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.Pos)
}

// optional sint32 Value = 5 [default = -1];
inline bool BagGridObj::has_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BagGridObj::set_has_value() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BagGridObj::clear_has_value() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BagGridObj::clear_value() {
  value_ = -1;
  clear_has_value();
}
inline ::google::protobuf::int32 BagGridObj::value() const {
  // @@protoc_insertion_point(field_get:BagGridObj.Value)
  return value_;
}
inline void BagGridObj::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.Value)
}

// optional sint64 Index = 6 [default = -1];
inline bool BagGridObj::has_index() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BagGridObj::set_has_index() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BagGridObj::clear_has_index() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BagGridObj::clear_index() {
  index_ = GOOGLE_LONGLONG(-1);
  clear_has_index();
}
inline ::google::protobuf::int64 BagGridObj::index() const {
  // @@protoc_insertion_point(field_get:BagGridObj.Index)
  return index_;
}
inline void BagGridObj::set_index(::google::protobuf::int64 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.Index)
}

// optional bool Bind = 7 [default = false];
inline bool BagGridObj::has_bind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BagGridObj::set_has_bind() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BagGridObj::clear_has_bind() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BagGridObj::clear_bind() {
  bind_ = false;
  clear_has_bind();
}
inline bool BagGridObj::bind() const {
  // @@protoc_insertion_point(field_get:BagGridObj.Bind)
  return bind_;
}
inline void BagGridObj::set_bind(bool value) {
  set_has_bind();
  bind_ = value;
  // @@protoc_insertion_point(field_set:BagGridObj.Bind)
}

// -------------------------------------------------------------------

// BagEquipObj

// optional sint64 ItemID = 1 [default = -1];
inline bool BagEquipObj::has_itemid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BagEquipObj::set_has_itemid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BagEquipObj::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BagEquipObj::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(-1);
  clear_has_itemid();
}
inline ::google::protobuf::int64 BagEquipObj::itemid() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.ItemID)
  return itemid_;
}
inline void BagEquipObj::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.ItemID)
}

// repeated .BagAttrIntObj BaseAttr = 2;
inline int BagEquipObj::baseattr_size() const {
  return baseattr_.size();
}
inline void BagEquipObj::clear_baseattr() {
  baseattr_.Clear();
}
inline const ::BagAttrIntObj& BagEquipObj::baseattr(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.BaseAttr)
  return baseattr_.Get(index);
}
inline ::BagAttrIntObj* BagEquipObj::mutable_baseattr(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.BaseAttr)
  return baseattr_.Mutable(index);
}
inline ::BagAttrIntObj* BagEquipObj::add_baseattr() {
  // @@protoc_insertion_point(field_add:BagEquipObj.BaseAttr)
  return baseattr_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >*
BagEquipObj::mutable_baseattr() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.BaseAttr)
  return &baseattr_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >&
BagEquipObj::baseattr() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.BaseAttr)
  return baseattr_;
}

// repeated .BagExtraAttrObj ExtraAttr = 3;
inline int BagEquipObj::extraattr_size() const {
  return extraattr_.size();
}
inline void BagEquipObj::clear_extraattr() {
  extraattr_.Clear();
}
inline const ::BagExtraAttrObj& BagEquipObj::extraattr(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.ExtraAttr)
  return extraattr_.Get(index);
}
inline ::BagExtraAttrObj* BagEquipObj::mutable_extraattr(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.ExtraAttr)
  return extraattr_.Mutable(index);
}
inline ::BagExtraAttrObj* BagEquipObj::add_extraattr() {
  // @@protoc_insertion_point(field_add:BagEquipObj.ExtraAttr)
  return extraattr_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj >*
BagEquipObj::mutable_extraattr() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.ExtraAttr)
  return &extraattr_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj >&
BagEquipObj::extraattr() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.ExtraAttr)
  return extraattr_;
}

// repeated sint32 EnhanceLv = 4;
inline int BagEquipObj::enhancelv_size() const {
  return enhancelv_.size();
}
inline void BagEquipObj::clear_enhancelv() {
  enhancelv_.Clear();
}
inline ::google::protobuf::int32 BagEquipObj::enhancelv(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.EnhanceLv)
  return enhancelv_.Get(index);
}
inline void BagEquipObj::set_enhancelv(int index, ::google::protobuf::int32 value) {
  enhancelv_.Set(index, value);
  // @@protoc_insertion_point(field_set:BagEquipObj.EnhanceLv)
}
inline void BagEquipObj::add_enhancelv(::google::protobuf::int32 value) {
  enhancelv_.Add(value);
  // @@protoc_insertion_point(field_add:BagEquipObj.EnhanceLv)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BagEquipObj::enhancelv() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.EnhanceLv)
  return enhancelv_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BagEquipObj::mutable_enhancelv() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.EnhanceLv)
  return &enhancelv_;
}

// repeated .BagExtraAttrObj EquipPolishedResult = 5;
inline int BagEquipObj::equippolishedresult_size() const {
  return equippolishedresult_.size();
}
inline void BagEquipObj::clear_equippolishedresult() {
  equippolishedresult_.Clear();
}
inline const ::BagExtraAttrObj& BagEquipObj::equippolishedresult(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.EquipPolishedResult)
  return equippolishedresult_.Get(index);
}
inline ::BagExtraAttrObj* BagEquipObj::mutable_equippolishedresult(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.EquipPolishedResult)
  return equippolishedresult_.Mutable(index);
}
inline ::BagExtraAttrObj* BagEquipObj::add_equippolishedresult() {
  // @@protoc_insertion_point(field_add:BagEquipObj.EquipPolishedResult)
  return equippolishedresult_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj >*
BagEquipObj::mutable_equippolishedresult() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.EquipPolishedResult)
  return &equippolishedresult_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BagExtraAttrObj >&
BagEquipObj::equippolishedresult() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.EquipPolishedResult)
  return equippolishedresult_;
}

// optional sint32 PolishedScore = 6 [default = 0];
inline bool BagEquipObj::has_polishedscore() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagEquipObj::set_has_polishedscore() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagEquipObj::clear_has_polishedscore() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagEquipObj::clear_polishedscore() {
  polishedscore_ = 0;
  clear_has_polishedscore();
}
inline ::google::protobuf::int32 BagEquipObj::polishedscore() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.PolishedScore)
  return polishedscore_;
}
inline void BagEquipObj::set_polishedscore(::google::protobuf::int32 value) {
  set_has_polishedscore();
  polishedscore_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.PolishedScore)
}

// optional sint64 Index = 7 [default = -1];
inline bool BagEquipObj::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BagEquipObj::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BagEquipObj::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BagEquipObj::clear_index() {
  index_ = GOOGLE_LONGLONG(-1);
  clear_has_index();
}
inline ::google::protobuf::int64 BagEquipObj::index() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.Index)
  return index_;
}
inline void BagEquipObj::set_index(::google::protobuf::int64 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.Index)
}

// repeated .BagAttrIntObj InitBaseAttr = 8;
inline int BagEquipObj::initbaseattr_size() const {
  return initbaseattr_.size();
}
inline void BagEquipObj::clear_initbaseattr() {
  initbaseattr_.Clear();
}
inline const ::BagAttrIntObj& BagEquipObj::initbaseattr(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.InitBaseAttr)
  return initbaseattr_.Get(index);
}
inline ::BagAttrIntObj* BagEquipObj::mutable_initbaseattr(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.InitBaseAttr)
  return initbaseattr_.Mutable(index);
}
inline ::BagAttrIntObj* BagEquipObj::add_initbaseattr() {
  // @@protoc_insertion_point(field_add:BagEquipObj.InitBaseAttr)
  return initbaseattr_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >*
BagEquipObj::mutable_initbaseattr() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.InitBaseAttr)
  return &initbaseattr_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >&
BagEquipObj::initbaseattr() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.InitBaseAttr)
  return initbaseattr_;
}

// optional sint32 BagContainerType = 9 [default = -1];
inline bool BagEquipObj::has_bagcontainertype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BagEquipObj::set_has_bagcontainertype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BagEquipObj::clear_has_bagcontainertype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BagEquipObj::clear_bagcontainertype() {
  bagcontainertype_ = -1;
  clear_has_bagcontainertype();
}
inline ::google::protobuf::int32 BagEquipObj::bagcontainertype() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.BagContainerType)
  return bagcontainertype_;
}
inline void BagEquipObj::set_bagcontainertype(::google::protobuf::int32 value) {
  set_has_bagcontainertype();
  bagcontainertype_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.BagContainerType)
}

// optional sint32 GridIndex = 10 [default = -1];
inline bool BagEquipObj::has_gridindex() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BagEquipObj::set_has_gridindex() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BagEquipObj::clear_has_gridindex() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BagEquipObj::clear_gridindex() {
  gridindex_ = -1;
  clear_has_gridindex();
}
inline ::google::protobuf::int32 BagEquipObj::gridindex() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.GridIndex)
  return gridindex_;
}
inline void BagEquipObj::set_gridindex(::google::protobuf::int32 value) {
  set_has_gridindex();
  gridindex_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.GridIndex)
}

// repeated .BagExtraAttrIdObj PlishedAttrId = 11;
inline int BagEquipObj::plishedattrid_size() const {
  return plishedattrid_.size();
}
inline void BagEquipObj::clear_plishedattrid() {
  plishedattrid_.Clear();
}
inline const ::BagExtraAttrIdObj& BagEquipObj::plishedattrid(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.PlishedAttrId)
  return plishedattrid_.Get(index);
}
inline ::BagExtraAttrIdObj* BagEquipObj::mutable_plishedattrid(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.PlishedAttrId)
  return plishedattrid_.Mutable(index);
}
inline ::BagExtraAttrIdObj* BagEquipObj::add_plishedattrid() {
  // @@protoc_insertion_point(field_add:BagEquipObj.PlishedAttrId)
  return plishedattrid_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BagExtraAttrIdObj >*
BagEquipObj::mutable_plishedattrid() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.PlishedAttrId)
  return &plishedattrid_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BagExtraAttrIdObj >&
BagEquipObj::plishedattrid() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.PlishedAttrId)
  return plishedattrid_;
}

// repeated .BagGemObj GemArray = 12;
inline int BagEquipObj::gemarray_size() const {
  return gemarray_.size();
}
inline void BagEquipObj::clear_gemarray() {
  gemarray_.Clear();
}
inline const ::BagGemObj& BagEquipObj::gemarray(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.GemArray)
  return gemarray_.Get(index);
}
inline ::BagGemObj* BagEquipObj::mutable_gemarray(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.GemArray)
  return gemarray_.Mutable(index);
}
inline ::BagGemObj* BagEquipObj::add_gemarray() {
  // @@protoc_insertion_point(field_add:BagEquipObj.GemArray)
  return gemarray_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BagGemObj >*
BagEquipObj::mutable_gemarray() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.GemArray)
  return &gemarray_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BagGemObj >&
BagEquipObj::gemarray() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.GemArray)
  return gemarray_;
}

// repeated .BagAttrIntObj PolishedBaseAttrResult = 13;
inline int BagEquipObj::polishedbaseattrresult_size() const {
  return polishedbaseattrresult_.size();
}
inline void BagEquipObj::clear_polishedbaseattrresult() {
  polishedbaseattrresult_.Clear();
}
inline const ::BagAttrIntObj& BagEquipObj::polishedbaseattrresult(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.PolishedBaseAttrResult)
  return polishedbaseattrresult_.Get(index);
}
inline ::BagAttrIntObj* BagEquipObj::mutable_polishedbaseattrresult(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.PolishedBaseAttrResult)
  return polishedbaseattrresult_.Mutable(index);
}
inline ::BagAttrIntObj* BagEquipObj::add_polishedbaseattrresult() {
  // @@protoc_insertion_point(field_add:BagEquipObj.PolishedBaseAttrResult)
  return polishedbaseattrresult_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >*
BagEquipObj::mutable_polishedbaseattrresult() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.PolishedBaseAttrResult)
  return &polishedbaseattrresult_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >&
BagEquipObj::polishedbaseattrresult() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.PolishedBaseAttrResult)
  return polishedbaseattrresult_;
}

// optional sint32 TemplateId = 14 [default = -1];
inline bool BagEquipObj::has_templateid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BagEquipObj::set_has_templateid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BagEquipObj::clear_has_templateid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BagEquipObj::clear_templateid() {
  templateid_ = -1;
  clear_has_templateid();
}
inline ::google::protobuf::int32 BagEquipObj::templateid() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.TemplateId)
  return templateid_;
}
inline void BagEquipObj::set_templateid(::google::protobuf::int32 value) {
  set_has_templateid();
  templateid_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.TemplateId)
}

// optional sint32 GemSuitId = 15 [default = -1];
inline bool BagEquipObj::has_gemsuitid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BagEquipObj::set_has_gemsuitid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BagEquipObj::clear_has_gemsuitid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BagEquipObj::clear_gemsuitid() {
  gemsuitid_ = -1;
  clear_has_gemsuitid();
}
inline ::google::protobuf::int32 BagEquipObj::gemsuitid() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.GemSuitId)
  return gemsuitid_;
}
inline void BagEquipObj::set_gemsuitid(::google::protobuf::int32 value) {
  set_has_gemsuitid();
  gemsuitid_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.GemSuitId)
}

// optional sint32 EquipScore = 16 [default = 0];
inline bool BagEquipObj::has_equipscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BagEquipObj::set_has_equipscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BagEquipObj::clear_has_equipscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BagEquipObj::clear_equipscore() {
  equipscore_ = 0;
  clear_has_equipscore();
}
inline ::google::protobuf::int32 BagEquipObj::equipscore() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.EquipScore)
  return equipscore_;
}
inline void BagEquipObj::set_equipscore(::google::protobuf::int32 value) {
  set_has_equipscore();
  equipscore_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.EquipScore)
}

// optional sint32 PolishedEquipScore = 17 [default = 0];
inline bool BagEquipObj::has_polishedequipscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BagEquipObj::set_has_polishedequipscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BagEquipObj::clear_has_polishedequipscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BagEquipObj::clear_polishedequipscore() {
  polishedequipscore_ = 0;
  clear_has_polishedequipscore();
}
inline ::google::protobuf::int32 BagEquipObj::polishedequipscore() const {
  // @@protoc_insertion_point(field_get:BagEquipObj.PolishedEquipScore)
  return polishedequipscore_;
}
inline void BagEquipObj::set_polishedequipscore(::google::protobuf::int32 value) {
  set_has_polishedequipscore();
  polishedequipscore_ = value;
  // @@protoc_insertion_point(field_set:BagEquipObj.PolishedEquipScore)
}

// repeated .BagAttrIntObj BaseAttrPolishedInitAttr = 18;
inline int BagEquipObj::baseattrpolishedinitattr_size() const {
  return baseattrpolishedinitattr_.size();
}
inline void BagEquipObj::clear_baseattrpolishedinitattr() {
  baseattrpolishedinitattr_.Clear();
}
inline const ::BagAttrIntObj& BagEquipObj::baseattrpolishedinitattr(int index) const {
  // @@protoc_insertion_point(field_get:BagEquipObj.BaseAttrPolishedInitAttr)
  return baseattrpolishedinitattr_.Get(index);
}
inline ::BagAttrIntObj* BagEquipObj::mutable_baseattrpolishedinitattr(int index) {
  // @@protoc_insertion_point(field_mutable:BagEquipObj.BaseAttrPolishedInitAttr)
  return baseattrpolishedinitattr_.Mutable(index);
}
inline ::BagAttrIntObj* BagEquipObj::add_baseattrpolishedinitattr() {
  // @@protoc_insertion_point(field_add:BagEquipObj.BaseAttrPolishedInitAttr)
  return baseattrpolishedinitattr_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >*
BagEquipObj::mutable_baseattrpolishedinitattr() {
  // @@protoc_insertion_point(field_mutable_list:BagEquipObj.BaseAttrPolishedInitAttr)
  return &baseattrpolishedinitattr_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BagAttrIntObj >&
BagEquipObj::baseattrpolishedinitattr() const {
  // @@protoc_insertion_point(field_list:BagEquipObj.BaseAttrPolishedInitAttr)
  return baseattrpolishedinitattr_;
}

// -------------------------------------------------------------------

// BagAttrIntObj

// optional sint32 AttrId = 1 [default = -1];
inline bool BagAttrIntObj::has_attrid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BagAttrIntObj::set_has_attrid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BagAttrIntObj::clear_has_attrid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BagAttrIntObj::clear_attrid() {
  attrid_ = -1;
  clear_has_attrid();
}
inline ::google::protobuf::int32 BagAttrIntObj::attrid() const {
  // @@protoc_insertion_point(field_get:BagAttrIntObj.AttrId)
  return attrid_;
}
inline void BagAttrIntObj::set_attrid(::google::protobuf::int32 value) {
  set_has_attrid();
  attrid_ = value;
  // @@protoc_insertion_point(field_set:BagAttrIntObj.AttrId)
}

// optional sint32 AttrValue = 2 [default = -1];
inline bool BagAttrIntObj::has_attrvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BagAttrIntObj::set_has_attrvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BagAttrIntObj::clear_has_attrvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BagAttrIntObj::clear_attrvalue() {
  attrvalue_ = -1;
  clear_has_attrvalue();
}
inline ::google::protobuf::int32 BagAttrIntObj::attrvalue() const {
  // @@protoc_insertion_point(field_get:BagAttrIntObj.AttrValue)
  return attrvalue_;
}
inline void BagAttrIntObj::set_attrvalue(::google::protobuf::int32 value) {
  set_has_attrvalue();
  attrvalue_ = value;
  // @@protoc_insertion_point(field_set:BagAttrIntObj.AttrValue)
}

// optional sint32 MaxAttrValue = 3 [default = -1];
inline bool BagAttrIntObj::has_maxattrvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagAttrIntObj::set_has_maxattrvalue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagAttrIntObj::clear_has_maxattrvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagAttrIntObj::clear_maxattrvalue() {
  maxattrvalue_ = -1;
  clear_has_maxattrvalue();
}
inline ::google::protobuf::int32 BagAttrIntObj::maxattrvalue() const {
  // @@protoc_insertion_point(field_get:BagAttrIntObj.MaxAttrValue)
  return maxattrvalue_;
}
inline void BagAttrIntObj::set_maxattrvalue(::google::protobuf::int32 value) {
  set_has_maxattrvalue();
  maxattrvalue_ = value;
  // @@protoc_insertion_point(field_set:BagAttrIntObj.MaxAttrValue)
}

// -------------------------------------------------------------------

// BagAttrFloatObj

// optional sint32 AttrId = 1 [default = -1];
inline bool BagAttrFloatObj::has_attrid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BagAttrFloatObj::set_has_attrid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BagAttrFloatObj::clear_has_attrid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BagAttrFloatObj::clear_attrid() {
  attrid_ = -1;
  clear_has_attrid();
}
inline ::google::protobuf::int32 BagAttrFloatObj::attrid() const {
  // @@protoc_insertion_point(field_get:BagAttrFloatObj.AttrId)
  return attrid_;
}
inline void BagAttrFloatObj::set_attrid(::google::protobuf::int32 value) {
  set_has_attrid();
  attrid_ = value;
  // @@protoc_insertion_point(field_set:BagAttrFloatObj.AttrId)
}

// optional float AttrValue = 2 [default = -1];
inline bool BagAttrFloatObj::has_attrvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BagAttrFloatObj::set_has_attrvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BagAttrFloatObj::clear_has_attrvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BagAttrFloatObj::clear_attrvalue() {
  attrvalue_ = -1;
  clear_has_attrvalue();
}
inline float BagAttrFloatObj::attrvalue() const {
  // @@protoc_insertion_point(field_get:BagAttrFloatObj.AttrValue)
  return attrvalue_;
}
inline void BagAttrFloatObj::set_attrvalue(float value) {
  set_has_attrvalue();
  attrvalue_ = value;
  // @@protoc_insertion_point(field_set:BagAttrFloatObj.AttrValue)
}

// optional sint32 Index = 3 [default = -1];
inline bool BagAttrFloatObj::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagAttrFloatObj::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagAttrFloatObj::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagAttrFloatObj::clear_index() {
  index_ = -1;
  clear_has_index();
}
inline ::google::protobuf::int32 BagAttrFloatObj::index() const {
  // @@protoc_insertion_point(field_get:BagAttrFloatObj.Index)
  return index_;
}
inline void BagAttrFloatObj::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:BagAttrFloatObj.Index)
}

// -------------------------------------------------------------------

// BagGemObj

// optional sint32 GemId = 1 [default = -1];
inline bool BagGemObj::has_gemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BagGemObj::set_has_gemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BagGemObj::clear_has_gemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BagGemObj::clear_gemid() {
  gemid_ = -1;
  clear_has_gemid();
}
inline ::google::protobuf::int32 BagGemObj::gemid() const {
  // @@protoc_insertion_point(field_get:BagGemObj.GemId)
  return gemid_;
}
inline void BagGemObj::set_gemid(::google::protobuf::int32 value) {
  set_has_gemid();
  gemid_ = value;
  // @@protoc_insertion_point(field_set:BagGemObj.GemId)
}

// optional sint32 Pos = 2 [default = -1];
inline bool BagGemObj::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BagGemObj::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BagGemObj::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BagGemObj::clear_pos() {
  pos_ = -1;
  clear_has_pos();
}
inline ::google::protobuf::int32 BagGemObj::pos() const {
  // @@protoc_insertion_point(field_get:BagGemObj.Pos)
  return pos_;
}
inline void BagGemObj::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:BagGemObj.Pos)
}

// optional bool IsLock = 3 [default = false];
inline bool BagGemObj::has_islock() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagGemObj::set_has_islock() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagGemObj::clear_has_islock() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagGemObj::clear_islock() {
  islock_ = false;
  clear_has_islock();
}
inline bool BagGemObj::islock() const {
  // @@protoc_insertion_point(field_get:BagGemObj.IsLock)
  return islock_;
}
inline void BagGemObj::set_islock(bool value) {
  set_has_islock();
  islock_ = value;
  // @@protoc_insertion_point(field_set:BagGemObj.IsLock)
}

// optional sint32 Level = 4 [default = -1];
inline bool BagGemObj::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BagGemObj::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BagGemObj::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BagGemObj::clear_level() {
  level_ = -1;
  clear_has_level();
}
inline ::google::protobuf::int32 BagGemObj::level() const {
  // @@protoc_insertion_point(field_get:BagGemObj.Level)
  return level_;
}
inline void BagGemObj::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:BagGemObj.Level)
}

// optional sint32 Type = 5 [default = -1];
inline bool BagGemObj::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BagGemObj::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BagGemObj::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BagGemObj::clear_type() {
  type_ = -1;
  clear_has_type();
}
inline ::google::protobuf::int32 BagGemObj::type() const {
  // @@protoc_insertion_point(field_get:BagGemObj.Type)
  return type_;
}
inline void BagGemObj::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:BagGemObj.Type)
}

// -------------------------------------------------------------------

// KeyValue2IntInt

// optional sint32 Key = 1 [default = -1];
inline bool KeyValue2IntInt::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeyValue2IntInt::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KeyValue2IntInt::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KeyValue2IntInt::clear_key() {
  key_ = -1;
  clear_has_key();
}
inline ::google::protobuf::int32 KeyValue2IntInt::key() const {
  // @@protoc_insertion_point(field_get:KeyValue2IntInt.Key)
  return key_;
}
inline void KeyValue2IntInt::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:KeyValue2IntInt.Key)
}

// optional sint32 Value = 2 [default = -1];
inline bool KeyValue2IntInt::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KeyValue2IntInt::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KeyValue2IntInt::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KeyValue2IntInt::clear_value() {
  value_ = -1;
  clear_has_value();
}
inline ::google::protobuf::int32 KeyValue2IntInt::value() const {
  // @@protoc_insertion_point(field_get:KeyValue2IntInt.Value)
  return value_;
}
inline void KeyValue2IntInt::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:KeyValue2IntInt.Value)
}

// -------------------------------------------------------------------

// KeyValue2IntBool

// optional sint32 Key = 1 [default = -1];
inline bool KeyValue2IntBool::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KeyValue2IntBool::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KeyValue2IntBool::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KeyValue2IntBool::clear_key() {
  key_ = -1;
  clear_has_key();
}
inline ::google::protobuf::int32 KeyValue2IntBool::key() const {
  // @@protoc_insertion_point(field_get:KeyValue2IntBool.Key)
  return key_;
}
inline void KeyValue2IntBool::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:KeyValue2IntBool.Key)
}

// optional bool Value = 2 [default = false];
inline bool KeyValue2IntBool::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeyValue2IntBool::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KeyValue2IntBool::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KeyValue2IntBool::clear_value() {
  value_ = false;
  clear_has_value();
}
inline bool KeyValue2IntBool::value() const {
  // @@protoc_insertion_point(field_get:KeyValue2IntBool.Value)
  return value_;
}
inline void KeyValue2IntBool::set_value(bool value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:KeyValue2IntBool.Value)
}

// -------------------------------------------------------------------

// BagExtraAttrObj

// repeated .BagAttrFloatObj ExtraAttr = 1;
inline int BagExtraAttrObj::extraattr_size() const {
  return extraattr_.size();
}
inline void BagExtraAttrObj::clear_extraattr() {
  extraattr_.Clear();
}
inline const ::BagAttrFloatObj& BagExtraAttrObj::extraattr(int index) const {
  // @@protoc_insertion_point(field_get:BagExtraAttrObj.ExtraAttr)
  return extraattr_.Get(index);
}
inline ::BagAttrFloatObj* BagExtraAttrObj::mutable_extraattr(int index) {
  // @@protoc_insertion_point(field_mutable:BagExtraAttrObj.ExtraAttr)
  return extraattr_.Mutable(index);
}
inline ::BagAttrFloatObj* BagExtraAttrObj::add_extraattr() {
  // @@protoc_insertion_point(field_add:BagExtraAttrObj.ExtraAttr)
  return extraattr_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BagAttrFloatObj >*
BagExtraAttrObj::mutable_extraattr() {
  // @@protoc_insertion_point(field_mutable_list:BagExtraAttrObj.ExtraAttr)
  return &extraattr_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BagAttrFloatObj >&
BagExtraAttrObj::extraattr() const {
  // @@protoc_insertion_point(field_list:BagExtraAttrObj.ExtraAttr)
  return extraattr_;
}

// optional sint32 Id = 2 [default = -1];
inline bool BagExtraAttrObj::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagExtraAttrObj::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagExtraAttrObj::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagExtraAttrObj::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 BagExtraAttrObj::id() const {
  // @@protoc_insertion_point(field_get:BagExtraAttrObj.Id)
  return id_;
}
inline void BagExtraAttrObj::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BagExtraAttrObj.Id)
}

// -------------------------------------------------------------------

// BagExtraAttrIdObj

// repeated sint32 AttrId = 1;
inline int BagExtraAttrIdObj::attrid_size() const {
  return attrid_.size();
}
inline void BagExtraAttrIdObj::clear_attrid() {
  attrid_.Clear();
}
inline ::google::protobuf::int32 BagExtraAttrIdObj::attrid(int index) const {
  // @@protoc_insertion_point(field_get:BagExtraAttrIdObj.AttrId)
  return attrid_.Get(index);
}
inline void BagExtraAttrIdObj::set_attrid(int index, ::google::protobuf::int32 value) {
  attrid_.Set(index, value);
  // @@protoc_insertion_point(field_set:BagExtraAttrIdObj.AttrId)
}
inline void BagExtraAttrIdObj::add_attrid(::google::protobuf::int32 value) {
  attrid_.Add(value);
  // @@protoc_insertion_point(field_add:BagExtraAttrIdObj.AttrId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BagExtraAttrIdObj::attrid() const {
  // @@protoc_insertion_point(field_list:BagExtraAttrIdObj.AttrId)
  return attrid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BagExtraAttrIdObj::mutable_attrid() {
  // @@protoc_insertion_point(field_mutable_list:BagExtraAttrIdObj.AttrId)
  return &attrid_;
}

// optional sint32 Id = 2 [default = -1];
inline bool BagExtraAttrIdObj::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagExtraAttrIdObj::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagExtraAttrIdObj::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagExtraAttrIdObj::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 BagExtraAttrIdObj::id() const {
  // @@protoc_insertion_point(field_get:BagExtraAttrIdObj.Id)
  return id_;
}
inline void BagExtraAttrIdObj::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BagExtraAttrIdObj.Id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PublicStruct_2eproto__INCLUDED
